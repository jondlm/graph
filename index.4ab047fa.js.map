{"mappings":"IU2gBI,E,I,EiHzgBA,E,E,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,S,E,C,E,O,G,E,W,E,Q,C,C,S,E,C,C,C,C,C,C,C,E,O,e,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,C,E,E,C,E,E,E,iB,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,Q,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,K,E,Q,E,E,S,E,O,C,I,E,A,M,uB,E,I,O,E,K,mB,C,C,E,S,S,C,C,C,E,C,C,E,C,C,E,E,kB,G,E,S,Q,S,C,C,C,G1HyBH,AAAA,SAAS,CAAM,CAAE,CAAM,CAAE,CAAM,EAEhC,SAAS,EAAK,CAAI,EAChB,IAgDI,EAhDA,EAAK,IAAI,CAAE,GAgDX,EAAI,WAEG,SAAS,CAAI,EACtB,EAAO,OAAO,GACd,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,OAAQ,IAAK,CAEpC,IAAI,EAAI,mBADR,CAAA,GAAK,EAAK,WAAW,EAArB,EAEA,EAAI,IAAM,EACV,GAAK,EACL,GAAK,EACL,EAAI,IAAM,EACV,GAAK,EACL,GAAK,AAAI,WAAJ,CACP,CACA,MAAQ,AAAA,CAAA,IAAM,CAAA,EAAK,qBACrB,EA7DA,CAAA,EAAG,KAAO,WACR,IAAI,EAAI,QAAU,EAAG,GAAK,AAAO,sBAAP,EAAG,EAG7B,OAFA,EAAG,GAAK,EAAG,GACX,EAAG,GAAK,EAAG,GACJ,EAAG,GAAK,EAAK,CAAA,EAAG,EAAI,AAAI,EAAJ,CAAI,CACjC,EAGA,EAAG,EAAI,EACP,EAAG,GAAK,EAAK,KACb,EAAG,GAAK,EAAK,KACb,EAAG,GAAK,EAAK,KACb,EAAG,IAAM,EAAK,GACV,EAAG,GAAK,GAAK,CAAA,EAAG,IAAM,CAAA,EAC1B,EAAG,IAAM,EAAK,GACV,EAAG,GAAK,GAAK,CAAA,EAAG,IAAM,CAAA,EAC1B,EAAG,IAAM,EAAK,GACV,EAAG,GAAK,GAAK,CAAA,EAAG,IAAM,CAAA,CAE5B,CAEA,SAAS,EAAK,CAAC,CAAE,CAAC,EAKhB,OAJA,EAAE,EAAI,EAAE,EACR,EAAE,GAAK,EAAE,GACT,EAAE,GAAK,EAAE,GACT,EAAE,GAAK,EAAE,GACF,CACT,CAEA,SAAS,EAAK,CAAI,CAAE,CAAI,EACtB,IAAI,EAAK,IAAI,EAAK,GACd,EAAQ,GAAQ,EAAK,MACrB,EAAO,EAAG,KAUd,OATA,EAAK,MAAQ,WAAa,OAAO,AAAa,WAAb,EAAI,OAAwB,CAAG,EAChE,EAAK,OAAS,WACZ,OAAO,IAAS,AAAC,CAAA,AAAS,QAAT,IAAoB,CAAA,EAAK,qBAC5C,EACA,EAAK,MAAQ,EACT,IACmB,UAAjB,OAAO,GAAoB,EAAK,EAAO,GAC3C,EAAK,MAAQ,WAAa,OAAO,EAAK,EAAI,CAAC,EAAI,GAE1C,CACT,CAwBI,GAAU,EAAO,QACnB,EAAO,QAAU,EACR,GAAU,EAAO,IAC1B,EAAO,WAAa,OAAO,CAAM,GAEjC,IAAI,CAAC,KAAO,CAGd,EACE,EAC+B,EAC9B,AAAkB,YAAlB,OAAO,QAAyB,O,G,E,S,Q,S,C,C,C,GC3GlC,AAAA,SAAS,CAAM,CAAE,CAAM,CAAE,CAAM,EAEhC,SAAS,EAAO,CAAI,EAClB,IAAI,EAAK,IAAI,CAAE,EAAU,EAEzB,CAAA,EAAG,EAAI,EACP,EAAG,EAAI,EACP,EAAG,EAAI,EACP,EAAG,EAAI,EAGP,EAAG,KAAO,WACR,IAAI,EAAI,EAAG,EAAK,EAAG,GAAK,GAIxB,OAHA,EAAG,EAAI,EAAG,EACV,EAAG,EAAI,EAAG,EACV,EAAG,EAAI,EAAG,EACH,EAAG,GAAM,EAAG,IAAM,GAAM,EAAK,IAAM,CAC5C,EAEI,IAAU,CAAA,AAAO,EAAP,CAAO,EAEnB,EAAG,EAAI,EAGP,GAAW,EAIb,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,OAAS,GAAI,IACvC,EAAG,GAAK,AAAwB,EAAxB,EAAQ,WAAW,GAC3B,EAAG,MAEP,CAEA,SAAS,EAAK,CAAC,CAAE,CAAC,EAKhB,OAJA,EAAE,EAAI,EAAE,EACR,EAAE,EAAI,EAAE,EACR,EAAE,EAAI,EAAE,EACR,EAAE,EAAI,EAAE,EACD,CACT,CAEA,SAAS,EAAK,CAAI,CAAE,CAAI,EACtB,IAAI,EAAK,IAAI,EAAO,GAChB,EAAQ,GAAQ,EAAK,MACrB,EAAO,WAAa,MAAQ,AAAA,CAAA,EAAG,SAAW,CAAA,EAAK,UAAa,EAehE,OAdA,EAAK,OAAS,WACZ,GACE,IAAI,EAAM,EAAG,SAAW,GACpB,EAAO,AAAA,CAAA,EAAG,SAAW,CAAA,EAAK,WAC1B,EAAU,AAAA,CAAA,EAAM,CAAA,EAAQ,cACrB,AAAW,IAAX,EAAc,AACvB,OAAO,CACT,EACA,EAAK,MAAQ,EAAG,KAChB,EAAK,MAAQ,EACT,IACmB,UAAjB,OAAO,GAAoB,EAAK,EAAO,GAC3C,EAAK,MAAQ,WAAa,OAAO,EAAK,EAAI,CAAC,EAAI,GAE1C,CACT,CAEI,GAAU,EAAO,QACnB,EAAO,QAAU,EACR,GAAU,EAAO,IAC1B,EAAO,WAAa,OAAO,CAAM,GAEjC,IAAI,CAAC,OAAS,CAGhB,EACE,EAC+B,EAC9B,AAAkB,YAAlB,OAAO,QAAyB,O,G,E,S,Q,S,C,C,C,GC1ElC,AAAA,SAAS,CAAM,CAAE,CAAM,CAAE,CAAM,EAEhC,SAAS,EAAO,CAAI,EAClB,IAAI,EAAK,IAAI,CAAE,EAAU,EAGzB,CAAA,EAAG,KAAO,WACR,IAAI,EAAK,EAAG,EAAK,EAAG,IAAM,EAE1B,OADA,EAAG,EAAI,EAAG,EAAG,EAAG,EAAI,EAAG,EAAG,EAAG,EAAI,EAAG,EAAG,EAAG,EAAI,EAAG,EAC1C,AAAC,CAAA,EAAG,EAAK,EAAG,EAAI,OAAS,CAAA,EAC5B,CAAA,EAAG,EAAI,EAAI,EAAK,EAAG,GAAK,EAAO,CAAA,EAAK,GAAK,CAAA,CAAC,EAAM,CACtD,EAEA,EAAG,EAAI,EACP,EAAG,EAAI,EACP,EAAG,EAAI,EACP,EAAG,EAAI,EACP,EAAG,EAAI,EAEH,IAAU,CAAA,AAAO,EAAP,CAAO,EAEnB,EAAG,EAAI,EAGP,GAAW,EAIb,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,OAAS,GAAI,IACvC,EAAG,GAAK,AAAwB,EAAxB,EAAQ,WAAW,GACvB,GAAK,EAAQ,QACf,CAAA,EAAG,EAAI,EAAG,GAAK,GAAK,EAAG,IAAM,CAAA,EAE/B,EAAG,MAEP,CAEA,SAAS,EAAK,CAAC,CAAE,CAAC,EAOhB,OANA,EAAE,EAAI,EAAE,EACR,EAAE,EAAI,EAAE,EACR,EAAE,EAAI,EAAE,EACR,EAAE,EAAI,EAAE,EACR,EAAE,EAAI,EAAE,EACR,EAAE,EAAI,EAAE,EACD,CACT,CAEA,SAAS,EAAK,CAAI,CAAE,CAAI,EACtB,IAAI,EAAK,IAAI,EAAO,GAChB,EAAQ,GAAQ,EAAK,MACrB,EAAO,WAAa,MAAQ,AAAA,CAAA,EAAG,SAAW,CAAA,EAAK,UAAa,EAehE,OAdA,EAAK,OAAS,WACZ,GACE,IAAI,EAAM,EAAG,SAAW,GACpB,EAAO,AAAA,CAAA,EAAG,SAAW,CAAA,EAAK,WAC1B,EAAU,AAAA,CAAA,EAAM,CAAA,EAAQ,cACrB,AAAW,IAAX,EAAc,AACvB,OAAO,CACT,EACA,EAAK,MAAQ,EAAG,KAChB,EAAK,MAAQ,EACT,IACmB,UAAjB,OAAO,GAAoB,EAAK,EAAO,GAC3C,EAAK,MAAQ,WAAa,OAAO,EAAK,EAAI,CAAC,EAAI,GAE1C,CACT,CAEI,GAAU,EAAO,QACnB,EAAO,QAAU,EACR,GAAU,EAAO,IAC1B,EAAO,WAAa,OAAO,CAAM,GAEjC,IAAI,CAAC,OAAS,CAGhB,EACE,EAC+B,EAC9B,AAAkB,YAAlB,OAAO,QAAyB,O,G,E,S,Q,S,C,C,C,GC7ElC,AAAA,SAAS,CAAM,CAAE,CAAM,CAAE,CAAM,EAEhC,SAAS,EAAO,CAAI,EAClB,IAAI,EAAK,IAAI,AAGb,CAAA,EAAG,KAAO,WAER,IAAwB,EAAG,EAAvB,EAAI,EAAG,EAAG,EAAI,EAAG,EAQrB,OAPA,EAAI,CAAC,CAAC,EAAE,CAAE,GAAM,IAAM,EAAI,EAAI,EAAK,GAAK,GACxC,EAAI,CAAC,CAAE,EAAI,EAAK,EAAE,CAAE,GAAK,EAAK,IAAM,GACpC,EAAI,CAAC,CAAE,EAAI,EAAK,EAAE,CAAE,GAAK,EAAK,IAAM,EACpC,EAAI,CAAC,CAAE,EAAI,EAAK,EAAE,CAAE,GAAK,EAAK,GAAK,EACnC,EAAI,CAAC,CAAE,EAAI,EAAK,EAAE,CAAE,GAAS,GAAK,GAAK,GAAK,EAAK,GAAK,EACtD,CAAC,CAAC,EAAE,CAAG,EACP,EAAG,EAAK,EAAI,EAAK,EACV,CACT,EA8BA,AA5BA,SAAc,CAAE,CAAE,CAAI,EACpB,IAAI,EAAM,EAAI,EAAE,CAEhB,GAAI,IAAU,CAAA,AAAO,EAAP,CAAO,EAEf,CAAC,CAAC,EAAE,CAAG,OAIX,IAAK,EAAI,EADT,EAAO,GAAK,EACA,EAAI,EAAK,OAAQ,EAAE,EAC7B,CAAC,CAAC,AAAI,EAAJ,EAAM,CAAG,CAAE,CAAC,AAAI,EAAJ,EAAM,EAAI,GACnB,EAAK,WAAW,GAAK,CAAC,CAAC,EAAK,EAAK,EAAE,EAAI,GAIhD,KAAO,EAAE,OAAS,GAAG,EAAE,KAAK,GAC5B,IAAK,EAAI,EAAG,EAAI,GAAK,AAAS,IAAT,CAAC,CAAC,EAAE,CAAQ,EAAE,GAOnC,IANI,AAAK,GAAL,EAAY,CAAC,CAAC,EAAE,CAAG,GAAa,CAAC,CAAC,EAAE,CAExC,EAAG,EAAI,EACP,EAAG,EAAI,EAGF,EAAI,IAAK,EAAI,EAAG,EAAE,EACrB,EAAG,MAEP,EAEK,EAAI,EACX,CAEA,SAAS,EAAK,CAAC,CAAE,CAAC,EAGhB,OAFA,EAAE,EAAI,EAAE,EAAE,QACV,EAAE,EAAI,EAAE,EACD,CACT,CAEA,SAAS,EAAK,CAAI,CAAE,CAAI,EACV,MAAR,GAAc,CAAA,EAAO,CAAE,IAAI,IAA/B,EACA,IAAI,EAAK,IAAI,EAAO,GAChB,EAAQ,GAAQ,EAAK,MACrB,EAAO,WAAa,MAAQ,AAAA,CAAA,EAAG,SAAW,CAAA,EAAK,UAAa,EAehE,OAdA,EAAK,OAAS,WACZ,GACE,IAAI,EAAM,EAAG,SAAW,GACpB,EAAO,AAAA,CAAA,EAAG,SAAW,CAAA,EAAK,WAC1B,EAAU,AAAA,CAAA,EAAM,CAAA,EAAQ,cACrB,AAAW,IAAX,EAAc,AACvB,OAAO,CACT,EACA,EAAK,MAAQ,EAAG,KAChB,EAAK,MAAQ,EACT,IACE,EAAM,GAAG,EAAK,EAAO,GACzB,EAAK,MAAQ,WAAa,OAAO,EAAK,EAAI,CAAC,EAAI,GAE1C,CACT,CAEI,GAAU,EAAO,QACnB,EAAO,QAAU,EACR,GAAU,EAAO,IAC1B,EAAO,WAAa,OAAO,CAAM,GAEjC,IAAI,CAAC,UAAY,CAGnB,EACE,EAC+B,EAC9B,AAAkB,YAAlB,OAAO,QAAyB,O,G,E,S,Q,S,C,C,C,GCrElC,AAAA,SAAS,CAAM,CAAE,CAAM,CAAE,CAAM,EAEhC,SAAS,EAAO,CAAI,EAClB,IAAI,EAAK,IAAI,AAGb,CAAA,EAAG,KAAO,WACR,IACwB,EAAG,EADvB,EAAI,EAAG,EACP,EAAI,EAAG,EAAG,EAAI,EAAG,EAcrB,OAZA,EAAG,EAAI,EAAI,EAAK,WAAc,EAE9B,EAAI,CAAC,CAAE,EAAI,GAAM,IAAI,CACrB,EAAI,CAAC,CAAC,EAAK,EAAK,EAAK,IAAK,CAC1B,GAAK,GAAK,GACV,GAAK,GAAK,GACV,GAAK,IAAM,GACX,GAAK,IAAM,GAEX,EAAI,CAAC,CAAC,EAAE,CAAG,EAAI,EACf,EAAG,EAAI,EAEC,EAAK,CAAA,EAAK,IAAM,EAAA,EAAQ,CAClC,EAqDA,AAnDA,SAAc,CAAE,CAAE,CAAI,EACpB,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAI,EAAE,CAAE,EAAQ,IAYnC,IAAK,AAXD,IAAU,CAAA,AAAO,EAAP,CAAO,GAEnB,EAAI,EACJ,EAAO,OAGP,GAAc,OACd,EAAI,EACJ,EAAQ,KAAK,IAAI,EAAO,EAAK,SAG1B,EAAI,EAAG,EAAI,IAAK,EAAI,EAAO,EAAE,EAE5B,GAAM,CAAA,GAAK,EAAK,WAAY,AAAA,CAAA,EAAI,EAAA,EAAM,EAAK,OAA/C,EAEU,IAAN,GAAS,CAAA,EAAI,CAAA,EACjB,GAAK,GAAK,GACV,GAAK,IAAM,GACX,GAAK,GAAK,EACV,GAAK,IAAM,GACP,GAAK,IACP,EAAI,EAAK,WAAc,EAEvB,EAAK,GADL,CAAA,EAAK,CAAC,CAAC,AAAI,IAAJ,EAAQ,EAAK,EAAI,CAAA,EACT,EAAI,EAAI,GAW3B,IAPI,GAAK,KACP,CAAA,CAAC,CAAC,AAA6B,IAA5B,CAAA,GAAQ,EAAK,QAAU,CAAA,EAAS,CAAG,EADxC,EAMA,EAAI,IACC,EAAI,IAAS,EAAI,EAAG,EAAE,EACzB,EAAI,CAAC,CAAE,EAAI,GAAM,IAAI,CACrB,EAAI,CAAC,CAAC,EAAK,EAAK,EAAK,IAAK,CAC1B,GAAK,GAAK,GACV,GAAK,GAAK,GACV,GAAK,IAAM,GACX,GAAK,IAAM,GACX,CAAC,CAAC,EAAE,CAAG,EAAI,CAGb,CAAA,EAAG,EAAI,EACP,EAAG,EAAI,EACP,EAAG,EAAI,CACT,EAEK,EAAI,EACX,CAEA,SAAS,EAAK,CAAC,CAAE,CAAC,EAIhB,OAHA,EAAE,EAAI,EAAE,EACR,EAAE,EAAI,EAAE,EACR,EAAE,EAAI,EAAE,EAAE,QACH,CACT,CAEA,SAAS,EAAK,CAAI,CAAE,CAAI,EACV,MAAR,GAAc,CAAA,EAAO,CAAE,IAAI,IAA/B,EACA,IAAI,EAAK,IAAI,EAAO,GAChB,EAAQ,GAAQ,EAAK,MACrB,EAAO,WAAa,MAAQ,AAAA,CAAA,EAAG,SAAW,CAAA,EAAK,UAAa,EAehE,OAdA,EAAK,OAAS,WACZ,GACE,IAAI,EAAM,EAAG,SAAW,GACpB,EAAO,AAAA,CAAA,EAAG,SAAW,CAAA,EAAK,WAC1B,EAAU,AAAA,CAAA,EAAM,CAAA,EAAQ,cACrB,AAAW,IAAX,EAAc,AACvB,OAAO,CACT,EACA,EAAK,MAAQ,EAAG,KAChB,EAAK,MAAQ,EACT,IACE,EAAM,GAAG,EAAK,EAAO,GACzB,EAAK,MAAQ,WAAa,OAAO,EAAK,EAAI,CAAC,EAAI,GAE1C,CACT,CAEI,GAAU,EAAO,QACnB,EAAO,QAAU,EACR,GAAU,EAAO,IAC1B,EAAO,WAAa,OAAO,CAAM,GAEjC,IAAI,CAAC,QAAU,CAGjB,EACE,EAC+B,EAC9B,AAAkB,YAAlB,OAAO,QAAyB,O,G,E,S,Q,S,C,C,C,GC5IlC,AAAA,SAAS,CAAM,CAAE,CAAM,CAAE,CAAM,EAEhC,SAAS,EAAO,CAAI,EAClB,IAAI,EAAK,IAAI,CAAE,EAAU,EAGzB,CAAA,EAAG,KAAO,WACR,IAAI,EAAI,EAAG,EAAG,EAAI,EAAG,EAAG,EAAI,EAAG,EAAG,EAAI,EAAG,EAQzC,OAPA,EAAI,GAAM,GAAO,IAAM,EAAK,EAC5B,EAAK,EAAI,EAAK,EACd,EAAI,GAAM,GAAO,IAAM,EAAK,EAC5B,EAAK,EAAI,EAAK,EACd,EAAG,EAAI,EAAK,GAAK,GAAO,IAAM,GAAM,EACpC,EAAG,EAAI,EAAI,EAAK,EAAK,EACrB,EAAG,EAAI,GAAM,GAAO,IAAM,GAAM,EACzB,EAAG,EAAI,EAAK,EAAK,CAC1B,EAkBA,EAAG,EAAI,EACP,EAAG,EAAI,EACP,EAAG,EAAI,YACP,EAAG,EAAI,WAEH,IAAS,KAAK,MAAM,IAEtB,EAAG,EAAK,EAAO,WAAe,EAC9B,EAAG,EAAI,AAAO,EAAP,GAGP,GAAW,EAIb,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,OAAS,GAAI,IACvC,EAAG,GAAK,AAAwB,EAAxB,EAAQ,WAAW,GAC3B,EAAG,MAEP,CAEA,SAAS,EAAK,CAAC,CAAE,CAAC,EAKhB,OAJA,EAAE,EAAI,EAAE,EACR,EAAE,EAAI,EAAE,EACR,EAAE,EAAI,EAAE,EACR,EAAE,EAAI,EAAE,EACD,CACT,CAEA,SAAS,EAAK,CAAI,CAAE,CAAI,EACtB,IAAI,EAAK,IAAI,EAAO,GAChB,EAAQ,GAAQ,EAAK,MACrB,EAAO,WAAa,MAAQ,AAAA,CAAA,EAAG,SAAW,CAAA,EAAK,UAAa,EAehE,OAdA,EAAK,OAAS,WACZ,GACE,IAAI,EAAM,EAAG,SAAW,GACpB,EAAO,AAAA,CAAA,EAAG,SAAW,CAAA,EAAK,WAC1B,EAAU,AAAA,CAAA,EAAM,CAAA,EAAQ,cACrB,AAAW,IAAX,EAAc,AACvB,OAAO,CACT,EACA,EAAK,MAAQ,EAAG,KAChB,EAAK,MAAQ,EACT,IACmB,UAAjB,OAAO,GAAoB,EAAK,EAAO,GAC3C,EAAK,MAAQ,WAAa,OAAO,EAAK,EAAI,CAAC,EAAI,GAE1C,CACT,CAEI,GAAU,EAAO,QACnB,EAAO,QAAU,EACR,GAAU,EAAO,IAC1B,EAAO,WAAa,OAAO,CAAM,GAEjC,IAAI,CAAC,OAAS,CAGhB,EACE,EAC+B,EAC9B,AAAkB,YAAlB,OAAO,QAAyB,O,G,E,S,Q,S,C,C,C,E,GIiBnC,MAAM,EAAe,CAAC,EAYP,OAAO,eACtB,MAAM,EAAS,OAAO,eACL,OAAO,uBACxB,MAAM,EAAgB,CACpB,OALc,CAAC,EAAG,IAAM,IAAM,CAMhC,EAEA,IAAI,EAAa,EAGjB,MAAM,EAAU,CACd,MAAO,KACP,SAAU,KACV,QAAS,KACT,MAAO,IACT,EAEA,IAAI,EAAQ,KACZ,IAAI,EAAa,KAGb,EAAW,KACX,EAAU,KACV,EAAU,KACV,EAAY,EAChB,KAAM,CAAC,EAAc,EAAgB,CAAgB,EAAa,CAAA,GAClE,SAAS,EAAW,CAAE,CAAE,CAAa,EACnC,IAAM,EAAW,EACX,EAAQ,EACR,EAAU,AAAc,IAAd,EAAG,OACb,EAAO,EAAoB,EAAU,CACzC,MAAO,KACP,SAAU,KACV,QAAS,KACT,MAAO,GAAiB,CAC1B,EACM,EAAW,EAAU,EAAK,IAAM,EAAG,IAAM,EAAQ,IAAM,EAAU,KACvE,EAAQ,EACR,EAAW,KACX,GAAI,CACF,OAAO,EAAW,EAAU,CAAA,EAC9B,QAAU,CACR,EAAW,EACX,EAAQ,CACV,CACF,CACA,SAAS,EAAa,CAAK,CAAE,CAAO,EAClC,EAAU,EAAU,OAAO,OAAO,CAAC,EAAG,EAAe,GAAW,EAChE,IAAM,EAAI,CACR,MAAA,EACA,UAAW,KACX,cAAe,KACf,WAAY,EAAQ,QAAU,KAAA,CAChC,EAOA,MAAO,CAAC,EAAW,KAAK,GANT,AAAA,IACQ,YAAjB,OAAO,IAC0D,EAAQ,EAAM,AAA7E,GAAc,EAAW,SAAW,EAAW,QAAQ,IAAI,GAAkB,EAAE,OAA2B,EAAE,QAE3G,EAAY,EAAG,IAEW,AACrC,CAKA,SAAS,EAAmB,CAAE,CAAE,CAAK,CAAE,CAAO,EAC5C,IAAM,EAAI,EAAkB,EAAI,EAAO,CAAA,EA3D3B,GA4D4D,EAAkB,EAC5F,CACA,SAAS,EAAa,CAAE,CAAE,CAAK,CAAE,CAAO,EACtC,EAAa,EACb,IAAM,EAAI,EAAkB,EAAI,EAAO,CAAA,EAhE3B,GAiEN,EAAI,GAAmB,AA0qB/B,SAAS,EAAO,CAAK,CAAE,CAAG,EACxB,OAAO,EAAQ,EAAM,SAAW,AAAuB,KAAA,IAAvB,EAAM,OAAO,CAAC,EAAI,CAAiB,EAAM,OAAO,CAAC,EAAI,CAAG,EAAO,EAAM,MAAO,GAAO,KAAA,CACrH,EA5qBsC,EAAO,EAAgB,IACvD,GAAG,CAAA,EAAE,SAAW,CAAA,EACpB,EAAE,KAAO,CAAA,EACT,EAAU,EAAQ,KAAK,GAAK,EAAkB,EAChD,CAeA,SAAS,EAAW,CAAE,CAAE,CAAK,CAAE,CAAO,EACpC,EAAU,EAAU,OAAO,OAAO,CAAC,EAAG,EAAe,GAAW,EAChE,IAAM,EAAI,EAAkB,EAAI,EAAO,CAAA,EAAM,GAQ7C,OAPA,EAAE,UAAY,KACd,EAAE,cAAgB,KAClB,EAAE,WAAa,EAAQ,QAAU,KAAA,EAI1B,EAAkB,GAClB,EAAW,KAAK,EACzB,CAiLA,SAAS,EAAQ,CAAE,EACjB,IAAM,EAAW,EACjB,EAAW,KACX,GAAI,CACF,OAAO,GACT,QAAU,CACR,EAAW,CACb,CACF,CAiIA,SAAS,IACP,IAAM,EAAoB,GAAc,EAAW,QACnD,GAAI,IAAI,CAAC,SAAY,CAAA,CAAC,GAAqB,IAAI,CAAC,OAAS,GAAqB,IAAI,CAAC,MAAA,GACjF,GAAI,CAAC,GAAqB,AA5ZhB,IA4ZgB,IAAI,CAAC,OAAmB,GAAqB,AA5Z7D,IA4Z6D,IAAI,CAAC,OAAkB,EAAkB,IAAI,MAAO,CACzH,IAAM,EAAU,EAChB,EAAU,KACV,EAAW,IAAM,EAAa,IAAI,EAAG,CAAA,GACrC,EAAU,CACZ,EAEF,GAAI,EAAU,CACZ,IAAM,EAAQ,IAAI,CAAC,UAAY,IAAI,CAAC,UAAU,OAAS,CAClD,CAAA,EAAS,SAIZ,EAAS,QAAQ,KAAK,IAAI,EAC1B,EAAS,YAAY,KAAK,KAJ1B,EAAS,QAAU,CAAC,IAAI,CAAC,CACzB,EAAS,YAAc,CAAC,EAAM,EAK3B,IAAI,CAAC,WAIR,IAAI,CAAC,UAAU,KAAK,GACpB,IAAI,CAAC,cAAc,KAAK,EAAS,QAAQ,OAAS,KAJlD,IAAI,CAAC,UAAY,CAAC,EAAS,CAC3B,IAAI,CAAC,cAAgB,CAAC,EAAS,QAAQ,OAAS,EAAE,CAKtD,QACA,AAAI,GAAqB,EAAW,QAAQ,IAAI,IAAI,EAAU,IAAI,CAAC,OAC5D,IAAI,CAAC,KACd,CACA,SAAS,EAAY,CAAI,CAAE,CAAK,CAAE,CAAM,EACtC,IAAI,EAAU,GAAc,EAAW,SAAW,EAAW,QAAQ,IAAI,GAAQ,EAAK,OAAS,EAAK,MACpG,GAAI,CAAC,EAAK,YAAc,CAAC,EAAK,WAAW,EAAS,GAAQ,CACxD,GAAI,EAAY,CACd,IAAM,EAAoB,EAAW,QACjC,CAAA,GAAqB,CAAC,GAAU,EAAW,QAAQ,IAAI,EAAA,IACzD,EAAW,QAAQ,IAAI,GACvB,EAAK,OAAS,GAEX,GAAmB,CAAA,EAAK,MAAQ,CAArC,CACF,MAAO,EAAK,MAAQ,CAChB,CAAA,EAAK,WAAa,EAAK,UAAU,QACnC,EAAW,KACT,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,UAAU,OAAQ,GAAK,EAAG,CACjD,IAAM,EAAI,EAAK,SAAS,CAAC,EAAE,CACrB,EAAoB,GAAc,EAAW,QAC/C,GAAqB,EAAW,SAAS,IAAI,KAC7C,CAAA,CAAA,GAAsB,EAAE,MAAA,GAAU,CAAA,AAAC,GAAsB,EAAE,KAAA,IACzD,EAAE,KAAM,EAAQ,KAAK,GAAQ,EAAQ,KAAK,GAC1C,EAAE,WAAW,AAgO7B,SAAS,EAAe,CAAI,EAC1B,IAAM,EAAoB,GAAc,EAAW,QACnD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,UAAU,OAAQ,GAAK,EAAG,CACjD,IAAM,EAAI,EAAK,SAAS,CAAC,EAAE,CACvB,CAAA,AAAC,GAAsB,EAAE,KAAA,GAAS,CAAA,CAAA,GAAsB,EAAE,MAAA,IACxD,EAAmB,EAAE,OA9qBf,EA8qBqC,EAAE,MA9qBvC,EA+qBN,EAAE,KAAM,EAAQ,KAAK,GAAQ,EAAQ,KAAK,GAC9C,EAAE,WAAa,EAAe,GAElC,CACF,EA1O4C,IAE9B,EAAmB,EAAE,OA5crB,EA4cyC,EAAE,MA5c3C,EA6cN,CACA,GAAI,EAAQ,OAAS,IAGnB,MAFA,EAAU,EAAE,CAEN,AAAI,OAEd,EAAG,CAAA,EAEP,CACA,OAAO,CACT,CACA,SAAS,EAAkB,CAAI,EAC7B,GAAI,CAAC,EAAK,GAAI,OACd,EAAU,GACV,IAAM,EAAQ,EACR,EAAW,EACX,EAAO,EACb,EAAW,EAAQ,EACnB,EAAe,EAAM,GAAc,EAAW,SAAW,EAAW,QAAQ,IAAI,GAAQ,EAAK,OAAS,EAAK,MAAO,GAC9G,GAAc,CAAC,EAAW,SAAW,EAAW,QAAQ,IAAI,IAC9D,eAAe,KACb,EAAW,KACT,GAAe,CAAA,EAAW,QAAU,CAAA,CAAA,EACpC,EAAW,EAAQ,EACnB,EAAe,EAAM,EAAK,OAAQ,GAClC,EAAW,EAAQ,IACrB,EAAG,CAAA,EACL,GAEF,EAAW,EACX,EAAQ,CACV,CACA,SAAS,EAAe,CAAI,CAAE,CAAK,CAAE,CAAI,EACvC,IAAI,EACJ,GAAI,CACF,EAAY,EAAK,GAAG,EACtB,CAAE,MAAO,EAAK,CACR,EAAK,MAAM,CAAA,GAAc,EAAW,QAAU,EAAK,OAlf7C,EAkf8D,EAAK,MAlfnE,CAkfV,EACA,EAAY,EACd,CACI,CAAA,CAAC,EAAK,WAAa,EAAK,WAAa,CAAA,IACnC,AAAkB,MAAlB,EAAK,WAAqB,cAAe,EAC3C,EAAY,EAAM,EAAW,CAAA,GACpB,GAAc,EAAW,SAAW,EAAK,MAClD,EAAW,QAAQ,IAAI,GACvB,EAAK,OAAS,GACT,EAAK,MAAQ,EACpB,EAAK,UAAY,EAErB,CACA,SAAS,EAAkB,CAAE,CAAE,CAAI,CAAE,CAAI,CAAE,EA/f7B,CA+f0C,CAAE,CAAO,EAC/D,IAAM,EAAI,CACR,GAAA,EACA,MAAO,EACP,UAAW,KACX,MAAO,KACP,QAAS,KACT,YAAa,KACb,SAAU,KACV,MAAO,EACP,MAAO,EACP,QAAS,KACT,KAAA,CACF,EAyBA,OAxBI,GAAc,EAAW,UAC3B,EAAE,MAAQ,EACV,EAAE,OAAS,GAEC,OAAV,GAA0B,IAAU,IAClC,GAAc,EAAW,SAAW,EAAM,KACvC,EAAM,OAAgC,EAAM,OAAO,KAAK,GAA1C,EAAM,OAAS,CAAC,EAAE,CAEhC,EAAM,MAA8B,EAAM,MAAM,KAAK,GAAxC,EAAM,MAAQ,CAAC,EAAE,EAgBhC,CACT,CACA,SAAS,EAAO,CAAI,EAClB,IAAM,EAAoB,GAAc,EAAW,QACnD,GAAI,CAAC,GAAqB,AAAe,IAAf,EAAK,OAAe,GAAqB,AAAgB,IAAhB,EAAK,OAAc,OACtF,GAAI,CAAC,GAAqB,AAziBZ,IAyiBY,EAAK,OAAqB,GAAqB,AAziB3D,IAyiB2D,EAAK,OAAoB,OAAO,EAAa,GACtH,GAAI,EAAK,UAAY,EAAQ,EAAK,SAAS,YAAa,OAAO,EAAK,SAAS,QAAQ,KAAK,GAC1F,IAAM,EAAY,CAAC,EAAK,CACxB,KAAQ,AAAA,CAAA,EAAO,EAAK,KAAA,GAAW,CAAA,CAAC,EAAK,WAAa,EAAK,UAAY,CAAA,GAAY,CAC7E,GAAI,GAAqB,EAAW,SAAS,IAAI,GAAO,OACpD,CAAA,CAAC,GAAqB,EAAK,OAAS,GAAqB,EAAK,MAAA,GAAQ,EAAU,KAAK,EAC3F,CACA,IAAK,IAAI,EAAI,EAAU,OAAS,EAAG,GAAK,EAAG,IAAK,CAE9C,GADA,EAAO,CAAS,CAAC,EAAE,CACf,EAAmB,CACrB,IAAI,EAAM,EACN,EAAO,CAAS,CAAC,EAAI,EAAE,CAC3B,KAAQ,AAAA,CAAA,EAAM,EAAI,KAAA,GAAU,IAAQ,GAClC,GAAI,EAAW,SAAS,IAAI,GAAM,MAEtC,CACA,GAAI,CAAC,GAAqB,AA1jBhB,IA0jBgB,EAAK,OAAmB,GAAqB,AA1jB7D,IA0jB6D,EAAK,OAC1E,EAAkB,QACb,GAAI,CAAC,GAAqB,AA3jBrB,IA2jBqB,EAAK,OAAqB,GAAqB,AA3jBpE,IA2jBoE,EAAK,OAAoB,CACvG,IAAM,EAAU,EAChB,EAAU,KACV,EAAW,IAAM,EAAa,EAAM,CAAS,CAAC,EAAE,EAAG,CAAA,GACnD,EAAU,CACZ,CACF,CACF,CACA,SAAS,EAAW,CAAE,CAAE,CAAI,EAC1B,GAAI,EAAS,OAAO,IACpB,IAAI,EAAO,CAAA,EACN,GAAM,CAAA,EAAU,EAAE,AAAF,EACjB,EAAS,EAAO,CAAA,EAAU,EAAU,EAAE,CAC1C,IACA,GAAI,CACF,IAAM,EAAM,IAEZ,OADA,AAOJ,SAAyB,CAAI,MAMvB,EADJ,GAJI,IAC6E,EAAS,GACxF,EAAU,MAER,EAAM,OAEV,GAAI,GACF,GAAI,AAAC,EAAW,SAAS,MAAS,EAAW,MAAM,KAwB5C,CAAA,GAAI,EAAW,QAAS,CAC7B,EAAW,QAAU,CAAA,EACrB,EAAW,QAAQ,KAAK,MAAM,EAAW,QAAS,GAClD,EAAU,KACV,EAAgB,CAAA,GAChB,MACF,CAAA,KA9ByD,CACvD,IAAM,EAAU,EAAW,QACrB,EAAW,EAAW,SAG5B,IAAK,IAAM,KAFX,EAAQ,KAAK,MAAM,EAAS,EAAW,SACvC,EAAM,EAAW,QACD,GACd,WAAY,GAAM,CAAA,EAAE,MAAQ,EAAE,MAAA,EAC9B,OAAO,EAAE,OAEX,EAAa,KACb,EAAW,KACT,IAAK,IAAM,KAAK,EAAU,EAAU,GACpC,IAAK,IAAM,KAAK,EAAS,CAEvB,GADA,EAAE,MAAQ,EAAE,OACR,EAAE,MACJ,IAAK,IAAI,EAAI,EAAG,EAAM,EAAE,MAAM,OAAQ,EAAI,EAAK,IAAK,EAAU,EAAE,KAAK,CAAC,EAAE,CAEtE,CAAA,EAAE,QAAQ,CAAA,EAAE,MAAQ,EAAE,MAA1B,EACA,OAAO,EAAE,OACT,OAAO,EAAE,OACT,EAAE,OAAS,CACb,CACA,EAAgB,CAAA,EAClB,EAAG,CAAA,EACL,EAQF,IAAM,EAAI,EACV,EAAU,KACN,EAAE,QAAQ,EAAW,IAAM,EAAW,GAAI,CAAA,GAC1C,GAAK,GACX,EAnDoB,GACT,CACT,CAAE,MAAO,EAAK,CACP,GAAS,CAAA,EAAU,IAAxB,EACA,EAAY,EACd,CACF,CA8CA,SAAS,EAAS,CAAK,EACrB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,OAAQ,IAAK,EAAO,CAAK,CAAC,EAAE,CACxD,CAkBA,SAAS,EAAe,CAAK,EAC3B,IAAI,EACA,EAAa,EACjB,IAAK,EAAI,EAAG,EAAI,EAAM,OAAQ,IAAK,CACjC,IAAM,EAAI,CAAK,CAAC,EAAE,AACb,CAAA,EAAE,KAAqB,CAAK,CAAC,IAAa,CAAG,EAArC,EAAO,EACtB,CAEA,IADI,EAAa,SA7qBjB,CAAA,EAAa,QADY,KAAA,CACzB,EA8qBK,EAAI,EAAG,EAAI,EAAY,IAAK,EAAO,CAAK,CAAC,EAAE,CAClD,CACA,SAAS,EAAa,CAAI,CAAE,CAAM,EAChC,IAAM,EAAoB,GAAc,EAAW,QAC/C,EAAmB,EAAK,OAAS,EAAO,EAAK,MAAQ,EACzD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,QAAQ,OAAQ,GAAK,EAAG,CAC/C,IAAM,EAAS,EAAK,OAAO,CAAC,EAAE,AAC1B,CAAA,EAAO,UACL,CAAC,GAAqB,AApqBlB,IAoqBkB,EAAO,OAAmB,GAAqB,AApqBjE,IAoqBiE,EAAO,OAC1E,IAAW,GAAQ,EAAO,GACrB,CAAA,CAAC,GAAqB,AArqBvB,IAqqBuB,EAAO,OAAqB,GAAqB,AArqBxE,IAqqBwE,EAAO,MAAW,GAAS,EAAa,EAAQ,GAEtI,CACF,CAYA,SAAS,EAAU,CAAI,EACrB,IAAI,EACJ,GAAI,EAAK,QACP,KAAO,EAAK,QAAQ,QAAQ,CAC1B,IAAM,EAAS,EAAK,QAAQ,MACtB,EAAQ,EAAK,YAAY,MACzB,EAAM,EAAO,UACnB,GAAI,GAAO,EAAI,OAAQ,CACrB,IAAM,EAAI,EAAI,MACR,EAAI,EAAO,cAAc,MAC3B,EAAQ,EAAI,SACd,EAAE,WAAW,CAAC,EAAE,CAAG,EACnB,CAAG,CAAC,EAAM,CAAG,EACb,EAAO,aAAa,CAAC,EAAM,CAAG,EAElC,CACF,CAEF,GAAI,GAAc,EAAW,SAAW,EAAK,KAAM,CACjD,GAAI,EAAK,OAAQ,CACf,IAAK,EAAI,EAAG,EAAI,EAAK,OAAO,OAAQ,IAAK,EAAU,EAAK,MAAM,CAAC,EAAE,CACjE,QAAO,EAAK,MACd,EACA,AAYJ,SAAS,EAAM,CAAI,CAAE,CAAG,EAKtB,GAJK,IACH,EAAK,OAAS,EACd,EAAW,SAAS,IAAI,IAEtB,EAAK,MACP,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,MAAM,OAAQ,IAAK,EAAM,EAAK,KAAK,CAAC,EAAE,CAEnE,EApBU,EAAM,CAAA,EACd,MAAO,GAAI,EAAK,MAAO,CACrB,IAAK,EAAI,EAAG,EAAI,EAAK,MAAM,OAAQ,IAAK,EAAU,EAAK,KAAK,CAAC,EAAE,CAC/D,CAAA,EAAK,MAAQ,IACf,CACA,GAAI,EAAK,SAAU,CACjB,IAAK,EAAI,EAAG,EAAI,EAAK,SAAS,OAAQ,IAAK,EAAK,QAAQ,CAAC,EAAE,EAC3D,CAAA,EAAK,SAAW,IAClB,CACI,GAAc,EAAW,QAAS,EAAK,OAAS,EAAO,EAAK,MAAQ,EACxE,EAAK,QAAU,IACjB,CAcA,SAAS,EAAY,CAAG,MAJL,CAOP,OAFV,EAJA,AAAI,CADa,EAKD,aAJG,OAAS,AAAe,UAAf,OAAO,EAAyB,EACrD,AAAI,MAAM,gBAOnB,CA0EA,MAAM,EAAW,OAAO,YACxB,SAAS,EAAQ,CAAC,EAChB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAE,OAAQ,IAAK,CAAC,CAAC,EAAE,EACzC,CAyKA,SAAS,EAAgB,CAAI,CAAE,CAAK,EAUlC,OAAO,EAAQ,IAAM,EAAK,GAAS,CAAC,GACtC,CAuJA,SAAS,EAAI,CAAK,EAIhB,OAAO,EAAW,AA9UpB,SAAkB,CAAI,CAAE,CAAK,CAAE,EAAU,CAAC,CAAC,MAzgBxB,EA0gBjB,IAAI,EAAQ,EAAE,CACV,EAAS,EAAE,CACX,EAAY,EAAE,CACd,EAAM,EACN,EAAU,EAAM,OAAS,EAAI,EAAE,CAAG,KAEtC,OAhhBiB,EA+gBP,IAAM,EAAQ,GA9gBV,OAAV,IAA0B,AAAmB,OAAnB,EAAM,SAAmB,EAAM,SAAW,CAAC,EAAG,CAAM,EAAM,SAAS,KAAK,IA+gB/F,KACL,IAAI,EAAW,KAAU,EAAE,CACvB,EACA,EAEJ,OADA,CAAQ,CAAC,EAAO,CACT,EAAQ,KACb,IAAI,EAAS,EAAS,OAClB,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACJ,GAAI,AAAW,IAAX,EACU,IAAR,IACF,EAAQ,GACR,EAAY,EAAE,CACd,EAAQ,EAAE,CACV,EAAS,EAAE,CACX,EAAM,EACN,GAAY,CAAA,EAAU,EAAC,AAAD,GAEpB,EAAQ,WACV,EAAQ,CAAC,EAAS,CAClB,CAAM,CAAC,EAAE,CAAG,EAAW,AAAA,IACrB,CAAS,CAAC,EAAE,CAAG,EACR,EAAQ,aAEjB,EAAM,QAGL,GAAI,AAAQ,IAAR,EAAW,CAElB,IAAK,EAAI,EADT,EAAS,AAAI,MAAM,GACP,EAAI,EAAQ,IACtB,CAAK,CAAC,EAAE,CAAG,CAAQ,CAAC,EAAE,CACtB,CAAM,CAAC,EAAE,CAAG,EAAW,GAEzB,EAAM,CACR,KAAO,CAIL,IAAK,AAHL,EAAO,AAAI,MAAM,GACjB,EAAgB,AAAI,MAAM,GAC1B,GAAY,CAAA,EAAc,AAAI,MAAM,EAAA,EAC/B,EAAQ,EAAG,EAAM,KAAK,IAAI,EAAK,GAAS,EAAQ,GAAO,CAAK,CAAC,EAAM,GAAK,CAAQ,CAAC,EAAM,CAAE,KAC9F,IAAK,EAAM,EAAM,EAAG,EAAS,EAAS,EAAG,GAAO,GAAS,GAAU,GAAS,CAAK,CAAC,EAAI,GAAK,CAAQ,CAAC,EAAO,CAAE,IAAO,IAClH,CAAI,CAAC,EAAO,CAAG,CAAM,CAAC,EAAI,CAC1B,CAAa,CAAC,EAAO,CAAG,CAAS,CAAC,EAAI,CACtC,GAAY,CAAA,CAAW,CAAC,EAAO,CAAG,CAAO,CAAC,EAAG,AAAH,EAI5C,IAFA,EAAa,IAAI,IACjB,EAAiB,AAAI,MAAM,EAAS,GAC/B,EAAI,EAAQ,GAAK,EAAO,IAC3B,EAAO,CAAQ,CAAC,EAAE,CAClB,EAAI,EAAW,IAAI,GACnB,CAAc,CAAC,EAAE,CAAG,AAAM,KAAA,IAAN,EAAkB,GAAK,EAC3C,EAAW,IAAI,EAAM,GAEvB,IAAK,EAAI,EAAO,GAAK,EAAK,IACxB,EAAO,CAAK,CAAC,EAAE,CAEX,AAAM,KAAA,IADV,CAAA,EAAI,EAAW,IAAI,EAAnB,GACuB,AAAM,KAAN,GACrB,CAAI,CAAC,EAAE,CAAG,CAAM,CAAC,EAAE,CACnB,CAAa,CAAC,EAAE,CAAG,CAAS,CAAC,EAAE,CAC/B,GAAY,CAAA,CAAW,CAAC,EAAE,CAAG,CAAO,CAAC,EAAC,AAAD,EACrC,EAAI,CAAc,CAAC,EAAE,CACrB,EAAW,IAAI,EAAM,IAChB,CAAS,CAAC,EAAE,GAErB,IAAK,EAAI,EAAO,EAAI,EAAQ,IACtB,KAAK,GACP,CAAM,CAAC,EAAE,CAAG,CAAI,CAAC,EAAE,CACnB,CAAS,CAAC,EAAE,CAAG,CAAa,CAAC,EAAE,CAC3B,IACF,CAAO,CAAC,EAAE,CAAG,CAAW,CAAC,EAAE,CAC3B,CAAO,CAAC,EAAE,CAAC,KAER,CAAM,CAAC,EAAE,CAAG,EAAW,GAEhC,EAAS,EAAO,MAAM,EAAG,EAAM,GAC/B,EAAQ,EAAS,MAAM,EACzB,CACA,OAAO,CACT,GACA,SAAS,EAAO,CAAQ,EAEtB,GADA,CAAS,CAAC,EAAE,CAAG,EACX,EAAS,CACX,GAAM,CAAC,EAAG,EAAI,CAAG,EAAa,GAE9B,OADA,CAAO,CAAC,EAAE,CAAG,EACN,EAAM,CAAQ,CAAC,EAAE,CAAE,EAC5B,CACA,OAAO,EAAM,CAAQ,CAAC,EAAE,CAC1B,CACF,CACF,EAwO6B,IAAM,EAAM,KAAM,EAAM,SAAU,AAH5C,aAAc,GAAS,CACtC,SAAU,IAAM,EAAM,QACxB,GACyE,KAAA,GAC3E,CAOA,SAAS,EAAK,CAAK,EACjB,IAAI,EAAc,CAAA,EACZ,EAAQ,EAAM,MACd,EAAY,EAAW,IAAM,EAAM,KAAM,KAAA,EAAW,CACxD,OAAQ,CAAC,EAAG,IAAM,EAAc,IAAM,EAAI,CAAC,GAAM,CAAC,CACpD,GACA,OAAO,EAAW,KAChB,IAAM,EAAI,IACV,GAAI,EAAG,CACL,IAAM,EAAQ,EAAM,SACd,EAAK,AAAiB,YAAjB,OAAO,GAAwB,EAAM,OAAS,EAEzD,OADA,EAAc,GAAS,EAChB,EAAK,EAAQ,IAAM,EAAM,IAAM,CACxC,CACA,OAAO,EAAM,QACf,EAAG,KAAA,EAAW,KAAA,EAChB,EA0D4B,AA12B5B,WACa,OAAO,UAMpB,IDvf2C,OAAO,OAAO,MAIV,OAAO,OAAO,MA6E7D,MAAM,EAAW,gBAYjB,SAAS,EAAS,CAAI,CAAE,CAAK,CAAE,CAAK,EAClC,IAAM,EAAI,SAAS,cAAc,WACjC,CAAA,EAAE,UAAY,EACd,IAAI,EAAO,EAAE,QAAQ,WAErB,OADI,GAAO,CAAA,EAAO,EAAK,UAAvB,EACO,CACT,CAsGA,SAAS,EAAO,CAAM,CAAE,CAAQ,CAAE,CAAM,CAAE,CAAO,EAE/C,GADe,KAAA,IAAX,GAAyB,GAAS,CAAA,EAAU,EAAE,AAAF,EAC5C,AAAoB,YAApB,OAAO,EAAyB,OAAO,EAAiB,EAAQ,EAAU,EAAS,GACvF,AAAA,EAAmB,AAAA,GAAW,EAAiB,EAAQ,IAAY,EAAS,GAAS,EACvF,CA4HA,SAAS,EAAa,CAAC,EACrB,IAAM,EAAM,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CACrB,EAAO,EAAE,cAAgB,EAAE,cAAc,CAAC,EAAE,EAAI,EAAE,OAiBtD,IAhBI,EAAE,SAAW,GACf,OAAO,eAAe,EAAG,SAAU,CACjC,aAAc,CAAA,EACd,MAAO,CACT,GAEF,OAAO,eAAe,EAAG,gBAAiB,CACxC,aAAc,CAAA,EACd,IAAA,IACS,GAAQ,QAEnB,GACI,AAAA,EAAa,UAAY,CAAC,AAAA,EAAa,OACzC,AAAA,EAAa,KAAO,CAAA,EACpB,SAAS,iBAAiB,aAAa,QAAQ,AAAA,GAAQ,EAAK,WAEvD,GAAM,CACX,IAAM,EAAU,CAAI,CAAC,EAAI,CACzB,GAAI,GAAW,CAAC,EAAK,SAAU,CAC7B,IAAM,EAAO,CAAI,CAAC,CAAC,EAAE,EAAI,IAAI,CAAC,CAAC,CAE/B,GADA,AAAS,KAAA,IAAT,EAAqB,EAAQ,KAAK,EAAM,EAAM,GAAK,EAAQ,KAAK,EAAM,GAClE,EAAE,aAAc,MACtB,CACA,EAAO,EAAK,QAAU,EAAK,YAAc,EAAK,IAChD,CACF,CACA,SAAS,EAAiB,CAAM,CAAE,CAAK,CAAE,CAAO,CAAE,CAAM,CAAE,CAAW,EAEnE,IADI,AAAA,EAAa,SAAW,CAAC,GAAS,CAAA,EAAU,IAAI,EAAO,WAAW,AAAA,EAC/D,AAAmB,YAAnB,OAAO,GAAwB,EAAU,IAChD,GAAI,IAAU,EAAS,OAAO,EAC9B,IAAM,EAAI,OAAO,EACX,EAAQ,AAAW,KAAA,IAAX,EAEd,GADA,EAAS,GAAS,CAAO,CAAC,EAAE,EAAI,CAAO,CAAC,EAAE,CAAC,YAAc,EACrD,AAAM,WAAN,GAAkB,AAAM,WAAN,EAAgB,CACpC,GAAI,AAAA,EAAa,QAAS,OAAO,EAEjC,GADU,WAAN,GAAgB,CAAA,EAAQ,EAAM,UAAlC,EACI,EAAO,CACT,IAAI,EAAO,CAAO,CAAC,EAAE,AACjB,CAAA,GAAQ,AAAkB,IAAlB,EAAK,SACf,EAAK,KAAO,EACP,EAAO,SAAS,eAAe,GACtC,EAAU,EAAc,EAAQ,EAAS,EAAQ,EACnD,MAEI,EADE,AAAY,KAAZ,GAAkB,AAAmB,UAAnB,OAAO,EACjB,EAAO,WAAW,KAAO,EACpB,EAAO,YAAc,CAE1C,MAAO,GAAI,AAAS,MAAT,GAAiB,AAAM,YAAN,EAAiB,CAC3C,GAAI,AAAA,EAAa,QAAS,OAAO,EACjC,EAAU,EAAc,EAAQ,EAAS,EAC3C,MAAO,GAAI,AAAM,aAAN,EAMT,OALA,AAAA,EAAmB,KACjB,IAAI,EAAI,IACR,KAAO,AAAa,YAAb,OAAO,GAAkB,EAAI,IACpC,EAAU,EAAiB,EAAQ,EAAG,EAAS,EACjD,GACO,IAAM,OACR,GAAI,MAAM,QAAQ,GAAQ,CAC/B,IAAM,EAAQ,EAAE,CACV,EAAe,GAAW,MAAM,QAAQ,GAC9C,GAAI,AAkCR,SAAS,EAAuB,CAAU,CAAE,CAAK,CAAE,CAAO,CAAE,CAAM,EAChE,IAAI,EAAU,CAAA,EACd,IAAK,IAAI,EAAI,EAAG,EAAM,EAAM,OAAQ,EAAI,EAAK,IAAK,CAChD,IAAI,EAAO,CAAK,CAAC,EAAE,CACf,EAAO,GAAW,CAAO,CAAC,EAAE,CAChC,GAAI,aAAgB,KAClB,EAAW,KAAK,QACX,GAAI,AAAQ,MAAR,GAAgB,AAAS,CAAA,IAAT,GAAiB,AAAS,CAAA,IAAT,QAAuB,GAAI,MAAM,QAAQ,GACnF,EAAU,EAAuB,EAAY,EAAM,IAAS,OACvD,GAAK,AAAiB,YAAjB,OAAO,GACjB,GAAI,EAAQ,CACV,KAAO,AAAgB,YAAhB,OAAO,GAAqB,EAAO,IAC1C,EAAU,EAAuB,EAAY,MAAM,QAAQ,GAAQ,EAAO,CAAC,EAAK,CAAE,MAAM,QAAQ,GAAQ,EAAO,CAAC,EAAK,GAAK,CAC5H,MACE,EAAW,KAAK,GAChB,EAAU,CAAA,MAEP,CACL,IAAM,EAAQ,OAAO,EACjB,CAAA,GAAQ,AAAkB,IAAlB,EAAK,UAAkB,EAAK,OAAS,EAC/C,EAAW,KAAK,GACX,EAAW,KAAK,SAAS,eAAe,GACjD,CACF,CACA,OAAO,CACT,EA3D+B,EAAO,EAAO,EAAS,GAEhD,OADA,AAAA,EAAmB,IAAM,EAAU,EAAiB,EAAQ,EAAO,EAAS,EAAQ,CAAA,IAC7E,IAAM,EAEf,GAAI,AAAA,EAAa,QAAS,CACxB,GAAI,CAAC,EAAM,OAAQ,OAAO,EAC1B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,OAAQ,IAChC,GAAI,CAAK,CAAC,EAAE,CAAC,WAAY,OAAO,EAAU,CAE9C,CACA,GAAI,AAAiB,IAAjB,EAAM,OAER,CAAA,GADA,EAAU,EAAc,EAAQ,EAAS,GACrC,EAAO,OAAO,CAAlB,MACS,EACL,AAAmB,IAAnB,EAAQ,OACV,EAAY,EAAQ,EAAO,GACtB,AAhYb,SAAyB,CAAU,CAAE,CAAC,CAAE,CAAC,EACvC,IAAI,EAAU,EAAE,OACZ,EAAO,EAAE,OACT,EAAO,EACP,EAAS,EACT,EAAS,EACT,EAAQ,CAAC,CAAC,EAAO,EAAE,CAAC,YACpB,EAAM,KACV,KAAO,EAAS,GAAQ,EAAS,GAAM,CACrC,GAAI,CAAC,CAAC,EAAO,GAAK,CAAC,CAAC,EAAO,CAAE,CAC3B,IACA,IACA,QACF,CACA,KAAO,CAAC,CAAC,EAAO,EAAE,GAAK,CAAC,CAAC,EAAO,EAAE,EAChC,IACA,IAEF,GAAI,IAAS,EAAQ,CACnB,IAAM,EAAO,EAAO,EAAU,EAAS,CAAC,CAAC,EAAS,EAAE,CAAC,YAAc,CAAC,CAAC,EAAO,EAAO,CAAG,EACtF,KAAO,EAAS,GAAM,EAAW,aAAa,CAAC,CAAC,IAAS,CAAE,EAC7D,MAAO,GAAI,IAAS,EAClB,KAAO,EAAS,GACT,GAAQ,EAAI,IAAI,CAAC,CAAC,EAAO,GAAG,CAAC,CAAC,EAAO,CAAC,SAC3C,SAEG,GAAI,CAAC,CAAC,EAAO,GAAK,CAAC,CAAC,EAAO,EAAE,EAAI,CAAC,CAAC,EAAO,GAAK,CAAC,CAAC,EAAO,EAAE,CAAE,CACjE,IAAM,EAAO,CAAC,CAAC,EAAE,EAAK,CAAC,YACvB,EAAW,aAAa,CAAC,CAAC,IAAS,CAAE,CAAC,CAAC,IAAS,CAAC,aACjD,EAAW,aAAa,CAAC,CAAC,EAAE,EAAK,CAAE,GACnC,CAAC,CAAC,EAAK,CAAG,CAAC,CAAC,EAAK,AACnB,KAAO,CACL,GAAI,CAAC,EAAK,CACR,EAAM,IAAI,IACV,IAAI,EAAI,EACR,KAAO,EAAI,GAAM,EAAI,IAAI,CAAC,CAAC,EAAE,CAAE,IACjC,CACA,IAAM,EAAQ,EAAI,IAAI,CAAC,CAAC,EAAO,EAC/B,GAAI,AAAS,MAAT,GACF,GAAI,EAAS,GAAS,EAAQ,EAAM,CAClC,IAAI,EAAI,EACJ,EAAW,EACX,EACJ,KACE,AADK,EAAE,EAAI,GAAQ,EAAI,GAClB,AAAsB,MAAtB,CAAA,EAAI,EAAI,IAAI,CAAC,CAAC,EAAE,CAAA,GAAc,IAAM,EAAQ,GACjD,IAEF,GAAI,EAAW,EAAQ,EAAQ,CAC7B,IAAM,EAAO,CAAC,CAAC,EAAO,CACtB,KAAO,EAAS,GAAO,EAAW,aAAa,CAAC,CAAC,IAAS,CAAE,EAC9D,MAAO,EAAW,aAAa,CAAC,CAAC,IAAS,CAAE,CAAC,CAAC,IAAS,CACzD,MAAO,SACF,CAAC,CAAC,IAAS,CAAC,QACrB,CACF,CACF,EAyU6B,EAAQ,EAAS,IAExC,GAAW,EAAc,GACzB,EAAY,EAAQ,IAEtB,EAAU,CACZ,MAAO,GAAI,aAAiB,KAAM,CAChC,GAAI,AAAA,EAAa,SAAW,EAAM,WAAY,OAAO,EAAU,EAAQ,CAAC,EAAM,CAAG,EACjF,GAAI,MAAM,QAAQ,GAAU,CAC1B,GAAI,EAAO,OAAO,EAAU,EAAc,EAAQ,EAAS,EAAQ,GACnE,EAAc,EAAQ,EAAS,KAAM,EACvC,MAAW,AAAW,MAAX,GAAmB,AAAY,KAAZ,GAAmB,EAAO,WAEjD,EAAO,aAAa,EAAO,EAAO,YADvC,EAAO,YAAY,GAErB,EAAU,CACZ,CACA,OAAO,CACT,CA2BA,SAAS,EAAY,CAAM,CAAE,CAAK,CAAE,EAAS,IAAI,EAC/C,IAAK,IAAI,EAAI,EAAG,EAAM,EAAM,OAAQ,EAAI,EAAK,IAAK,EAAO,aAAa,CAAK,CAAC,EAAE,CAAE,EAClF,CACA,SAAS,EAAc,CAAM,CAAE,CAAO,CAAE,CAAM,CAAE,CAAW,EACzD,GAAI,AAAW,KAAA,IAAX,EAAsB,OAAO,EAAO,YAAc,GACtD,IAAM,EAAO,GAAe,SAAS,eAAe,IACpD,GAAI,EAAQ,OAAQ,CAClB,IAAI,EAAW,CAAA,EACf,IAAK,IAAI,EAAI,EAAQ,OAAS,EAAG,GAAK,EAAG,IAAK,CAC5C,IAAM,EAAK,CAAO,CAAC,EAAE,CACrB,GAAI,IAAS,EAAI,CACf,IAAM,EAAW,EAAG,aAAe,CAC/B,CAAC,GAAa,EAAqF,GAAY,EAAG,SAAjG,EAAW,EAAO,aAAa,EAAM,GAAM,EAAO,aAAa,EAAM,EAC5F,MAAO,EAAW,CAAA,CACpB,CACF,MAAO,EAAO,aAAa,EAAM,GACjC,MAAO,CAAC,EAAK,AACf,CM3de,SAAA,EAAS,CAAW,CAAE,CAAO,CAAE,CAAS,EACrD,EAAY,UAAY,EAAQ,UAAY,EAC5C,EAAU,YAAc,CAC1B,CAEO,SAAS,GAAO,CAAM,CAAE,CAAU,EACvC,IAAI,EAAY,OAAO,OAAO,EAAO,WACrC,IAAK,IAAI,KAAO,EAAY,CAAS,CAAC,EAAI,CAAG,CAAU,CAAC,EAAI,CAC5D,OAAO,CACT,CDPO,SAAS,KAAS,CAGlB,IAEH,GAAM,sBACN,GAAM,oDACN,GAAM,qDACN,GAAQ,qBACR,GAAe,AAAI,OAAO,CAAC,OAAO,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,IAAI,CAAC,EAC3D,GAAe,AAAI,OAAO,CAAC,OAAO,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,IAAI,CAAC,EAC3D,GAAgB,AAAI,OAAO,CAAC,QAAQ,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,IAAI,CAAC,EACpE,GAAgB,AAAI,OAAO,CAAC,QAAQ,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,IAAI,CAAC,EACpE,GAAe,AAAI,OAAO,CAAC,OAAO,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,IAAI,CAAC,EAC3D,GAAgB,AAAI,OAAO,CAAC,QAAQ,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,IAAI,CAAC,EAEpE,GAAQ,CACV,UAAW,SACX,aAAc,SACd,KAAM,MACN,WAAY,QACZ,MAAO,SACP,MAAO,SACP,OAAQ,SACR,MAAO,EACP,eAAgB,SAChB,KAAM,IACN,WAAY,QACZ,MAAO,SACP,UAAW,SACX,UAAW,QACX,WAAY,QACZ,UAAW,SACX,MAAO,SACP,eAAgB,QAChB,SAAU,SACV,QAAS,SACT,KAAM,MACN,SAAU,IACV,SAAU,MACV,cAAe,SACf,SAAU,SACV,UAAW,MACX,SAAU,SACV,UAAW,SACX,YAAa,QACb,eAAgB,QAChB,WAAY,SACZ,WAAY,SACZ,QAAS,QACT,WAAY,SACZ,aAAc,QACd,cAAe,QACf,cAAe,QACf,cAAe,QACf,cAAe,MACf,WAAY,QACZ,SAAU,SACV,YAAa,MACb,QAAS,QACT,QAAS,QACT,WAAY,QACZ,UAAW,SACX,YAAa,SACb,YAAa,QACb,QAAS,SACT,UAAW,SACX,WAAY,SACZ,KAAM,SACN,UAAW,SACX,KAAM,QACN,MAAO,MACP,YAAa,SACb,KAAM,QACN,SAAU,SACV,QAAS,SACT,UAAW,SACX,OAAQ,QACR,MAAO,SACP,MAAO,SACP,SAAU,SACV,cAAe,SACf,UAAW,QACX,aAAc,SACd,UAAW,SACX,WAAY,SACZ,UAAW,SACX,qBAAsB,SACtB,UAAW,SACX,WAAY,QACZ,UAAW,SACX,UAAW,SACX,YAAa,SACb,cAAe,QACf,aAAc,QACd,eAAgB,QAChB,eAAgB,QAChB,eAAgB,SAChB,YAAa,SACb,KAAM,MACN,UAAW,QACX,MAAO,SACP,QAAS,SACT,OAAQ,QACR,iBAAkB,QAClB,WAAY,IACZ,aAAc,SACd,aAAc,QACd,eAAgB,QAChB,gBAAiB,QACjB,kBAAmB,MACnB,gBAAiB,QACjB,gBAAiB,SACjB,aAAc,QACd,UAAW,SACX,UAAW,SACX,SAAU,SACV,YAAa,SACb,KAAM,IACN,QAAS,SACT,MAAO,QACP,UAAW,QACX,OAAQ,SACR,UAAW,SACX,OAAQ,SACR,cAAe,SACf,UAAW,SACX,cAAe,SACf,cAAe,SACf,WAAY,SACZ,UAAW,SACX,KAAM,SACN,KAAM,SACN,KAAM,SACN,WAAY,SACZ,OAAQ,QACR,cAAe,QACf,IAAK,SACL,UAAW,SACX,UAAW,QACX,YAAa,QACb,OAAQ,SACR,WAAY,SACZ,SAAU,QACV,SAAU,SACV,OAAQ,SACR,OAAQ,SACR,QAAS,QACT,UAAW,QACX,UAAW,QACX,UAAW,QACX,KAAM,SACN,YAAa,MACb,UAAW,QACX,IAAK,SACL,KAAM,MACN,QAAS,SACT,OAAQ,SACR,UAAW,QACX,OAAQ,SACR,MAAO,SACP,MAAO,SACP,WAAY,SACZ,OAAQ,SACR,YAAa,QACf,EAiBA,SAAS,KACP,OAAO,IAAI,CAAC,MAAM,WACpB,CAUA,SAAS,KACP,OAAO,IAAI,CAAC,MAAM,WACpB,CAEe,SAAA,GAAe,CAAM,EAClC,IAAI,EAAG,EAEP,OADA,EAAU,AAAA,CAAA,EAAS,EAAA,EAAI,OAAO,cACvB,AAAC,CAAA,EAAI,GAAM,KAAK,EAAA,EAAY,CAAA,EAAI,CAAC,CAAC,EAAE,CAAC,OAAQ,EAAI,SAAS,CAAC,CAAC,EAAE,CAAE,IAAK,AAAM,IAAN,EAAU,GAAK,GACrF,AAAM,IAAN,EAAU,IAAI,GAAK,GAAK,EAAI,GAAQ,GAAK,EAAI,IAAO,GAAM,EAAI,GAAQ,AAAI,IAAJ,EAAa,AAAA,CAAA,AAAI,GAAJ,CAAI,GAAQ,EAAM,AAAI,GAAJ,EAAU,GAC/G,AAAM,IAAN,EAAU,GAAK,GAAK,GAAK,IAAM,GAAK,GAAK,IAAM,GAAK,EAAI,IAAO,AAAA,CAAA,AAAI,IAAJ,CAAI,EAAQ,KAC3E,AAAM,IAAN,EAAU,GAAM,GAAK,GAAK,GAAQ,GAAK,EAAI,IAAQ,GAAK,EAAI,GAAQ,GAAK,EAAI,IAAQ,GAAK,EAAI,GAAQ,AAAI,IAAJ,EAAW,AAAG,CAAA,AAAA,CAAA,AAAI,GAAJ,CAAI,GAAQ,EAAM,AAAI,GAAJ,CAAI,EAAQ,KAClJ,IAAA,EACA,AAAC,CAAA,EAAI,GAAa,KAAK,EAAA,EAAW,IAAI,GAAI,CAAC,CAAC,EAAE,CAAE,CAAC,CAAC,EAAE,CAAE,CAAC,CAAC,EAAE,CAAE,GAC3D,AAAA,CAAA,EAAI,GAAa,KAAK,EAAA,EAAW,IAAI,GAAI,AAAO,IAAP,CAAC,CAAC,EAAE,CAAS,IAAK,AAAO,IAAP,CAAC,CAAC,EAAE,CAAS,IAAK,AAAO,IAAP,CAAC,CAAC,EAAE,CAAS,IAAK,GAC/F,AAAA,CAAA,EAAI,GAAc,KAAK,EAAA,EAAW,GAAK,CAAC,CAAC,EAAE,CAAE,CAAC,CAAC,EAAE,CAAE,CAAC,CAAC,EAAE,CAAE,CAAC,CAAC,EAAE,EAC7D,AAAA,CAAA,EAAI,GAAc,KAAK,EAAA,EAAW,GAAK,AAAO,IAAP,CAAC,CAAC,EAAE,CAAS,IAAK,AAAO,IAAP,CAAC,CAAC,EAAE,CAAS,IAAK,AAAO,IAAP,CAAC,CAAC,EAAE,CAAS,IAAK,CAAC,CAAC,EAAE,EACjG,AAAA,CAAA,EAAI,GAAa,KAAK,EAAA,EAAW,GAAK,CAAC,CAAC,EAAE,CAAE,CAAC,CAAC,EAAE,CAAG,IAAK,CAAC,CAAC,EAAE,CAAG,IAAK,GACpE,AAAA,CAAA,EAAI,GAAc,KAAK,EAAA,EAAW,GAAK,CAAC,CAAC,EAAE,CAAE,CAAC,CAAC,EAAE,CAAG,IAAK,CAAC,CAAC,EAAE,CAAG,IAAK,CAAC,CAAC,EAAE,EAC1E,GAAM,eAAe,GAAU,GAAK,EAAK,CAAC,EAAO,EACjD,AAAW,gBAAX,EAA2B,IAAI,GAAI,IAAK,IAAK,IAAK,GAClD,IACR,CAEA,SAAS,GAAK,CAAC,EACb,OAAO,IAAI,GAAI,GAAK,GAAK,IAAM,GAAK,EAAI,IAAM,AAAI,IAAJ,EAAU,EAC1D,CAEA,SAAS,GAAK,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,EAEtB,OADI,GAAK,GAAG,CAAA,EAAI,EAAI,EAAI,GAAxB,EACO,IAAI,GAAI,EAAG,EAAG,EAAG,EAC1B,CAEO,SAAS,GAAW,CAAC,QAE1B,CADM,aAAa,IAAQ,CAAA,EAAI,GAAM,EAArC,EACK,IACL,EAAI,EAAE,MACC,IAAI,GAAI,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,UAFjB,IAAI,EAGrB,CAEO,SAAS,GAAI,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAO,EAClC,OAAO,AAAqB,GAArB,UAAU,OAAe,GAAW,GAAK,IAAI,GAAI,EAAG,EAAG,EAAG,AAAW,MAAX,EAAkB,EAAI,EACzF,CAEO,SAAS,GAAI,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAO,EAClC,IAAI,CAAC,EAAI,CAAC,EACV,IAAI,CAAC,EAAI,CAAC,EACV,IAAI,CAAC,EAAI,CAAC,EACV,IAAI,CAAC,QAAU,CAAC,CAClB,CA8BA,SAAS,KACP,MAAO,CAAC,CAAC,EAAE,GAAI,IAAI,CAAC,GAAG,EAAE,GAAI,IAAI,CAAC,GAAG,EAAE,GAAI,IAAI,CAAC,GAAG,CAAC,AACtD,CAMA,SAAS,KACP,IAAM,EAAI,GAAO,IAAI,CAAC,SACtB,MAAO,CAAC,EAAE,AAAM,IAAN,EAAU,OAAS,QAAQ,EAAE,GAAO,IAAI,CAAC,GAAG,EAAE,EAAE,GAAO,IAAI,CAAC,GAAG,EAAE,EAAE,GAAO,IAAI,CAAC,GAAG,EAAE,AAAM,IAAN,EAAU,IAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,AAC3H,CAEA,SAAS,GAAO,CAAO,EACrB,OAAO,MAAM,GAAW,EAAI,KAAK,IAAI,EAAG,KAAK,IAAI,EAAG,GACtD,CAEA,SAAS,GAAO,CAAK,EACnB,OAAO,KAAK,IAAI,EAAG,KAAK,IAAI,IAAK,KAAK,MAAM,IAAU,GACxD,CAEA,SAAS,GAAI,CAAK,EAEhB,MAAQ,AAAA,CAAA,AADR,CAAA,EAAQ,GAAO,EAAf,EACgB,GAAK,IAAM,EAAA,EAAM,EAAM,SAAS,GAClD,CAEA,SAAS,GAAK,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,EAItB,OAHI,GAAK,EAAG,EAAI,EAAI,EAAI,IACf,GAAK,GAAK,GAAK,EAAG,EAAI,EAAI,IAC1B,GAAK,GAAG,CAAA,EAAI,GAAhB,EACE,IAAI,GAAI,EAAG,EAAG,EAAG,EAC1B,CAEO,SAAS,GAAW,CAAC,EAC1B,GAAI,aAAa,GAAK,OAAO,IAAI,GAAI,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,SAEtD,GADM,aAAa,IAAQ,CAAA,EAAI,GAAM,EAArC,EACI,CAAC,EAAG,OAAO,IAAI,GACnB,GAAI,aAAa,GAAK,OAAO,EAE7B,IAAI,EAAI,AADR,CAAA,EAAI,EAAE,KAAN,EACU,EAAI,IACV,EAAI,EAAE,EAAI,IACV,EAAI,EAAE,EAAI,IACV,EAAM,KAAK,IAAI,EAAG,EAAG,GACrB,EAAM,KAAK,IAAI,EAAG,EAAG,GACrB,EAAI,IACJ,EAAI,EAAM,EACV,EAAI,AAAC,CAAA,EAAM,CAAA,EAAO,EAUtB,OATI,GACa,EAAX,IAAM,EAAS,AAAC,CAAA,EAAI,CAAA,EAAK,EAAI,AAAC,CAAA,EAAI,CAAA,EAAK,EAClC,IAAM,EAAU,AAAA,CAAA,EAAI,CAAA,EAAK,EAAI,EAC5B,AAAA,CAAA,EAAI,CAAA,EAAK,EAAI,EACvB,GAAK,EAAI,GAAM,EAAM,EAAM,EAAI,EAAM,EACrC,GAAK,IAEL,EAAI,EAAI,GAAK,EAAI,EAAI,EAAI,EAEpB,IAAI,GAAI,EAAG,EAAG,EAAG,EAAE,QAC5B,CAMA,SAAS,GAAI,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAO,EAC3B,IAAI,CAAC,EAAI,CAAC,EACV,IAAI,CAAC,EAAI,CAAC,EACV,IAAI,CAAC,EAAI,CAAC,EACV,IAAI,CAAC,QAAU,CAAC,CAClB,CAsCA,SAAS,GAAO,CAAK,EAEnB,MAAO,AADP,CAAA,EAAQ,AAAC,CAAA,GAAS,CAAA,EAAK,GAAvB,EACe,EAAI,EAAQ,IAAM,CACnC,CAEA,SAAS,GAAO,CAAK,EACnB,OAAO,KAAK,IAAI,EAAG,KAAK,IAAI,EAAG,GAAS,GAC1C,CAGA,SAAS,GAAQ,CAAC,CAAE,CAAE,CAAE,CAAE,EACxB,MAAQ,AAAA,CAAA,EAAI,GAAK,EAAK,AAAC,CAAA,EAAK,CAAA,EAAM,EAAI,GAChC,EAAI,IAAM,EACV,EAAI,IAAM,EAAM,AAAA,CAAA,EAAK,CAAA,EAAO,CAAA,IAAM,CAAA,EAAK,GACvC,CAAA,EAAM,GACd,CG3YO,SAAS,GAAM,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,EACtC,IAAI,EAAK,EAAK,EAAI,EAAK,EAAK,EAC5B,MAAQ,AAAC,CAAA,AAAA,CAAA,EAAI,EAAI,EAAK,EAAI,EAAK,CAAA,EAAM,EAC9B,AAAA,CAAA,EAAI,EAAI,EAAK,EAAI,CAAA,EAAM,EACvB,AAAA,CAAA,EAAI,EAAI,EAAK,EAAI,EAAK,EAAI,CAAA,EAAM,EACjC,EAAK,CAAA,EAAM,CACnB,CHmKA,AAAA,EAAO,GAAO,GAAO,CACnB,KAAK,CAAQ,EACX,OAAO,OAAO,OAAO,IAAI,IAAI,CAAC,YAAa,IAAI,CAAE,EACnD,EACA,cACE,OAAO,IAAI,CAAC,MAAM,aACpB,EACA,IAAK,GACL,UAAW,GACX,WAUF,WACE,OAAO,IAAI,CAAC,MAAM,YACpB,EAXE,UAaF,WACE,OAAO,GAAW,IAAI,EAAE,WAC1B,EAdE,UAAW,GACX,SAAU,EACZ,GAgEA,AAAA,EAAO,GAAK,GAAK,AAAA,GAAO,GAAO,CAC7B,SAAS,CAAC,EAER,OADA,EAAI,AAAK,MAAL,EAnPc,mBAmPS,KAAK,IAnPd,mBAmP4B,GACvC,IAAI,GAAI,IAAI,CAAC,EAAI,EAAG,IAAI,CAAC,EAAI,EAAG,IAAI,CAAC,EAAI,EAAG,IAAI,CAAC,QAC1D,EACA,OAAO,CAAC,EAEN,OADA,EAAI,AAAK,MAAL,EAxPY,GAwPS,KAAK,IAxPd,GAwP0B,GACnC,IAAI,GAAI,IAAI,CAAC,EAAI,EAAG,IAAI,CAAC,EAAI,EAAG,IAAI,CAAC,EAAI,EAAG,IAAI,CAAC,QAC1D,EACA,MACE,OAAO,IAAI,AACb,EACA,QACE,OAAO,IAAI,GAAI,GAAO,IAAI,CAAC,GAAI,GAAO,IAAI,CAAC,GAAI,GAAO,IAAI,CAAC,GAAI,GAAO,IAAI,CAAC,SAC7E,EACA,cACE,OAAQ,KAAQ,IAAI,CAAC,GAAK,IAAI,CAAC,EAAI,OAC3B,KAAQ,IAAI,CAAC,GAAK,IAAI,CAAC,EAAI,OAC3B,KAAQ,IAAI,CAAC,GAAK,IAAI,CAAC,EAAI,OAC3B,GAAK,IAAI,CAAC,SAAW,IAAI,CAAC,SAAW,CAC/C,EACA,IAAK,GACL,UAAW,GACX,WASF,WACE,MAAO,CAAC,CAAC,EAAE,GAAI,IAAI,CAAC,GAAG,EAAE,GAAI,IAAI,CAAC,GAAG,EAAE,GAAI,IAAI,CAAC,GAAG,EAAE,GAAI,AAAC,CAAA,MAAM,IAAI,CAAC,SAAW,EAAI,IAAI,CAAC,OAAA,EAAW,KAAK,CAAC,AAC5G,EAVE,UAAW,GACX,SAAU,EACZ,IAwEA,AAAA,EAAO,GAXA,SAAa,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAO,EAClC,OAAO,AAAqB,GAArB,UAAU,OAAe,GAAW,GAAK,IAAI,GAAI,EAAG,EAAG,EAAG,AAAW,MAAX,EAAkB,EAAI,EACzF,EASiB,AAAA,GAAO,GAAO,CAC7B,SAAS,CAAC,EAER,OADA,EAAI,AAAK,MAAL,EArVc,mBAqVS,KAAK,IArVd,mBAqV4B,GACvC,IAAI,GAAI,IAAI,CAAC,EAAG,IAAI,CAAC,EAAG,IAAI,CAAC,EAAI,EAAG,IAAI,CAAC,QAClD,EACA,OAAO,CAAC,EAEN,OADA,EAAI,AAAK,MAAL,EA1VY,GA0VS,KAAK,IA1Vd,GA0V0B,GACnC,IAAI,GAAI,IAAI,CAAC,EAAG,IAAI,CAAC,EAAG,IAAI,CAAC,EAAI,EAAG,IAAI,CAAC,QAClD,EACA,MACE,IAAI,EAAI,IAAI,CAAC,EAAI,IAAO,AAAA,CAAA,IAAI,CAAC,EAAI,CAAA,EAAK,IAClC,EAAI,MAAM,IAAM,MAAM,IAAI,CAAC,GAAK,EAAI,IAAI,CAAC,EACzC,EAAI,IAAI,CAAC,EACT,EAAK,EAAI,AAAC,CAAA,EAAI,GAAM,EAAI,EAAI,CAAA,EAAK,EACjC,EAAK,EAAI,EAAI,EACjB,OAAO,IAAI,GACT,GAAQ,GAAK,IAAM,EAAI,IAAM,EAAI,IAAK,EAAI,GAC1C,GAAQ,EAAG,EAAI,GACf,GAAQ,EAAI,IAAM,EAAI,IAAM,EAAI,IAAK,EAAI,GACzC,IAAI,CAAC,QAET,EACA,QACE,OAAO,IAAI,GAAI,GAAO,IAAI,CAAC,GAAI,GAAO,IAAI,CAAC,GAAI,GAAO,IAAI,CAAC,GAAI,GAAO,IAAI,CAAC,SAC7E,EACA,cACE,MAAQ,AAAA,CAAA,GAAK,IAAI,CAAC,GAAK,IAAI,CAAC,GAAK,GAAK,MAAM,IAAI,CAAC,EAAA,GACzC,GAAK,IAAI,CAAC,GAAK,IAAI,CAAC,GAAK,GACzB,GAAK,IAAI,CAAC,SAAW,IAAI,CAAC,SAAW,CAC/C,EACA,YACE,IAAM,EAAI,GAAO,IAAI,CAAC,SACtB,MAAO,CAAC,EAAE,AAAM,IAAN,EAAU,OAAS,QAAQ,EAAE,GAAO,IAAI,CAAC,GAAG,EAAE,EAAE,AAAiB,IAAjB,GAAO,IAAI,CAAC,GAAS,GAAG,EAAE,AAAiB,IAAjB,GAAO,IAAI,CAAC,GAAS,CAAC,EAAE,AAAM,IAAN,EAAU,IAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,AACzI,CACF,IM1XA,IAAA,GAAe,AAAA,GAAK,IAAM,EDE1B,SAAS,GAAO,CAAC,CAAE,CAAC,EAClB,OAAO,SAAS,CAAC,EACf,OAAO,EAAI,EAAI,CACjB,CACF,CAmBe,SAAA,GAAiB,CAAC,CAAE,CAAC,EAClC,IAAI,EAAI,EAAI,EACZ,OAAO,EAAI,GAAO,EAAG,GAAK,AAAA,GAAS,MAAM,GAAK,EAAI,EACpD,CHvBA,IAAA,GAAe,SAAU,EAAS,CAAC,EACjC,IGaoB,EHbhB,EGcG,AAAa,GAAZ,CAAA,EAAI,EADQ,EHbF,EGcL,EAAW,GAAU,SAAS,CAAC,CAAE,CAAC,MAZ5B,EAAG,EAAG,EAavB,OAAO,EAAI,GAbM,EAaU,EAbP,EAaU,EAZzB,EAAI,KAAK,IAAI,EADK,EAaU,GAZR,EAAI,KAAK,IAAI,EAAG,GAAK,EAAG,EAAI,EAAI,EAAG,SAAS,CAAC,EACtE,OAAO,KAAK,IAAI,EAAI,EAAI,EAAG,EAC7B,GAUwC,AAAA,GAAS,MAAM,GAAK,EAAI,EAChE,EHdA,SAAS,EAAI,CAAK,CAAE,CAAG,EACrB,IAAI,EAAI,EAAO,AAAA,CAAA,EAAQ,AAAA,GAAS,EAAA,EAAQ,EAAI,AAAA,CAAA,EAAM,AAAA,GAAS,EAAA,EAAM,GAC7D,EAAI,EAAM,EAAM,EAAG,EAAI,GACvB,EAAI,EAAM,EAAM,EAAG,EAAI,GACvB,EAAU,AAAA,GAAQ,EAAM,QAAS,EAAI,SACzC,OAAO,SAAS,CAAC,EAKf,OAJA,EAAM,EAAI,EAAE,GACZ,EAAM,EAAI,EAAE,GACZ,EAAM,EAAI,EAAE,GACZ,EAAM,QAAU,EAAQ,GACjB,EAAQ,EACjB,CACF,CAIA,OAFA,EAAI,MAAQ,EAEL,CACT,EAAG,GAEH,SAAS,GAAU,CAAM,EACvB,OAAO,SAAS,CAAM,EACpB,IAII,EAAG,EAJH,EAAI,EAAO,OACX,EAAI,AAAI,MAAM,GACd,EAAI,AAAI,MAAM,GACd,EAAI,AAAI,MAAM,GAElB,IAAK,EAAI,EAAG,EAAI,EAAG,EAAE,EACnB,EAAQ,AAAA,GAAS,CAAM,CAAC,EAAE,EAC1B,CAAC,CAAC,EAAE,CAAG,EAAM,GAAK,EAClB,CAAC,CAAC,EAAE,CAAG,EAAM,GAAK,EAClB,CAAC,CAAC,EAAE,CAAG,EAAM,GAAK,EAMpB,OAJA,EAAI,EAAO,GACX,EAAI,EAAO,GACX,EAAI,EAAO,GACX,EAAM,QAAU,EACT,SAAS,CAAC,EAIf,OAHA,EAAM,EAAI,EAAE,GACZ,EAAM,EAAI,EAAE,GACZ,EAAM,EAAI,EAAE,GACL,EAAQ,EACjB,CACF,CACF,CMnDe,SAAA,GAAS,CAAC,CAAE,CAAC,EACrB,GAAG,CAAA,EAAI,EAAE,AAAF,EACZ,IAEI,EAFA,EAAI,EAAI,KAAK,IAAI,EAAE,OAAQ,EAAE,QAAU,EACvC,EAAI,EAAE,QAEV,OAAO,SAAS,CAAC,EACf,IAAK,EAAI,EAAG,EAAI,EAAG,EAAE,EAAG,CAAC,CAAC,EAAE,CAAG,CAAC,CAAC,EAAE,CAAI,CAAA,EAAI,CAAA,EAAK,CAAC,CAAC,EAAE,CAAG,EACvD,OAAO,CACT,CACF,CDFO,SAAS,GAAa,CAAC,CAAE,CAAC,EAC/B,IAII,EAJA,EAAK,EAAI,EAAE,OAAS,EACpB,EAAK,EAAI,KAAK,IAAI,EAAI,EAAE,QAAU,EAClC,EAAI,AAAI,MAAM,GACd,EAAI,AAAI,MAAM,GAGlB,IAAK,EAAI,EAAG,EAAI,EAAI,EAAE,EAAG,CAAC,CAAC,EAAE,CAAG,AAAA,GAAM,CAAC,CAAC,EAAE,CAAE,CAAC,CAAC,EAAE,EAChD,KAAO,EAAI,EAAI,EAAE,EAAG,CAAC,CAAC,EAAE,CAAG,CAAC,CAAC,EAAE,CAE/B,OAAO,SAAS,CAAC,EACf,IAAK,EAAI,EAAG,EAAI,EAAI,EAAE,EAAG,CAAC,CAAC,EAAE,CAAG,CAAC,CAAC,EAAE,CAAC,GACrC,OAAO,CACT,CACF,CErBe,SAAA,GAAS,CAAC,CAAE,CAAC,EAC1B,IAAI,EAAI,IAAI,KACZ,OAAO,EAAI,CAAC,EAAG,EAAI,CAAC,EAAG,SAAS,CAAC,EAC/B,OAAO,EAAE,QAAQ,EAAK,CAAA,EAAI,CAAA,EAAK,EAAI,GAAI,CACzC,CACF,CCLe,SAAA,GAAS,CAAC,CAAE,CAAC,EAC1B,OAAO,EAAI,CAAC,EAAG,EAAI,CAAC,EAAG,SAAS,CAAC,EAC/B,OAAO,EAAK,CAAA,EAAI,CAAA,EAAK,EAAI,CAC3B,CACF,CCFe,SAAA,GAAS,CAAC,CAAE,CAAC,EAC1B,IAEI,EAFA,EAAI,CAAC,EACL,EAAI,CAAC,EAMT,IAAK,IAHD,CAAA,AAAM,OAAN,GAAc,AAAa,UAAb,OAAO,CAAM,GAAU,CAAA,EAAI,CAAC,CAAA,EAC1C,CAAA,AAAM,OAAN,GAAc,AAAa,UAAb,OAAO,CAAM,GAAU,CAAA,EAAI,CAAC,CAAA,EAEpC,EACJ,KAAK,EACP,CAAC,CAAC,EAAE,CAAG,AAAA,GAAM,CAAC,CAAC,EAAE,CAAE,CAAC,CAAC,EAAE,EAEvB,CAAC,CAAC,EAAE,CAAG,CAAC,CAAC,EAAE,CAIf,OAAO,SAAS,CAAC,EACf,IAAK,KAAK,EAAG,CAAC,CAAC,EAAE,CAAG,CAAC,CAAC,EAAE,CAAC,GACzB,OAAO,CACT,CACF,CT+BsB,GC7CP,SAAS,CAAM,EAC5B,IAAI,EAAI,EAAO,OAAS,EACxB,OAAO,SAAS,CAAC,EACf,IAAI,EAAI,GAAK,EAAK,EAAI,EAAK,GAAK,EAAK,CAAA,EAAI,EAAG,EAAI,CAAA,EAAK,KAAK,MAAM,EAAI,GAChE,EAAK,CAAM,CAAC,EAAE,CACd,EAAK,CAAM,CAAC,EAAI,EAAE,CAClB,EAAK,EAAI,EAAI,CAAM,CAAC,EAAI,EAAE,CAAG,EAAI,EAAK,EACtC,EAAK,EAAI,EAAI,EAAI,CAAM,CAAC,EAAI,EAAE,CAAG,EAAI,EAAK,EAC9C,OAAO,GAAO,AAAA,CAAA,EAAI,EAAI,CAAA,EAAK,EAAG,EAAI,EAAI,EAAI,EAC5C,CACF,GDoC4B,GEpDb,SAAS,CAAM,EAC5B,IAAI,EAAI,EAAO,OACf,OAAO,SAAS,CAAC,EACf,IAAI,EAAI,KAAK,MAAO,AAAA,CAAA,AAAC,CAAA,GAAK,CAAA,EAAK,EAAI,EAAE,EAAI,CAAA,EAAK,GAC1C,EAAK,CAAM,CAAC,AAAC,CAAA,EAAI,EAAI,CAAA,EAAK,EAAE,CAC5B,EAAK,CAAM,CAAC,EAAI,EAAE,CAClB,EAAK,CAAM,CAAE,AAAA,CAAA,EAAI,CAAA,EAAK,EAAE,CACxB,EAAK,CAAM,CAAE,AAAA,CAAA,EAAI,CAAA,EAAK,EAAE,CAC5B,OAAO,AAAA,GAAO,AAAA,CAAA,EAAI,EAAI,CAAA,EAAK,EAAG,EAAI,EAAI,EAAI,EAC5C,CACF,GQVA,IAAI,GAAM,8CACN,GAAM,AAAI,OAAO,GAAI,OAAQ,KAclB,SAAA,GAAS,CAAC,CAAE,CAAC,EAC1B,IAPW,EANC,EAcR,EACA,EACA,EAHA,EAAK,GAAI,UAAY,GAAI,UAAY,EAIrC,EAAI,GACJ,EAAI,EAAE,CACN,EAAI,EAAE,CAMV,IAHA,GAAQ,GAAI,GAAQ,GAGb,AAAC,CAAA,EAAK,GAAI,KAAK,EAAA,GACd,CAAA,EAAK,GAAI,KAAK,EAAA,GACf,CAAA,EAAK,EAAG,KAAA,EAAS,IACpB,EAAK,EAAE,MAAM,EAAI,GACb,CAAC,CAAC,EAAE,CAAE,CAAC,CAAC,EAAE,EAAI,EACb,CAAC,CAAC,EAAE,EAAE,CAAG,GAEX,AAAA,CAAA,EAAK,CAAE,CAAC,EAAC,AAAD,IAAS,CAAA,EAAK,CAAE,CAAC,EAAE,AAAF,EACxB,CAAC,CAAC,EAAE,CAAE,CAAC,CAAC,EAAE,EAAI,EACb,CAAC,CAAC,EAAE,EAAE,CAAG,GAEd,CAAC,CAAC,EAAE,EAAE,CAAG,KACT,EAAE,KAAK,CAAC,EAAG,EAAG,EAAG,AAAA,GAAO,EAAI,EAAG,IAEjC,EAAK,GAAI,UAYX,OARI,EAAK,EAAE,SACT,EAAK,EAAE,MAAM,GACT,CAAC,CAAC,EAAE,CAAE,CAAC,CAAC,EAAE,EAAI,EACb,CAAC,CAAC,EAAE,EAAE,CAAG,GAKT,EAAE,OAAS,EAAK,CAAC,CAAC,EAAE,EA7ChB,EA8CD,CAAC,CAAC,EAAE,CAAC,EA7CR,SAAS,CAAC,EACf,OAAO,EAAE,GAAK,EAChB,IATY,EAqDD,EApDJ,WACL,OAAO,CACT,GAmDO,CAAA,EAAI,EAAE,OAAQ,SAAS,CAAC,EACvB,IAAK,IAAW,EAAP,EAAI,EAAM,EAAI,EAAG,EAAE,EAAG,CAAC,CAAE,AAAA,CAAA,EAAI,CAAC,CAAC,EAAC,AAAD,EAAI,EAAE,CAAG,EAAE,EAAE,GACrD,OAAO,EAAE,KAAK,GAChB,CAAA,CACR,CbrDe,SAAA,GAAS,CAAC,CAAE,CAAC,EAC1B,ISA4B,ETAV,EAAd,EAAI,OAAO,EACf,OAAO,AAAK,MAAL,GAAa,AAAM,YAAN,EAAkB,AAAA,GAAS,GACxC,AAAA,CAAA,AAAM,WAAN,EAAiB,GAClB,AAAM,WAAN,EAAkB,AAAC,CAAA,EAAI,AAAA,GAAM,EAAA,EAAO,CAAA,EAAI,EAAG,EAAA,EAAO,GAClD,aAAa,GAAQ,GACrB,aAAa,KAAO,GACpB,CSNsB,ETMR,ESLb,CAAA,YAAY,OAAO,IAAQ,aAAa,UTMzC,MAAM,QAAQ,GAAK,GACnB,AAAqB,YAArB,OAAO,EAAE,SAA0B,AAAsB,YAAtB,OAAO,EAAE,UAA2B,MAAM,GAAK,GAClF,GAHmB,EAGd,EAAG,EAAG,EACnB,CcrBe,SAAA,GAAS,CAAC,CAAE,CAAC,EAC1B,OAAO,EAAI,CAAC,EAAG,EAAI,CAAC,EAAG,SAAS,CAAC,EAC/B,OAAO,KAAK,MAAM,EAAK,CAAA,EAAI,CAAA,EAAK,EAAI,EACtC,CACF,CGJe,SAAA,GAAmB,CAAC,CAAE,CAAC,EACpC,OAAO,AAAK,MAAL,GAAa,AAAK,MAAL,EAAY,IAAM,EAAI,EAAI,GAAK,EAAI,EAAI,EAAI,GAAK,EAAI,EAAI,GAC9E,CEFe,SAAA,GAAoB,CAAC,CAAE,CAAC,EACrC,OAAO,AAAK,MAAL,GAAa,AAAK,MAAL,EAAY,IAC5B,EAAI,EAAI,GACR,EAAI,EAAI,EACR,GAAK,EAAI,EACT,GACN,CDHe,SAAA,GAAkB,CAAC,EAChC,IAAI,EAAU,EAAU,EAiBxB,SAAS,EAAK,CAAC,CAAE,CAAC,CAAE,EAAK,CAAC,CAAE,EAAK,EAAE,MAAM,EACvC,GAAI,EAAK,EAAI,CACX,GAAI,AAAmB,IAAnB,EAAS,EAAG,GAAU,OAAO,EACjC,EAAG,CACD,IAAM,EAAO,EAAK,IAAQ,CACtB,AAAsB,CAAA,EAAtB,EAAS,CAAC,CAAC,EAAI,CAAE,GAAQ,EAAK,EAAM,EACnC,EAAK,CACZ,OAAS,EAAK,EAAI,AACpB,CACA,OAAO,CACT,QApBI,AAAa,IAAb,EAAE,QACJ,EAAW,GACX,EAAW,CAAC,EAAG,IAAM,AAAA,GAAU,EAAE,GAAI,GACrC,EAAQ,CAAC,EAAG,IAAM,EAAE,GAAK,IAEzB,EAAW,IAAM,IAAa,IAAM,GAAa,EAAI,GACrD,EAAW,EACX,EAAQ,GAgCH,CAAC,KAAA,EAAM,OALd,SAAgB,CAAC,CAAE,CAAC,CAAE,EAAK,CAAC,CAAE,EAAK,EAAE,MAAM,EACzC,IAAM,EAAI,EAAK,EAAG,EAAG,EAAI,EAAK,GAC9B,OAAO,EAAI,GAAM,EAAM,CAAC,CAAC,EAAI,EAAE,CAAE,GAAK,CAAC,EAAM,CAAC,CAAC,EAAE,CAAE,GAAK,EAAI,EAAI,CAClE,EAEsB,MAjBtB,SAAe,CAAC,CAAE,CAAC,CAAE,EAAK,CAAC,CAAE,EAAK,EAAE,MAAM,EACxC,GAAI,EAAK,EAAI,CACX,GAAI,AAAmB,IAAnB,EAAS,EAAG,GAAU,OAAO,EACjC,EAAG,CACD,IAAM,EAAO,EAAK,IAAQ,CACtB,AAAuB,CAAA,GAAvB,EAAS,CAAC,CAAC,EAAI,CAAE,GAAS,EAAK,EAAM,EACpC,EAAK,CACZ,OAAS,EAAK,EAAI,AACpB,CACA,OAAO,CACT,CAO2B,CAC7B,CAEA,SAAS,KACP,OAAO,CACT,CFnDA,MAAM,GAAkB,AAAA,GAAS,IACpB,GAAc,GAAgB,MML5B,SAAA,GAAgB,CAAC,EAC9B,MAAO,CAAC,CACV,CNI0B,GAAgB,KACd,AAAA,GIPb,SAAgB,CAAC,EAC9B,OAAO,AAAM,OAAN,EAAa,IAAM,CAAC,CAC7B,GJK6C,ODF7C,IAAI,GAAO,CAAC,EAAG,EAAE,CAEV,SAAS,GAAS,CAAC,EACxB,OAAO,CACT,CAEA,SAAS,GAAU,CAAC,CAAE,CAAC,MMXW,ENYhC,MAAQ,AAAA,CAAA,GAAM,EAAI,CAAC,CAAA,EACb,SAAS,CAAC,EAAI,MAAO,AAAC,CAAA,EAAI,CAAA,EAAK,CAAG,GMbR,ENcjB,MAAM,GAAK,IAAM,GMbzB,WACL,OAAO,CACT,ENYF,CAUA,SAAS,GAAM,CAAM,CAAE,CAAK,CAAE,CAAW,EACvC,IAAI,EAAK,CAAM,CAAC,EAAE,CAAE,EAAK,CAAM,CAAC,EAAE,CAAE,EAAK,CAAK,CAAC,EAAE,CAAE,EAAK,CAAK,CAAC,EAAE,CAGhE,OAFI,EAAK,EAAI,CAAA,EAAK,GAAU,EAAI,GAAK,EAAK,EAAY,EAAI,EAA1D,EACK,CAAA,EAAK,GAAU,EAAI,GAAK,EAAK,EAAY,EAAI,EAA7C,EACE,SAAS,CAAC,EAAI,OAAO,EAAG,EAAG,GAAK,CACzC,CAEA,SAAS,GAAQ,CAAM,CAAE,CAAK,CAAE,CAAW,EACzC,IAAI,EAAI,KAAK,IAAI,EAAO,OAAQ,EAAM,QAAU,EAC5C,EAAI,AAAI,MAAM,GACd,EAAI,AAAI,MAAM,GACd,EAAI,GAQR,IALI,CAAM,CAAC,EAAE,CAAG,CAAM,CAAC,EAAE,GACvB,EAAS,EAAO,QAAQ,UACxB,EAAQ,EAAM,QAAQ,WAGjB,EAAE,EAAI,GACX,CAAC,CAAC,EAAE,CAAG,GAAU,CAAM,CAAC,EAAE,CAAE,CAAM,CAAC,EAAI,EAAE,EACzC,CAAC,CAAC,EAAE,CAAG,EAAY,CAAK,CAAC,EAAE,CAAE,CAAK,CAAC,EAAI,EAAE,EAG3C,OAAO,SAAS,CAAC,EACf,IAAI,EAAI,AC1CG,GD0CI,EAAQ,EAAG,EAAG,GAAK,EAClC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GACnB,CACF,CQrDO,SAAS,GAAU,CAAM,CAAE,CAAK,EACrC,OAAQ,UAAU,QAChB,KAAK,EAAG,KACR,MAAK,EAAG,IAAI,CAAC,MAAM,GAAS,KAC5B,SAAS,IAAI,CAAC,MAAM,GAAO,OAAO,EACpC,CACA,OAAO,IAAI,AACb,CAEO,SAAS,GAAiB,CAAM,CAAE,CAAY,EACnD,OAAQ,UAAU,QAChB,KAAK,EAAG,KACR,MAAK,EACC,AAAkB,YAAlB,OAAO,EAAuB,IAAI,CAAC,aAAa,GAC/C,IAAI,CAAC,MAAM,GAChB,KAEF,SACE,IAAI,CAAC,OAAO,GACR,AAAwB,YAAxB,OAAO,EAA6B,IAAI,CAAC,aAAa,GACrD,IAAI,CAAC,MAAM,EAGpB,CACA,OAAO,IAAI,AACb,CEzBA,MAAM,GAAM,KAAK,KAAK,IAClB,GAAK,KAAK,KAAK,IACf,GAAK,KAAK,KAAK,GAEnB,SAAS,GAAS,CAAK,CAAE,CAAI,CAAE,CAAK,MAK9B,EAAI,EAAI,EAJZ,IAAM,EAAO,AAAC,CAAA,EAAO,CAAA,EAAS,KAAK,IAAI,EAAG,GACtC,EAAQ,KAAK,MAAM,KAAK,MAAM,IAC9B,EAAQ,EAAO,KAAK,IAAI,GAAI,GAC5B,EAAS,GAAS,GAAM,GAAK,GAAS,GAAK,EAAI,GAAS,GAAK,EAAI,QAgBrE,CAdI,EAAQ,GAEV,EAAK,KAAK,MAAM,EADhB,CAAA,EAAM,KAAK,IAAI,GAAI,CAAC,GAAS,CAA7B,GAEA,EAAK,KAAK,MAAM,EAAO,GACnB,EAAK,EAAM,GAAO,EAAE,EACpB,EAAK,EAAM,GAAM,EAAE,EACvB,EAAM,CAAC,IAGP,EAAK,KAAK,MAAM,EADhB,CAAA,EAAM,KAAK,IAAI,GAAI,GAAS,CAA5B,GAEA,EAAK,KAAK,MAAM,EAAO,GACnB,EAAK,EAAM,GAAO,EAAE,EACpB,EAAK,EAAM,GAAM,EAAE,GAErB,EAAK,GAAM,IAAO,GAAS,EAAQ,GAAU,GAAS,EAAO,EAAM,AAAQ,EAAR,GAChE,CAAC,EAAI,EAAI,EAAI,AACtB,CAmBO,SAAS,GAAc,CAAK,CAAE,CAAI,CAAE,CAAK,EAE9C,OAAO,GADO,EAAQ,CAAC,EAAvB,EAAO,CAAC,EAAsB,EAAQ,CAAC,EACJ,CAAC,EAAE,AACxC,CKvCO,SAAS,GAAmB,CAAC,CAAE,CAAC,EACrC,GAAK,AAAA,CAAA,EAAK,AAAA,CAAA,EAAI,EAAI,EAAE,cAAc,EAAI,GAAK,EAAE,eAAA,EAAiB,QAAQ,IAAA,EAAQ,EAAG,OAAO,KACxF,IAAI,EAAG,EAAc,EAAE,MAAM,EAAG,GAIhC,MAAO,CACL,EAAY,OAAS,EAAI,CAAW,CAAC,EAAE,CAAG,EAAY,MAAM,GAAK,EACjE,CAAC,EAAE,MAAM,EAAI,GACd,AACH,CDjBe,SAAA,GAAS,CAAC,EACvB,MAA4C,AAArC,CAAA,EAAI,AAAA,GAAmB,KAAK,IAAI,GAAA,EAAS,CAAC,CAAC,EAAE,CAAG,GACzD,CIHA,IAAI,GAAK,2EAEM,SAAA,GAAyB,CAAS,MAE3C,EADJ,GAAI,CAAE,CAAA,EAAQ,GAAG,KAAK,EAAA,EAAa,MAAM,AAAI,MAAM,mBAAqB,GAExE,OAAO,IAAI,GAAgB,CACzB,KAAM,CAAK,CAAC,EAAE,CACd,MAAO,CAAK,CAAC,EAAE,CACf,KAAM,CAAK,CAAC,EAAE,CACd,OAAQ,CAAK,CAAC,EAAE,CAChB,KAAM,CAAK,CAAC,EAAE,CACd,MAAO,CAAK,CAAC,EAAE,CACf,MAAO,CAAK,CAAC,EAAE,CACf,UAAW,CAAK,CAAC,EAAE,EAAI,CAAK,CAAC,EAAE,CAAC,MAAM,GACtC,KAAM,CAAK,CAAC,EAAE,CACd,KAAM,CAAK,CAAC,GAAG,AACjB,EACF,CAIO,SAAS,GAAgB,CAAS,EACvC,IAAI,CAAC,KAAO,AAAmB,KAAA,IAAnB,EAAU,KAAqB,IAAM,EAAU,KAAO,GAClE,IAAI,CAAC,MAAQ,AAAoB,KAAA,IAApB,EAAU,MAAsB,IAAM,EAAU,MAAQ,GACrE,IAAI,CAAC,KAAO,AAAmB,KAAA,IAAnB,EAAU,KAAqB,IAAM,EAAU,KAAO,GAClE,IAAI,CAAC,OAAS,AAAqB,KAAA,IAArB,EAAU,OAAuB,GAAK,EAAU,OAAS,GACvE,IAAI,CAAC,KAAO,CAAC,CAAC,EAAU,KACxB,IAAI,CAAC,MAAQ,AAAoB,KAAA,IAApB,EAAU,MAAsB,KAAA,EAAY,CAAC,EAAU,MACpE,IAAI,CAAC,MAAQ,CAAC,CAAC,EAAU,MACzB,IAAI,CAAC,UAAY,AAAwB,KAAA,IAAxB,EAAU,UAA0B,KAAA,EAAY,CAAC,EAAU,UAC5E,IAAI,CAAC,KAAO,CAAC,CAAC,EAAU,KACxB,IAAI,CAAC,KAAO,AAAmB,KAAA,IAAnB,EAAU,KAAqB,GAAK,EAAU,KAAO,EACnE,CI/Be,SAAA,GAAS,CAAC,CAAE,CAAC,EAC1B,IAAI,EAAI,AAAA,GAAmB,EAAG,GAC9B,GAAI,CAAC,EAAG,OAAO,EAAI,GACnB,IAAI,EAAc,CAAC,CAAC,EAAE,CAClB,EAAW,CAAC,CAAC,EAAE,CACnB,OAAO,EAAW,EAAI,KAAO,AAAI,MAAM,CAAC,GAAU,KAAK,KAAO,EACxD,EAAY,OAAS,EAAW,EAAI,EAAY,MAAM,EAAG,EAAW,GAAK,IAAM,EAAY,MAAM,EAAW,GAC5G,EAAc,AAAI,MAAM,EAAW,EAAY,OAAS,GAAG,KAAK,IACxE,CJUA,GAAgB,UAAY,GAAgB,UAe5C,GAAgB,UAAU,SAAW,WACnC,OAAO,IAAI,CAAC,KACN,IAAI,CAAC,MACL,IAAI,CAAC,KACL,IAAI,CAAC,OACJ,CAAA,IAAI,CAAC,KAAO,IAAM,EAAA,EAClB,CAAA,AAAe,KAAA,IAAf,IAAI,CAAC,MAAsB,GAAK,KAAK,IAAI,EAAG,AAAa,EAAb,IAAI,CAAC,MAAQ,EACzD,CAAA,IAAI,CAAC,MAAQ,IAAM,EAAA,EACnB,CAAA,AAAmB,KAAA,IAAnB,IAAI,CAAC,UAA0B,GAAK,IAAM,KAAK,IAAI,EAAG,AAAiB,EAAjB,IAAI,CAAC,UAAY,EACvE,CAAA,IAAI,CAAC,KAAO,IAAM,EAAA,EACnB,IAAI,CAAC,IACb,EE1CA,IAAA,GAAe,CACb,IAAK,CAAC,EAAG,IAAO,AAAA,CAAA,AAAI,IAAJ,CAAI,EAAK,QAAQ,GACjC,EAAK,AAAC,GAAM,KAAK,MAAM,GAAG,SAAS,GACnC,EAAK,AAAC,GAAM,EAAI,GAChB,ELRa,SAAS,CAAC,EACvB,OAAO,KAAK,IAAI,EAAI,KAAK,MAAM,KAAO,KAChC,EAAE,eAAe,MAAM,QAAQ,KAAM,IACrC,EAAE,SAAS,GACnB,EKKE,EAAK,CAAC,EAAG,IAAM,EAAE,cAAc,GAC/B,EAAK,CAAC,EAAG,IAAM,EAAE,QAAQ,GACzB,EAAK,CAAC,EAAG,IAAM,EAAE,YAAY,GAC7B,EAAK,AAAC,GAAM,KAAK,MAAM,GAAG,SAAS,GACnC,EAAK,CAAC,EAAG,IAAM,AAAA,GAAc,AAAI,IAAJ,EAAS,GACtC,EAAK,GACL,ECXa,SAAS,CAAC,CAAE,CAAC,EAC1B,IAAI,EAAI,AAAA,GAAmB,EAAG,GAC9B,GAAI,CAAC,EAAG,OAAO,EAAI,GACnB,IAAI,EAAc,CAAC,CAAC,EAAE,CAClB,EAAW,CAAC,CAAC,EAAE,CACf,EAAI,EAAY,CAAA,GAAiB,AAAsD,EAAtD,KAAK,IAAI,GAAI,KAAK,IAAI,EAAG,KAAK,MAAM,EAAW,IAAO,EAAK,EAC5F,EAAI,EAAY,OACpB,OAAO,IAAM,EAAI,EACX,EAAI,EAAI,EAAc,AAAI,MAAM,EAAI,EAAI,GAAG,KAAK,KAChD,EAAI,EAAI,EAAY,MAAM,EAAG,GAAK,IAAM,EAAY,MAAM,GAC1D,KAAO,AAAI,MAAM,EAAI,GAAG,KAAK,KAAO,AAAA,GAAmB,EAAG,KAAK,IAAI,EAAG,EAAI,EAAI,GAAG,CAAC,EAAE,AAC5F,EDCE,EAAK,AAAC,GAAM,KAAK,MAAM,GAAG,SAAS,IAAI,cACvC,EAAK,AAAC,GAAM,KAAK,MAAM,GAAG,SAAS,GACrC,EGlBe,SAAA,GAAS,CAAC,EACvB,OAAO,CACT,CVOA,IAAI,GAAM,MAAM,UAAU,IACtB,GAAW,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,OAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CJL5E,SAAS,GAAU,CAAK,EAC7B,IAAI,EAAS,EAAM,OAkDnB,OAhDA,EAAM,MAAQ,SAAS,CAAK,EAC1B,IAAI,EAAI,IACR,OAAO,ACkBI,SAAe,CAAK,CAAE,CAAI,CAAE,CAAK,EAE9C,GADA,EAAO,CAAC,EAAM,EAAQ,CAAC,EACnB,CAAE,CAAA,AADwB,CAAA,EAAQ,CAAC,CAAvC,EACc,CAAA,EAAI,MAAO,EAAE,CAC3B,GAAI,IAAU,EAAM,MAAO,CAAC,EAAM,CAClC,IAAM,EAAU,EAAO,EAAO,CAAC,EAAI,EAAI,EAAI,CAAG,EAAU,GAAS,EAAM,EAAO,GAAS,GAAS,EAAO,EAAM,GAC7G,GAAI,CAAE,CAAA,GAAM,CAAA,EAAK,MAAO,EAAE,CAC1B,IAAM,EAAI,EAAK,EAAK,EAAG,EAAQ,AAAI,MAAM,GACzC,GAAI,GACF,GAAI,EAAM,EAAG,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,EAAE,EAAG,CAAK,CAAC,EAAE,CAAI,CAAA,CAAA,AAAA,CAAA,EAAK,CAAA,EAAM,CAAhE,OACK,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,EAAE,EAAG,CAAK,CAAC,EAAE,CAAG,AAAC,CAAA,EAAK,CAAA,EAAK,OAEvD,GAAI,EAAM,EAAG,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,EAAE,EAAG,CAAK,CAAC,EAAE,CAAI,CAAA,CAAA,AAAA,CAAA,EAAK,CAAA,EAAM,CAAhE,OACK,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,EAAE,EAAG,CAAK,CAAC,EAAE,CAAG,AAAC,CAAA,EAAK,CAAA,EAAK,EAEzD,OAAO,CACT,EDjCiB,CAAC,CAAC,EAAE,CAAE,CAAC,CAAC,EAAE,OAAS,EAAE,CAAE,AAAS,MAAT,EAAgB,GAAK,EAC3D,EAEA,EAAM,WAAa,SAAS,CAAK,CAAE,CAAS,EAC1C,IAAI,EAAI,IACR,OAAO,AEZI,SAAoB,CAAK,CAAE,CAAI,CAAE,CAAK,CAAE,CAAS,EAC9D,IeFsB,EAAM,EfGxB,EADA,EAAO,AD8CN,SAAkB,CAAK,CAAE,CAAI,CAAE,CAAK,EACzC,EAAO,CAAC,EAAM,EAAQ,CAAC,EAAO,EAAQ,CAAC,EACvC,IAAM,EAAU,EAAO,EAAO,EAAM,EAAU,GAAc,EAAM,EAAO,GAAS,GAAc,EAAO,EAAM,GAC7G,MAAO,AAAC,CAAA,EAAU,GAAK,CAAA,EAAM,CAAA,EAAM,EAAI,CAAA,CAAA,EAAK,CAAA,EAAM,CAAA,CACpD,EClDsB,EAAO,EAAM,GAGjC,OAAQ,AADR,CAAA,EAAY,AAAA,GAAgB,AAAa,MAAb,EAAoB,KAAO,EAAvD,EACkB,MAChB,IAAK,IACH,IAAI,EAAQ,KAAK,IAAI,KAAK,IAAI,GAAQ,KAAK,IAAI,IAE/C,OAD2B,MAAvB,EAAU,WAAsB,MAAM,EcPvC,KAAK,IAAI,EAAG,AAA6D,EAA7D,KAAK,IAAI,GAAI,KAAK,IAAI,EAAG,KAAK,MAAM,AAAA,GdOyB,GcPP,KAAW,AAAA,GAAS,KAAK,IdOxB,OAAe,CAAA,EAAU,UAAY,CAA3G,EACO,AAAA,GAAa,EAAW,EAEjC,KAAK,GACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACwB,MAAvB,EAAU,WAAsB,OehBlB,EfgBmD,EAA3B,EedvC,KAAK,IAAI,EAAG,AAAA,GADU,KAAK,Ife6C,KAAK,IAAI,KAAK,IAAI,GAAQ,KAAK,IAAI,KeflH,CAAA,EAAO,KAAK,IAAI,EAAA,GACmB,AAAA,GAAS,IAAS,KfcuE,CAAA,EAAU,UAAY,EAAa,CAAA,AAAmB,MAAnB,EAAU,IAAS,CAAE,EAChL,KAEF,KAAK,IACL,IAAK,IACwB,MAAvB,EAAU,WAAsB,MAAM,EapBvC,KAAK,IAAI,EAAG,CAAC,AAAA,GAAS,KAAK,IboBuC,OAAQ,CAAA,EAAU,UAAY,EAAa,AAAA,CAAA,AAAmB,MAAnB,EAAU,IAAS,EAAO,CAAA,CAG9I,CACA,OAAO,AAAA,GAAO,EAChB,EFbsB,CAAC,CAAC,EAAE,CAAE,CAAC,CAAC,EAAE,OAAS,EAAE,CAAE,AAAS,MAAT,EAAgB,GAAK,EAAO,EACvE,EAEA,EAAM,KAAO,SAAS,CAAK,EACZ,MAAT,GAAe,CAAA,EAAQ,EAA3B,EAEA,IAKI,EACA,EANA,EAAI,IACJ,EAAK,EACL,EAAK,EAAE,OAAS,EAChB,EAAQ,CAAC,CAAC,EAAG,CACb,EAAO,CAAC,CAAC,EAAG,CAGZ,EAAU,GAOd,IALI,EAAO,IACT,EAAO,EAAO,EAAQ,EAAM,EAAO,EACnC,EAAO,EAAI,EAAK,EAAI,EAAK,GAGpB,KAAY,GAAG,CAEpB,GAAI,AADJ,CAAA,EAAO,AAAA,GAAc,EAAO,EAAM,EAAlC,IACa,EAGX,OAFA,CAAC,CAAC,EAAG,CAAG,EACR,CAAC,CAAC,EAAG,CAAG,EACD,EAAO,GACT,GAAI,EAAO,EAChB,EAAQ,KAAK,MAAM,EAAQ,GAAQ,EACnC,EAAO,KAAK,KAAK,EAAO,GAAQ,OAC3B,GAAI,EAAO,EAChB,EAAQ,KAAK,KAAK,EAAQ,GAAQ,EAClC,EAAO,KAAK,MAAM,EAAO,GAAQ,OAEjC,MAEF,EAAU,CACZ,CAEA,OAAO,CACT,EAEO,CACT,CAEe,SAAA,KACb,IAAI,ET+DG,AA3DF,CAAA,WACL,IAGI,EACA,EACA,EAEA,EACA,EACA,EATA,EAAS,GACT,EAAQ,GACR,EAAc,GAId,EAAQ,GAKZ,SAAS,IACP,IA5Da,EAAG,EACd,EA2DE,EAAI,KAAK,IAAI,EAAO,OAAQ,EAAM,QAItC,OAHI,IAAU,MA7DD,EA6D2B,CAAM,CAAC,EAAE,GA7DjC,EA6DmC,CAAM,CAAC,EAAI,EAAE,GA3DvD,CAAA,EAAI,EAAG,EAAI,EAAG,EAAI,CAAA,EA2DH,EA1DnB,SAAS,CAAC,EAAI,OAAO,KAAK,IAAI,EAAG,KAAK,IAAI,EAAG,GAAK,GA2DvD,EAAY,EAAI,EAAI,GAAU,GAC9B,EAAS,EAAQ,KACV,CACT,CAEA,SAAS,EAAM,CAAC,EACd,OAAO,AAAK,MAAL,GAAa,MAAM,EAAI,CAAC,GAAK,EAAW,AAAA,CAAA,GAAW,CAAA,EAAS,EAAU,EAAO,IAAI,GAAY,EAAO,EAAA,CAAW,EAAI,EAAU,EAAM,IAC5I,CA8BA,OA5BA,EAAM,OAAS,SAAS,CAAC,EACvB,OAAO,EAAM,EAAa,AAAA,CAAA,GAAU,CAAA,EAAQ,EAAU,EAAO,EAAO,IAAI,GAAY,GAAgB,CAAC,EAAI,IAC3G,EAEA,EAAM,OAAS,SAAS,CAAC,EACvB,OAAO,UAAU,OAAU,CAAA,EAAS,MAAM,KAAK,EAAG,IAAS,GAAA,EAAa,EAAO,OACjF,EAEA,EAAM,MAAQ,SAAS,CAAC,EACtB,OAAO,UAAU,OAAU,CAAA,EAAQ,MAAM,KAAK,GAAI,GAAA,EAAa,EAAM,OACvE,EAEA,EAAM,WAAa,SAAS,CAAC,EAC3B,OAAO,EAAQ,MAAM,KAAK,GAAI,EAAc,GAAkB,GAChE,EAEA,EAAM,MAAQ,SAAS,CAAC,EACtB,OAAO,UAAU,OAAU,CAAA,EAAQ,EAAA,GAAW,GAAU,GAAA,EAAa,IAAU,EACjF,EAEA,EAAM,YAAc,SAAS,CAAC,EAC5B,OAAO,UAAU,OAAU,CAAA,EAAc,EAAG,GAAA,EAAa,CAC3D,EAEA,EAAM,QAAU,SAAS,CAAC,EACxB,OAAO,UAAU,OAAU,CAAA,EAAU,EAAG,CAAA,EAAS,CACnD,EAEO,SAAS,CAAC,CAAE,CAAC,EAElB,OADA,EAAY,EAAG,EAAc,EACtB,GACT,CACF,CAAA,IAGuB,GAAU,ISvD/B,OANA,EAAM,KAAO,WACX,OTPK,ASOc,KTNhB,OAAO,ASME,ETNK,UACd,MAAM,ASKG,ETLI,SACb,YAAY,ASIH,ETJU,eACnB,MAAM,ASGG,ETHI,SACb,QAAQ,ASEC,ETFM,USGpB,EAEA,AAAA,GAAU,MAAM,EAAO,WAEhB,GAAU,EACnB,CGvDE,GAAS,AADT,CAAA,GAAS,ACDI,SAAS,CAAM,EAC5B,IGbsB,EAAU,ECAV,EJalB,EAAQ,AAAoB,KAAA,IAApB,EAAO,UAA0B,AAAqB,KAAA,IAArB,EAAO,UAA0B,IGbxD,EHa+E,GAAI,KAAK,EAAO,SAAU,QGb/F,EHawG,EAAO,UAAY,GGZpJ,SAAS,CAAK,CAAE,CAAK,EAO1B,IANA,IAAI,EAAI,EAAM,OACV,EAAI,EAAE,CACN,EAAI,EACJ,EAAI,CAAQ,CAAC,EAAE,CACf,EAAS,EAKX,AAHK,EAAI,GAAK,EAAI,IACd,EAAS,EAAI,EAAI,GAAO,CAAA,EAAI,KAAK,IAAI,EAAG,EAAQ,EAApD,EACA,EAAE,KAAK,EAAM,UAAU,GAAK,EAAG,EAAI,KAC9B,CAAA,AAAA,CAAA,GAAU,EAAI,CAAA,EAAK,CAAA,IACxB,EAAI,CAAQ,CAAC,EAAK,AAAA,CAAA,EAAI,CAAA,EAAK,EAAS,OAAO,CAG7C,OAAO,EAAE,UAAU,KAAK,EAC1B,GHFI,EAAiB,AAAoB,KAAA,IAApB,EAAO,SAAyB,GAAK,EAAO,QAAQ,CAAC,EAAE,CAAG,GAC3E,EAAiB,AAAoB,KAAA,IAApB,EAAO,SAAyB,GAAK,EAAO,QAAQ,CAAC,EAAE,CAAG,GAC3E,EAAU,AAAmB,KAAA,IAAnB,EAAO,QAAwB,IAAM,EAAO,QAAU,GAChE,EAAW,AAAoB,KAAA,IAApB,EAAO,SAAyB,IIjBzB,EJiBmD,GAAI,KAAK,EAAO,SAAU,QIhB5F,SAAS,CAAK,EACnB,OAAO,EAAM,QAAQ,SAAU,SAAS,CAAC,EACvC,OAAO,CAAQ,CAAC,CAAC,EAAE,AACrB,EACF,GJaI,EAAU,AAAmB,KAAA,IAAnB,EAAO,QAAwB,IAAM,EAAO,QAAU,GAChE,EAAQ,AAAiB,KAAA,IAAjB,EAAO,MAAsB,IAAM,EAAO,MAAQ,GAC1D,EAAM,AAAe,KAAA,IAAf,EAAO,IAAoB,MAAQ,EAAO,IAAM,GAE1D,SAAS,EAAU,CAAS,EAG1B,IAAI,EAAO,AAFX,CAAA,EAAY,AAAA,GAAgB,EAA5B,EAEqB,KACjB,EAAQ,EAAU,MAClB,EAAO,EAAU,KACjB,EAAS,EAAU,OACnB,EAAO,EAAU,KACjB,EAAQ,EAAU,MAClB,EAAQ,EAAU,MAClB,EAAY,EAAU,UACtB,EAAO,EAAU,KACjB,EAAO,EAAU,IAGjB,AAAS,CAAA,MAAT,EAAc,CAAA,EAAQ,CAAA,EAAM,EAAO,GAAvC,EAGU,AAAA,EAAW,CAAC,EAAK,EAAE,CAAA,AAAc,KAAA,IAAd,GAA4B,CAAA,EAAY,EAAA,EAAK,EAAO,CAAA,EAAM,EAAO,GAAzF,EAGD,CAAA,GAAS,AAAS,MAAT,GAAgB,AAAU,MAAV,CAAU,GAAM,CAAA,EAAO,CAAA,EAAM,EAAO,IAAK,EAAQ,GAA9E,EAIA,IAAI,EAAS,AAAW,MAAX,EAAiB,EAAiB,AAAW,MAAX,GAAkB,SAAS,KAAK,GAAQ,IAAM,EAAK,cAAgB,GAC9G,EAAS,AAAW,MAAX,EAAiB,EAAiB,OAAO,KAAK,GAAQ,EAAU,GAKzE,EAAa,AAAA,EAAW,CAAC,EAAK,CAC9B,EAAc,aAAa,KAAK,GAUpC,SAAS,EAAO,CAAK,EACnB,IAEI,EAAG,EAAG,EAFN,EAAc,EACd,EAAc,EAGlB,GAAI,AAAS,MAAT,EACF,EAAc,EAAW,GAAS,EAClC,EAAQ,OACH,CAIL,IAAI,EAAgB,AAHpB,CAAA,EAAQ,CAAC,CAAT,EAG4B,GAAK,EAAI,EAAQ,EAiB7C,GAdA,EAAQ,MAAM,GAAS,EAAM,EAAW,KAAK,IAAI,GAAQ,GAGrD,GAAM,CAAA,EAAQ,AMjFX,SAAS,CAAC,EACvB,EAAK,IAAK,IAAkC,EAA9B,EAAI,EAAE,OAAQ,EAAI,EAAG,EAAK,GAAQ,EAAI,EAAG,EAAE,EACvD,OAAQ,CAAC,CAAC,EAAE,EACV,IAAK,IAAK,EAAK,EAAK,EAAG,KACvB,KAAK,IAAgB,IAAP,GAAU,CAAA,EAAK,CAAA,EAAG,EAAK,EAAG,KACxC,SAAS,GAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAE,MAAM,EAAS,EAAK,GAAG,CAAA,EAAK,CAAA,CACnD,CAEF,OAAO,EAAK,EAAI,EAAE,MAAM,EAAG,GAAM,EAAE,MAAM,EAAK,GAAK,CACrD,ENwEqC,EAA7B,EAGI,GAAiB,AAAW,GAAX,CAAC,GAAe,AAAS,MAAT,GAAc,CAAA,EAAgB,CAAA,CAAnE,EAGA,EAAe,AAAA,CAAA,EAAiB,AAAS,MAAT,EAAe,EAAO,EAAS,AAAS,MAAT,GAAgB,AAAS,MAAT,EAAe,GAAK,CAAA,EAAQ,EAC3G,EAAc,AAAC,CAAA,AAAS,MAAT,EAAe,EAAQ,CAAC,EAAI,AAAA,GAAiB,EAAE,CAAG,EAAA,EAAM,EAAe,CAAA,GAAiB,AAAS,MAAT,EAAe,IAAM,EAAA,EAIxH,EAEF,CAAA,IADA,EAAI,GAAI,EAAI,EAAM,OACX,EAAE,EAAI,GACX,GAA6B,GAAzB,CAAA,EAAI,EAAM,WAAW,EAAA,GAAc,EAAI,GAAI,CAC7C,EAAc,AAAC,CAAA,AAAM,KAAN,EAAW,EAAU,EAAM,MAAM,EAAI,GAAK,EAAM,MAAM,EAAA,EAAM,EAC3E,EAAQ,EAAM,MAAM,EAAG,GACvB,KACF,CAAA,CAGN,CAGI,GAAS,CAAC,GAAM,CAAA,EAAQ,EAAM,EAAO,IAAzC,EAGA,IAAI,EAAS,EAAY,OAAS,EAAM,OAAS,EAAY,OACzD,EAAU,EAAS,EAAQ,AAAI,MAAM,EAAQ,EAAS,GAAG,KAAK,GAAQ,GAM1E,OAHI,GAAS,GAAM,CAAA,EAAQ,EAAM,EAAU,EAAO,EAAQ,OAAS,EAAQ,EAAY,OAAS,KAAW,EAAU,EAArH,EAGQ,GACN,IAAK,IAAK,EAAQ,EAAc,EAAQ,EAAc,EAAS,KAC/D,KAAK,IAAK,EAAQ,EAAc,EAAU,EAAQ,EAAa,KAC/D,KAAK,IAAK,EAAQ,EAAQ,MAAM,EAAG,EAAS,EAAQ,QAAU,GAAK,EAAc,EAAQ,EAAc,EAAQ,MAAM,GAAS,KAC9H,SAAS,EAAQ,EAAU,EAAc,EAAQ,CACnD,CAEA,OAAO,EAAS,EAClB,CAMA,OAtEA,EAAY,AAAc,KAAA,IAAd,EAA0B,EAChC,SAAS,KAAK,GAAQ,KAAK,IAAI,EAAG,KAAK,IAAI,GAAI,IAC/C,KAAK,IAAI,EAAG,KAAK,IAAI,GAAI,IAgE/B,EAAO,SAAW,WAChB,OAAO,EAAY,EACrB,EAEO,CACT,CAYA,MAAO,CACL,OAAQ,EACR,aAZF,SAAsB,CAAS,CAAE,CAAK,EACpC,IAAI,EAAI,EAAW,CAAA,AAAwC,CAAxC,EAAY,AAAA,GAAgB,EAAA,EAAsB,KAAO,IAAK,CAAA,GAC7E,EAAI,AAA6D,EAA7D,KAAK,IAAI,GAAI,KAAK,IAAI,EAAG,KAAK,MAAM,AAAA,GAAS,GAAS,KAC1D,EAAI,KAAK,IAAI,GAAI,CAAC,GAClB,EAAS,EAAQ,CAAC,EAAI,EAAI,EAAE,CAChC,OAAO,SAAS,CAAK,EACnB,OAAO,EAAE,EAAI,GAAS,CACxB,CACF,CAKA,CACF,ED7Ic,CACZ,UAAW,IACX,SAAU,CAAC,EAAE,CACb,SAAU,CAAC,IAAK,GAAG,AACrB,EAGE,EACgB,OAChB,GAAe,GAAO,aqBfjB,MAAM,GAAU,KAAK,GAAK,IACpB,GAAU,IAAM,KAAK,GDGlC,IAOI,GAAQ,CAAA,AANJ,QACA,OAKY,YAgBL,SAAA,GAAmB,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAO,EAChD,OAAO,AAAqB,GAArB,UAAU,OAAe,AAflC,SAA0B,CAAC,EACzB,GAAI,aAAa,GAAW,OAAO,IAAI,GAAU,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,SAC5D,aAAa,IAAM,CAAA,EAAI,AAAA,GAAW,EAAxC,EACA,IAAI,EAAI,EAAE,EAAI,IACV,EAAI,EAAE,EAAI,IACV,EAAI,EAAE,EAAI,IACV,EAAK,AAAA,CAAA,GAAQ,EAAI,AAVd,cAUmB,EAAI,AATvB,aAS4B,CAAA,EAAM,CAAA,GAVlC,cACA,YAS+C,EAClD,EAAK,EAAI,EACT,EAAK,CAAA,CAAA,AAAA,CAAA,AAbH,QAaQ,CAAA,EAAI,CAAA,GAAK,AAfjB,QAeqB,CAAA,EAdrB,MAc2B,EAC7B,EAAI,KAAK,KAAK,EAAI,EAAI,EAAK,GAAO,CAAA,AAdhC,QAcoC,EAAK,CAAA,EAAI,CAAA,CAAA,EAC/C,EAAI,EAAI,KAAK,MAAM,EAAG,GAAM,GAAU,IAAM,IAChD,OAAO,IAAI,GAAU,EAAI,EAAI,EAAI,IAAM,EAAG,EAAG,EAAG,EAAE,QACpD,EAGmD,GAAK,IAAI,GAAU,EAAG,EAAG,EAAG,AAAW,MAAX,EAAkB,EAAI,EACrG,CAEO,SAAS,GAAU,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAO,EACxC,IAAI,CAAC,EAAI,CAAC,EACV,IAAI,CAAC,EAAI,CAAC,EACV,IAAI,CAAC,EAAI,CAAC,EACV,IAAI,CAAC,QAAU,CAAC,CAClB,CEjCA,SAAS,GAAU,CAAG,EACpB,OAAO,SAAU,EAAe,CAAC,EAG/B,SAAS,EAAU,CAAK,CAAE,CAAG,EAC3B,IAAI,EAAI,EAAI,AAAC,CAAA,EAAQ,AAAA,GAAe,EAAA,EAAQ,EAAI,AAAA,CAAA,EAAM,AAAA,GAAe,EAAA,EAAM,GACvE,EAAI,AAAA,GAAM,EAAM,EAAG,EAAI,GACvB,EAAI,AAAA,GAAM,EAAM,EAAG,EAAI,GACvB,EAAU,AAAA,GAAM,EAAM,QAAS,EAAI,SACvC,OAAO,SAAS,CAAC,EAKf,OAJA,EAAM,EAAI,EAAE,GACZ,EAAM,EAAI,EAAE,GACZ,EAAM,EAAI,EAAE,KAAK,IAAI,EAAG,IACxB,EAAM,QAAU,EAAQ,GACjB,EAAQ,EACjB,CACF,CAIA,OAlBA,EAAI,CAAC,EAgBL,EAAU,MAAQ,EAEX,CACT,EAAG,EACL,CFaA,AAAA,EAAO,GAAW,GAAW,AAAA,GAAO,GAAO,CACzC,SAAS,CAAC,EAER,OADA,EAAI,AAAK,MAAL,E9CnCc,mB8CmCS,KAAK,I9CnCd,mB8CmC4B,GACvC,IAAI,GAAU,IAAI,CAAC,EAAG,IAAI,CAAC,EAAG,IAAI,CAAC,EAAI,EAAG,IAAI,CAAC,QACxD,EACA,OAAO,CAAC,EAEN,OADA,EAAI,AAAK,MAAL,E9CxCY,G8CwCS,KAAK,I9CxCd,G8CwC0B,GACnC,IAAI,GAAU,IAAI,CAAC,EAAG,IAAI,CAAC,EAAG,IAAI,CAAC,EAAI,EAAG,IAAI,CAAC,QACxD,EACA,MACE,IAAI,EAAI,MAAM,IAAI,CAAC,GAAK,EAAK,AAAA,CAAA,IAAI,CAAC,EAAI,GAAA,EAAO,GACzC,EAAI,CAAC,IAAI,CAAC,EACV,EAAI,MAAM,IAAI,CAAC,GAAK,EAAI,IAAI,CAAC,EAAI,EAAK,CAAA,EAAI,CAAA,EAC1C,EAAO,KAAK,IAAI,GAChB,EAAO,KAAK,IAAI,GACpB,OAAO,IAAI,GACT,IAAO,CAAA,EAAI,EAAK,CAAA,AAlDd,QAkDkB,EAAO,AAjDzB,QAiD6B,CAAA,CAAG,EAClC,IAAO,CAAA,EAAI,EAAK,CAAA,AAjDd,QAiDkB,EAAO,AAhDzB,QAgD6B,CAAA,CAAG,EAClC,IAAO,CAAA,EAAI,EAAK,CAAA,AAhDd,QAgDkB,CAAA,CAAG,EACvB,IAAI,CAAC,QAET,CACF,IEjCe,G3CbR,SAAa,CAAC,CAAE,CAAC,EACtB,IAAI,EAAI,EAAI,EACZ,OAAO,EAAI,GAAO,EAAG,EAAI,KAAO,EAAI,KAAO,EAAI,IAAM,KAAK,MAAM,EAAI,KAAO,GAAK,AAAA,GAAS,MAAM,GAAK,EAAI,EAC1G,G2CWO,IAAI,GAAgB,GAAU,IHzBnB,AAAA,GAAyB,AAAA,GAAU,KAAM,IAAM,KAAO,AAAA,GAAU,GAAI,IAAM,KAErF,IAAI,GAAO,AAAA,GAAyB,AAAA,GAAU,IAAK,IAAM,KAAO,AAAA,GAAU,GAAI,IAAM,KSL3F,SAAS,KAAQ,CAEF,SAAA,GAAS,CAAQ,EAC9B,OAAO,AAAY,MAAZ,EAAmB,GAAO,WAC/B,OAAO,IAAI,CAAC,cAAc,EAC5B,CACF,CGNA,SAAS,KACP,MAAO,EAAE,AACX,CAEe,SAAA,GAAS,CAAQ,EAC9B,OAAO,AAAY,MAAZ,EAAmB,GAAQ,WAChC,OAAO,IAAI,CAAC,iBAAiB,EAC/B,CACF,CERe,SAAA,GAAS,CAAQ,EAC9B,OAAO,WACL,OAAO,IAAI,CAAC,QAAQ,EACtB,CACF,CAEO,SAAS,GAAa,CAAQ,EACnC,OAAO,SAAS,CAAI,EAClB,OAAO,EAAK,QAAQ,EACtB,CACF,CdHQ,AAAA,KaLR,IAAI,GAAO,MAAM,UAAU,KAQ3B,SAAS,KACP,OAAO,IAAI,CAAC,iBACd,CEVA,IAAI,GAAS,MAAM,UAAU,OAE7B,SAAS,KACP,OAAO,MAAM,KAAK,IAAI,CAAC,SACzB,CINe,SAAA,GAAS,CAAM,EAC5B,OAAO,AAAI,MAAM,EAAO,OAC1B,CDKO,SAAS,GAAU,CAAM,CAAE,CAAK,EACrC,IAAI,CAAC,cAAgB,EAAO,cAC5B,IAAI,CAAC,aAAe,EAAO,aAC3B,IAAI,CAAC,MAAQ,KACb,IAAI,CAAC,QAAU,EACf,IAAI,CAAC,SAAW,CAClB,CDTA,SAAS,GAAU,CAAM,CAAE,CAAK,CAAE,CAAK,CAAE,CAAM,CAAE,CAAI,CAAE,CAAI,EASzD,IARA,IACI,EADA,EAAI,EAEJ,EAAc,EAAM,OACpB,EAAa,EAAK,OAKf,EAAI,EAAY,EAAE,EACnB,CAAA,EAAO,CAAK,CAAC,EAAE,AAAF,GACf,EAAK,SAAW,CAAI,CAAC,EAAE,CACvB,CAAM,CAAC,EAAE,CAAG,GAEZ,CAAK,CAAC,EAAE,CAAG,IAAI,GAAU,EAAQ,CAAI,CAAC,EAAE,EAK5C,KAAO,EAAI,EAAa,EAAE,EACpB,CAAA,EAAO,CAAK,CAAC,EAAE,AAAF,GACf,CAAA,CAAI,CAAC,EAAE,CAAG,CAFd,CAKF,CAEA,SAAS,GAAQ,CAAM,CAAE,CAAK,CAAE,CAAK,CAAE,CAAM,CAAE,CAAI,CAAE,CAAI,CAAE,CAAG,EAC5D,IAAI,EACA,EAKA,EAJA,EAAiB,IAAI,IACrB,EAAc,EAAM,OACpB,EAAa,EAAK,OAClB,EAAY,AAAI,MAAM,GAK1B,IAAK,EAAI,EAAG,EAAI,EAAa,EAAE,EACzB,CAAA,EAAO,CAAK,CAAC,EAAE,AAAF,IACf,CAAS,CAAC,EAAE,CAAG,EAAW,EAAI,KAAK,EAAM,EAAK,SAAU,EAAG,GAAS,GAChE,EAAe,IAAI,GACrB,CAAI,CAAC,EAAE,CAAG,EAEV,EAAe,IAAI,EAAU,IAQnC,IAAK,EAAI,EAAG,EAAI,EAAY,EAAE,EAC5B,EAAW,EAAI,KAAK,EAAQ,CAAI,CAAC,EAAE,CAAE,EAAG,GAAQ,GAC5C,CAAA,EAAO,EAAe,IAAI,EAAA,GAC5B,CAAM,CAAC,EAAE,CAAG,EACZ,EAAK,SAAW,CAAI,CAAC,EAAE,CACvB,EAAe,OAAO,IAEtB,CAAK,CAAC,EAAE,CAAG,IAAI,GAAU,EAAQ,CAAI,CAAC,EAAE,EAK5C,IAAK,EAAI,EAAG,EAAI,EAAa,EAAE,EACxB,CAAA,EAAO,CAAK,CAAC,EAAE,AAAF,GAAQ,EAAe,IAAI,CAAS,CAAC,EAAE,IAAM,GAC7D,CAAA,CAAI,CAAC,EAAE,CAAG,CAFd,CAKF,CAEA,SAAS,GAAM,CAAI,EACjB,OAAO,EAAK,QACd,CQvDA,SAAS,GAAU,CAAC,CAAE,CAAC,EACrB,OAAO,EAAI,EAAI,GAAK,EAAI,EAAI,EAAI,GAAK,EAAI,EAAI,GAC/C,CPRA,GAAU,UAAY,CACpB,YAAa,GACb,YAAa,SAAS,CAAK,EAAI,OAAO,IAAI,CAAC,QAAQ,aAAa,EAAO,IAAI,CAAC,MAAQ,EACpF,aAAc,SAAS,CAAK,CAAE,CAAI,EAAI,OAAO,IAAI,CAAC,QAAQ,aAAa,EAAO,EAAO,EACrF,cAAe,SAAS,CAAQ,EAAI,OAAO,IAAI,CAAC,QAAQ,cAAc,EAAW,EACjF,iBAAkB,SAAS,CAAQ,EAAI,OAAO,IAAI,CAAC,QAAQ,iBAAiB,EAAW,CACzF,EgBrBO,IAAI,GAAQ,+BAEnB,GAAe,CACb,IAAK,6BACL,MAAO,GACP,MAAO,+BACP,IAAK,uCACL,MAAO,+BACT,EDNe,SAAA,GAAS,CAAI,EAC1B,IAAI,EAAS,GAAQ,GAAI,EAAI,EAAO,QAAQ,KAE5C,OADI,GAAK,GAAM,AAA+B,UAA/B,CAAA,EAAS,EAAK,MAAM,EAAG,EAAA,GAAiB,CAAA,EAAO,EAAK,MAAM,EAAI,EAA7E,EACO,AAAA,GAAW,eAAe,GAAU,CAAC,MAAO,AAAA,EAAU,CAAC,EAAO,CAAE,MAAO,CAAI,EAAI,CACxF,CDJA,SAAS,GAAW,CAAI,EACtB,OAAO,WACL,IAAI,CAAC,gBAAgB,EACvB,CACF,CAEA,SAAS,GAAa,CAAQ,EAC5B,OAAO,WACL,IAAI,CAAC,kBAAkB,EAAS,MAAO,EAAS,MAClD,CACF,CAEA,SAAS,GAAa,CAAI,CAAE,CAAK,EAC/B,OAAO,WACL,IAAI,CAAC,aAAa,EAAM,EAC1B,CACF,CAEA,SAAS,GAAe,CAAQ,CAAE,CAAK,EACrC,OAAO,WACL,IAAI,CAAC,eAAe,EAAS,MAAO,EAAS,MAAO,EACtD,CACF,CAEA,SAAS,GAAa,CAAI,CAAE,CAAK,EAC/B,OAAO,WACL,IAAI,EAAI,EAAM,MAAM,IAAI,CAAE,UACtB,AAAK,OAAL,EAAW,IAAI,CAAC,gBAAgB,GAC/B,IAAI,CAAC,aAAa,EAAM,EAC/B,CACF,CAEA,SAAS,GAAe,CAAQ,CAAE,CAAK,EACrC,OAAO,WACL,IAAI,EAAI,EAAM,MAAM,IAAI,CAAE,UACtB,AAAK,OAAL,EAAW,IAAI,CAAC,kBAAkB,EAAS,MAAO,EAAS,OAC1D,IAAI,CAAC,eAAe,EAAS,MAAO,EAAS,MAAO,EAC3D,CACF,CIxCe,SAAA,GAAS,CAAI,EAC1B,OAAQ,EAAK,eAAiB,EAAK,cAAc,aACzC,EAAK,UAAY,GAClB,EAAK,WACd,CDFA,SAAS,GAAY,CAAI,EACvB,OAAO,WACL,IAAI,CAAC,MAAM,eAAe,EAC5B,CACF,CAEA,SAAS,GAAc,CAAI,CAAE,CAAK,CAAE,CAAQ,EAC1C,OAAO,WACL,IAAI,CAAC,MAAM,YAAY,EAAM,EAAO,EACtC,CACF,CAEA,SAAS,GAAc,CAAI,CAAE,CAAK,CAAE,CAAQ,EAC1C,OAAO,WACL,IAAI,EAAI,EAAM,MAAM,IAAI,CAAE,UACtB,AAAK,OAAL,EAAW,IAAI,CAAC,MAAM,eAAe,GACpC,IAAI,CAAC,MAAM,YAAY,EAAM,EAAG,EACvC,CACF,CAWO,SAAS,GAAW,CAAI,CAAE,CAAI,EACnC,OAAO,EAAK,MAAM,iBAAiB,IAC5B,AAAA,GAAY,GAAM,iBAAiB,EAAM,MAAM,iBAAiB,EACzE,CElCA,SAAS,GAAe,CAAI,EAC1B,OAAO,WACL,OAAO,IAAI,CAAC,EAAK,AACnB,CACF,CAEA,SAAS,GAAiB,CAAI,CAAE,CAAK,EACnC,OAAO,WACL,IAAI,CAAC,EAAK,CAAG,CACf,CACF,CAEA,SAAS,GAAiB,CAAI,CAAE,CAAK,EACnC,OAAO,WACL,IAAI,EAAI,EAAM,MAAM,IAAI,CAAE,UACtB,AAAK,OAAL,EAAW,OAAO,IAAI,CAAC,EAAK,CAC3B,IAAI,CAAC,EAAK,CAAG,CACpB,CACF,CClBA,SAAS,GAAW,CAAM,EACxB,OAAO,EAAO,OAAO,MAAM,QAC7B,CAEA,SAAS,GAAU,CAAI,EACrB,OAAO,EAAK,WAAa,IAAI,GAAU,EACzC,CAEA,SAAS,GAAU,CAAI,EACrB,IAAI,CAAC,MAAQ,EACb,IAAI,CAAC,OAAS,GAAW,EAAK,aAAa,UAAY,GACzD,CAsBA,SAAS,GAAW,CAAI,CAAE,CAAK,EAE7B,IADA,IAAI,EAAO,GAAU,GAAO,EAAI,GAAI,EAAI,EAAM,OACvC,EAAE,EAAI,GAAG,EAAK,IAAI,CAAK,CAAC,EAAE,CACnC,CAEA,SAAS,GAAc,CAAI,CAAE,CAAK,EAEhC,IADA,IAAI,EAAO,GAAU,GAAO,EAAI,GAAI,EAAI,EAAM,OACvC,EAAE,EAAI,GAAG,EAAK,OAAO,CAAK,CAAC,EAAE,CACtC,CAEA,SAAS,GAAY,CAAK,EACxB,OAAO,WACL,GAAW,IAAI,CAAE,EACnB,CACF,CAEA,SAAS,GAAa,CAAK,EACzB,OAAO,WACL,GAAc,IAAI,CAAE,EACtB,CACF,CAEA,SAAS,GAAgB,CAAK,CAAE,CAAK,EACnC,OAAO,WACJ,AAAA,CAAA,EAAM,MAAM,IAAI,CAAE,WAAa,GAAa,EAAA,EAAe,IAAI,CAAE,EACpE,CACF,CC3DA,SAAS,KACP,IAAI,CAAC,YAAc,EACrB,CAEA,SAAS,GAAa,CAAK,EACzB,OAAO,WACL,IAAI,CAAC,YAAc,CACrB,CACF,CAEA,SAAS,GAAa,CAAK,EACzB,OAAO,WACL,IAAI,EAAI,EAAM,MAAM,IAAI,CAAE,UAC1B,CAAA,IAAI,CAAC,YAAc,AAAK,MAAL,EAAY,GAAK,CACtC,CACF,CCfA,SAAS,KACP,IAAI,CAAC,UAAY,EACnB,CAEA,SAAS,GAAa,CAAK,EACzB,OAAO,WACL,IAAI,CAAC,UAAY,CACnB,CACF,CAEA,SAAS,GAAa,CAAK,EACzB,OAAO,WACL,IAAI,EAAI,EAAM,MAAM,IAAI,CAAE,UAC1B,CAAA,IAAI,CAAC,UAAY,AAAK,MAAL,EAAY,GAAK,CACpC,CACF,CCfA,SAAS,KACH,IAAI,CAAC,aAAa,IAAI,CAAC,WAAW,YAAY,IAAI,CACxD,CCFA,SAAS,KACH,IAAI,CAAC,iBAAiB,IAAI,CAAC,WAAW,aAAa,IAAI,CAAE,IAAI,CAAC,WAAW,WAC/E,CECA,SAAS,GAAe,CAAI,EAC1B,OAAO,WACL,IAAI,EAAW,IAAI,CAAC,cAChB,EAAM,IAAI,CAAC,aACf,OAAO,IAAQ,IAAS,EAAS,gBAAgB,eAAiB,GAC5D,EAAS,cAAc,GACvB,EAAS,gBAAgB,EAAK,EACtC,CACF,CAEA,SAAS,GAAa,CAAQ,EAC5B,OAAO,WACL,OAAO,IAAI,CAAC,cAAc,gBAAgB,EAAS,MAAO,EAAS,MACrE,CACF,CAEe,SAAA,GAAS,CAAI,EAC1B,IAAI,EAAW,AAAA,GAAU,GACzB,MAAQ,AAAA,CAAA,EAAS,MACX,GACA,EAAA,EAAgB,EACxB,CCrBA,SAAS,KACP,OAAO,IACT,CCLA,SAAS,KACP,IAAI,EAAS,IAAI,CAAC,WACd,GAAQ,EAAO,YAAY,IAAI,CACrC,CCHA,SAAS,KACP,IAAI,EAAQ,IAAI,CAAC,UAAU,CAAA,GAAQ,EAAS,IAAI,CAAC,WACjD,OAAO,EAAS,EAAO,aAAa,EAAO,IAAI,CAAC,aAAe,CACjE,CAEA,SAAS,KACP,IAAI,EAAQ,IAAI,CAAC,UAAU,CAAA,GAAO,EAAS,IAAI,CAAC,WAChD,OAAO,EAAS,EAAO,aAAa,EAAO,IAAI,CAAC,aAAe,CACjE,CEMA,SAAS,GAAS,CAAQ,EACxB,OAAO,WACL,IAAI,EAAK,IAAI,CAAC,KACd,GAAK,GACL,IAAK,IAAkC,EAA9B,EAAI,EAAG,EAAI,GAAI,EAAI,EAAG,OAAW,EAAI,EAAG,EAAE,EAC7C,CAAA,EAAI,CAAE,CAAC,EAAE,CAAG,AAAC,EAAS,MAAQ,EAAE,OAAS,EAAS,MAAS,EAAE,OAAS,EAAS,IAAA,EAGjF,CAAE,CAAC,EAAE,EAAE,CAAG,EAFV,IAAI,CAAC,oBAAoB,EAAE,KAAM,EAAE,SAAU,EAAE,QAK/C,GAAE,EAAG,EAAG,OAAS,EAChB,OAAO,IAAI,CAAC,KACnB,CACF,CAEA,SAAS,GAAM,CAAQ,CAAE,CAAK,CAAE,CAAO,EACrC,OAAO,WACL,IAAoB,EAAhB,EAAK,IAAI,CAAC,KAAS,EA/BlB,SAAS,CAAK,EACnB,AA8BkD,EA9BzC,KAAK,IAAI,CAAE,EAAO,IAAI,CAAC,SAClC,EA8BE,GAAI,EAAI,CAAA,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,OAAQ,EAAI,EAAG,EAAE,EAC9C,GAAK,AAAA,CAAA,EAAI,CAAE,CAAC,EAAE,AAAF,EAAI,OAAS,EAAS,MAAQ,EAAE,OAAS,EAAS,KAAM,CAClE,IAAI,CAAC,oBAAoB,EAAE,KAAM,EAAE,SAAU,EAAE,SAC/C,IAAI,CAAC,iBAAiB,EAAE,KAAM,EAAE,SAAW,EAAU,EAAE,QAAU,GACjE,EAAE,MAAQ,EACV,MACF,CAAA,CAEF,IAAI,CAAC,iBAAiB,EAAS,KAAM,EAAU,GAC/C,EAAI,CAAC,KAAM,EAAS,KAAM,KAAM,EAAS,KAAM,MAAO,EAAO,SAAU,EAAU,QAAS,CAAO,EAC5F,EACA,EAAG,KAAK,GADJ,IAAI,CAAC,KAAO,CAAC,EAAE,AAE1B,CACF,CC5CA,SAAS,GAAc,CAAI,CAAE,CAAI,CAAE,CAAM,EACvC,IAAI,EAAS,AAAA,GAAY,GACrB,EAAQ,EAAO,WAEf,AAAiB,CAAA,YAAjB,OAAO,EACT,EAAQ,IAAI,EAAM,EAAM,IAExB,EAAQ,EAAO,SAAS,YAAY,SAChC,EAAQ,CAAA,EAAM,UAAU,EAAM,EAAO,QAAS,EAAO,YAAa,EAAM,OAAS,EAAO,MAA5F,EACK,EAAM,UAAU,EAAM,CAAA,EAAO,CAAA,IAGpC,EAAK,cAAc,EACrB,CAEA,SAAS,GAAiB,CAAI,CAAE,CAAM,EACpC,OAAO,WACL,OAAO,GAAc,IAAI,CAAE,EAAM,EACnC,CACF,CAEA,SAAS,GAAiB,CAAI,CAAE,CAAM,EACpC,OAAO,WACL,OAAO,GAAc,IAAI,CAAE,EAAM,EAAO,MAAM,IAAI,CAAE,WACtD,CACF,CZdA,GAAU,UAAY,CACpB,IAAK,SAAS,CAAI,EAER,EADA,IAAI,CAAC,OAAO,QAAQ,KAE1B,IAAI,CAAC,OAAO,KAAK,GACjB,IAAI,CAAC,MAAM,aAAa,QAAS,IAAI,CAAC,OAAO,KAAK,MAEtD,EACA,OAAQ,SAAS,CAAI,EACnB,IAAI,EAAI,IAAI,CAAC,OAAO,QAAQ,GACxB,GAAK,IACP,IAAI,CAAC,OAAO,OAAO,EAAG,GACtB,IAAI,CAAC,MAAM,aAAa,QAAS,IAAI,CAAC,OAAO,KAAK,MAEtD,EACA,SAAU,SAAS,CAAI,EACrB,OAAO,IAAI,CAAC,OAAO,QAAQ,IAAS,CACtC,CACF,E/BIO,IAAI,GAAO,CAAC,KAAK,CAEjB,SAAS,GAAU,CAAM,CAAE,CAAO,EACvC,IAAI,CAAC,QAAU,EACf,IAAI,CAAC,SAAW,CAClB,CAEA,SAAS,KACP,OAAO,IAAI,GAAU,CAAC,CAAC,SAAS,gBAAgB,CAAC,CAAE,GACrD,CD1Ce,SAAA,GAAS,CAAQ,EAC9B,MAAO,AAAoB,UAApB,OAAO,EACR,IAAI,GAAU,CAAC,CAAC,SAAS,cAAc,GAAU,CAAC,CAAE,CAAC,SAAS,gBAAgB,EAC9E,IAAI,GAAU,CAAC,CAAC,EAAS,CAAC,CAAE,GACpC,CC4CA,GAAU,UAAY,GAAU,UAAY,CAC1C,YAAa,GACb,OCjDa,SAAS,CAAM,EACN,YAAlB,OAAO,GAAuB,CAAA,EAAS,AAAA,GAAS,EAApD,EAEA,IAAK,IAAI,EAAS,IAAI,CAAC,QAAS,EAAI,EAAO,OAAQ,EAAY,AAAI,MAAM,GAAI,EAAI,EAAG,EAAI,EAAG,EAAE,EAC3F,IAAK,IAAiF,EAAM,EAAnF,EAAQ,CAAM,CAAC,EAAE,CAAE,EAAI,EAAM,OAAQ,EAAW,CAAS,CAAC,EAAE,CAAG,AAAI,MAAM,GAAmB,EAAI,EAAG,EAAI,EAAG,EAAE,EAC9G,CAAA,EAAO,CAAK,CAAC,EAAC,AAAD,GAAQ,CAAA,EAAU,EAAO,KAAK,EAAM,EAAK,SAAU,EAAG,EAAA,IAClE,aAAc,GAAM,CAAA,EAAQ,SAAW,EAAK,QAAhD,EACA,CAAQ,CAAC,EAAE,CAAG,GAKpB,OAAO,IAAI,GAAU,EAAW,IAAI,CAAC,SACvC,EDqCE,UG3Ca,SAAS,CAAM,EAC5B,GAAI,AAAkB,YAAlB,OAAO,EAAuB,KAPlB,EAAA,EAOoC,EAAlB,EAN3B,eCCqB,EDA1B,OCA0B,EDAb,EAAO,MAAM,IAAI,CAAE,WCC3B,AAAK,MAAL,EAAY,EAAE,CAAG,MAAM,QAAQ,GAAK,EAAI,MAAM,KAAK,EDA1D,CAIA,MACK,EAAS,AAAA,GAAY,GAE1B,IAAK,IAAI,EAAS,IAAI,CAAC,QAAS,EAAI,EAAO,OAAQ,EAAY,EAAE,CAAE,EAAU,EAAE,CAAE,EAAI,EAAG,EAAI,EAAG,EAAE,EAC/F,IAAK,IAAyC,EAArC,EAAQ,CAAM,CAAC,EAAE,CAAE,EAAI,EAAM,OAAc,EAAI,EAAG,EAAI,EAAG,EAAE,EAC9D,CAAA,EAAO,CAAK,CAAC,EAAE,AAAF,IACf,EAAU,KAAK,EAAO,KAAK,EAAM,EAAK,SAAU,EAAG,IACnD,EAAQ,KAAK,IAKnB,OAAO,IAAI,GAAU,EAAW,EAClC,EH8BE,YMxCa,SAAS,CAAK,MAVV,EAWjB,OAAO,IAAI,CAAC,OAAO,AAAS,MAAT,EAAgB,IAXlB,EAYD,AAAiB,YAAjB,OAAO,EAAuB,EAAQ,AAAA,GAAa,GAX5D,WACL,OAAO,GAAK,KAAK,IAAI,CAAC,SAAU,EAClC,GAUF,ENsCE,eQzCa,SAAS,CAAK,MANL,EAOtB,OAAO,IAAI,CAAC,UAAU,AAAS,MAAT,EAAgB,IAPhB,EAQD,AAAiB,YAAjB,OAAO,EAAuB,EAAQ,AAAA,GAAa,GAPjE,WACL,OAAO,GAAO,KAAK,IAAI,CAAC,SAAU,EACpC,GAMF,ERuCE,OSrDa,SAAS,CAAK,EACN,YAAjB,OAAO,GAAsB,CAAA,EAAQ,AAAA,GAAQ,EAAjD,EAEA,IAAK,IAAI,EAAS,IAAI,CAAC,QAAS,EAAI,EAAO,OAAQ,EAAY,AAAI,MAAM,GAAI,EAAI,EAAG,EAAI,EAAG,EAAE,EAC3F,IAAK,IAAuE,EAAnE,EAAQ,CAAM,CAAC,EAAE,CAAE,EAAI,EAAM,OAAQ,EAAW,CAAS,CAAC,EAAE,CAAG,EAAE,CAAQ,EAAI,EAAG,EAAI,EAAG,EAAE,EAC3F,CAAA,EAAO,CAAK,CAAC,EAAC,AAAD,GAAO,EAAM,KAAK,EAAM,EAAK,SAAU,EAAG,IAC1D,EAAS,KAAK,GAKpB,OAAO,IAAI,GAAU,EAAW,IAAI,CAAC,SACvC,ET0CE,KUqBa,SAAS,CAAK,CAAE,CAAG,EAChC,GAAI,CAAC,UAAU,OAAQ,OAAO,MAAM,KAAK,IAAI,CAAE,IAE/C,IAAI,EAAO,EAAM,GAAU,GACvB,EAAU,IAAI,CAAC,SACf,EAAS,IAAI,CAAC,OAEG,CAAA,YAAjB,OAAO,IGrFW,EHqF4B,EAAjB,EGpF1B,WACL,OAAO,CACT,GHoFA,IAAK,IAAI,EAAI,EAAO,OAAQ,EAAS,AAAI,MAAM,GAAI,EAAQ,AAAI,MAAM,GAAI,EAAO,AAAI,MAAM,GAAI,EAAI,EAAG,EAAI,EAAG,EAAE,EAAG,CAC/G,IAAI,EAAS,CAAO,CAAC,EAAE,CACnB,EAAQ,CAAM,CAAC,EAAE,CACjB,EAAc,EAAM,OACpB,EAiCC,AAAgB,UAAhB,OADU,EAhCM,EAAM,KAAK,EAAQ,GAAU,EAAO,SAAU,EAAG,KAiCrC,WAAY,EAC3C,EACA,MAAM,KAAK,GAlCT,EAAa,EAAK,OAClB,EAAa,CAAK,CAAC,EAAE,CAAG,AAAI,MAAM,GAClC,EAAc,CAAM,CAAC,EAAE,CAAG,AAAI,MAAM,GAGxC,EAAK,EAAQ,EAAO,EAAY,EAFhB,CAAI,CAAC,EAAE,CAAG,AAAI,MAAM,GAEoB,EAAM,GAK9D,IAAK,IGtGe,EH2HL,EArBU,EAAU,EAA1B,EAAK,EAAG,EAAK,EAAmB,EAAK,EAAY,EAAE,EAC1D,GAAI,EAAW,CAAU,CAAC,EAAG,CAAE,CAE7B,IADI,GAAM,GAAI,CAAA,EAAK,EAAK,CAAA,EACjB,CAAE,CAAA,EAAO,CAAW,CAAC,EAAE,AAAF,GAAQ,EAAE,EAAK,IAC3C,EAAS,MAAQ,GAAQ,IAC3B,CAEJ,CAKA,MAFA,AADA,CAAA,EAAS,IAAI,GAAU,EAAQ,EAA/B,EACO,OAAS,EAChB,EAAO,MAAQ,EACR,CACT,EVzDE,MWvDa,WACb,OAAO,IAAI,GAAU,IAAI,CAAC,QAAU,IAAI,CAAC,QAAQ,IAAI,IAAS,IAAI,CAAC,SACrE,EXsDE,KcxDa,WACb,OAAO,IAAI,GAAU,IAAI,CAAC,OAAS,IAAI,CAAC,QAAQ,IAAI,IAAS,IAAI,CAAC,SACpE,EduDE,Ke5Da,SAAS,CAAO,CAAE,CAAQ,CAAE,CAAM,EAC/C,IAAI,EAAQ,IAAI,CAAC,QAAS,EAAS,IAAI,CAAE,EAAO,IAAI,CAAC,OAYrD,MAXI,AAAmB,YAAnB,OAAO,EACT,CAAA,EAAQ,EAAQ,EAAhB,GACW,CAAA,EAAQ,EAAM,WAAzB,EAEA,EAAQ,EAAM,OAAO,EAAU,IAEjB,MAAZ,GACF,CAAA,EAAS,EAAS,EAAlB,GACY,CAAA,EAAS,EAAO,WAA5B,EAEE,AAAU,MAAV,EAAgB,EAAK,SAAe,EAAO,GACxC,GAAS,EAAS,EAAM,MAAM,GAAQ,QAAU,CACzD,Ef+CE,MgB3Da,SAAS,CAAO,EAG7B,IAAK,IAFD,EAAY,EAAQ,UAAY,EAAQ,YAAc,EAEjD,EAAU,IAAI,CAAC,QAAS,EAAU,EAAU,QAAS,EAAK,EAAQ,OAAQ,EAAK,EAAQ,OAAQ,EAAI,KAAK,IAAI,EAAI,GAAK,EAAS,AAAI,MAAM,GAAK,EAAI,EAAG,EAAI,EAAG,EAAE,EACpK,IAAK,IAAmG,EAA/F,EAAS,CAAO,CAAC,EAAE,CAAE,EAAS,CAAO,CAAC,EAAE,CAAE,EAAI,EAAO,OAAQ,EAAQ,CAAM,CAAC,EAAE,CAAG,AAAI,MAAM,GAAU,EAAI,EAAG,EAAI,EAAG,EAAE,EACxH,CAAA,EAAO,CAAM,CAAC,EAAE,EAAI,CAAM,CAAC,EAAE,AAAF,GAC7B,CAAA,CAAK,CAAC,EAAE,CAAG,CAFf,EAOF,KAAO,EAAI,EAAI,EAAE,EACf,CAAM,CAAC,EAAE,CAAG,CAAO,CAAC,EAAE,CAGxB,OAAO,IAAI,GAAU,EAAQ,IAAI,CAAC,SACpC,EhB4CE,UAhBF,WACE,OAAO,IAAI,AACb,EAeE,MiB/Da,WAEb,IAAK,IAAI,EAAS,IAAI,CAAC,QAAS,EAAI,GAAI,EAAI,EAAO,OAAQ,EAAE,EAAI,GAC/D,IAAK,IAA8D,EAA1D,EAAQ,CAAM,CAAC,EAAE,CAAE,EAAI,EAAM,OAAS,EAAG,EAAO,CAAK,CAAC,EAAE,CAAQ,EAAE,GAAK,GAC1E,CAAA,EAAO,CAAK,CAAC,EAAE,AAAF,IACX,GAAQ,AAAqC,EAArC,EAAK,wBAAwB,IAAW,EAAK,WAAW,aAAa,EAAM,GACvF,EAAO,GAKb,OAAO,IAAI,AACb,EjBoDE,KkB9Da,SAAS,CAAO,EAG7B,SAAS,EAAY,CAAC,CAAE,CAAC,EACvB,OAAO,GAAK,EAAI,EAAQ,EAAE,SAAU,EAAE,UAAY,CAAC,EAAI,CAAC,CAC1D,CAJK,GAAS,CAAA,EAAU,EAAxB,EAMA,IAAK,IAAI,EAAS,IAAI,CAAC,QAAS,EAAI,EAAO,OAAQ,EAAa,AAAI,MAAM,GAAI,EAAI,EAAG,EAAI,EAAG,EAAE,EAAG,CAC/F,IAAK,IAAmF,EAA/E,EAAQ,CAAM,CAAC,EAAE,CAAE,EAAI,EAAM,OAAQ,EAAY,CAAU,CAAC,EAAE,CAAG,AAAI,MAAM,GAAU,EAAI,EAAG,EAAI,EAAG,EAAE,EACxG,CAAA,EAAO,CAAK,CAAC,EAAE,AAAF,GACf,CAAA,CAAS,CAAC,EAAE,CAAG,CAFnB,EAKA,EAAU,KAAK,EACjB,CAEA,OAAO,IAAI,GAAU,EAAY,IAAI,CAAC,UAAU,OAClD,ElB8CE,KmBjEa,WACb,IAAI,EAAW,SAAS,CAAC,EAAE,CAG3B,OAFA,SAAS,CAAC,EAAE,CAAG,IAAI,CACnB,EAAS,MAAM,KAAM,WACd,IAAI,AACb,EnB6DE,MoBlEa,WACb,OAAO,MAAM,KAAK,IAAI,CACxB,EpBiEE,KqBnEa,WAEb,IAAK,IAAI,EAAS,IAAI,CAAC,QAAS,EAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,EAAE,EACjE,IAAK,IAAI,EAAQ,CAAM,CAAC,EAAE,CAAE,EAAI,EAAG,EAAI,EAAM,OAAQ,EAAI,EAAG,EAAE,EAAG,CAC/D,IAAI,EAAO,CAAK,CAAC,EAAE,CACnB,GAAI,EAAM,OAAO,CACnB,CAGF,OAAO,IACT,ErB0DE,KsBpEa,WACb,IAAI,EAAO,EACX,IAAK,IAAM,KAAQ,IAAI,CAAE,EAAE,EAC3B,OAAO,CACT,EtBiEE,MuBrEa,WACb,MAAO,CAAC,IAAI,CAAC,MACf,EvBoEE,KwBtEa,SAAS,CAAQ,EAE9B,IAAK,IAAI,EAAS,IAAI,CAAC,QAAS,EAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,EAAE,EACjE,IAAK,IAAgD,EAA5C,EAAQ,CAAM,CAAC,EAAE,CAAE,EAAI,EAAG,EAAI,EAAM,OAAc,EAAI,EAAG,EAAE,EAC9D,CAAA,EAAO,CAAK,CAAC,EAAE,AAAF,GAAI,EAAS,KAAK,EAAM,EAAK,SAAU,EAAG,GAI/D,OAAO,IAAI,AACb,ExB8DE,KyB7Ba,SAAS,CAAI,CAAE,CAAK,EACjC,IAAI,EAAW,AAAA,GAAU,GAEzB,GAAI,UAAU,OAAS,EAAG,CACxB,IAAI,EAAO,IAAI,CAAC,OAChB,OAAO,EAAS,MACV,EAAK,eAAe,EAAS,MAAO,EAAS,OAC7C,EAAK,aAAa,EAC1B,CAEA,OAAO,IAAI,CAAC,KAAM,AAAA,CAAA,AAAS,MAAT,EACX,EAAS,MAAQ,GAAe,GAAe,AAAiB,YAAjB,OAAO,EACtD,EAAS,MAAQ,GAAiB,GAClC,EAAS,MAAQ,GAAiB,EAAA,EAAgB,EAAU,GACrE,EzBgBE,M4BlDa,SAAS,CAAI,CAAE,CAAK,CAAE,CAAQ,EAC3C,OAAO,UAAU,OAAS,EACpB,IAAI,CAAC,KAAK,AAAC,CAAA,AAAS,MAAT,EACL,GAAc,AAAiB,YAAjB,OAAO,EACrB,GACA,EAAA,EAAe,EAAM,EAAO,AAAY,MAAZ,EAAmB,GAAK,IAC1D,GAAW,IAAI,CAAC,OAAQ,EAChC,E5B4CE,S8BrDa,SAAS,CAAI,CAAE,CAAK,EACjC,OAAO,UAAU,OAAS,EACpB,IAAI,CAAC,KAAM,AAAA,CAAA,AAAS,MAAT,EACP,GAAiB,AAAiB,YAAjB,OAAO,EACxB,GACA,EAAA,EAAkB,EAAM,IAC5B,IAAI,CAAC,MAAM,CAAC,EAAK,AACzB,E9B+CE,Q+Bba,SAAS,CAAI,CAAE,CAAK,EACjC,IAAI,EAAQ,GAAW,EAAO,IAE9B,GAAI,UAAU,OAAS,EAAG,CAExB,IADA,IAAI,EAAO,GAAU,IAAI,CAAC,QAAS,EAAI,GAAI,EAAI,EAAM,OAC9C,EAAE,EAAI,GAAG,GAAI,CAAC,EAAK,SAAS,CAAK,CAAC,EAAE,EAAG,MAAO,CAAA,EACrD,MAAO,CAAA,CACT,CAEA,OAAO,IAAI,CAAC,KAAK,AAAC,CAAA,AAAiB,YAAjB,OAAO,EACnB,GAAkB,EAClB,GACA,EAAA,EAAc,EAAO,GAC7B,E/BCE,KgC1Da,SAAS,CAAK,EAC3B,OAAO,UAAU,OACX,IAAI,CAAC,KAAK,AAAS,MAAT,EACN,GAAc,AAAA,CAAA,AAAiB,YAAjB,OAAO,EACrB,GACA,EAAA,EAAc,IAClB,IAAI,CAAC,OAAO,WACpB,EhCoDE,KiC3Da,SAAS,CAAK,EAC3B,OAAO,UAAU,OACX,IAAI,CAAC,KAAK,AAAS,MAAT,EACN,GAAc,AAAA,CAAA,AAAiB,YAAjB,OAAO,EACrB,GACA,EAAA,EAAc,IAClB,IAAI,CAAC,OAAO,SACpB,EjCqDE,MkCzEa,WACb,OAAO,IAAI,CAAC,KAAK,GACnB,ElCwEE,MmC1Ea,WACb,OAAO,IAAI,CAAC,KAAK,GACnB,EnCyEE,OoC7Ea,SAAS,CAAI,EAC1B,IAAI,EAAS,AAAgB,YAAhB,OAAO,EAAsB,EAAO,AAAA,GAAQ,GACzD,OAAO,IAAI,CAAC,OAAO,WACjB,OAAO,IAAI,CAAC,YAAY,EAAO,MAAM,IAAI,CAAE,WAC7C,EACF,EpCyEE,OsCzEa,SAAS,CAAI,CAAE,CAAM,EAClC,IAAI,EAAS,AAAgB,YAAhB,OAAO,EAAsB,EAAO,AAAA,GAAQ,GACrD,EAAS,AAAU,MAAV,EAAiB,GAAe,AAAkB,YAAlB,OAAO,EAAwB,EAAS,AAAA,GAAS,GAC9F,OAAO,IAAI,CAAC,OAAO,WACjB,OAAO,IAAI,CAAC,aAAa,EAAO,MAAM,IAAI,CAAE,WAAY,EAAO,MAAM,IAAI,CAAE,YAAc,KAC3F,EACF,EtCoEE,OuC5Ea,WACb,OAAO,IAAI,CAAC,KAAK,GACnB,EvC2EE,MwCxEa,SAAS,CAAI,EAC1B,OAAO,IAAI,CAAC,OAAO,EAAO,GAAsB,GAClD,ExCuEE,MyCnFa,SAAS,CAAK,EAC3B,OAAO,UAAU,OACX,IAAI,CAAC,SAAS,WAAY,GAC1B,IAAI,CAAC,OAAO,QACpB,EzCgFE,G0CpCa,SAAS,CAAQ,CAAE,CAAK,CAAE,CAAO,EAC9C,IAA+C,EAAyB,EAApE,EA1CG,AA0CwB,CAAA,EAAW,EAAA,EA1CzB,OAAO,MAAM,SAAS,IAAI,SAAS,CAAC,EACnD,IAAI,EAAO,GAAI,EAAI,EAAE,QAAQ,KAE7B,OADI,GAAK,GAAG,CAAA,EAAO,EAAE,MAAM,EAAI,GAAI,EAAI,EAAE,MAAM,EAAG,EAAlD,EACO,CAAC,KAAM,EAAG,KAAM,CAAI,CAC7B,GAsCkD,EAAI,EAAU,OAEhE,GAAI,UAAU,OAAS,EAAG,CACxB,IAAI,EAAK,IAAI,CAAC,OAAO,KACrB,GAAI,EAAI,CAAA,IAAK,IAA0B,EAAtB,EAAI,EAAG,EAAI,EAAG,OAAW,EAAI,EAAG,EAAE,EACjD,IAAK,EAAI,EAAG,EAAI,CAAE,CAAC,EAAE,CAAE,EAAI,EAAG,EAAE,EAC9B,GAAK,AAAA,CAAA,EAAI,CAAS,CAAC,EAAE,AAAF,EAAI,OAAS,EAAE,MAAQ,EAAE,OAAS,EAAE,KACrD,OAAO,EAAE,KAEb,CAEF,MACF,CAGA,IAAK,EAAI,EADT,EAAK,EAAQ,GAAQ,GACT,EAAI,EAAG,EAAE,EAAG,IAAI,CAAC,KAAK,EAAG,CAAS,CAAC,EAAE,CAAE,EAAO,IAC1D,OAAO,IAAI,AACb,E1CmBE,S2CxDa,SAAS,CAAI,CAAE,CAAM,EAClC,OAAO,IAAI,CAAC,KAAM,AAAA,CAAA,AAAkB,YAAlB,OAAO,EACnB,GACA,EAAA,EAAkB,EAAM,GAChC,E3CqDE,CAAC,OAAO,SAAS,C4CtFJ,YACb,IAAK,IAAI,EAAS,IAAI,CAAC,QAAS,EAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,EAAE,EACjE,IAAK,IAAgD,EAA5C,EAAQ,CAAM,CAAC,EAAE,CAAE,EAAI,EAAG,EAAI,EAAM,OAAc,EAAI,EAAG,EAAE,EAC9D,CAAA,EAAO,CAAK,CAAC,EAAE,AAAF,GAAI,CAAA,MAAM,CAD7B,CAIJ,C5CiFA,EkDvFA,IAAI,GAAO,CAAC,MAAO,KAAO,CAAC,EAE3B,SAAS,KACP,IAAK,IAAyC,EAArC,EAAI,EAAG,EAAI,UAAU,OAAQ,EAAI,CAAC,EAAM,EAAI,EAAG,EAAE,EAAG,CAC3D,GAAI,CAAE,CAAA,EAAI,SAAS,CAAC,EAAE,CAAG,EAAA,GAAQ,KAAK,GAAM,QAAQ,KAAK,GAAI,MAAM,AAAI,MAAM,iBAAmB,EAChG,CAAA,CAAC,CAAC,EAAE,CAAG,EAAE,AACX,CACA,OAAO,IAAI,GAAS,EACtB,CAEA,SAAS,GAAS,CAAC,EACjB,IAAI,CAAC,EAAI,CACX,CA4DA,SAAS,GAAI,CAAI,CAAE,CAAI,CAAE,CAAQ,EAC/B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,OAAQ,EAAI,EAAG,EAAE,EACxC,GAAI,CAAI,CAAC,EAAE,CAAC,OAAS,EAAM,CACzB,CAAI,CAAC,EAAE,CAAG,GAAM,EAAO,EAAK,MAAM,EAAG,GAAG,OAAO,EAAK,MAAM,EAAI,IAC9D,KACF,CAGF,OADgB,MAAZ,GAAkB,EAAK,KAAK,CAAC,KAAM,EAAM,MAAO,CAAQ,GACrD,CACT,CA1DA,GAAS,UAAY,GAAS,UAAY,CACxC,YAAa,GACb,GAAI,SAAS,CAAQ,CAAE,CAAQ,EAC7B,IAEI,EAFA,EAAI,IAAI,CAAC,EACT,EAZC,AAYkB,CAAA,EAAW,EAAA,EAZnB,OAAO,MAAM,SAAS,IAAI,SAAS,CAAC,EACnD,IAAI,EAAO,GAAI,EAAI,EAAE,QAAQ,KAE7B,GADI,GAAK,GAAG,CAAA,EAAO,EAAE,MAAM,EAAI,GAAI,EAAI,EAAE,MAAM,EAAG,EAAlD,EACI,GAAK,CAAC,AAS4B,EATtB,eAAe,GAAI,MAAM,AAAI,MAAM,iBAAmB,GACtE,MAAO,CAAC,KAAM,EAAG,KAAM,CAAI,CAC7B,GASM,EAAI,GACJ,EAAI,EAAE,OAGV,GAAI,UAAU,OAAS,EAAG,CACxB,KAAO,EAAE,EAAI,GAAG,GAAI,AAAC,CAAA,EAAK,AAAA,CAAA,EAAW,CAAC,CAAC,EAAC,AAAD,EAAI,IAAA,GAAU,CAAA,EAAI,AA8B/D,SAAa,CAAI,CAAE,CAAI,EACrB,IAAK,IAA4B,EAAxB,EAAI,EAAG,EAAI,EAAK,OAAW,EAAI,EAAG,EAAE,EAC3C,GAAI,AAAC,CAAA,EAAI,CAAI,CAAC,EAAE,AAAF,EAAI,OAAS,EACzB,OAAO,EAAE,KAGf,EApCmE,CAAC,CAAC,EAAE,CAAE,EAAS,KAAA,EAAQ,OAAO,EAC3F,MACF,CAIA,GAAI,AAAY,MAAZ,GAAoB,AAAoB,YAApB,OAAO,EAAyB,MAAM,AAAI,MAAM,qBAAuB,GAC/F,KAAO,EAAE,EAAI,GACX,GAAI,EAAI,AAAC,CAAA,EAAW,CAAC,CAAC,EAAE,AAAF,EAAI,KAAM,CAAC,CAAC,EAAE,CAAG,GAAI,CAAC,CAAC,EAAE,CAAE,EAAS,KAAM,QAC3D,GAAI,AAAY,MAAZ,EAAkB,IAAK,KAAK,EAAG,CAAC,CAAC,EAAE,CAAG,GAAI,CAAC,CAAC,EAAE,CAAE,EAAS,KAAM,MAG1E,OAAO,IAAI,AACb,EACA,KAAM,WACJ,IAAI,EAAO,CAAC,EAAG,EAAI,IAAI,CAAC,EACxB,IAAK,IAAI,KAAK,EAAG,CAAI,CAAC,EAAE,CAAG,CAAC,CAAC,EAAE,CAAC,QAChC,OAAO,IAAI,GAAS,EACtB,EACA,KAAM,SAAS,CAAI,CAAE,CAAI,EACvB,GAAK,AAAA,CAAA,EAAI,UAAU,OAAS,CAAA,EAAK,EAAG,IAAK,IAAgC,EAAG,EAA/B,EAAO,AAAI,MAAM,GAAI,EAAI,EAAS,EAAI,EAAG,EAAE,EAAG,CAAI,CAAC,EAAE,CAAG,SAAS,CAAC,EAAI,EAAE,CACrH,GAAI,CAAC,IAAI,CAAC,EAAE,eAAe,GAAO,MAAM,AAAI,MAAM,iBAAmB,GACrE,IAAK,EAAI,IAAI,CAAC,CAAC,CAAC,EAAK,CAAE,EAAI,EAAG,EAAI,EAAE,OAAQ,EAAI,EAAG,EAAE,EAAG,CAAC,CAAC,EAAE,CAAC,MAAM,MAAM,EAAM,EACjF,EACA,MAAO,SAAS,CAAI,CAAE,CAAI,CAAE,CAAI,EAC9B,GAAI,CAAC,IAAI,CAAC,EAAE,eAAe,GAAO,MAAM,AAAI,MAAM,iBAAmB,GACrE,IAAK,IAAI,EAAI,IAAI,CAAC,CAAC,CAAC,EAAK,CAAE,EAAI,EAAG,EAAI,EAAE,OAAQ,EAAI,EAAG,EAAE,EAAG,CAAC,CAAC,EAAE,CAAC,MAAM,MAAM,EAAM,EACrF,CACF,EE9DA,IrEEW,GTAP,GACO,GACA,G8EAP,GACA,GALA,GAAQ,EACR,GAAU,EACV,GAAW,EAIX,GAAY,EACZ,GAAW,EACX,GAAY,EACZ,GAAQ,AAAuB,UAAvB,OAAO,aAA4B,YAAY,IAAM,YAAc,KAC3E,GAAW,AAAkB,UAAlB,OAAO,QAAuB,OAAO,sBAAwB,OAAO,sBAAsB,KAAK,QAAU,SAAS,CAAC,EAAI,WAAW,EAAG,GAAK,EAElJ,SAAS,KACd,OAAO,IAAa,CAAA,GAAS,IAAW,GAAW,GAAM,MAAQ,EAAA,CACnE,CAEA,SAAS,KACP,GAAW,CACb,CAEO,SAAS,KACd,IAAI,CAAC,MACL,IAAI,CAAC,MACL,IAAI,CAAC,MAAQ,IACf,CAyBO,SAAS,GAAM,CAAQ,CAAE,CAAK,CAAE,CAAI,EACzC,IAAI,EAAI,IAAI,GAEZ,OADA,EAAE,QAAQ,EAAU,EAAO,GACpB,CACT,CAaA,SAAS,KACP,GAAY,AAAA,CAAA,GAAY,GAAM,KAAA,EAAS,GACvC,GAAQ,GAAU,EAClB,GAAI,EACF,AAfG,WACL,KACA,EAAE,GAEF,IADA,IAAkB,EAAd,EAAI,GACD,GACA,CAAA,EAAI,GAAW,EAAE,KAAA,GAAU,GAAG,EAAE,MAAM,KAAK,KAAA,EAAW,GAC3D,EAAI,EAAE,KAER,GAAE,EACJ,GAOE,QAAU,CACR,GAAQ,EACR,AAUJ,WAEE,IADA,IAAI,EAAmB,EAAf,EAAK,GAAc,EAAO,IAC3B,GACD,EAAG,OACD,EAAO,EAAG,OAAO,CAAA,EAAO,EAAG,KAA/B,EACA,EAAK,EAAI,EAAK,EAAG,QAEjB,EAAK,EAAG,MAAO,EAAG,MAAQ,KAC1B,EAAK,EAAK,EAAG,MAAQ,EAAK,GAAW,GAGzC,GAAW,EACX,GAAM,EACR,IAtBI,GAAW,CACb,CACF,CAEA,SAAS,KACP,IAAI,EAAM,GAAM,MAAO,EAAQ,EAAM,GACjC,EA7EU,KA6ES,CAAA,IAAa,EAAO,GAAY,CAAvD,CACF,CAiBA,SAAS,GAAM,CAAI,GACb,KACA,IAAS,CAAA,GAAU,aAAa,GAApC,EAEI,AADQ,EAAO,GACP,IACN,EAAO,KAAU,CAAA,GAAU,WAAW,GAAM,EAAO,GAAM,MAAQ,GAArE,EACI,IAAU,CAAA,GAAW,cAAc,GAAvC,IAEK,IAAU,CAAA,GAAY,GAAM,MAAO,GAAW,YAAY,GAvGnD,IAuGZ,EACA,GAAQ,EAAG,GAAS,KAExB,CD3Ge,SAAA,GAAS,CAAQ,CAAE,CAAK,CAAE,CAAI,EAC3C,IAAI,EAAI,IAAI,GAMZ,OALA,EAAQ,AAAS,MAAT,EAAgB,EAAI,CAAC,EAC7B,EAAE,QAAQ,AAAA,IACR,EAAE,OACF,EAAS,EAAU,EACrB,EAAG,EAAO,GACH,CACT,CCgBA,GAAM,UAAY,GAAM,UAAY,CAClC,YAAa,GACb,QAAS,SAAS,CAAQ,CAAE,CAAK,CAAE,CAAI,EACrC,GAAI,AAAoB,YAApB,OAAO,EAAyB,MAAM,AAAI,UAAU,8BACxD,EAAQ,AAAA,CAAA,AAAQ,MAAR,EAAe,KAAQ,CAAC,CAAA,EAAS,CAAA,AAAS,MAAT,EAAgB,EAAI,CAAC,CAAA,EACzD,IAAI,CAAC,OAAS,KAAa,IAAI,GAC9B,GAAU,GAAS,MAAQ,IAAI,CAC9B,GAAW,IAAI,CACpB,GAAW,IAAI,EAEjB,IAAI,CAAC,MAAQ,EACb,IAAI,CAAC,MAAQ,EACb,IACF,EACA,KAAM,WACA,IAAI,CAAC,QACP,IAAI,CAAC,MAAQ,KACb,IAAI,CAAC,MAAQ,IACb,KAEJ,CACF,EH5CA,IAAI,GAAU,ACgFC,GDhFQ,QAAS,MAAO,SAAU,aAC7C,GAAa,EAAE,CAUJ,SAAA,GAAS,CAAI,CAAE,CAAI,CAAE,CAAE,CAAE,CAAK,CAAE,CAAK,CAAE,CAAM,EAC1D,IAAI,EAAY,EAAK,aACrB,GAAK,EACA,CAAA,GAAI,KAAM,EAAW,MAArB,MADW,EAAK,aAAe,CAAC,GAErC,AAiCF,SAAgB,CAAI,CAAE,CAAE,CAAE,CAAI,EAC5B,IACI,EADA,EAAY,EAAK,aAgBrB,SAAS,EAAM,CAAO,EACpB,IAAI,EAAG,EAAG,EAAG,EAGb,GAAI,AAjEe,IAiEf,EAAK,MAAqB,OAAO,IAErC,IAAK,KAAK,EAER,GAAI,AADJ,CAAA,EAAI,CAAS,CAAC,EAAE,AAAF,EACR,OAAS,EAAK,MAKpB,GAAI,AAxEW,IAwEX,EAAE,MAAmB,OAAO,AAAA,GAAQ,EAGpC,AA1EW,CAAA,IA0EX,EAAE,OACJ,EAAE,MAzES,EA0EX,EAAE,MAAM,OACR,EAAE,GAAG,KAAK,YAAa,EAAM,EAAK,SAAU,EAAE,MAAO,EAAE,OACvD,OAAO,CAAS,CAAC,EAAE,EAIZ,CAAC,EAAI,IACZ,EAAE,MAjFS,EAkFX,EAAE,MAAM,OACR,EAAE,GAAG,KAAK,SAAU,EAAM,EAAK,SAAU,EAAE,MAAO,EAAE,OACpD,OAAO,CAAS,CAAC,EAAE,EAoBvB,GAZA,AAAA,GAAQ,WA/FS,IAgGX,EAAK,QACP,EAAK,MAhGQ,EAiGb,EAAK,MAAM,QAAQ,EAAM,EAAK,MAAO,EAAK,MAC1C,EAAK,GAET,GAIA,EAAK,MA1Ga,EA2GlB,EAAK,GAAG,KAAK,QAAS,EAAM,EAAK,SAAU,EAAK,MAAO,EAAK,OACxD,AA5Gc,IA4Gd,EAAK,OAKT,IAAK,EAAI,EAJT,EAAK,MA5GY,EA+GjB,EAAQ,AAAI,MAAM,EAAI,EAAK,MAAM,QACrB,EAAI,GAAI,EAAI,EAAG,EAAE,EACvB,CAAA,EAAI,EAAK,KAAK,CAAC,EAAE,CAAC,MAAM,KAAK,EAAM,EAAK,SAAU,EAAK,MAAO,EAAK,MAAA,GACrE,CAAA,CAAK,CAAC,EAAE,EAAE,CAAG,CAAA,CAGjB,CAAA,EAAM,OAAS,EAAI,EACrB,CAEA,SAAS,EAAK,CAAO,EAKnB,IAJA,IAAI,EAAI,EAAU,EAAK,SAAW,EAAK,KAAK,KAAK,KAAM,EAAU,EAAK,UAAa,CAAA,EAAK,MAAM,QAAQ,GAAO,EAAK,MAvHlG,EAuHkH,CAAA,EAC9H,EAAI,GACJ,EAAI,EAAM,OAEP,EAAE,EAAI,GACX,CAAK,CAAC,EAAE,CAAC,KAAK,EAAM,EA5HN,CAAA,IAgIZ,EAAK,QACP,EAAK,GAAG,KAAK,MAAO,EAAM,EAAK,SAAU,EAAK,MAAO,EAAK,OAC1D,IAEJ,CAEA,SAAS,IAIP,IAAK,IAAI,KAHT,EAAK,MAtIU,EAuIf,EAAK,MAAM,OACX,OAAO,CAAS,CAAC,EAAG,CACN,EAAW,MACzB,QAAO,EAAK,YACd,CA9FA,CAAS,CAAC,EAAG,CAAG,EAChB,EAAK,MAAQ,AAAA,GAEb,SAAkB,CAAO,EACvB,EAAK,MAtDc,EAuDnB,EAAK,MAAM,QAAQ,EAAO,EAAK,MAAO,EAAK,MAGvC,EAAK,OAAS,GAAS,EAAM,EAAU,EAAK,MAClD,EAR6B,EAAG,EAAK,KA8FvC,EAtIS,EAAM,EAAI,CACf,KAAM,EACN,MAAO,EACP,MAAO,EACP,GAAI,GACJ,MAAO,GACP,KAAM,EAAO,KACb,MAAO,EAAO,MACd,SAAU,EAAO,SACjB,KAAM,EAAO,KACb,MAAO,KACP,MAvBiB,CAwBnB,EACF,CAEO,SAAS,GAAK,CAAI,CAAE,CAAE,EAC3B,IAAI,EAAW,GAAI,EAAM,GACzB,GAAI,EAAS,MA7BM,EA6BW,MAAM,AAAI,MAAM,+BAC9C,OAAO,CACT,CAEO,SAAS,GAAI,CAAI,CAAE,CAAE,EAC1B,IAAI,EAAW,GAAI,EAAM,GACzB,GAAI,EAAS,MAhCM,EAgCW,MAAM,AAAI,MAAM,6BAC9C,OAAO,CACT,CAEO,SAAS,GAAI,CAAI,CAAE,CAAE,EAC1B,IAAI,EAAW,EAAK,aACpB,GAAI,CAAC,GAAY,CAAE,CAAA,EAAW,CAAQ,CAAC,EAAG,AAAH,EAAM,MAAM,AAAI,MAAM,wBAC7D,OAAO,CACT,CD/Ce,SAAA,GAAS,CAAI,CAAE,CAAI,EAChC,IACI,EACA,EAEA,EAJA,EAAY,EAAK,aAGjB,EAAQ,CAAA,EAGZ,GAAK,GAIL,IAAK,KAFL,EAAO,AAAQ,MAAR,EAAe,KAAO,EAAO,GAE1B,EAAW,CACnB,GAAI,AAAC,CAAA,EAAW,CAAS,CAAC,EAAC,AAAD,EAAI,OAAS,EAAM,CAAE,EAAQ,CAAA,EAAO,QAAU,CACxE,EAAS,EAAS,MCPA,GDOoB,EAAS,MCJ/B,EDKhB,EAAS,MCJM,EDKf,EAAS,MAAM,OACf,EAAS,GAAG,KAAK,EAAS,YAAc,SAAU,EAAM,EAAK,SAAU,EAAS,MAAO,EAAS,OAChG,OAAO,CAAS,CAAC,EAAE,AACrB,CAEI,GAAO,OAAO,EAAK,aACzB,CUvBA,IAAI,GAAU,IAAM,KAAK,GAEd,GAAW,CACpB,WAAY,EACZ,WAAY,EACZ,OAAQ,EACR,MAAO,EACP,OAAQ,EACR,OAAQ,CACV,EAEe,SAAA,GAAS,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,EACtC,IAAI,EAAQ,EAAQ,EAKpB,MAJI,CAAA,EAAS,KAAK,KAAK,EAAI,EAAI,EAAI,EAAA,GAAI,CAAA,GAAK,EAAQ,GAAK,CAAzD,EACI,CAAA,EAAQ,EAAI,EAAI,EAAI,CAAA,GAAG,CAAA,GAAK,EAAI,EAAO,GAAK,EAAI,CAApD,EACI,CAAA,EAAS,KAAK,KAAK,EAAI,EAAI,EAAI,EAAA,GAAI,CAAA,GAAK,EAAQ,GAAK,EAAQ,GAAS,CAA1E,EACI,EAAI,EAAI,EAAI,GAAG,CAAA,EAAI,CAAC,EAAG,EAAI,CAAC,EAAG,EAAQ,CAAC,EAAO,EAAS,CAAC,CAA7D,EACO,CACL,WAAY,EACZ,WAAY,EACZ,OAAQ,KAAK,MAAM,EAAG,GAAK,GAC3B,MAAO,KAAK,KAAK,GAAS,GAC1B,OAAQ,EACR,OAAQ,CACV,CACF,CFtBA,SAAS,GAAqB,CAAK,CAAE,CAAO,CAAE,CAAO,CAAE,CAAQ,EAE7D,SAAS,EAAI,CAAC,EACZ,OAAO,EAAE,OAAS,EAAE,MAAQ,IAAM,EACpC,CAqCA,OAAO,SAAS,CAAC,CAAE,CAAC,EAClB,IA3Bc,EAAG,EASJ,EAAG,EAkBZ,EAAI,EAAE,CACN,EAAI,EAAE,CAOV,OANA,EAAI,EAAM,GAAI,EAAI,EAAM,IACxB,AAvCF,SAAmB,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAC,CAAE,CAAC,EACrC,GAAI,IAAO,GAAM,IAAO,EAAI,CAC1B,IAAI,EAAI,EAAE,KAAK,aAAc,KAAM,EAAS,KAAM,GAClD,EAAE,KAAK,CAAC,EAAG,EAAI,EAAG,EAAG,AAAA,GAAO,EAAI,EAAG,EAAG,CAAC,EAAG,EAAI,EAAG,EAAG,AAAA,GAAO,EAAI,EAAG,EACpE,KAAW,CAAA,GAAM,CAAA,GACf,EAAE,KAAK,aAAe,EAAK,EAAU,EAAK,EAE9C,EAgCY,EAAE,WAAY,EAAE,WAAY,EAAE,WAAY,EAAE,WAAY,EAAG,GA7BjE,CADU,EA+BP,EAAE,WA/BQ,EA+BA,EAAE,SA7Bb,EAAI,EAAI,IAAK,GAAK,IAAc,EAAI,EAAI,KAAK,CAAA,GAAK,GAAA,EACtD,AA4B4B,EA5B1B,KAAK,CAAC,EAAG,AA4Bc,EA5BZ,KAAK,EA4BO,GA5BE,UAAW,KAAM,GAAY,EAAG,EAAG,AAAA,GAAO,EAAG,EAAE,IACjE,GACT,AA0ByB,EA1BvB,KAAK,EA0BkB,GA1BT,UAAY,EAAI,GAK9B,CADS,EAuBP,EAAE,UAvBQ,EAuBD,EAAE,OArBf,AAqByB,EArBvB,KAAK,CAAC,EAAG,AAqBW,EArBT,KAAK,EAqBI,GArBK,SAAU,KAAM,GAAY,EAAG,EAAG,AAAA,GAAO,EAAG,EAAE,GAChE,GACT,AAmBsB,EAnBpB,KAAK,EAmBe,GAnBN,SAAW,EAAI,IAoBjC,AAhBF,SAAe,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAC,CAAE,CAAC,EACjC,GAAI,IAAO,GAAM,IAAO,EAAI,CAC1B,IAAI,EAAI,EAAE,KAAK,EAAI,GAAK,SAAU,KAAM,IAAK,KAAM,KACnD,EAAE,KAAK,CAAC,EAAG,EAAI,EAAG,EAAG,AAAA,GAAO,EAAI,EAAG,EAAG,CAAC,EAAG,EAAI,EAAG,EAAG,AAAA,GAAO,EAAI,EAAG,EACpE,KAAW,CAAA,AAAO,IAAP,GAAY,AAAO,IAAP,CAAO,GAC5B,EAAE,KAAK,EAAI,GAAK,SAAW,EAAK,IAAM,EAAK,IAE/C,EASQ,EAAE,OAAQ,EAAE,OAAQ,EAAE,OAAQ,EAAE,OAAQ,EAAG,GACjD,EAAI,EAAI,KACD,SAAS,CAAC,EAEf,IADA,IAA0B,EAAtB,EAAI,GAAI,EAAI,EAAE,OACX,EAAE,EAAI,GAAG,CAAC,CAAE,AAAA,CAAA,EAAI,CAAC,CAAC,EAAE,AAAF,EAAI,EAAE,CAAG,EAAE,EAAE,GACtC,OAAO,EAAE,KAAK,GAChB,CACF,CACF,CAEO,IAAI,GAA0B,GCxD9B,SAAkB,CAAK,EAC5B,IAAM,EAAI,GAAK,CAAA,AAAqB,YAArB,OAAO,UAA2B,UAAY,eAAA,EAAiB,EAAQ,IACtF,OAAO,EAAE,WAAa,GAAW,AAAA,GAAU,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EACxE,EDqDoE,OAAQ,MAAO,QACxE,GAA0B,GCpD9B,SAAkB,CAAK,SAC5B,AAAI,AAAS,MAAT,EAAsB,IACrB,GAAS,CAAA,EAAU,SAAS,gBAAgB,6BAA8B,IAA/E,EACA,EAAQ,aAAa,YAAa,GAC5B,EAAQ,EAAQ,UAAU,QAAQ,eAEjC,AAAA,GAAU,AADjB,CAAA,EAAQ,EAAM,MAAd,EACuB,EAAG,EAAM,EAAG,EAAM,EAAG,EAAM,EAAG,EAAM,EAAG,EAAM,GAFL,EAGjE,ED6CoE,KAAM,IAAK,KG5D/E,SAAS,GAAY,CAAE,CAAE,CAAI,EAC3B,IAAI,EAAQ,EACZ,OAAO,WACL,IAAI,EAAW,AAAA,GAAI,IAAI,CAAE,GACrB,EAAQ,EAAS,MAKrB,GAAI,IAAU,EAAQ,CACpB,EAAS,EAAS,EAClB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,EAAE,EAC1C,GAAI,CAAM,CAAC,EAAE,CAAC,OAAS,EAAM,CAE3B,AADA,CAAA,EAAS,EAAO,OAAhB,EACO,OAAO,EAAG,GACjB,KACF,CAEJ,CAEA,EAAS,MAAQ,CACnB,CACF,CAEA,SAAS,GAAc,CAAE,CAAE,CAAI,CAAE,CAAK,EACpC,IAAI,EAAQ,EACZ,GAAI,AAAiB,YAAjB,OAAO,EAAsB,MAAM,AAAI,QAC3C,OAAO,WACL,IAAI,EAAW,AAAA,GAAI,IAAI,CAAE,GACrB,EAAQ,EAAS,MAKrB,GAAI,IAAU,EAAQ,CACpB,EAAS,AAAC,CAAA,EAAS,CAAA,EAAO,QAC1B,IAAK,IAAI,EAAI,CAAC,KAAM,EAAM,MAAO,CAAK,EAAG,EAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,EAAE,EAC1E,GAAI,CAAM,CAAC,EAAE,CAAC,OAAS,EAAM,CAC3B,CAAM,CAAC,EAAE,CAAG,EACZ,KACF,CAEE,IAAM,GAAG,EAAO,KAAK,EAC3B,CAEA,EAAS,MAAQ,CACnB,CACF,CAoBO,SAAS,GAAW,CAAU,CAAE,CAAI,CAAE,CAAK,EAChD,IAAI,EAAK,EAAW,IAOpB,OALA,EAAW,KAAK,WACd,IAAI,EAAW,AAAA,GAAI,IAAI,CAAE,EACxB,CAAA,CAAA,EAAS,OAAU,CAAA,EAAS,MAAQ,CAAC,CAAA,CAAA,CAAG,CAAC,EAAK,CAAG,EAAM,MAAM,IAAI,CAAE,UACtE,GAEO,SAAS,CAAI,EAClB,OAAO,AAAA,GAAI,EAAM,GAAI,KAAK,CAAC,EAAK,AAClC,CACF,CC7Ee,SAAA,GAAS,CAAC,CAAE,CAAC,EAC1B,IAAI,EACJ,MAAQ,AAAA,CAAA,AAAa,UAAb,OAAO,EAAiB,GAC1B,aAAa,GAAQ,GACpB,AAAA,CAAA,EAAI,AAAA,GAAM,EAAA,EAAO,CAAA,EAAI,EAAG,EAAA,EACzB,EAAgB,EAAG,EAAG,EAC9B,CLJA,SAAS,GAAW,CAAI,EACtB,OAAO,WACL,IAAI,CAAC,gBAAgB,EACvB,CACF,CAEA,SAAS,GAAa,CAAQ,EAC5B,OAAO,WACL,IAAI,CAAC,kBAAkB,EAAS,MAAO,EAAS,MAClD,CACF,CAEA,SAAS,GAAa,CAAI,CAAE,CAAW,CAAE,CAAM,EAC7C,IAAI,EAEA,EADA,EAAU,EAAS,GAEvB,OAAO,WACL,IAAI,EAAU,IAAI,CAAC,aAAa,GAChC,OAAO,IAAY,EAAU,KACvB,IAAY,EAAW,EACvB,EAAe,EAAY,EAAW,EAAS,EACvD,CACF,CAEA,SAAS,GAAe,CAAQ,CAAE,CAAW,CAAE,CAAM,EACnD,IAAI,EAEA,EADA,EAAU,EAAS,GAEvB,OAAO,WACL,IAAI,EAAU,IAAI,CAAC,eAAe,EAAS,MAAO,EAAS,OAC3D,OAAO,IAAY,EAAU,KACvB,IAAY,EAAW,EACvB,EAAe,EAAY,EAAW,EAAS,EACvD,CACF,CAEA,SAAS,GAAa,CAAI,CAAE,CAAW,CAAE,CAAK,EAC5C,IAAI,EACA,EACA,EACJ,OAAO,WACL,IAAI,EAA+B,EAAtB,EAAS,EAAM,IAAI,SAChC,AAAI,AAAU,MAAV,EAAuB,KAAK,IAAI,CAAC,gBAAgB,GAG9C,AAFP,CAAA,EAAU,IAAI,CAAC,aAAa,EAA5B,IACA,CAAA,EAAU,EAAS,EAAnB,EAC6B,KACvB,IAAY,GAAY,IAAY,EAAW,EAC9C,CAAA,EAAW,EAAS,EAAe,EAAY,EAAW,EAAS,EAAA,CAC5E,CACF,CAEA,SAAS,GAAe,CAAQ,CAAE,CAAW,CAAE,CAAK,EAClD,IAAI,EACA,EACA,EACJ,OAAO,WACL,IAAI,EAA+B,EAAtB,EAAS,EAAM,IAAI,SAChC,AAAI,AAAU,MAAV,EAAuB,KAAK,IAAI,CAAC,kBAAkB,EAAS,MAAO,EAAS,OAGzE,AAFP,CAAA,EAAU,IAAI,CAAC,eAAe,EAAS,MAAO,EAAS,MAAvD,IACA,CAAA,EAAU,EAAS,EAAnB,EAC6B,KACvB,IAAY,GAAY,IAAY,EAAW,EAC9C,CAAA,EAAW,EAAS,EAAe,EAAY,EAAW,EAAS,EAAA,CAC5E,CACF,CMvDA,SAAS,GAAY,CAAQ,CAAE,CAAK,EAClC,IAAI,EAAI,EACR,SAAS,IACP,IAAI,EAAI,EAAM,MAAM,IAAI,CAAE,WAE1B,OADI,IAAM,GAAI,CAAA,EAAM,AAAA,CAAA,EAAK,CAAA,GATpB,SAAS,CAAC,EACf,IAAI,CAAC,eAAe,AAQ6B,EARpB,MAAO,AAQa,EARJ,MAAO,AAQO,EARL,KAAK,IAAI,CAAE,GACnE,CAOE,EACO,CACT,CAEA,OADA,EAAM,OAAS,EACR,CACT,CAEA,SAAS,GAAU,CAAI,CAAE,CAAK,EAC5B,IAAI,EAAI,EACR,SAAS,IACP,IAAI,EAAI,EAAM,MAAM,IAAI,CAAE,WAE1B,OADI,IAAM,GAAI,CAAA,EAAM,AAAA,CAAA,EAAK,CAAA,GA1BpB,SAAS,CAAC,EACf,IAAI,CAAC,aAyB0C,EAzBvB,AAyB6B,EAzB3B,KAAK,IAAI,CAAE,GACvC,CAwBE,EACO,CACT,CAEA,OADA,EAAM,OAAS,EACR,CACT,CChCA,SAAS,GAAc,CAAE,CAAE,CAAK,EAC9B,OAAO,WACL,AAAA,GAAK,IAAI,CAAE,GAAI,MAAQ,CAAC,EAAM,MAAM,IAAI,CAAE,UAC5C,CACF,CAEA,SAAS,GAAc,CAAE,CAAE,CAAK,EAC9B,OAAO,EAAQ,CAAC,EAAO,WACrB,AAAA,GAAK,IAAI,CAAE,GAAI,MAAQ,CACzB,CACF,CCVA,SAAS,GAAiB,CAAE,CAAE,CAAK,EACjC,OAAO,WACL,AAAA,GAAI,IAAI,CAAE,GAAI,SAAW,CAAC,EAAM,MAAM,IAAI,CAAE,UAC9C,CACF,CAEA,SAAS,GAAiB,CAAE,CAAE,CAAK,EACjC,OAAO,EAAQ,CAAC,EAAO,WACrB,AAAA,GAAI,IAAI,CAAE,GAAI,SAAW,CAC3B,CACF,CSVA,IAAI,GAAY,AxEuFD,GwEvFW,UAAU,YCiBpC,SAAS,GAAY,CAAI,EACvB,OAAO,WACL,IAAI,CAAC,MAAM,eAAe,EAC5B,CACF,CnBDA,IAAI,GAAK,EAEF,SAAS,GAAW,CAAM,CAAE,CAAO,CAAE,CAAI,CAAE,CAAE,EAClD,IAAI,CAAC,QAAU,EACf,IAAI,CAAC,SAAW,EAChB,IAAI,CAAC,MAAQ,EACb,IAAI,CAAC,IAAM,CACb,CAUA,IAAI,GAAsB,AtDkDX,GsDlDqB,SAEpC,CAAA,GAAW,UAAY,AAVR,CAAA,SAAoB,CAAI,EACrC,OAAO,AtDyDM,KsDzDM,WAAW,EAChC,CAAA,EAQkC,UAAY,CAC5C,YAAa,GACb,OgBvCa,SAAS,CAAM,EAC5B,IAAI,EAAO,IAAI,CAAC,MACZ,EAAK,IAAI,CAAC,GAEQ,CAAA,YAAlB,OAAO,GAAuB,CAAA,EAAS,AAAA,GAAS,EAApD,EAEA,IAAK,IAAI,EAAS,IAAI,CAAC,QAAS,EAAI,EAAO,OAAQ,EAAY,AAAI,MAAM,GAAI,EAAI,EAAG,EAAI,EAAG,EAAE,EAC3F,IAAK,IAAiF,EAAM,EAAnF,EAAQ,CAAM,CAAC,EAAE,CAAE,EAAI,EAAM,OAAQ,EAAW,CAAS,CAAC,EAAE,CAAG,AAAI,MAAM,GAAmB,EAAI,EAAG,EAAI,EAAG,EAAE,EAC9G,CAAA,EAAO,CAAK,CAAC,EAAC,AAAD,GAAQ,CAAA,EAAU,EAAO,KAAK,EAAM,EAAK,SAAU,EAAG,EAAA,IAClE,aAAc,GAAM,CAAA,EAAQ,SAAW,EAAK,QAAhD,EACA,CAAQ,CAAC,EAAE,CAAG,EACd,AAAA,GAAS,CAAQ,CAAC,EAAE,CAAE,EAAM,EAAI,EAAG,EAAU,AAAA,GAAI,EAAM,KAK7D,OAAO,IAAI,GAAW,EAAW,IAAI,CAAC,SAAU,EAAM,EACxD,EhBuBE,UiBxCa,SAAS,CAAM,EAC5B,IAAI,EAAO,IAAI,CAAC,MACZ,EAAK,IAAI,CAAC,GAEQ,CAAA,YAAlB,OAAO,GAAuB,CAAA,EAAS,AAAA,GAAY,EAAvD,EAEA,IAAK,IAAI,EAAS,IAAI,CAAC,QAAS,EAAI,EAAO,OAAQ,EAAY,EAAE,CAAE,EAAU,EAAE,CAAE,EAAI,EAAG,EAAI,EAAG,EAAE,EAC/F,IAAK,IAAyC,EAArC,EAAQ,CAAM,CAAC,EAAE,CAAE,EAAI,EAAM,OAAc,EAAI,EAAG,EAAI,EAAG,EAAE,EAClE,GAAI,EAAO,CAAK,CAAC,EAAE,CAAE,CACnB,IAAK,IAA2D,EAAvD,EAAW,EAAO,KAAK,EAAM,EAAK,SAAU,EAAG,GAAe,EAAU,AAAA,GAAI,EAAM,GAAK,EAAI,EAAG,EAAI,EAAS,OAAQ,EAAI,EAAG,EAAE,EAC/H,CAAA,EAAQ,CAAQ,CAAC,EAAE,AAAF,GACnB,AAAA,GAAS,EAAO,EAAM,EAAI,EAAG,EAAU,GAG3C,EAAU,KAAK,GACf,EAAQ,KAAK,EACf,CAIJ,OAAO,IAAI,GAAW,EAAW,EAAS,EAAM,EAClD,EjBoBE,YAAa,GAAoB,YACjC,eAAgB,GAAoB,eACpC,OY5Ca,SAAS,CAAK,EACN,YAAjB,OAAO,GAAsB,CAAA,EAAQ,AAAA,GAAQ,EAAjD,EAEA,IAAK,IAAI,EAAS,IAAI,CAAC,QAAS,EAAI,EAAO,OAAQ,EAAY,AAAI,MAAM,GAAI,EAAI,EAAG,EAAI,EAAG,EAAE,EAC3F,IAAK,IAAuE,EAAnE,EAAQ,CAAM,CAAC,EAAE,CAAE,EAAI,EAAM,OAAQ,EAAW,CAAS,CAAC,EAAE,CAAG,EAAE,CAAQ,EAAI,EAAG,EAAI,EAAG,EAAE,EAC3F,CAAA,EAAO,CAAK,CAAC,EAAC,AAAD,GAAO,EAAM,KAAK,EAAM,EAAK,SAAU,EAAG,IAC1D,EAAS,KAAK,GAKpB,OAAO,IAAI,GAAW,EAAW,IAAI,CAAC,SAAU,IAAI,CAAC,MAAO,IAAI,CAAC,IACnE,EZiCE,Ma9Ca,SAAS,CAAU,EAChC,GAAI,EAAW,MAAQ,IAAI,CAAC,IAAK,MAAM,AAAI,QAE3C,IAAK,IAAI,EAAU,IAAI,CAAC,QAAS,EAAU,EAAW,QAAS,EAAK,EAAQ,OAAQ,EAAK,EAAQ,OAAQ,EAAI,KAAK,IAAI,EAAI,GAAK,EAAS,AAAI,MAAM,GAAK,EAAI,EAAG,EAAI,EAAG,EAAE,EACrK,IAAK,IAAmG,EAA/F,EAAS,CAAO,CAAC,EAAE,CAAE,EAAS,CAAO,CAAC,EAAE,CAAE,EAAI,EAAO,OAAQ,EAAQ,CAAM,CAAC,EAAE,CAAG,AAAI,MAAM,GAAU,EAAI,EAAG,EAAI,EAAG,EAAE,EACxH,CAAA,EAAO,CAAM,CAAC,EAAE,EAAI,CAAM,CAAC,EAAE,AAAF,GAC7B,CAAA,CAAK,CAAC,EAAE,CAAG,CAFf,EAOF,KAAO,EAAI,EAAI,EAAE,EACf,CAAM,CAAC,EAAE,CAAG,CAAO,CAAC,EAAE,CAGxB,OAAO,IAAI,GAAW,EAAQ,IAAI,CAAC,SAAU,IAAI,CAAC,MAAO,IAAI,CAAC,IAChE,Eb+BE,UkB7Ca,WACb,OAAO,IAAI,GAAU,IAAI,CAAC,QAAS,IAAI,CAAC,SAC1C,ElB4CE,WuB/Ca,WAKb,IAAK,IAJD,EAAO,IAAI,CAAC,MACZ,EAAM,IAAI,CAAC,IACX,EvB8BG,EAAE,GuB5BA,EAAS,IAAI,CAAC,QAAS,EAAI,EAAO,OAAQ,EAAI,EAAG,EAAI,EAAG,EAAE,EACjE,IAAK,IAAyC,EAArC,EAAQ,CAAM,CAAC,EAAE,CAAE,EAAI,EAAM,OAAc,EAAI,EAAG,EAAI,EAAG,EAAE,EAClE,GAAI,EAAO,CAAK,CAAC,EAAE,CAAE,CACnB,IAAI,EAAU,AAAA,GAAI,EAAM,GACxB,AAAA,GAAS,EAAM,EAAM,EAAK,EAAG,EAAO,CAClC,KAAM,EAAQ,KAAO,EAAQ,MAAQ,EAAQ,SAC7C,MAAO,EACP,SAAU,EAAQ,SAClB,KAAM,EAAQ,IAChB,EACF,CAIJ,OAAO,IAAI,GAAW,EAAQ,IAAI,CAAC,SAAU,EAAM,EACrD,EvB4BE,KAAM,GAAoB,KAC1B,MAAO,GAAoB,MAC3B,KAAM,GAAoB,KAC1B,KAAM,GAAoB,KAC1B,MAAO,GAAoB,MAC3B,KAAM,GAAoB,KAC1B,GchCa,SAAS,CAAI,CAAE,CAAQ,EACpC,IAfI,EAAK,EAAK,EAeV,EAAK,IAAI,CAAC,IAEd,OAAO,UAAU,OAAS,EACpB,AAAA,GAAI,IAAI,CAAC,OAAQ,GAAI,GAAG,GAAG,GAC3B,IAAI,CAAC,MAnBG,EAAM,AARb,AAAC,CAAA,AA2BuB,EA3BhB,EAAA,EAAI,OAAO,MAAM,SAAS,MAAM,SAAS,CAAC,EACvD,IAAI,EAAI,EAAE,QAAQ,KAElB,OADI,GAAK,GAAG,CAAA,EAAI,EAAE,MAAM,EAAG,EAA3B,EACO,CAAC,GAAK,AAAM,UAAN,CACf,GAIkC,GAAO,GAClC,WACL,IAAI,EAAW,EAAI,IAAI,CAiBE,GAhBrB,EAAK,EAAS,GAKd,IAAO,GAAM,AAAA,CAAA,EAAM,AAAC,CAAA,EAAM,CAAA,EAAI,MAAA,EAAQ,GAWb,EAAM,GATnC,EAAS,GAAK,CAChB,GASF,Ed2BE,KCaa,SAAS,CAAI,CAAE,CAAK,EACjC,IAAI,EAAW,AAAA,GAAU,GAAO,EAAI,AAAa,cAAb,EAA2B,GAAuB,GACtF,OAAO,IAAI,CAAC,UAAU,EAAM,AAAiB,YAAjB,OAAO,EAC7B,AAAC,CAAA,EAAS,MAAQ,GAAiB,EAAA,EAAc,EAAU,EAAG,AAAA,GAAW,IAAI,CAAE,QAAU,EAAM,IAC/F,AAAS,MAAT,EAAiB,AAAA,CAAA,EAAS,MAAQ,GAAe,EAAA,EAAY,GAC5D,AAAA,CAAA,EAAS,MAAQ,GAAiB,EAAA,EAAc,EAAU,EAAG,GACtE,EDlBE,UOvBa,SAAS,CAAI,CAAE,CAAK,EACjC,IAAI,EAAM,QAAU,EACpB,GAAI,UAAU,OAAS,EAAG,MAAO,AAAC,CAAA,EAAM,IAAI,CAAC,MAAM,EAAA,GAAS,EAAI,OAChE,GAAI,AAAS,MAAT,EAAe,OAAO,IAAI,CAAC,MAAM,EAAK,MAC1C,GAAI,AAAiB,YAAjB,OAAO,EAAsB,MAAM,AAAI,QAC3C,IAAI,EAAW,AAAA,GAAU,GACzB,OAAO,IAAI,CAAC,MAAM,EAAK,AAAC,CAAA,EAAS,MAAQ,GAAc,EAAA,EAAW,EAAU,GAC9E,EPiBE,MmBQa,SAAS,CAAI,CAAE,CAAK,CAAE,CAAQ,EAC3C,IA/DiB,EACb,EACA,EACA,EA4BiB,EAAmB,EACpC,EACA,EACA,EAYoB,EAAI,EACxB,EAAK,EAAK,EAAwD,EAA7C,EAAuB,EA5B3B,EACjB,EAEA,EADA,EA0CA,EAAI,AAAiB,aAAhB,CAAA,GAAQ,EAAA,EAAsB,GAAuB,GAC9D,OAAO,AAAS,MAAT,EAAgB,IAAI,CACtB,WAAW,GAjEC,EAiEe,EA7DzB,WACL,IAAI,EAAU,AAAA,GAAM,IAAI,CAAE,GACtB,EAAW,CAAA,IAAI,CAAC,MAAM,eAAe,GAAO,AAAA,GAAM,IAAI,CAAE,EAAA,EAC5D,OAAO,IAAY,EAAU,KACvB,IAAY,GAAY,IAAY,EAAW,EAC/C,EAAe,AAwDe,EAxDH,EAAW,EAAS,EAAW,EAClE,IAwDK,GAAG,aAAe,EAAM,GAAY,IACrC,AAAiB,YAAjB,OAAO,EAAuB,IAAI,CACjC,WAAW,GArCK,EAqCe,EArCI,EAqCK,AAAA,GAAW,IAAI,CAAE,SAAW,EAAM,GAjCxE,WACL,IAAI,EAAU,AAAA,GAAM,IAAI,CAAE,GACtB,EAAS,EAAM,IAAI,EACnB,EAAU,EAAS,GAEvB,OADc,MAAV,GAAoC,CAAA,IAAI,CAAC,MAAM,eAAe,GAA9C,EAAU,EAA2C,AAAA,GAAM,IAAI,CAAE,EAAA,EAC9E,IAAY,EAAU,KACvB,IAAY,GAAY,IAAY,EAAW,EAC9C,CAAA,EAAW,EAAS,EAAe,AA0BF,EA1Bc,EAAW,EAAS,EAAA,CAC5E,IA0BK,MAvBmB,EAuBG,IAAI,CAAC,IAtBgB,EAAQ,QAA/B,EAAM,UADH,EAuBS,IArB9B,WACL,IAAI,EAAW,AAAA,GAAI,IAAI,CAAE,GACrB,EAAK,EAAS,GACd,EAAW,AAAuB,MAAvB,EAAS,KAAK,CAAC,EAAI,CAAW,GAAW,CAAA,EAAS,GAAY,EAAA,EAAS,KAAA,EAKlF,CAAA,IAAO,GAAO,IAAc,CAAA,GAAW,AAAA,CAAA,EAAO,AAAA,CAAA,EAAM,CAAA,EAAI,MAAA,EAAQ,GAAG,EAAO,EAAY,GAE1F,EAAS,GAAK,CAChB,IAWI,IAAI,CACH,WAAW,GApDK,EAoDe,EAlDhC,EAAU,AAkD+B,EAlDtB,GAEhB,WACL,IAAI,EAAU,AAAA,GAAM,IAAI,CAAE,GAC1B,OAAO,IAAY,EAAU,KACvB,IAAY,EAAW,EACvB,EAAe,AA4CmB,EA5CP,EAAW,EA4CD,EA3C7C,GA2CqD,GAChD,GAAG,aAAe,EAAM,KAC/B,EnBlBE,WoB5Ca,SAAS,CAAI,CAAE,CAAK,CAAE,CAAQ,EAC3C,IAAI,EAAM,SAAY,CAAA,GAAQ,EAAA,EAC9B,GAAI,UAAU,OAAS,EAAG,MAAO,AAAC,CAAA,EAAM,IAAI,CAAC,MAAM,EAAA,GAAS,EAAI,OAChE,GAAI,AAAS,MAAT,EAAe,OAAO,IAAI,CAAC,MAAM,EAAK,MAC1C,GAAI,AAAiB,YAAjB,OAAO,EAAsB,MAAM,AAAI,QAC3C,OAAO,IAAI,CAAC,MAAM,EAAK,AAhBzB,SAAoB,CAAI,CAAE,CAAK,CAAE,CAAQ,EACvC,IAAI,EAAG,EACP,SAAS,IACP,IAAI,EAAI,EAAM,MAAM,IAAI,CAAE,WAE1B,OADI,IAAM,GAAI,CAAA,EAAK,AAAA,CAAA,EAAK,CAAA,GATnB,SAAS,CAAC,EACf,IAAI,CAAC,MAAM,YAQoC,EARlB,AAQwB,EARtB,KAAK,IAAI,CAAE,GAQc,EAP1D,CAOE,EACO,CACT,CAEA,OADA,EAAM,OAAS,EACR,CACT,EAOoC,EAAM,EAAO,AAAY,MAAZ,EAAmB,GAAK,GACzE,EpBuCE,KqB/Ca,SAAS,CAAK,MAPP,EANA,EAcpB,OAAO,IAAI,CAAC,MAAM,OAAQ,AAAiB,YAAjB,OAAO,GARb,EASD,AAAA,GAAW,IAAI,CAAE,OAAQ,GARrC,WACL,IAAI,EAAS,EAAM,IAAI,CACvB,CAAA,IAAI,CAAC,YAAc,AAAU,MAAV,EAAiB,GAAK,CAC3C,IAVoB,EAgBD,AAAS,MAAT,EAAgB,GAAK,EAAQ,GAfzC,WACL,IAAI,CAAC,YAAc,CACrB,GAcF,ErB4CE,UsB9Ca,SAAS,CAAK,EAC3B,IAAI,EAAM,OACV,GAAI,UAAU,OAAS,EAAG,MAAO,AAAC,CAAA,EAAM,IAAI,CAAC,MAAM,EAAA,GAAS,EAAI,OAChE,GAAI,AAAS,MAAT,EAAe,OAAO,IAAI,CAAC,MAAM,EAAK,MAC1C,GAAI,AAAiB,YAAjB,OAAO,EAAsB,MAAM,AAAI,QAC3C,OAAO,IAAI,CAAC,MAAM,EAAK,AAhBzB,SAAmB,CAAK,EACtB,IAAI,EAAI,EACR,SAAS,IACP,IAAI,EAAI,EAAM,MAAM,IAAI,CAAE,WAE1B,OADI,IAAM,GAAI,CAAA,EAAM,AAAA,CAAA,EAAK,CAAA,GATpB,SAAS,CAAC,EACf,IAAI,CAAC,YAAc,AAQ4B,EAR1B,KAAK,IAAI,CAAE,EAClC,CAOE,EACO,CACT,CAEA,OADA,EAAM,OAAS,EACR,CACT,EAOmC,GACnC,EtByCE,OexDa,eARS,EAStB,OAAO,IAAI,CAAC,GAAG,cATO,EASsB,IAAI,CAAC,IAR1C,WACL,IAAI,EAAS,IAAI,CAAC,WAClB,IAAK,IAAI,KAAK,IAAI,CAAC,aAAc,GAAI,CAAC,IAAM,EAAI,OAC5C,GAAQ,EAAO,YAAY,IAAI,CACrC,GAKF,EfuDE,MKda,SAAS,CAAI,CAAE,CAAK,EACjC,IAAI,EAAK,IAAI,CAAC,IAId,GAFA,GAAQ,GAEJ,UAAU,OAAS,EAAG,CAExB,IAAK,IAA6B,EAD9B,EAAQ,AAAA,GAAI,IAAI,CAAC,OAAQ,GAAI,MACxB,EAAI,EAAG,EAAI,EAAM,OAAW,EAAI,EAAG,EAAE,EAC5C,GAAI,AAAC,CAAA,EAAI,CAAK,CAAC,EAAE,AAAF,EAAI,OAAS,EAC1B,OAAO,EAAE,MAGb,OAAO,IACT,CAEA,OAAO,IAAI,CAAC,KAAM,AAAA,CAAA,AAAS,MAAT,EAAgB,GAAc,EAAA,EAAe,EAAI,EAAM,GAC3E,ELDE,MQpDa,SAAS,CAAK,EAC3B,IAAI,EAAK,IAAI,CAAC,IAEd,OAAO,UAAU,OACX,IAAI,CAAC,KAAK,AAAC,CAAA,AAAiB,YAAjB,OAAO,EACd,GACA,EAAA,EAAe,EAAI,IACvB,AAAA,GAAI,IAAI,CAAC,OAAQ,GAAI,KAC7B,ER6CE,SSrDa,SAAS,CAAK,EAC3B,IAAI,EAAK,IAAI,CAAC,IAEd,OAAO,UAAU,OACX,IAAI,CAAC,KAAK,AAAC,CAAA,AAAiB,YAAjB,OAAO,EACd,GACA,EAAA,EAAkB,EAAI,IAC1B,AAAA,GAAI,IAAI,CAAC,OAAQ,GAAI,QAC7B,ET8CE,KU3Da,SAAS,CAAK,EAC3B,IAAI,EAAK,IAAI,CAAC,IAEd,OAAO,UAAU,OACX,IAAI,CAAC,KAAK,AAXlB,SAAsB,CAAE,CAAE,CAAK,EAC7B,GAAI,AAAiB,YAAjB,OAAO,EAAsB,MAAM,AAAI,QAC3C,OAAO,WACL,AAAA,GAAI,IAAI,CAAE,GAAI,KAAO,CACvB,CACF,EAM+B,EAAI,IAC3B,AAAA,GAAI,IAAI,CAAC,OAAQ,GAAI,IAC7B,EVsDE,YW3Da,SAAS,CAAK,MARR,EASnB,GAAI,AAAiB,YAAjB,OAAO,EAAsB,MAAM,AAAI,QAC3C,OAAO,IAAI,CAAC,MAVO,EAUU,IAAI,CAAC,IAT3B,WACL,IAAI,EAAI,AAQ6B,EARvB,MAAM,IAAI,CAAE,WAC1B,GAAI,AAAa,YAAb,OAAO,EAAkB,MAAM,AAAI,OACvC,CAAA,AAAA,GAAI,IAAI,CAAE,GAAI,KAAO,CACvB,GAMF,EXyDE,IwBpEa,WACb,IAAI,EAAK,EAAK,EAAO,IAAI,CAAE,EAAK,EAAK,IAAK,EAAO,EAAK,OACtD,OAAO,IAAI,QAAQ,SAAS,CAAO,CAAE,CAAM,EACzC,IAAI,EAAS,CAAC,MAAO,CAAM,EACvB,EAAM,CAAC,MAAO,WAA4B,GAAX,EAAE,GAAY,GAAW,CAAC,EAE7D,EAAK,KAAK,WACR,IAAI,EAAW,AAAA,GAAI,IAAI,CAAE,GACrB,EAAK,EAAS,GAKd,IAAO,IAET,AADA,CAAA,EAAM,AAAC,CAAA,EAAM,CAAA,EAAI,MAAjB,EACI,EAAE,OAAO,KAAK,GAClB,EAAI,EAAE,UAAU,KAAK,GACrB,EAAI,EAAE,IAAI,KAAK,IAGjB,EAAS,GAAK,CAChB,GAGa,IAAT,GAAY,GAClB,EACF,ExB2CE,CAAC,OAAO,SAAS,CAAE,EAAmB,CAAC,OAAO,SAAS,AACzD,EDnEA,IAAI,GAAgB,CAClB,KAAM,KACN,MAAO,EACP,SAAU,IACV,K0BDK,SAAoB,CAAC,EAC1B,MAAQ,AAAC,CAAA,AAAA,CAAA,GAAK,CAAA,GAAM,EAAI,EAAI,EAAI,EAAK,AAAA,CAAA,GAAK,CAAA,EAAK,EAAI,EAAI,CAAA,EAAK,CAC9D,C1BAA,E2BVO,SAAS,GAAO,CAAC,EACtB,OAAO,EAAI,CACb,CAEO,SAAS,GAAQ,CAAC,EACvB,OAAO,EAAK,CAAA,EAAI,CAAA,CAClB,CAEO,SAAS,GAAU,CAAC,EACzB,MAAQ,AAAC,CAAA,AAAA,CAAA,GAAK,CAAA,GAAM,EAAI,EAAI,EAAI,EAAE,EAAK,CAAA,EAAI,CAAA,EAAK,CAAA,EAAK,CACvD,ClCNA,A9CqFe,G8CrFL,UAAU,UCFL,SAAS,CAAI,EAC1B,OAAO,IAAI,CAAC,KAAK,WACf,AAAA,GAAU,IAAI,CAAE,EAClB,EACF,EDDA,A9CoFe,G8CpFL,UAAU,WOiBL,SAAS,CAAI,EAC1B,IAAI,EACA,CAEA,CAAA,aAAgB,GAClB,CAAA,EAAK,EAAK,IAAK,EAAO,EAAK,KAD7B,EAGE,CAAA,ECOK,EAAE,GDPO,AAAC,CAAA,EAAS,EAAA,EAAe,KAAO,AAAA,KAAO,EAAO,AAAQ,MAAR,EAAe,KAAO,EAAO,EAAzF,EAGF,IAAK,IAAI,EAAS,IAAI,CAAC,QAAS,EAAI,EAAO,OAAQ,EAAI,EAAG,EAAI,EAAG,EAAE,EACjE,IAAK,IAAyC,EAArC,EAAQ,CAAM,CAAC,EAAE,CAAE,EAAI,EAAM,OAAc,EAAI,EAAG,EAAI,EAAG,EAAE,EAC9D,CAAA,EAAO,CAAK,CAAC,EAAE,AAAF,GACf,AAAA,GAAS,EAAM,EAAM,EAAI,EAAG,EAAO,GAAU,AAvBrD,SAAiB,CAAI,CAAE,CAAE,EAEvB,IADA,IAAI,EACG,CAAE,CAAA,EAAS,EAAK,YAAA,GAAiB,CAAE,CAAA,EAAS,CAAM,CAAC,EAAE,AAAF,GACxD,GAAI,CAAE,CAAA,EAAO,EAAK,UAAA,EAChB,MAAM,AAAI,MAAM,CAAC,WAAW,EAAE,EAAG,UAAU,CAAC,EAGhD,OAAO,CACT,EAe6D,EAAM,IAKjE,OAAO,IAAI,GAAW,EAAQ,IAAI,CAAC,SAAU,EAAM,EACrD,E,I,G,C,E,G,A,W,a,I,E,S,C,E,O,a,Y,a,a,a,a,a,W,a,Y,a,Y,a,c,a,c,a,iB,E,E,S,C,C,C,E,I,I,E,O,K,G,E,E,E,E,O,E,E,C,C,C,C,E,C,C,C,C,C,C,E,C,C,O,C,E,S,E,C,E,I,E,A,M,U,E,O,Q,M,G,C,C,S,E,C,C,C,E,G,E,E,C,S,E,C,S,A,E,K,E,E,C,S,E,C,C,C,E,O,G,I,S,M,A,U,O,C,K,S,M,A,U,O,C,K,S,M,A,U,O,C,K,U,M,A,W,O,C,K,W,M,A,Y,O,C,K,Y,O,A,K,I,C,K,S,M,A,U,O,C,C,C,S,E,C,C,C,C,C,E,E,E,Q,I,E,gB,E,G,qB,E,C,I,E,C,K,S,Y,a,a,a,qB,U,S,C,S,E,C,C,C,E,I,G,G,E,O,G,E,I,E,O,C,C,S,I,I,C,K,U,I,C,M,E,C,I,C,M,C,E,I,C,U,C,C,C,S,E,C,C,C,E,I,C,O,E,I,C,K,E,I,C,O,E,A,C,S,E,C,C,C,C,C,E,I,C,K,E,I,C,K,E,I,C,Q,C,C,S,I,I,E,A,Q,E,A,C,E,O,C,E,W,E,sC,K,G,G,E,O,C,C,E,C,I,E,yC,K,U,A,E,C,C,E,C,S,C,S,I,I,E,A,Q,E,A,C,E,O,C,E,W,E,oC,K,G,G,E,O,C,C,E,C,I,E,mC,K,U,A,E,C,C,E,C,S,C,S,E,C,C,C,E,I,E,E,M,M,E,E,E,E,E,C,Q,I,E,E,I,C,C,C,E,Q,K,C,C,E,C,K,G,I,E,Q,M,K,I,E,E,K,I,I,E,E,E,E,O,E,E,C,I,E,C,C,E,C,E,2B,K,G,G,E,O,C,C,E,E,I,O,I,E,iB,K,C,C,E,G,I,E,A,E,C,C,E,E,C,C,E,E,A,C,E,A,E,C,C,E,A,I,G,C,C,C,E,C,I,C,G,K,K,S,I,E,E,6B,K,C,C,E,E,G,C,C,C,E,C,K,C,C,E,E,E,C,C,E,C,A,A,a,O,K,K,G,U,G,C,C,E,A,C,C,C,C,E,C,M,K,I,E,I,G,C,O,O,K,G,Q,S,C,E,I,E,C,C,E,C,E,M,Q,S,C,E,E,K,C,E,O,C,C,E,G,C,C,S,E,C,E,E,Y,G,C,S,E,C,C,C,E,I,E,I,E,E,e,C,G,G,E,C,A,Y,E,G,gB,C,E,C,S,E,C,C,C,C,C,C,C,E,E,E,I,E,yB,E,G,c,E,S,O,E,G,I,C,I,E,C,E,S,E,C,C,C,S,A,A,Q,G,A,Q,G,A,Q,E,E,A,Q,E,E,C,C,E,C,C,C,S,E,C,E,M,C,C,E,E,C,G,C,C,C,C,C,C,K,C,C,C,K,C,E,C,C,K,C,C,C,K,C,C,C,M,C,C,C,M,C,C,C,M,C,C,C,M,C,E,C,C,K,C,C,C,K,C,C,C,K,C,C,C,M,C,E,I,E,E,E,C,S,S,C,E,G,E,M,E,a,E,Q,S,C,C,C,C,C,E,G,E,E,G,I,E,U,S,C,C,C,C,C,E,K,G,E,sB,E,I,E,G,sB,O,K,G,O,E,iB,S,C,C,C,C,C,C,C,E,K,G,E,sB,E,I,E,G,sB,O,K,G,O,G,I,E,Y,S,C,E,O,K,G,Q,S,C,E,E,E,Q,I,E,sC,E,qB,E,E,E,K,S,C,C,C,C,C,E,E,E,I,E,yB,E,G,c,E,S,O,E,E,Y,E,a,S,C,C,C,E,E,I,E,yB,E,G,0B,E,I,S,C,C,C,E,G,G,A,C,A,E,C,I,G,E,4B,E,I,E,G,kC,E,M,E,Y,S,C,C,C,C,C,C,C,C,C,E,G,C,E,mB,E,E,gB,C,I,E,E,E,iB,G,E,I,E,gB,W,S,E,E,S,E,kC,G,I,E,E,E,G,A,C,S,C,C,C,E,E,Q,S,C,E,I,E,C,C,E,K,C,G,E,C,I,E,E,K,C,E,K,C,G,E,C,E,O,K,G,E,U,C,E,M,C,C,E,Q,U,C,E,E,Q,K,C,E,C,O,K,E,E,C,E,G,E,E,C,A,E,M,M,Q,S,C,E,I,C,E,O,C,G,I,E,iC,K,G,E,E,K,I,E,A,E,C,C,E,C,A,E,C,C,E,C,C,C,E,C,S,E,O,G,E,K,I,E,U,E,I,G,I,O,K,G,Q,S,C,E,I,E,C,C,E,C,G,E,W,I,E,C,G,C,E,C,G,C,E,e,E,K,E,K,K,wD,E,M,Q,S,C,E,G,E,O,O,E,C,E,E,E,O,G,M,6C,E,E,K,K,wD,I,E,E,E,O,Q,S,C,E,I,E,E,Q,E,yB,K,G,G,E,C,I,E,C,C,E,C,E,C,C,E,C,W,G,C,E,G,E,E,K,I,E,K,Q,E,G,E,M,E,E,E,E,K,I,E,E,M,E,G,K,oB,E,E,K,I,E,E,K,mB,G,E,E,K,G,K,M,E,E,E,O,G,O,E,E,K,K,Y,G,A,a,O,U,O,O,Q,I,E,K,M,C,C,E,C,E,K,M,Q,I,M,Q,I,S,E,C,C,C,E,E,K,G,E,K,G,G,C,G,E,M,mB,E,Y,C,C,E,C,K,C,E,U,S,C,C,C,C,C,C,C,C,C,E,G,C,E,oB,E,E,a,C,I,E,E,kB,G,E,E,E,G,E,8C,A,E,E,E,C,E,C,K,2B,C,C,E,C,K,G,A,C,a,O,S,Q,I,K,E,O,E,uD,a,Q,I,E,K,G,E,M,E,C,E,S,E,e,E,a,S,C,C,C,C,C,C,C,E,S,E,C,C,C,E,O,K,G,Q,S,C,E,C,C,E,G,G,C,C,C,E,C,E,G,E,Q,C,E,E,O,M,E,G,G,E,E,Q,C,E,E,O,M,E,G,G,E,I,E,E,E,E,Y,C,E,E,E,E,Q,E,E,E,S,I,E,E,c,C,E,E,E,E,Q,E,E,E,S,E,U,U,E,Q,U,E,S,a,E,Q,a,E,O,E,kB,S,C,C,C,C,C,E,E,Q,E,E,Q,S,e,E,6C,E,E,a,c,O,E,iD,E,a,E,U,S,C,C,C,C,C,E,I,E,E,E,M,E,E,O,E,E,S,E,E,G,G,E,gB,E,G,G,E,e,yB,C,A,Q,E,O,A,Q,E,K,G,E,E,I,E,G,gF,A,I,E,Q,I,G,A,I,G,E,A,O,E,W,A,O,E,W,A,O,E,W,A,O,E,U,+B,E,E,I,E,G,6D,E,E,U,A,C,G,C,E,E,sC,O,E,O,E,E,W,Q,6B,E,A,O,E,W,A,O,E,U,8D,E,C,E,W,wD,I,E,E,O,I,E,E,E,G,E,E,G,C,C,E,C,C,I,E,G,E,E,G,E,E,E,Q,G,E,uB,I,E,C,C,E,C,G,E,E,Q,G,E,S,E,gC,E,E,S,E,Q,E,iB,E,gB,E,O,E,K,mC,E,iB,G,E,K,C,I,E,K,K,E,E,K,G,E,E,iB,E,gB,E,E,K,a,E,E,wE,M,E,S,E,I,M,E,Y,E,A,C,E,Q,G,C,G,E,oB,C,E,Y,E,C,E,W,wD,E,Y,S,C,C,C,C,C,C,C,E,I,E,E,M,E,E,O,E,E,S,E,E,G,G,E,gB,E,G,G,E,e,yB,E,I,E,2B,E,A,Q,E,O,A,Q,E,M,uC,I,I,E,E,E,E,O,E,E,C,I,E,C,C,E,C,E,E,Q,G,E,S,E,oC,E,a,E,C,E,W,mD,E,A,I,E,Q,iD,I,I,E,E,O,E,E,E,G,E,E,C,I,E,C,C,E,C,G,E,C,I,E,G,E,E,G,E,E,E,Q,G,E,uB,E,E,Q,G,E,S,E,gC,E,E,S,E,Q,E,iB,E,gB,E,O,E,K,mC,E,a,E,K,E,E,K,a,E,E,K,I,E,E,K,G,E,iB,yE,E,S,E,K,C,C,C,C,G,E,E,S,E,C,C,C,E,I,C,G,I,I,C,K,E,I,C,K,C,C,S,E,C,E,O,E,Q,M,Q,Q,K,M,C,S,E,C,E,M,I,A,C,S,E,C,E,G,A,I,E,O,M,E,C,I,E,E,O,G,E,E,O,E,O,G,G,E,O,G,I,G,C,A,M,G,A,M,C,E,M,C,I,E,E,O,E,E,O,I,I,C,I,E,4C,K,G,G,E,O,E,E,O,E,E,Q,O,E,C,C,E,G,O,E,E,O,E,M,C,C,E,C,U,I,E,E,M,K,G,A,I,E,O,M,C,I,E,G,I,C,I,I,E,E,C,E,E,E,E,O,E,E,E,E,O,E,C,C,E,G,O,C,C,E,G,K,M,G,C,I,E,C,gB,E,O,S,C,C,C,E,O,I,E,E,E,E,I,E,U,S,C,E,M,A,Y,O,G,C,E,W,a,C,E,M,S,E,C,C,C,Q,A,A,Y,O,E,I,E,E,G,A,U,O,G,A,W,O,E,I,E,E,G,M,Q,G,I,E,E,E,I,S,C,C,C,E,O,E,E,E,I,E,I,I,a,E,O,E,C,E,kC,E,E,S,C,E,E,C,K,A,Y,O,sB,S,C,E,O,sB,E,E,S,C,E,O,W,E,G,E,O,A,Y,O,qB,S,C,E,O,qB,E,E,Y,E,E,A,a,O,a,Y,I,W,O,Y,K,E,W,M,C,I,I,E,S,E,C,Q,A,A,U,O,E,E,S,E,M,Q,G,2B,E,C,S,E,C,Q,A,A,U,O,G,E,A,a,O,S,gC,S,c,I,C,C,S,E,C,C,C,E,I,I,E,M,G,E,E,E,E,E,E,C,C,E,C,E,G,O,C,C,S,E,C,E,I,E,E,O,E,A,C,E,K,G,E,K,E,E,A,C,E,G,G,E,K,E,G,E,E,A,C,E,E,G,E,K,E,G,E,E,A,C,E,C,G,E,K,E,A,C,G,C,E,G,C,C,S,I,I,E,E,E,W,M,E,A,G,S,E,C,E,I,E,A,S,C,E,I,I,E,G,G,U,G,G,G,G,E,O,E,O,C,E,G,E,C,C,E,I,E,Q,A,E,O,E,E,M,I,Y,E,C,S,E,C,E,C,C,E,E,a,E,C,K,E,C,M,C,M,E,K,E,U,S,C,C,C,E,I,E,K,O,G,K,K,E,I,U,E,G,E,G,K,M,K,E,I,W,E,G,E,G,K,M,K,E,I,W,E,E,G,E,G,K,M,K,E,I,Y,E,E,G,E,G,K,M,K,E,I,W,E,E,G,E,G,K,M,K,E,I,Y,E,E,G,E,G,K,M,K,E,I,a,E,E,G,E,G,K,S,O,I,Q,A,E,S,E,E,S,E,G,C,E,S,S,C,E,E,E,O,C,C,C,I,E,G,C,E,K,I,I,E,S,C,C,C,E,I,E,C,C,E,gC,C,E,E,a,M,E,I,E,E,E,C,C,E,qB,E,E,a,O,E,E,a,Q,I,E,C,C,E,kB,G,E,C,I,E,E,gB,E,Y,K,G,E,W,K,E,K,E,E,E,K,K,M,I,E,E,oB,G,E,gB,M,G,E,qB,M,M,K,E,G,E,Y,K,M,A,Q,E,uB,O,E,C,M,C,E,S,E,E,E,G,E,W,E,E,E,G,E,M,O,I,E,E,U,K,G,E,W,E,E,E,E,K,K,G,E,W,E,C,G,E,kB,G,E,c,G,E,A,I,C,C,E,E,E,S,E,C,C,I,E,A,a,O,W,C,O,K,U,Y,Y,K,U,a,O,K,U,U,E,E,C,E,G,C,E,C,I,E,E,gB,E,E,U,K,I,E,c,O,E,Y,M,G,E,W,M,E,K,E,E,E,K,K,G,E,S,G,E,Y,M,M,E,c,G,E,C,E,U,C,M,C,U,C,E,a,M,E,a,M,E,a,M,E,a,M,C,U,E,a,M,Y,E,a,M,a,E,a,M,W,O,K,G,O,S,C,E,M,C,C,C,C,E,A,G,e,E,e,E,oB,E,c,E,a,O,c,E,a,O,gB,E,a,M,wB,E,a,O,e,E,a,O,oB,E,a,O,gB,E,a,O,e,E,a,M,c,E,a,O,kB,E,a,O,sB,E,a,O,kB,E,a,O,oB,E,a,O,K,E,a,O,S,E,a,M,O,E,a,M,Q,E,a,M,U,E,gB,C,C,E,S,E,C,E,M,C,C,G,A,U,O,G,M,Q,E,Q,M,Q,E,S,A,U,O,E,Q,E,M,S,E,O,Q,C,M,Q,E,O,E,E,K,C,C,I,E,S,C,E,O,O,K,G,I,S,C,E,O,C,C,E,A,E,E,E,C,M,S,C,E,I,I,E,E,C,E,E,E,O,E,C,C,E,C,E,K,E,Q,O,C,E,Q,S,C,C,C,C,C,C,C,E,I,E,E,G,E,O,I,I,E,E,E,E,O,E,E,G,C,C,E,M,E,E,I,E,G,E,U,E,G,O,E,Q,K,E,K,M,G,A,S,C,C,C,C,C,E,I,I,E,E,E,E,E,E,C,C,E,C,C,C,E,A,E,E,C,C,E,C,G,K,M,G,A,S,C,C,C,C,C,C,C,E,I,I,E,E,E,E,E,E,E,E,I,I,E,C,C,E,C,E,E,E,E,E,E,C,C,I,C,C,C,E,A,E,E,C,C,E,C,C,C,E,C,G,K,M,E,E,E,C,C,E,C,C,C,E,C,C,C,E,C,E,G,K,U,A,S,E,C,C,C,C,C,C,C,C,C,E,I,I,E,E,E,E,E,E,E,O,E,E,G,C,C,E,C,I,E,C,C,E,C,G,E,O,G,E,C,I,E,C,C,E,E,C,E,C,C,E,E,C,E,C,C,E,E,C,I,E,E,E,E,E,E,E,C,C,E,C,E,E,E,E,G,G,C,M,I,E,E,E,E,E,E,E,C,C,E,C,E,E,E,E,G,G,C,E,E,E,E,E,E,C,O,C,C,E,S,E,C,C,C,C,C,C,C,C,C,C,C,E,I,I,E,E,E,E,E,E,E,E,I,I,E,C,C,E,C,E,E,E,E,E,E,I,I,E,C,C,E,C,E,E,E,E,E,E,C,C,I,C,C,C,E,A,C,I,E,C,qB,K,sB,K,sB,K,sB,K,6B,K,uB,K,uB,K,wB,K,wB,K,uB,I,E,E,C,K,K,M,K,M,K,M,K,O,K,O,K,M,K,Q,I,E,E,C,Q,M,O,M,O,K,E,E,E,Q,E,E,M,E,E,C,S,E,C,E,O,A,E,C,C,O,U,S,K,G,A,C,S,E,C,C,C,E,I,I,E,E,E,E,O,E,E,C,C,E,C,C,C,E,A,C,S,E,C,C,C,C,C,C,C,C,C,C,C,C,C,E,I,I,E,E,E,E,E,E,E,E,I,I,E,E,E,E,E,E,C,C,I,C,C,C,E,E,E,E,E,A,C,C,C,K,C,E,C,C,K,C,E,C,C,K,C,E,C,C,K,C,E,C,C,K,C,E,C,C,K,C,E,C,C,K,C,E,I,E,C,O,E,M,E,M,E,K,E,U,E,S,E,Y,E,a,E,iB,E,e,C,E,E,I,a,G,E,I,Y,E,Q,S,E,C,E,I,I,E,E,U,K,E,Q,E,E,E,E,O,E,E,G,M,C,C,E,E,C,C,E,C,W,G,C,C,E,G,I,C,C,E,C,W,G,C,C,E,G,C,I,C,C,E,C,U,C,C,C,E,C,C,C,E,C,I,E,C,C,E,C,E,I,I,G,E,A,C,G,I,E,E,I,E,G,G,K,G,E,I,C,C,E,C,O,G,E,I,C,I,E,I,C,C,C,C,E,C,E,C,E,M,C,C,M,E,G,C,C,E,C,E,M,C,C,E,C,E,C,E,I,E,E,C,C,O,C,C,S,E,C,E,O,M,Q,I,E,E,C,I,G,S,C,E,M,C,C,E,E,C,G,C,C,C,E,G,C,K,K,K,K,C,G,C,E,K,K,K,K,C,G,C,E,S,G,C,E,M,W,E,G,C,E,C,K,C,E,C,K,C,E,C,K,C,E,E,C,M,C,E,C,K,C,E,E,C,K,C,E,C,M,C,E,E,C,K,C,E,C,M,C,E,I,G,G,qB,G,G,mB,G,G,4B,G,G,e,G,G,oB,G,G,oB,G,O,K,G,O,C,G,G,G,G,G,G,E,G,E,A,C,E,C,K,C,E,E,C,K,C,E,E,C,M,C,E,E,C,K,C,E,E,C,K,C,E,I,G,E,C,S,G,C,E,O,M,Q,I,C,A,I,E,Q,A,U,O,C,C,E,A,C,C,S,G,C,W,M,Q,I,A,I,E,Q,E,C,C,E,E,C,S,G,C,E,O,O,U,S,K,E,C,S,G,C,E,G,C,E,M,C,E,I,E,G,U,A,G,Q,I,G,G,I,G,I,E,E,C,S,G,C,E,O,A,E,C,C,O,U,S,K,G,A,C,S,G,C,C,C,E,O,E,U,A,Q,E,K,K,E,K,E,C,S,G,C,C,C,E,A,Q,E,M,E,K,E,G,E,S,I,E,K,C,C,S,G,C,C,C,C,C,C,C,C,C,C,C,E,G,E,A,K,I,E,C,E,C,E,C,E,C,E,C,E,C,E,C,E,C,G,C,G,C,G,E,O,E,E,E,I,I,E,E,E,E,E,G,G,G,E,E,E,G,E,O,C,C,E,C,M,C,E,E,C,M,C,E,E,C,M,C,E,E,C,M,C,E,E,C,M,C,G,E,C,M,C,G,E,C,M,C,E,E,C,M,C,E,E,C,M,C,G,E,C,M,C,E,E,C,M,C,E,E,C,M,C,G,E,C,M,C,I,E,C,M,C,G,E,C,M,C,I,E,C,M,C,G,I,G,E,A,C,E,C,M,C,E,E,C,M,C,E,E,C,M,C,E,E,C,M,C,E,E,C,M,C,E,E,C,M,C,E,E,C,M,C,E,E,C,M,C,G,E,C,M,C,E,E,C,M,C,E,I,G,S,C,C,C,C,C,C,C,C,C,E,I,E,C,M,M,O,M,U,M,M,M,Q,M,gB,K,C,C,E,U,C,E,M,K,E,E,8B,E,Q,M,E,O,O,E,0B,C,E,Q,K,E,I,E,E,C,O,K,G,Q,S,C,E,C,C,C,C,E,C,C,C,G,I,E,E,E,C,E,S,E,C,E,I,C,G,I,I,C,S,E,I,C,a,E,I,C,O,M,I,C,M,E,I,C,O,E,E,S,C,I,C,M,C,K,C,C,C,C,S,E,C,E,I,E,E,a,E,E,wC,E,iB,M,M,E,mB,G,E,a,K,E,S,E,O,C,C,E,G,C,E,mB,Q,E,U,O,W,E,I,C,U,G,E,I,C,E,E,S,C,E,yB,W,I,E,E,O,O,K,G,Q,S,C,E,G,C,C,E,C,M,I,G,C,C,E,C,O,S,C,C,C,E,I,E,I,E,E,sB,S,E,C,C,C,E,I,E,E,E,E,E,E,E,E,M,G,A,U,O,G,E,C,G,U,E,C,I,E,A,E,M,E,M,Q,I,E,Q,E,8B,E,A,E,C,C,E,C,E,A,E,C,C,E,A,K,W,G,C,E,E,A,E,A,E,M,E,U,G,C,E,A,E,A,E,K,E,W,G,C,E,A,E,A,E,M,C,C,W,I,E,U,A,E,O,E,+B,E,C,C,A,E,O,C,K,A,U,O,G,E,A,E,E,E,A,U,O,E,A,E,E,G,E,E,M,iD,E,E,E,G,E,E,G,E,G,G,E,qB,G,E,oB,6B,I,E,O,I,E,Q,I,E,O,O,E,M,E,M,E,E,O,E,O,E,E,O,E,E,iB,M,E,c,E,oB,M,E,E,G,E,A,I,E,W,gC,E,S,C,E,M,M,E,E,O,E,E,M,E,E,O,E,C,E,C,E,E,E,E,O,C,C,E,O,C,C,Q,C,C,E,G,C,E,E,oB,E,E,G,E,O,S,C,C,C,E,I,E,E,E,E,A,E,E,E,A,E,G,S,I,E,O,I,E,S,E,E,G,E,G,G,E,qB,G,E,oB,6B,E,M,E,M,E,E,O,E,O,E,E,iB,M,E,c,E,oB,M,E,O,E,G,E,A,I,E,W,gC,E,S,C,E,M,M,E,E,O,E,E,M,E,E,O,E,C,E,C,E,E,G,C,E,E,U,e,E,c,E,E,S,C,E,M,E,K,E,E,Q,W,E,Q,E,C,E,M,W,E,G,Q,E,E,Q,W,E,G,Q,S,C,E,E,a,E,qB,E,iB,M,E,c,E,oB,M,E,O,E,M,E,O,G,E,iB,M,K,C,C,E,G,C,K,K,C,G,E,A,C,E,C,K,C,E,E,C,K,C,E,I,G,E,A,C,E,C,K,C,E,E,C,K,C,E,E,C,M,C,E,I,G,C,M,M,M,M,M,M,M,C,G,C,C,C,E,C,M,C,W,E,C,M,C,wB,E,C,M,C,wB,E,C,M,C,iC,E,C,M,C,c,I,G,C,a,W,S,Q,Y,Y,C,S,K,I,C,M,E,I,C,E,E,I,C,E,E,I,C,E,E,I,C,E,E,I,C,O,K,I,C,K,E,I,C,W,C,E,I,C,K,K,I,C,O,E,I,C,O,E,I,C,Q,C,C,S,G,C,E,O,M,U,M,K,E,C,S,G,C,E,O,G,G,K,G,C,I,G,O,M,I,G,S,G,e,G,c,G,iB,G,a,G,e,G,a,G,c,G,a,G,Y,G,c,G,Y,G,Y,G,Y,G,uB,G,uB,G,e,G,gB,G,kB,G,iB,G,e,G,e,G,kB,G,iB,G,iB,G,c,G,W,G,U,G,c,G,O,G,O,G,W,G,Y,G,Q,G,S,G,Y,G,Q,G,S,G,G,G,G,G,G,G,G,G,G,G,G,G,gB,G,G,G,G,G,G,G,C,G,G,G,G,G,G,G,G,G,C,G,C,E,E,E,E,K,E,I,E,Y,I,sB,I,Y,I,sB,I,Y,I,sB,I,Y,I,sB,I,iB,M,2B,M,iB,M,2B,M,qB,G,E,G,C,iC,2C,2C,qD,iC,2C,2C,qD,C,G,C,M,I,K,I,I,I,M,I,I,I,K,I,M,I,O,I,K,I,Q,I,I,I,S,I,K,I,M,I,O,I,K,I,O,G,E,G,C,E,E,K,E,K,K,Q,K,U,K,U,K,iB,M,iB,M,O,I,E,G,C,K,M,K,K,E,G,C,G,K,I,I,E,S,G,C,E,O,M,Q,I,E,I,E,E,C,S,G,C,E,O,E,K,S,C,C,C,S,A,I,G,G,I,G,E,E,E,G,C,E,C,S,G,C,C,C,C,C,C,C,E,I,C,Q,E,I,C,W,E,I,C,Q,E,I,C,O,C,C,S,G,C,E,O,G,C,C,E,S,E,Y,E,O,C,C,S,G,C,E,O,I,G,C,E,C,E,C,E,E,C,S,G,C,C,C,E,I,E,E,K,G,A,I,E,C,I,E,E,K,O,O,I,G,C,E,G,E,G,E,E,C,G,A,I,E,C,I,E,E,K,O,I,G,E,Q,E,W,E,Q,E,C,G,A,I,E,O,I,G,C,E,C,E,C,E,G,G,A,I,E,O,I,G,A,I,E,A,I,E,A,I,E,G,I,I,E,C,E,E,C,E,E,C,E,E,E,E,E,K,O,E,E,C,I,E,E,I,C,E,C,G,A,I,E,K,E,C,O,G,A,I,E,K,E,C,O,G,A,I,E,K,E,C,O,G,A,I,E,K,C,E,C,E,I,E,E,K,G,G,C,E,C,C,E,G,G,C,E,C,C,C,M,I,E,O,E,G,E,K,Q,E,G,E,K,W,E,G,E,K,Q,C,O,I,G,E,E,E,E,C,I,G,I,G,C,E,C,E,C,E,W,G,G,S,C,C,C,E,G,C,E,yB,O,K,I,E,E,C,E,E,C,S,I,I,C,gB,G,I,C,c,G,I,C,I,E,I,C,M,I,C,I,E,E,C,E,E,C,S,E,C,C,C,C,C,E,I,E,E,O,I,C,C,E,gB,E,E,c,E,E,I,E,E,M,E,E,K,E,C,I,E,E,C,E,E,C,M,C,W,S,C,E,I,E,E,O,E,yB,iB,E,yB,c,M,G,E,K,G,E,E,O,E,E,O,E,E,S,W,E,yB,Y,M,E,e,E,O,W,I,E,E,E,E,O,G,A,I,G,E,O,K,I,E,O,E,G,E,O,K,I,E,O,E,G,C,C,E,C,E,C,C,E,C,E,I,E,E,I,E,E,E,E,E,E,O,E,E,C,I,E,C,C,E,C,E,yB,kB,E,Q,G,E,yB,kB,E,O,E,K,I,C,C,I,C,E,C,C,E,E,C,E,C,C,E,E,C,C,C,I,E,E,E,O,E,E,E,E,E,O,E,E,C,I,E,C,C,E,C,E,E,gB,E,E,a,C,E,K,C,C,E,C,C,C,E,C,I,E,C,C,E,C,E,C,C,E,A,C,I,G,E,M,S,E,I,I,E,K,K,E,gB,E,E,c,E,C,C,I,C,E,C,E,O,E,E,qB,W,O,E,M,E,M,W,E,K,M,E,G,I,I,E,E,E,E,O,I,E,yB,e,C,C,E,C,C,E,O,E,E,O,C,E,Q,W,E,O,E,E,O,C,C,C,E,G,mB,G,uB,S,G,C,C,C,E,I,I,E,E,E,E,O,E,E,G,C,C,E,G,E,O,E,O,E,C,O,S,C,E,I,E,E,E,A,S,C,E,I,E,E,E,E,E,G,C,E,E,C,E,E,E,C,E,E,C,E,A,a,O,O,E,O,iB,E,C,E,E,S,C,E,G,E,M,E,E,E,W,E,G,A,U,O,G,E,A,a,O,S,sD,E,E,S,c,G,qC,A,U,O,E,A,U,O,A,E,U,A,Y,O,A,E,a,A,Y,O,A,E,sB,E,E,A,Y,O,A,E,Y,A,Y,O,A,E,a,E,A,C,E,C,E,Q,E,Y,G,O,E,E,E,G,W,E,E,E,E,Q,c,G,C,E,E,E,U,E,e,I,E,E,W,E,K,E,S,+B,e,G,C,E,E,E,W,E,uB,G,C,E,E,E,mB,E,W,I,E,K,E,O,W,sC,E,E,Q,Y,G,C,E,C,C,E,O,E,e,G,E,A,C,E,C,E,U,E,E,wB,E,M,6B,I,A,W,E,S,c,E,E,E,G,C,E,C,G,C,E,C,E,A,a,O,S,mE,I,E,A,S,C,C,C,C,C,E,I,E,E,S,c,U,S,I,I,E,O,W,E,O,Y,G,I,S,K,C,I,E,E,wB,E,E,M,E,K,E,E,O,E,G,C,E,M,E,E,E,O,E,C,Q,E,E,M,C,O,E,O,E,Q,E,I,E,K,E,M,O,O,M,G,E,Y,G,I,S,O,E,M,S,W,E,E,M,C,O,E,Q,C,I,I,S,M,A,Y,O,e,A,C,E,I,e,W,W,E,E,E,Q,G,O,iB,S,E,C,G,I,C,O,E,U,W,E,E,a,O,oB,S,G,E,Y,E,C,C,E,G,S,K,E,G,G,C,E,O,K,E,E,O,E,E,S,C,K,I,E,oB,C,E,mB,C,C,E,E,A,S,C,C,C,E,S,E,C,E,G,C,O,E,W,E,E,C,M,E,C,O,I,C,C,O,E,U,E,uB,E,qB,E,E,E,Q,A,E,C,G,E,O,E,U,E,W,E,mB,E,W,E,Q,E,O,E,U,C,G,I,E,4F,K,E,G,G,C,E,O,K,I,E,E,G,E,E,uB,E,E,gB,E,A,S,C,C,C,E,I,E,C,E,S,E,C,E,E,K,E,S,iC,I,E,E,E,c,G,C,E,C,C,E,C,E,a,E,C,M,E,C,C,M,C,C,C,C,I,I,E,E,E,E,W,O,E,E,C,I,E,E,U,C,E,C,G,C,E,G,O,E,Y,E,O,I,E,+G,I,C,O,E,mB,Q,G,C,W,E,Q,W,O,K,G,Q,S,C,E,G,C,C,E,E,C,E,G,M,A,M,qC,E,E,C,C,E,E,G,G,C,E,O,K,I,G,E,C,G,C,E,E,C,G,C,C,G,S,C,E,I,E,C,C,E,Q,I,E,C,C,E,C,E,O,E,K,I,C,E,I,S,C,E,O,C,C,E,A,C,G,E,C,S,E,Y,E,c,E,iB,E,Y,E,a,E,U,E,kB,E,gB,C,E,E,E,W,E,G,E,G,E,I,E,E,mB,E,E,oB,E,C,K,E,K,E,c,E,e,E,iB,E,kB,E,mB,E,oB,E,W,E,U,E,E,C,S,K,U,E,M,G,O,E,U,E,E,E,E,E,G,E,A,S,C,C,C,C,C,C,C,E,I,E,E,E,C,E,S,E,C,E,I,C,G,I,I,C,O,E,e,I,C,K,E,I,C,M,M,I,C,W,E,I,C,U,E,I,C,M,K,I,C,e,K,E,S,C,I,C,M,C,K,C,C,C,C,E,U,K,W,E,W,I,C,K,I,C,O,E,E,U,Q,W,E,I,C,E,I,E,E,C,S,E,C,C,C,C,C,E,E,W,E,W,E,W,E,K,E,E,C,S,E,C,C,C,C,C,C,C,C,C,C,C,E,G,E,M,E,M,Q,G,C,G,E,M,G,K,E,O,G,G,M,Q,C,C,E,E,C,E,E,G,I,I,E,E,E,E,E,E,E,E,O,E,E,G,C,C,E,A,C,E,U,E,E,E,E,E,E,O,E,E,E,G,E,E,e,E,E,S,E,M,G,A,U,O,C,C,E,C,C,E,U,E,I,E,E,U,E,M,E,Q,E,E,G,E,E,E,G,E,E,e,E,E,S,E,M,E,C,C,E,G,E,U,C,C,E,C,O,E,M,G,E,C,C,E,G,K,E,E,E,C,E,O,C,C,E,C,O,C,E,O,E,E,E,G,E,E,e,E,E,S,I,E,M,uB,M,G,E,G,E,M,G,E,G,E,U,E,E,E,E,G,G,C,E,e,I,W,I,W,E,Q,O,G,E,G,C,E,E,M,I,E,E,O,E,E,O,E,E,E,E,E,E,E,C,A,C,I,E,Q,E,C,C,E,C,E,E,E,C,C,E,C,E,G,A,I,E,Q,E,C,C,E,C,E,C,C,E,C,E,C,C,E,C,E,C,C,E,E,E,M,iB,E,M,G,E,E,O,K,E,U,E,I,E,E,U,E,M,E,G,E,E,E,K,E,E,E,E,G,E,E,E,G,E,E,e,E,E,S,E,M,a,a,E,M,K,E,U,E,E,E,E,G,G,C,E,e,I,W,I,W,G,G,E,M,sB,C,S,E,C,E,E,c,E,G,I,E,E,O,E,E,sC,E,a,G,E,O,K,O,C,C,E,G,A,C,O,E,S,C,E,mB,W,I,E,E,O,O,K,G,Q,S,C,E,G,C,C,E,C,M,I,G,C,C,E,C,O,S,C,C,C,C,C,C,C,E,E,c,I,E,I,E,G,S,E,C,E,I,E,M,E,K,E,E,E,E,E,E,O,M,Q,I,E,I,E,I,a,Y,E,E,A,U,O,E,E,A,E,E,I,E,K,E,S,4D,S,I,E,A,O,G,M,Q,I,E,I,E,G,2B,E,E,M,U,I,E,U,E,M,E,wB,E,C,C,E,M,E,S,I,E,U,E,K,E,uB,E,C,C,E,K,E,c,I,E,K,E,U,S,qB,E,A,E,E,W,W,I,E,I,E,+C,E,A,E,E,S,E,O,E,E,E,E,E,E,E,I,G,E,W,E,K,E,G,E,M,G,K,E,M,E,E,U,E,E,W,G,E,S,C,E,M,K,E,W,C,C,E,M,A,E,C,C,S,E,C,C,C,E,E,E,E,Y,E,W,+E,E,W,yB,E,wB,E,Y,E,c,E,K,E,E,Q,C,C,E,G,C,E,G,E,G,E,U,S,E,Q,E,E,Q,S,C,C,C,E,I,E,E,A,E,C,G,C,E,G,E,O,E,I,a,Y,E,E,Q,G,M,Q,G,C,G,E,O,G,G,A,U,O,C,C,E,C,C,I,E,E,U,E,M,E,Q,E,E,G,E,E,G,E,S,E,M,G,M,Q,C,C,E,G,E,C,C,E,E,C,E,E,G,I,E,E,E,E,E,O,E,E,G,E,S,E,M,E,M,uB,M,G,E,G,C,E,E,M,I,E,E,O,E,E,E,E,E,E,E,C,A,C,I,E,Q,E,C,C,E,C,E,E,E,C,C,E,C,E,G,A,I,E,Q,E,C,C,E,C,E,C,C,E,C,E,C,C,E,C,E,C,C,E,E,E,M,iB,I,E,M,Q,E,M,E,M,E,E,M,E,E,U,E,E,G,E,E,E,K,E,E,E,E,E,Q,E,E,G,E,S,E,M,E,M,mC,O,C,E,E,S,C,E,M,E,K,E,E,Q,W,E,E,E,C,E,a,S,C,C,C,E,I,E,E,M,O,G,C,E,I,E,E,E,E,O,E,E,E,M,E,E,C,G,C,E,c,S,C,E,E,K,E,E,M,W,E,G,Q,G,E,Q,E,E,U,S,C,S,A,G,E,mB,E,E,Q,I,E,Q,W,E,G,Q,S,C,E,E,O,E,e,E,W,E,K,E,Q,E,W,E,K,E,gB,E,W,E,M,E,E,Y,C,C,E,E,E,E,S,C,E,O,E,c,E,G,E,A,S,C,C,C,C,C,C,C,E,I,E,C,E,E,E,E,C,M,K,O,I,E,S,E,C,E,I,C,G,I,C,C,I,C,G,C,I,C,I,C,O,E,I,C,S,E,I,C,U,E,I,C,K,C,C,E,wB,C,E,O,I,E,E,U,K,W,I,C,O,M,E,I,E,E,C,S,E,C,C,C,C,C,C,C,C,C,C,C,C,C,E,G,E,O,O,E,C,I,E,E,C,E,G,C,C,E,I,E,I,C,E,E,K,G,C,E,E,uB,K,I,E,E,Y,E,O,E,E,E,E,M,E,W,M,E,G,E,O,M,G,K,E,O,M,E,E,O,U,E,E,O,W,E,G,E,E,C,E,C,O,E,O,O,K,K,K,K,E,K,K,M,K,K,K,E,K,K,M,K,K,K,E,K,K,S,E,M,qC,C,E,O,M,C,C,E,K,E,E,A,O,G,C,C,E,uB,6E,I,E,E,E,I,E,E,O,W,A,O,E,I,E,O,G,C,I,C,G,E,U,E,I,E,E,G,E,E,C,E,E,I,E,E,O,S,C,I,G,C,E,C,E,I,G,C,E,C,E,I,G,C,E,C,C,C,E,S,C,C,S,E,C,E,E,gB,E,A,O,E,O,oC,O,C,C,E,G,C,E,O,U,E,O,I,C,M,C,O,S,C,C,C,E,I,E,E,O,K,M,C,G,E,I,E,E,S,S,E,C,E,G,G,G,A,U,O,E,E,G,E,S,E,E,U,A,E,E,E,K,S,C,I,E,K,E,M,E,G,E,G,E,E,E,C,C,M,Q,I,E,I,E,G,E,G,E,K,E,S,kC,S,G,E,M,Q,E,E,O,E,I,E,G,mC,U,I,E,U,E,M,E,gC,E,C,C,E,M,E,c,I,E,U,E,U,E,oC,E,C,C,E,U,E,U,I,E,A,U,O,E,O,E,O,E,qC,E,A,E,E,O,S,I,E,U,E,K,E,uB,E,C,C,E,K,E,W,E,E,A,E,E,Q,E,E,A,O,G,A,O,E,G,E,C,A,O,G,A,O,C,G,C,G,C,I,E,E,E,E,E,E,E,E,O,I,E,S,E,E,U,E,E,K,K,O,C,C,O,E,gB,E,G,E,U,W,E,U,E,E,Q,S,C,C,C,E,O,E,Q,E,G,C,E,E,Q,W,E,E,E,C,E,a,S,C,E,I,E,E,M,O,G,C,E,I,E,E,O,K,M,C,E,C,G,Q,E,E,E,E,M,G,G,E,G,C,E,c,S,C,E,E,K,E,E,Y,S,C,Q,A,A,Y,O,G,E,qB,E,E,U,I,E,M,W,E,G,Q,E,C,C,E,E,E,E,G,E,A,S,C,C,C,C,C,C,C,C,C,C,C,C,C,E,I,I,E,E,c,E,A,M,G,E,E,E,E,E,E,C,C,E,C,I,G,I,E,E,E,C,E,E,C,O,G,M,C,E,M,E,W,K,U,K,Q,I,W,K,E,G,Q,S,C,E,E,S,E,E,W,E,U,S,C,E,I,E,I,E,S,E,C,E,G,M,Q,G,E,E,E,U,E,c,E,S,U,E,S,K,E,a,C,E,E,O,E,E,M,E,E,U,G,E,U,M,C,G,E,A,U,O,E,oC,E,e,E,mC,E,S,C,I,E,E,Q,C,E,a,A,Y,O,G,A,a,E,W,E,S,U,E,a,C,I,E,S,G,E,a,C,G,E,Y,E,W,E,S,E,S,E,a,C,I,E,S,E,O,E,U,E,a,C,E,M,E,S,K,E,a,C,E,E,E,W,E,O,E,E,M,G,E,U,G,E,U,E,E,W,E,M,E,S,U,U,E,U,E,S,U,U,W,G,C,E,O,A,E,E,M,E,U,G,C,E,M,A,E,E,K,E,c,G,C,E,U,A,E,E,S,E,c,I,E,E,a,E,uB,E,W,E,U,C,C,E,U,E,E,S,K,I,I,E,O,K,G,E,E,E,E,O,E,E,E,G,Q,C,C,E,G,E,4B,C,C,E,C,uB,G,G,E,M,Q,G,8B,C,E,E,O,E,uB,E,E,O,E,uC,I,E,C,E,E,E,U,C,E,O,E,O,I,I,E,E,E,E,O,E,E,C,I,E,E,E,C,C,E,C,E,C,C,E,C,I,G,E,E,M,C,C,M,Q,I,E,I,E,I,E,O,C,E,G,E,E,O,C,E,C,E,I,E,Q,Y,E,W,E,Q,I,E,U,E,O,C,E,C,O,E,O,C,E,E,C,E,E,O,C,E,C,E,O,E,M,C,E,C,E,E,E,O,E,U,G,E,K,A,E,E,O,U,E,W,C,E,E,K,E,O,M,E,O,E,E,O,E,E,Q,E,E,M,E,C,C,E,C,G,E,U,I,E,O,E,U,G,E,K,A,E,E,O,U,E,W,C,E,E,K,E,O,M,E,O,E,E,O,E,E,Q,E,E,M,G,E,U,E,S,E,O,E,U,E,Q,E,K,A,E,C,C,E,M,E,O,S,E,E,W,C,C,E,W,S,G,E,U,E,K,E,uB,E,K,C,C,E,K,E,E,K,E,O,M,E,O,A,E,C,E,Q,C,E,E,O,A,E,C,E,Q,C,E,E,Q,A,E,C,E,S,C,E,E,M,E,E,E,M,G,E,M,E,gC,E,E,Q,E,kB,E,E,Q,G,E,Q,I,oC,E,E,S,E,4B,E,C,E,S,C,C,E,uB,0D,M,G,E,E,E,0C,E,E,C,E,G,E,E,E,C,E,G,E,E,E,C,E,G,E,E,E,C,E,G,E,E,M,G,E,C,E,uC,E,C,I,I,E,E,E,E,Q,O,E,E,C,C,C,E,E,E,O,C,E,G,E,O,C,E,C,U,E,O,C,E,C,M,O,E,U,C,C,O,E,U,E,E,Q,W,I,I,E,E,E,E,Q,O,E,E,E,O,C,E,E,E,O,C,E,C,S,C,E,Q,O,E,E,e,E,S,U,E,S,K,E,a,C,G,E,S,E,E,K,E,E,U,M,E,E,E,O,S,C,Q,A,A,Y,O,G,E,K,E,K,I,E,c,S,C,E,I,I,E,E,E,E,O,E,E,C,I,E,C,C,E,A,C,E,S,I,E,yB,G,E,O,K,C,E,O,I,S,C,E,G,I,E,Y,I,E,I,E,E,mB,E,K,E,mB,M,E,W,E,E,S,C,E,G,I,E,Y,G,E,E,gB,C,I,I,E,I,E,E,E,E,O,E,E,C,I,E,C,C,E,A,C,E,Q,E,wB,G,E,O,O,E,oB,E,E,K,E,K,E,W,E,O,E,S,G,E,S,E,yB,E,E,W,E,yB,G,E,e,E,E,E,E,E,E,E,E,G,C,E,S,E,W,M,E,S,O,Q,E,W,M,K,C,E,W,E,E,M,I,W,E,G,Q,S,C,E,E,S,E,E,W,C,E,S,I,O,E,uB,C,S,I,O,E,sB,C,S,I,I,C,G,E,E,I,C,W,E,C,I,C,S,K,I,C,a,C,E,I,C,M,E,I,C,O,E,I,C,U,G,I,C,U,E,I,E,I,E,I,C,I,E,uB,I,C,I,K,C,C,I,C,G,C,I,C,I,C,Q,E,A,Q,E,U,U,W,I,I,E,I,E,I,C,W,E,E,E,E,O,E,E,C,I,E,C,C,E,A,C,E,Q,E,wB,G,E,W,M,E,O,Q,E,oB,E,E,K,E,K,E,W,E,O,E,Q,G,E,S,E,yB,E,E,W,E,yB,G,E,e,E,E,E,E,E,E,E,E,G,C,I,I,E,E,O,E,E,E,E,E,yB,G,I,E,E,Y,I,C,U,E,E,W,M,E,O,Q,E,W,M,K,E,E,U,Q,W,I,E,I,I,E,mB,I,C,K,I,C,Y,E,W,K,E,mB,M,E,E,U,Q,W,G,I,C,I,C,I,E,I,I,G,E,a,E,W,K,E,mB,O,E,qB,I,C,K,I,C,I,I,C,I,C,e,I,C,S,U,I,C,S,K,I,C,a,C,G,C,C,I,C,G,G,O,C,C,I,C,G,C,E,U,E,E,C,E,E,E,E,E,E,E,G,E,A,S,C,C,C,C,C,C,C,E,I,E,C,E,E,C,E,S,E,C,C,C,C,C,C,C,E,I,C,K,E,I,C,G,E,I,C,S,E,I,C,K,C,C,S,E,C,C,C,E,I,I,E,E,E,E,O,E,E,G,C,C,E,C,K,E,G,C,C,C,E,C,S,E,S,M,C,E,K,E,C,S,E,C,C,C,C,C,E,I,E,A,Q,E,E,E,E,C,C,E,C,G,C,E,C,I,E,E,I,G,E,E,a,G,E,a,E,G,E,c,G,E,Y,E,E,E,E,G,C,C,E,C,C,C,O,C,C,I,E,C,E,E,E,C,E,E,S,E,C,C,C,E,I,C,G,I,I,C,O,E,I,C,O,E,I,C,Q,K,I,C,S,E,C,I,C,W,E,C,I,C,S,E,E,S,C,I,C,M,C,c,E,gB,C,C,C,C,S,E,C,C,C,C,C,E,I,E,E,E,E,M,E,Q,E,E,M,E,Q,E,E,Q,E,gB,G,E,a,E,G,E,a,E,G,E,I,E,E,E,E,O,E,E,C,I,E,C,C,E,C,E,mB,E,C,C,E,C,C,C,E,C,C,E,Y,G,E,U,E,E,E,I,E,Q,E,I,E,Q,G,I,E,E,oB,E,M,C,E,S,C,E,M,c,C,E,I,E,E,S,I,E,E,E,E,E,E,G,E,E,iB,E,G,C,G,E,K,E,I,I,E,E,E,E,K,E,E,C,I,E,E,K,Q,M,I,E,K,E,E,I,E,E,E,G,G,E,mB,E,G,G,C,I,E,E,I,C,E,K,G,C,E,E,Q,M,G,E,E,E,I,E,E,E,G,G,E,mB,E,G,G,C,I,E,E,oB,E,M,C,E,S,C,E,M,gB,C,E,I,E,E,W,I,E,E,E,E,E,E,C,E,E,gB,E,E,G,E,E,I,E,E,K,E,G,E,M,E,kB,E,E,M,G,Q,E,U,E,oB,W,I,E,E,O,E,Q,S,C,E,E,M,c,G,C,E,E,M,a,C,G,C,E,E,sB,W,I,E,E,O,E,Q,S,C,E,E,M,gB,G,C,E,E,M,e,C,G,C,G,C,M,W,I,E,E,a,K,G,E,G,Q,G,E,C,E,E,G,Q,G,E,C,E,E,Q,S,C,E,E,c,E,Q,G,E,O,E,E,C,E,E,Y,C,E,Q,S,C,C,C,C,C,C,C,E,E,Q,G,E,wB,G,E,Q,G,E,0B,G,I,E,C,C,E,C,G,C,E,C,C,E,C,C,C,E,I,E,C,C,E,C,G,I,E,W,C,G,O,E,I,E,I,E,E,G,O,E,c,E,E,E,G,G,C,C,C,E,C,C,E,E,K,G,E,E,C,Q,W,G,E,W,E,U,E,C,E,c,E,S,I,E,E,Q,G,E,O,E,G,E,a,C,C,C,E,O,C,U,I,E,a,C,C,E,O,E,O,C,C,E,O,C,O,C,C,E,O,C,E,O,E,O,K,C,C,E,O,E,S,E,a,C,C,E,O,E,O,C,C,E,O,C,O,C,C,E,O,C,C,E,E,Q,W,E,C,E,E,C,E,I,I,E,E,E,E,O,E,E,E,C,C,E,C,K,C,C,E,C,W,I,S,C,E,M,C,E,S,E,K,A,G,E,O,E,K,G,K,E,C,E,E,E,E,G,E,A,S,C,C,C,C,C,C,C,C,C,C,C,C,C,E,I,E,C,a,K,Y,K,K,K,K,I,E,E,C,O,M,M,M,O,K,E,E,C,Q,K,O,I,E,E,E,C,O,K,yB,K,wB,K,wB,K,uB,I,E,G,E,C,K,E,Q,K,E,E,C,M,K,M,M,O,M,U,K,E,E,C,M,K,U,K,kB,K,I,K,K,K,M,M,U,M,O,K,E,E,C,C,C,E,W,E,K,M,E,M,O,E,mB,C,E,Q,E,M,I,E,E,wB,C,E,Q,C,C,a,C,K,E,E,sB,E,E,C,M,K,gB,K,G,E,E,C,O,K,O,K,gB,K,I,E,+B,E,E,C,gB,M,iB,M,iB,M,iB,K,G,E,8B,E,E,C,U,M,0B,M,8B,K,G,E,gC,E,E,C,mB,M,mB,M,oB,M,oB,K,G,E,+B,C,C,C,W,C,K,E,I,E,M,U,M,K,E,a,Q,O,K,G,Q,S,C,E,I,E,C,C,E,C,E,Q,I,G,C,C,C,E,C,C,C,G,I,E,O,K,E,C,E,e,E,I,E,E,C,O,K,G,Q,S,C,E,C,C,C,C,E,C,C,C,G,I,E,E,C,O,K,G,Q,S,C,E,C,C,C,C,E,C,C,C,G,I,E,E,C,O,K,G,Q,S,C,E,C,C,C,C,E,C,C,C,G,I,E,E,C,O,K,G,Q,S,C,E,C,C,C,C,E,C,C,C,G,I,E,E,C,O,K,G,Q,S,C,E,C,C,C,C,E,C,C,C,G,I,E,E,O,S,C,C,C,E,I,E,C,C,E,C,O,A,O,G,A,O,G,A,O,G,A,O,G,A,O,G,A,Q,G,E,U,C,A,Q,G,A,Q,C,E,C,C,E,C,E,A,Q,G,E,Q,S,E,C,C,E,C,K,C,C,E,C,K,C,E,C,G,S,I,I,C,e,K,I,C,O,K,I,C,K,K,I,C,W,C,E,I,C,iB,C,E,I,C,M,C,E,I,C,gB,E,I,C,W,M,I,C,M,E,I,C,O,E,I,C,S,C,C,S,E,C,C,C,E,E,e,E,e,E,O,E,O,E,K,E,K,E,W,E,W,E,iB,E,iB,E,M,E,M,E,gB,E,gB,E,W,E,W,E,M,E,M,E,O,E,O,E,S,E,Q,C,S,E,C,C,C,E,G,A,U,O,G,G,G,qB,I,E,K,E,iB,U,4B,E,iB,E,kB,U,I,E,K,E,M,U,wB,E,M,E,O,c,I,E,M,E,U,C,E,E,E,E,C,oC,E,gB,E,W,e,I,E,U,E,W,E,sB,E,W,C,C,E,W,E,S,E,C,I,E,E,K,E,E,mB,C,C,A,U,G,A,Y,C,E,4F,E,E,wB,C,C,A,e,G,A,Y,C,E,wG,E,E,qB,C,C,A,W,G,A,W,G,A,kB,C,E,6F,E,U,E,E,wB,E,K,C,C,E,A,C,I,E,E,M,E,E,O,E,E,S,E,C,C,C,U,G,E,M,Q,E,Q,E,M,Q,E,0B,E,E,K,C,E,C,E,E,K,C,E,C,I,E,M,S,E,A,C,E,E,K,C,E,A,E,G,G,E,8B,E,C,G,E,G,G,G,E,e,iB,E,G,G,G,E,e,oB,W,G,E,A,C,E,E,E,M,G,G,G,E,e,kB,U,G,E,A,C,E,E,K,G,G,G,E,e,iB,W,G,E,A,C,E,E,M,G,G,G,E,e,kB,a,I,E,A,C,E,E,Q,E,G,G,E,8B,E,C,I,E,M,A,E,E,E,O,A,E,E,E,S,A,E,E,I,E,C,E,G,W,E,C,I,E,E,O,E,E,qB,C,C,A,U,G,A,kB,C,E,6F,E,U,E,E,0B,I,E,E,e,C,C,E,A,C,E,O,C,C,E,C,K,G,C,C,S,C,G,C,E,K,C,C,E,A,E,K,G,C,E,W,C,C,E,E,C,C,C,C,G,E,E,S,E,C,E,O,C,G,C,E,E,W,E,C,E,O,E,C,E,O,E,e,E,C,E,S,A,E,G,G,E,E,W,E,C,E,O,C,yD,C,S,E,C,E,E,Y,M,E,O,E,Y,M,E,kB,E,Y,M,E,Y,E,Y,K,E,gB,C,S,I,E,K,I,E,I,C,Q,E,I,C,Q,E,I,C,K,K,I,C,U,C,E,I,C,Q,K,I,C,U,C,C,C,S,E,C,C,C,E,I,E,K,G,G,G,E,E,I,E,K,E,S,2B,E,E,G,M,G,C,E,Q,A,E,E,C,E,M,G,C,E,Q,A,E,E,C,E,G,E,O,C,E,E,I,G,E,C,E,Y,a,W,0D,E,K,C,E,C,E,4D,I,E,E,c,E,E,c,C,E,M,E,O,E,E,Q,E,O,E,Q,E,E,Q,E,U,C,E,E,E,S,G,E,Q,G,E,S,G,E,Q,G,E,M,G,E,O,G,E,O,G,E,Q,E,kC,M,G,G,G,E,G,E,S,E,U,E,E,K,E,S,G,A,O,E,M,C,E,K,G,E,O,G,G,G,E,S,E,U,E,A,S,C,C,C,E,I,E,E,O,O,E,M,K,K,K,K,K,K,K,K,I,E,E,U,E,K,G,E,I,G,E,K,E,K,M,M,E,K,E,G,K,S,E,M,uD,C,E,E,G,E,U,E,E,U,C,O,G,E,G,C,I,E,E,E,E,E,E,E,E,K,M,Q,I,A,O,E,M,C,E,K,G,E,E,I,E,E,M,E,E,M,A,C,I,E,Q,E,C,C,E,C,E,C,C,E,G,E,A,I,E,O,+C,E,E,E,G,E,C,C,E,C,E,C,C,E,C,E,C,C,E,C,E,C,C,E,C,E,U,E,E,M,E,E,O,E,E,S,E,E,O,E,e,E,C,E,C,E,U,C,E,A,S,C,C,C,C,C,C,C,C,C,C,C,E,I,I,E,E,M,E,E,O,E,E,S,E,G,E,E,E,G,E,E,E,E,E,E,E,E,I,I,E,E,E,E,E,E,I,I,E,E,E,E,E,E,C,C,I,C,C,C,E,E,E,E,E,E,E,C,G,E,E,E,E,E,E,E,E,E,O,M,G,A,G,K,I,G,K,I,G,K,G,A,G,K,I,G,K,G,E,Q,E,E,Q,E,O,E,M,E,Q,M,E,O,E,Q,O,E,S,O,G,G,K,G,E,Q,E,E,M,E,M,E,O,E,O,E,S,O,G,G,K,G,E,Q,E,E,M,E,a,E,O,E,c,E,S,O,G,G,K,G,E,Q,E,E,M,E,W,E,O,E,Y,E,S,O,G,G,G,C,I,E,E,O,C,C,E,C,O,E,E,Q,E,O,E,E,S,E,E,C,C,E,C,E,E,G,C,C,E,C,E,C,O,G,E,I,I,E,E,M,G,E,E,E,E,E,E,O,E,E,G,C,C,E,C,I,E,G,E,G,E,Q,E,E,G,G,G,E,G,E,U,E,E,M,E,E,O,E,E,S,E,E,O,E,e,E,C,E,C,E,U,C,C,O,E,M,E,O,E,E,O,E,Q,E,E,S,E,U,C,A,C,O,E,K,E,E,W,Q,sB,E,2C,Q,E,M,E,E,W,Q,2B,E,+C,C,S,E,C,C,C,C,C,C,C,C,C,E,I,E,E,Q,E,E,K,E,E,e,E,E,O,E,E,K,E,E,M,E,E,O,E,G,E,E,c,E,E,E,E,E,E,G,E,W,E,wB,E,E,E,E,E,E,E,G,E,W,I,E,kB,E,E,E,E,E,Q,E,Q,E,I,E,c,E,E,E,E,E,E,E,E,E,C,I,E,E,C,S,I,O,E,O,I,C,C,S,E,C,E,E,W,E,S,E,M,E,K,G,E,K,E,C,S,I,E,K,I,E,I,C,W,C,E,I,C,W,K,I,C,Q,E,I,C,O,M,G,C,S,E,C,C,C,C,C,E,I,E,E,M,C,E,C,G,C,E,Q,E,E,M,E,M,E,E,O,E,O,E,E,S,E,S,C,C,S,E,C,C,C,E,I,E,K,G,G,G,E,E,E,M,C,E,C,I,G,E,E,G,E,Q,O,G,E,E,G,M,Q,E,Q,I,I,E,E,O,E,E,E,E,O,E,E,E,E,E,M,C,E,C,I,G,E,Q,E,E,S,E,E,E,C,C,E,E,E,S,G,O,E,E,E,M,C,E,C,I,G,E,E,G,E,Q,E,E,E,E,M,C,E,E,E,Y,C,A,Q,E,gB,A,Q,E,gB,A,Q,E,gB,A,Q,E,c,G,E,E,M,G,G,E,O,G,E,qG,C,S,E,C,C,C,E,I,I,E,E,O,E,E,E,E,O,E,E,C,G,C,C,C,E,C,Q,A,S,C,C,C,C,C,E,I,E,E,Q,E,E,K,E,E,e,E,E,O,E,E,K,E,E,M,E,E,O,E,G,E,E,W,E,E,E,E,E,G,E,W,E,qB,E,E,E,E,E,E,G,E,W,I,E,e,E,E,E,E,Q,E,Q,E,E,I,E,W,E,E,E,E,E,E,E,E,G,K,E,C,C,E,C,E,E,C,C,I,E,E,C,S,I,I,E,E,O,I,E,E,K,G,E,Q,E,I,I,E,E,E,G,E,E,E,M,C,E,C,K,O,C,C,S,E,C,E,I,I,E,E,O,E,E,E,E,O,E,E,C,C,E,E,E,C,C,E,E,C,C,E,C,K,E,K,E,C,S,I,I,C,U,K,I,C,U,K,I,C,M,M,I,C,M,M,I,C,Y,E,I,C,W,C,E,I,C,W,I,C,S,E,C,C,C,E,G,Q,E,C,I,E,E,I,E,U,E,G,E,U,C,C,E,E,C,G,Q,E,Y,C,G,U,G,C,E,W,C,C,C,C,G,Q,E,C,I,E,E,I,E,U,E,G,E,U,C,C,E,A,C,I,E,E,M,E,E,M,G,S,E,C,I,E,E,I,A,C,U,O,G,E,U,E,G,E,E,C,C,E,E,M,Q,K,E,U,C,C,E,C,G,E,U,C,C,E,C,G,E,C,C,C,C,E,C,C,E,C,C,C,C,E,C,C,K,C,G,U,E,C,I,E,E,M,E,U,E,G,E,C,C,E,A,C,G,U,E,C,I,E,E,M,E,U,E,G,E,C,C,E,A,C,C,G,E,M,E,E,M,E,gB,E,C,I,E,E,Y,E,A,U,O,G,G,G,G,E,e,wC,E,Y,E,W,C,G,W,E,C,I,E,C,E,O,O,E,Q,I,S,E,U,E,O,E,uB,E,W,C,C,E,O,C,E,W,C,E,E,C,E,K,K,U,E,E,W,E,O,K,K,S,E,M,Q,E,Q,uB,E,W,C,E,E,C,E,K,S,E,M,sB,E,G,Q,G,C,E,U,I,C,C,C,S,E,C,C,C,E,E,c,E,M,E,W,E,c,E,M,E,W,E,c,E,M,E,O,E,c,E,M,E,O,E,gC,E,c,E,M,E,a,E,a,E,K,M,E,Y,E,e,G,C,I,E,E,E,C,E,G,E,gB,G,M,I,I,W,O,I,G,S,G,C,E,E,K,I,E,I,C,Q,E,I,C,e,K,I,C,G,I,I,C,S,E,I,C,O,E,I,C,Q,E,gB,I,C,K,G,I,C,U,E,I,C,Q,I,E,E,S,C,I,C,M,C,K,C,C,C,C,S,G,C,E,E,c,O,E,Y,E,O,E,Q,C,S,K,I,E,E,C,E,C,E,E,Y,E,O,E,S,E,Y,K,K,C,S,G,C,E,I,E,E,Q,E,E,mC,I,E,E,K,E,E,O,G,I,E,c,A,M,G,E,Y,E,M,E,C,E,C,M,E,c,G,E,Q,K,E,O,K,E,O,K,E,S,E,O,C,C,E,G,C,E,c,Q,E,G,U,C,K,W,A,I,C,W,E,I,E,A,I,C,K,G,E,E,C,I,I,E,E,E,G,E,E,C,I,E,E,C,E,C,G,E,C,G,E,U,E,Q,C,E,K,E,C,E,C,E,C,I,C,E,E,K,C,G,I,E,M,wC,E,S,E,gB,E,G,C,E,gB,E,C,E,A,I,C,K,E,E,c,A,M,G,E,Y,A,I,C,O,A,I,C,Q,C,O,C,E,O,W,I,C,W,C,E,O,W,E,I,C,U,G,G,I,C,C,G,E,S,C,E,oB,W,I,E,E,O,O,K,G,Q,S,C,E,G,C,C,E,C,M,I,G,C,C,E,C,S,S,C,C,C,E,I,E,I,G,M,S,E,C,C,C,E,I,E,E,Q,E,K,G,I,E,I,M,A,U,O,E,A,U,O,E,E,E,A,E,E,A,E,G,E,E,A,E,E,A,E,G,G,E,K,E,S,qC,E,E,G,E,E,I,E,E,E,G,E,Y,C,E,Q,A,C,E,O,C,E,C,E,E,Q,E,Q,E,E,G,E,U,E,E,G,E,e,E,e,E,M,E,M,E,O,E,O,G,G,E,E,M,E,E,M,K,E,G,E,S,C,E,M,K,G,E,e,E,K,E,M,E,O,E,W,C,E,E,E,O,C,C,E,e,C,E,K,C,C,E,K,C,E,I,C,C,E,U,C,E,I,C,C,E,U,C,E,M,C,C,E,M,C,E,M,C,C,E,M,C,C,Q,C,C,E,G,C,E,E,e,E,E,G,E,S,S,C,C,C,C,C,C,C,E,E,C,C,E,2B,I,E,A,E,E,E,A,E,E,E,A,E,E,E,I,O,E,E,G,E,M,E,E,O,E,E,E,G,E,M,E,O,A,C,E,O,C,E,E,E,O,E,Q,A,C,E,Q,C,E,E,E,E,O,E,M,E,S,E,Q,E,iB,E,e,4C,E,G,G,G,G,E,E,O,E,O,E,E,Q,E,O,wC,E,E,Q,G,E,uB,E,E,M,E,S,E,U,sB,G,G,E,E,K,E,E,G,K,E,G,C,E,E,O,S,C,C,C,E,I,E,A,E,E,E,A,E,G,E,G,I,E,O,I,E,O,O,C,C,E,M,E,M,E,E,O,E,O,E,G,G,I,I,E,E,E,S,E,E,E,C,I,E,G,E,E,G,E,G,C,G,C,E,M,E,W,K,E,E,O,E,E,E,E,O,E,K,K,C,O,K,E,S,C,E,M,K,G,E,e,E,K,E,E,C,E,C,E,E,C,E,E,U,Y,E,S,E,E,S,C,E,M,E,K,E,E,Q,W,E,Q,E,C,E,W,S,C,C,C,C,C,C,C,C,C,C,C,E,I,E,I,G,M,C,C,C,E,G,C,E,E,Y,I,E,A,M,G,S,E,C,C,C,C,C,C,C,C,C,C,C,E,I,E,E,E,Q,I,E,K,G,E,E,E,E,E,E,C,C,E,C,I,G,A,U,O,G,G,G,A,U,O,G,G,E,E,C,C,E,C,G,E,C,C,E,C,G,E,C,C,E,C,G,E,C,C,E,C,G,E,C,C,E,C,G,E,C,C,E,C,Q,G,E,E,G,E,E,G,U,E,C,I,E,E,M,I,E,M,Q,I,A,I,E,O,uC,E,E,E,E,E,E,E,A,U,O,C,C,E,E,C,C,C,C,E,C,mC,E,C,C,E,C,G,E,C,C,E,C,C,C,E,C,M,I,E,E,E,E,E,E,E,C,C,E,C,Q,E,M,qC,C,I,E,A,E,G,E,I,E,E,E,E,E,E,E,C,C,E,C,E,E,C,I,E,E,C,C,E,E,E,S,W,E,iB,E,G,E,Q,G,E,Q,oE,G,E,W,E,Q,A,C,C,C,E,C,O,C,E,E,E,Q,C,C,E,C,Q,E,Y,E,E,E,G,E,e,C,C,E,C,e,E,M,C,C,E,C,M,E,O,C,C,E,C,O,G,G,E,E,E,E,E,E,E,C,C,E,C,A,M,G,I,E,E,O,K,E,S,C,E,M,K,G,E,e,E,K,E,M,E,O,E,W,C,E,E,E,O,C,C,E,e,C,E,K,C,C,E,K,C,E,I,C,C,E,U,C,E,I,C,C,E,U,C,E,M,C,C,E,M,C,E,M,C,C,E,M,C,E,E,E,E,E,E,E,C,C,E,E,O,C,C,O,E,E,E,E,E,E,G,E,S,S,C,C,C,C,C,C,C,C,C,E,E,C,C,E,2B,E,A,U,O,G,I,C,A,E,C,G,G,G,E,E,gB,I,E,A,E,E,E,A,E,E,E,A,E,E,E,I,O,E,E,G,E,M,E,E,O,E,E,E,G,E,M,E,O,A,C,E,O,C,E,E,E,O,E,Q,A,C,E,Q,C,E,E,E,E,O,E,M,E,S,E,Q,E,iB,E,e,4C,E,G,G,G,G,E,E,O,E,O,E,E,Q,E,O,wC,E,E,Q,G,E,uB,E,E,M,E,S,E,U,sB,G,G,E,E,A,M,E,E,E,G,K,E,G,C,E,E,O,S,C,E,I,E,A,E,E,G,I,E,O,E,M,E,M,E,E,O,E,O,E,G,G,I,I,E,E,E,E,E,E,I,I,E,E,E,S,E,E,E,E,W,A,M,E,E,E,O,G,E,G,E,E,E,O,E,K,M,O,K,E,S,C,E,M,K,G,E,e,E,K,E,M,E,O,C,E,C,E,E,E,E,E,U,c,E,S,E,E,S,C,E,M,E,K,E,E,Q,W,E,Q,E,C,E,M,W,I,I,E,E,E,G,E,E,E,c,A,M,G,E,Y,K,M,E,C,E,C,K,E,G,Q,I,E,U,E,E,a,C,E,W,S,C,E,O,I,E,Q,W,I,I,E,E,E,G,E,E,C,I,E,E,C,E,C,I,E,U,E,E,K,G,E,C,E,C,K,C,E,G,Q,S,C,E,E,Q,E,gB,E,Y,E,O,E,S,I,I,E,E,E,G,E,E,G,A,C,E,Q,G,C,G,G,G,A,O,E,O,E,W,K,E,E,e,E,O,E,E,Q,E,E,E,e,E,K,W,I,I,E,E,E,E,E,E,E,W,A,M,E,E,E,e,E,O,E,E,Q,E,E,E,e,E,K,M,E,E,Q,E,O,E,E,Q,W,I,I,E,E,E,G,E,E,C,I,E,E,C,E,C,I,E,U,E,E,K,G,E,C,E,C,M,E,c,A,M,G,E,Y,K,M,E,Y,M,K,C,C,C,E,E,E,E,W,E,M,M,E,E,E,G,E,G,E,E,E,E,G,E,A,S,C,C,C,C,C,C,C,C,C,C,C,E,I,E,C,I,K,K,K,M,C,E,O,I,E,E,C,O,C,E,C,Q,S,U,A,C,E,U,E,K,S,E,6B,E,K,U,U,E,0B,E,K,W,I,E,C,Q,C,S,E,C,C,C,C,C,E,I,C,O,E,I,C,Q,E,I,C,a,E,I,E,E,E,E,G,E,E,M,E,E,Q,I,E,E,M,E,E,Q,I,C,M,E,I,C,O,C,C,S,E,C,E,I,E,S,E,Q,S,S,E,c,E,a,c,S,C,S,E,C,C,C,C,C,E,G,G,G,E,Q,C,I,E,E,Q,S,E,K,I,E,E,O,E,K,I,E,E,Q,E,I,G,I,E,kD,E,U,C,K,C,I,E,E,a,c,E,E,Q,G,E,S,E,8C,E,U,C,E,C,S,E,C,C,C,E,I,E,Q,E,qB,M,E,E,O,E,Q,S,Q,G,E,wB,M,E,M,E,a,c,c,C,S,E,C,E,I,E,K,E,K,E,K,E,C,C,U,O,I,E,E,K,W,G,C,E,A,E,E,M,G,E,K,E,W,2B,I,E,E,U,M,A,c,G,E,E,E,A,O,I,A,gB,G,E,E,E,G,O,E,M,4B,A,iB,G,E,E,E,O,E,M,sC,I,E,E,E,E,C,S,E,C,C,C,C,C,C,C,C,C,E,G,E,C,I,E,E,S,C,M,E,O,E,O,E,K,C,G,O,E,S,S,E,I,E,K,E,K,C,I,E,E,O,C,M,E,O,E,O,C,G,O,E,c,S,E,I,E,M,K,E,C,S,E,C,E,O,G,C,E,S,E,Y,C,C,S,E,C,C,C,C,C,E,I,E,Q,E,Q,O,E,G,E,c,E,a,O,E,G,E,M,E,E,O,E,C,E,wB,E,K,a,W,E,mB,E,K,Q,W,I,E,E,E,C,E,S,I,I,C,G,I,C,C,I,C,G,C,I,C,I,C,Y,E,oB,I,C,M,E,I,C,O,E,I,C,iB,E,C,I,C,gB,K,I,C,kB,K,I,C,uB,I,C,S,E,C,E,E,iB,Q,G,E,E,iB,E,E,mB,E,E,uB,C,S,E,C,E,I,E,E,Y,E,E,uC,E,kB,G,E,Y,K,E,mB,O,C,C,E,G,A,C,S,E,C,E,E,gB,M,E,a,I,E,E,E,iB,I,E,E,E,E,O,E,E,E,A,M,E,C,C,E,E,I,E,E,O,E,E,oB,E,E,E,qB,M,A,M,E,K,K,G,E,qB,M,M,K,K,G,E,qB,M,M,K,K,G,E,qB,M,M,K,K,G,E,M,E,iB,E,M,E,mB,E,M,E,wB,I,E,E,uB,O,E,iB,A,Q,G,E,M,qD,E,C,E,E,E,gB,M,E,K,E,K,Y,M,E,I,E,K,E,U,C,S,E,C,C,C,E,I,E,I,E,S,E,C,C,C,E,E,E,O,E,wD,I,E,E,E,E,E,E,C,E,E,C,E,E,K,E,C,E,E,O,E,Q,E,E,E,K,E,K,E,K,E,C,E,G,A,U,O,E,E,A,E,E,E,A,E,G,O,G,E,C,G,E,K,E,S,qC,U,E,C,I,E,A,E,M,E,M,Q,I,E,Q,E,iC,E,C,C,E,C,E,C,C,E,A,K,W,G,C,E,E,A,E,M,E,U,G,C,E,A,E,K,E,W,G,C,E,A,E,M,E,C,U,G,W,C,G,M,Q,E,A,E,O,A,E,S,E,A,I,E,Q,E,mB,yC,C,I,e,G,E,A,C,E,A,E,A,E,U,E,E,8B,iB,I,E,C,C,A,E,a,E,S,c,I,E,A,E,U,G,E,E,mB,C,C,A,U,G,A,Y,C,E,wF,E,E,wB,C,C,A,e,G,A,Y,C,E,qG,A,e,G,A,Y,G,E,E,4B,4E,E,W,C,A,U,G,A,Y,C,I,E,E,yB,gG,E,W,E,M,E,E,uB,gB,I,E,A,E,Y,E,Q,I,E,E,C,E,E,Q,I,E,E,C,E,E,S,W,E,E,M,A,E,Y,E,oC,E,M,A,E,Y,E,wC,K,C,iB,G,wB,C,G,E,C,C,E,C,C,C,A,E,c,A,E,mB,C,G,E,oB,+C,U,I,A,W,O,A,E,M,E,A,E,O,E,A,E,M,E,C,I,Y,I,A,W,O,A,E,Q,E,A,E,S,E,A,E,Q,E,C,I,iB,I,A,W,O,A,E,a,E,E,A,E,c,E,A,E,a,E,C,E,E,C,G,M,E,E,E,I,E,K,E,K,E,K,E,K,G,M,Q,G,E,E,I,Q,G,E,E,C,E,G,M,I,E,E,E,A,M,G,E,E,E,E,C,C,E,C,E,E,E,E,E,G,E,E,oB,E,Q,E,4F,E,E,Q,E,oB,6C,E,G,C,C,E,C,M,E,G,C,C,E,C,O,E,E,E,G,G,C,G,C,E,E,E,E,E,Q,S,E,E,E,E,G,G,C,G,C,E,E,E,E,C,E,U,Q,E,E,E,E,G,C,G,C,G,G,G,C,E,E,E,E,E,gB,gB,E,E,C,C,E,C,C,E,C,C,G,E,uF,I,E,K,I,E,E,E,E,O,E,E,G,E,C,C,E,C,E,G,E,C,C,C,E,E,C,C,E,C,S,G,Q,C,C,E,C,Q,S,S,G,C,C,E,C,c,G,Q,C,C,E,C,a,c,S,E,gC,E,e,C,C,E,E,C,C,E,C,Q,C,I,E,E,C,C,C,E,C,Q,S,O,C,E,C,C,C,E,C,Q,S,K,A,A,Q,E,E,E,E,I,E,qE,C,O,E,E,E,G,E,C,G,E,S,A,O,E,Q,S,Q,E,c,A,Q,E,a,c,O,mD,E,E,E,G,E,C,G,E,c,A,Q,E,a,c,O,qD,E,E,E,G,E,C,G,E,S,A,Q,E,Q,S,Q,E,c,A,Q,E,a,c,O,2D,E,G,E,M,E,E,O,E,E,iB,E,E,gB,E,E,kB,E,E,uB,E,E,M,E,I,G,E,M,E,G,E,Q,E,G,E,a,E,G,E,M,E,M,E,O,E,O,E,G,C,Q,E,mB,E,E,G,E,E,C,O,S,C,C,C,E,E,E,O,E,0D,I,E,K,I,A,E,E,G,E,K,I,A,E,G,E,G,G,I,E,O,I,E,O,O,E,I,I,E,E,iB,E,E,E,E,O,E,E,E,C,C,E,C,E,G,O,E,E,gB,E,G,E,E,kB,E,G,E,E,uB,E,G,E,M,E,M,E,E,O,E,O,E,E,G,C,E,U,c,a,E,Q,W,E,G,E,E,E,I,S,C,E,E,O,C,Y,C,E,E,C,E,C,O,E,E,C,e,S,C,E,G,A,Y,O,G,A,gB,E,U,C,I,E,E,a,G,a,E,O,C,C,O,I,E,O,E,W,S,C,E,I,E,M,G,S,E,C,E,E,A,E,E,Q,E,M,wD,I,E,E,E,C,M,I,E,E,E,E,K,E,O,E,Q,E,E,G,A,U,O,E,E,A,E,O,G,E,C,G,E,K,E,S,qC,U,E,C,I,E,A,E,M,E,M,Q,I,E,Q,E,iC,E,C,C,E,G,C,C,E,C,mC,E,C,C,E,A,K,W,G,C,E,A,E,A,E,M,E,U,G,E,A,E,A,E,M,W,G,E,A,E,S,E,mB,W,G,C,E,A,E,A,E,M,E,C,U,G,W,C,G,M,Q,E,A,E,O,A,E,S,E,A,I,E,Q,E,mB,yC,C,I,e,G,E,A,C,E,A,E,A,E,U,E,E,8B,c,I,E,M,A,E,U,E,sB,E,A,E,W,gB,I,E,A,E,Y,E,M,A,E,Y,E,sC,U,G,C,E,M,A,E,K,E,Y,G,C,E,Q,A,E,O,E,iB,G,C,E,a,A,E,Y,C,M,E,E,G,G,G,M,Q,G,I,E,E,E,E,C,E,E,O,E,E,C,C,E,C,C,C,E,M,E,C,E,K,C,E,M,G,I,E,C,O,E,O,E,K,C,E,I,E,E,E,E,E,E,C,C,E,C,E,W,E,C,I,E,E,E,M,M,E,Q,E,E,O,E,E,C,I,E,C,C,E,C,E,A,Y,O,G,A,gB,E,U,oB,E,G,E,M,E,E,Q,G,E,S,E,0B,E,K,C,E,C,C,O,M,K,C,C,E,A,C,C,I,E,E,E,E,E,E,C,I,I,E,E,E,E,O,E,E,E,K,C,E,C,O,A,M,E,E,I,E,M,C,C,E,C,M,E,Q,C,C,E,C,Q,E,a,C,C,E,C,c,C,C,E,C,C,C,E,C,G,C,C,E,C,E,E,C,O,E,E,C,M,E,O,E,M,C,E,C,O,E,G,E,E,C,M,E,O,S,C,E,I,E,E,A,E,E,G,E,E,G,G,E,e,+B,I,E,M,O,E,I,E,E,M,I,E,E,E,E,O,E,E,C,C,E,C,O,G,I,E,E,E,E,E,E,C,C,E,C,O,G,O,E,M,E,O,E,C,E,U,kB,Q,W,E,Q,S,C,E,E,S,E,C,E,E,M,W,E,G,Q,E,E,Q,W,E,I,K,E,K,K,E,M,C,E,E,G,Q,S,C,E,E,Y,E,oB,E,E,E,C,E,E,E,E,E,E,E,G,E,A,S,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,E,I,E,E,O,E,C,I,M,S,M,mB,K,C,C,E,mB,E,I,M,E,I,O,I,E,E,uB,E,E,mB,E,E,wB,E,C,M,C,E,Q,E,O,E,E,C,E,E,E,C,E,C,E,E,C,E,S,E,C,E,O,E,Q,I,I,C,S,E,C,C,C,C,C,E,I,E,E,G,E,K,G,C,C,E,C,C,C,E,C,C,C,E,C,C,E,C,C,C,S,E,C,C,C,C,C,E,I,E,E,G,E,K,G,M,Q,I,C,C,E,C,E,Q,C,C,E,C,E,S,C,C,E,C,C,C,E,C,E,C,C,E,C,C,C,E,G,M,E,G,M,E,G,a,C,E,E,E,E,E,E,G,wB,C,M,M,E,E,G,oB,C,E,E,E,E,E,E,G,K,C,G,E,G,Y,K,E,G,a,C,E,E,E,E,G,Y,C,G,E,G,G,C,C,E,C,E,C,E,C,E,E,E,G,M,E,G,W,M,E,G,G,M,E,G,G,G,E,G,O,E,G,gB,C,E,E,E,E,G,O,E,G,O,E,G,iB,C,E,C,E,E,E,G,M,E,G,c,I,E,G,c,C,I,E,G,E,E,G,oB,C,K,K,K,K,E,E,G,oB,C,K,K,K,K,E,E,G,M,E,G,U,C,E,E,E,mB,E,oB,E,E,G,G,C,E,E,E,mB,E,oB,E,I,E,C,G,E,Q,E,Q,E,K,E,Q,E,K,E,S,E,O,E,O,E,W,E,M,I,E,S,E,Y,E,W,E,M,E,a,E,E,E,C,U,E,a,G,W,G,e,E,W,G,Q,E,gB,E,E,E,S,W,E,Y,C,G,I,E,W,C,K,C,E,W,E,E,e,S,C,S,A,A,I,E,C,E,C,E,E,S,C,E,O,A,M,C,E,I,I,E,E,S,I,I,E,A,W,I,E,E,E,E,C,E,E,C,S,I,I,E,E,C,E,E,C,O,E,W,E,K,M,E,G,W,E,C,I,W,I,E,I,I,O,E,K,G,U,O,I,E,K,E,K,E,K,M,E,G,Y,E,K,M,C,E,S,W,O,G,C,E,O,E,O,E,K,K,I,G,G,G,C,C,E,C,S,I,I,E,I,E,I,E,E,S,E,E,S,S,E,C,C,C,E,E,E,E,I,E,I,E,G,I,C,O,E,W,E,M,E,G,W,E,C,I,E,I,M,E,K,E,K,E,I,S,C,C,C,C,C,E,E,E,G,E,E,E,I,E,I,E,S,W,O,I,G,C,E,C,I,E,I,E,C,E,M,C,O,E,K,S,C,E,I,I,E,E,E,E,O,E,E,G,C,C,E,G,E,O,C,C,E,C,I,E,I,I,O,E,K,G,E,K,G,C,E,M,E,K,S,C,C,C,E,I,E,E,C,S,I,I,E,I,E,O,O,E,K,G,C,C,E,G,E,I,I,E,E,E,E,E,E,I,I,E,I,E,E,S,O,C,C,E,C,E,E,C,I,E,S,W,O,G,C,Y,E,O,K,I,I,C,C,E,E,M,E,K,W,I,E,G,W,E,I,E,I,E,E,S,E,E,S,O,E,E,C,K,W,O,E,M,E,G,Y,I,A,E,K,W,O,E,M,E,G,Y,I,A,E,S,W,I,E,I,O,G,C,E,Q,E,G,E,G,C,M,E,K,I,I,E,C,C,E,E,Q,W,I,E,C,gB,E,W,C,O,K,G,Q,S,C,E,E,K,I,E,K,C,C,E,C,W,I,G,E,K,K,I,E,G,G,Q,K,O,Q,K,O,Q,K,O,O,A,S,M,K,E,O,I,M,K,E,C,C,I,E,E,K,E,E,M,C,E,G,I,E,Q,I,I,E,E,G,E,E,O,C,M,I,E,O,K,G,Q,S,C,E,C,C,E,C,E,I,E,I,E,G,E,S,W,E,M,E,G,E,W,E,e,E,Q,E,E,Y,E,O,S,C,C,C,C,C,E,E,Q,E,K,I,C,M,iB,E,G,I,I,C,Q,K,E,E,yB,E,G,I,E,E,K,C,E,E,E,Q,C,E,O,K,G,Q,S,C,E,M,Q,C,C,E,I,C,C,E,C,E,I,E,K,I,G,C,C,E,C,E,I,E,Q,I,G,G,I,E,E,U,C,E,O,K,G,Q,S,C,E,C,C,E,C,E,I,K,U,C,C,E,E,G,E,O,S,C,C,C,E,O,E,M,K,E,I,E,C,O,E,Q,E,M,E,Q,C,O,E,I,E,E,M,S,E,M,E,K,I,E,K,O,E,I,I,M,E,O,E,I,E,M,E,K,M,E,O,E,I,E,Q,E,K,M,E,O,E,I,O,E,K,M,E,O,E,K,O,E,G,E,K,G,M,E,O,E,K,U,M,E,O,E,K,I,S,C,E,O,E,O,E,E,E,C,E,E,Y,C,E,I,E,C,E,O,E,Y,S,C,E,I,E,E,G,G,G,K,E,O,C,C,E,C,I,E,E,K,C,E,C,O,G,C,E,E,K,C,E,C,I,C,E,C,C,E,C,E,E,E,C,C,S,E,C,C,C,C,C,E,I,E,A,E,O,Q,E,E,Q,O,K,G,Q,S,C,E,E,K,E,I,G,I,E,A,C,C,E,C,O,E,G,M,Q,G,E,E,I,E,K,E,O,M,E,E,I,E,I,E,I,G,E,E,C,S,E,C,C,C,C,C,C,C,E,I,E,E,E,E,O,E,E,G,E,E,Y,G,C,E,E,I,E,W,sB,E,I,E,E,U,E,E,W,E,E,W,E,E,E,O,E,G,E,I,E,S,G,E,M,E,M,E,U,E,M,E,K,E,oB,M,I,E,kB,G,E,E,qB,E,I,E,+B,E,S,E,oB,M,W,G,E,E,qB,E,M,E,I,E,Q,E,K,G,E,I,C,S,E,C,C,C,C,C,E,I,E,E,O,E,E,G,E,E,Q,E,E,K,E,E,Q,E,E,K,E,E,K,E,U,E,Q,S,C,E,I,E,E,E,E,G,I,C,K,E,K,G,G,K,E,C,E,C,C,E,C,E,C,C,E,C,I,E,E,C,C,E,C,O,S,C,E,O,E,I,E,I,E,I,G,E,E,K,E,I,S,C,C,C,E,O,E,M,E,I,E,G,G,K,O,K,E,I,C,C,E,C,I,E,K,E,I,S,C,C,C,E,O,E,I,E,K,C,G,K,K,K,K,C,E,E,I,E,I,G,I,E,E,K,E,M,E,I,G,E,G,K,E,E,E,K,G,K,E,W,C,C,E,C,M,K,E,Y,C,C,E,C,M,E,I,E,I,E,K,E,E,I,C,C,E,C,I,E,K,E,I,E,I,E,I,E,G,I,O,K,E,O,Q,E,E,iB,E,E,C,S,E,C,C,C,C,C,C,C,E,I,E,E,O,E,E,Q,E,E,Q,E,E,G,G,O,K,I,Q,S,C,E,I,E,C,C,E,C,G,C,G,E,I,I,E,E,O,E,G,G,C,C,E,C,C,I,E,C,C,E,C,G,G,E,E,E,W,E,M,E,E,Y,E,M,E,E,K,G,K,E,W,E,M,K,E,Y,E,O,E,E,I,E,I,E,I,M,G,E,G,C,I,E,C,C,E,C,E,E,I,C,C,E,C,I,E,K,E,I,S,C,C,C,E,O,E,I,E,K,C,G,K,K,I,M,E,E,I,C,C,E,C,I,E,K,E,I,E,I,E,K,E,C,S,E,C,C,C,E,G,C,E,W,E,I,E,O,W,0B,C,C,S,E,C,C,C,C,C,C,C,C,C,E,I,E,E,E,E,E,O,E,E,M,E,E,Q,E,E,M,E,E,Q,S,U,A,A,a,O,Y,a,mB,C,S,E,C,E,E,E,E,M,I,I,K,A,U,O,E,E,E,W,E,K,E,E,a,I,E,E,E,E,M,I,E,4B,E,E,e,E,M,C,S,E,C,E,E,E,a,I,I,E,K,I,E,E,E,mB,E,I,E,2B,E,M,E,E,gB,C,S,E,C,E,I,E,E,I,E,Y,E,E,Y,E,K,E,K,E,Y,E,I,C,G,E,C,G,G,G,C,E,Q,E,G,E,E,M,E,S,E,S,M,C,E,E,E,O,E,G,M,E,E,I,E,Y,I,E,E,Q,E,G,E,M,E,K,E,K,I,E,E,Q,E,G,E,K,M,E,K,E,I,C,S,E,C,C,C,C,C,C,C,C,C,E,I,E,E,O,E,Q,S,C,E,I,E,E,E,K,E,E,U,C,E,C,G,E,C,G,C,E,G,O,E,E,O,E,E,K,C,G,C,E,I,O,I,E,E,Y,G,E,S,W,E,O,E,E,S,qB,E,G,E,C,E,O,K,I,G,Q,S,C,E,C,C,E,C,E,I,E,I,E,E,E,A,S,C,C,C,C,C,E,I,E,E,G,E,E,I,E,a,E,E,I,E,W,I,E,K,E,E,M,E,E,O,E,C,E,E,E,E,E,E,E,E,C,E,C,S,a,S,S,C,S,I,E,O,E,Y,E,4B,E,O,I,E,E,E,K,G,E,E,K,E,I,E,K,K,G,E,E,M,E,W,E,K,E,W,E,K,E,I,S,C,E,O,E,I,E,M,C,C,E,A,G,K,M,K,E,e,M,I,E,Y,E,wB,C,E,E,E,E,W,E,O,E,O,C,K,E,S,E,I,E,S,E,I,E,I,S,C,E,O,E,I,E,I,C,C,E,C,G,G,K,I,K,E,C,I,E,E,Q,E,M,E,c,E,K,E,W,6B,C,E,E,C,K,E,Y,E,K,C,C,S,I,E,M,E,Y,E,6B,E,K,E,gB,O,G,I,S,C,C,C,E,O,E,I,E,M,C,C,E,A,G,K,M,K,E,mB,E,I,E,K,G,I,S,C,C,C,E,O,E,I,E,I,C,C,E,C,G,G,K,I,I,C,A,I,E,I,A,I,E,K,E,M,E,M,E,M,I,E,U,I,E,K,E,E,K,G,A,S,C,E,O,G,K,M,K,M,K,M,O,C,M,M,K,M,K,M,O,C,M,M,K,M,K,M,O,C,S,O,C,C,E,E,K,M,E,E,C,S,E,C,C,C,C,C,C,C,C,C,C,C,E,I,I,E,E,O,E,E,G,E,C,E,E,E,E,E,O,E,E,C,I,E,E,E,C,C,E,C,E,E,K,E,E,K,K,E,E,K,K,E,E,Q,C,E,C,G,E,E,C,G,C,E,S,I,E,E,Q,M,I,G,C,C,E,C,Q,C,C,C,E,C,C,C,I,E,A,E,K,G,Y,G,E,C,G,C,E,G,S,G,G,G,C,I,E,E,M,G,E,Q,M,E,oB,E,I,E,Y,A,Q,G,A,Q,E,C,E,Q,A,Y,O,G,C,A,Q,G,C,A,c,E,W,A,gB,E,S,G,A,Q,G,C,A,gB,E,W,A,oB,E,S,C,E,+B,E,E,Y,I,E,E,K,E,U,E,K,C,E,C,U,E,E,c,E,I,E,a,E,K,E,a,M,G,A,Q,G,A,Q,G,A,Q,E,C,E,S,W,E,Q,E,G,8B,E,E,Y,E,Q,A,Q,G,A,I,E,Q,A,Q,G,A,I,E,Q,A,Q,G,A,K,E,O,qC,E,E,W,G,I,E,E,O,I,qB,M,U,M,K,G,M,E,C,A,C,Q,E,E,E,Q,G,C,E,C,E,E,E,iB,E,M,E,U,E,K,K,C,O,G,K,K,A,I,E,E,Y,E,S,W,E,E,Y,E,Q,E,I,E,S,E,W,E,E,Y,E,K,K,M,M,E,Q,E,I,E,Q,E,O,G,G,E,Q,A,E,E,W,E,E,Y,E,K,K,M,M,E,Q,E,I,E,Q,E,O,G,G,E,Q,A,E,E,W,E,E,Y,E,K,K,M,M,E,Q,E,I,E,Q,E,O,G,G,E,Q,A,E,E,W,E,E,Y,E,K,K,M,M,A,I,E,E,Y,E,U,W,E,E,Y,E,Q,E,I,E,S,E,W,E,E,Y,E,K,K,M,K,A,I,E,E,Y,E,S,W,E,E,Y,E,Q,E,I,E,S,E,W,E,E,Y,E,K,K,M,M,K,M,E,Q,E,I,E,Q,E,O,G,G,E,Q,A,E,E,W,E,E,Y,E,K,K,M,M,K,M,E,Q,E,I,E,Q,E,O,G,G,E,Q,A,E,E,W,E,E,Y,E,K,K,M,M,K,M,E,Q,E,I,E,Q,E,O,G,G,E,Q,A,E,E,W,E,E,Y,E,I,C,E,G,G,I,E,E,O,I,I,M,U,M,K,G,M,E,E,G,M,U,M,K,G,E,E,E,W,E,I,E,I,E,K,C,Q,C,E,E,O,E,E,K,C,G,C,E,I,S,E,E,I,E,S,I,E,G,G,I,C,A,Q,G,E,C,M,Q,G,2C,E,M,E,K,E,+B,E,I,E,a,M,Q,I,E,C,M,Q,G,4C,E,M,E,K,E,mC,E,I,E,a,M,E,S,W,S,E,C,C,C,E,E,O,E,E,oC,E,O,E,C,S,E,C,C,C,E,I,G,E,C,M,Q,G,8C,E,iB,E,e,E,W,E,e,E,O,E,I,0B,E,C,S,E,C,C,C,C,C,E,M,Q,G,E,E,Q,E,O,G,G,E,Q,E,E,uB,C,A,I,E,G,M,E,G,E,E,Y,I,E,M,E,c,E,a,E,a,E,Y,E,E,yC,C,A,I,E,G,M,E,E,E,W,C,S,E,C,E,E,C,M,Q,G,iC,E,U,E,kB,E,wB,C,A,O,E,K,M,E,I,uB,E,W,C,O,G,K,K,K,K,E,S,G,K,M,M,K,M,E,E,S,G,K,M,M,K,M,E,E,S,G,K,M,M,K,M,K,M,E,E,S,G,K,M,M,E,U,G,K,M,M,E,E,U,G,K,M,M,E,E,U,G,K,M,M,E,E,U,G,K,M,M,E,E,S,G,K,M,M,E,G,S,G,K,M,M,E,M,K,M,M,E,M,C,G,I,E,E,O,G,K,M,K,M,I,E,E,I,E,a,E,E,c,E,I,E,a,E,K,E,c,Q,M,K,K,M,E,K,K,M,M,K,M,E,K,E,E,K,M,M,K,M,E,K,E,E,K,M,M,K,M,E,K,E,E,K,M,K,E,K,K,M,M,E,K,E,E,K,M,M,E,K,E,E,K,M,M,E,K,E,E,K,M,M,E,Y,K,M,M,E,Y,K,M,M,E,W,C,G,K,E,Q,W,E,I,G,I,E,G,A,M,E,O,G,C,E,E,W,E,I,E,K,I,E,K,I,E,M,E,G,E,E,O,I,oB,E,K,M,Q,G,E,U,E,E,S,C,E,O,E,I,E,K,C,C,E,A,G,I,E,K,E,wB,E,M,E,6B,E,K,E,E,S,C,E,O,E,I,E,K,E,I,E,G,G,I,E,K,E,K,M,G,E,E,C,I,I,E,E,C,E,E,C,E,E,E,E,E,E,M,Q,G,E,K,C,C,E,E,E,K,E,I,E,I,E,M,G,E,K,E,O,G,E,O,E,Q,K,E,I,S,C,C,C,E,O,E,M,C,C,E,A,G,K,M,K,E,I,S,C,C,C,E,O,E,I,C,C,E,C,G,G,K,K,E,E,W,E,I,E,I,E,K,K,M,G,E,I,K,C,G,E,C,M,Q,G,sC,E,C,I,E,E,M,E,O,E,Q,K,E,M,E,K,E,I,E,I,C,E,E,W,E,I,E,I,E,M,G,E,I,C,C,C,S,E,C,C,C,C,C,C,C,E,I,E,E,E,E,E,E,E,E,E,E,O,E,E,G,E,E,K,E,E,K,G,E,E,S,E,E,G,C,E,Y,E,gB,E,O,G,C,E,C,E,E,E,O,E,G,E,gB,E,M,E,I,E,qB,E,sB,E,E,M,E,E,I,E,I,G,I,M,E,K,E,e,M,I,E,oB,W,E,I,gB,E,I,E,O,S,gB,E,I,yB,A,E,G,M,E,I,E,qB,E,mB,M,G,S,E,C,E,I,E,C,C,E,Q,A,E,A,E,Y,E,gB,E,Q,E,O,E,G,E,O,E,G,E,I,E,I,E,C,I,E,E,I,E,E,I,G,E,E,M,E,E,G,C,E,Y,E,gB,E,O,G,C,E,C,E,E,E,O,E,G,E,S,W,E,S,E,O,E,Q,wB,E,S,E,O,E,E,M,uB,K,E,E,I,E,I,I,E,S,W,E,O,E,E,M,uB,I,G,G,A,U,O,E,C,G,A,I,E,M,M,E,M,E,M,E,K,K,I,E,E,I,E,E,Y,I,E,E,Q,E,E,U,G,E,W,C,E,U,S,I,S,I,E,E,+B,C,E,E,E,E,O,E,a,E,C,K,C,S,I,E,E,6B,C,E,E,E,E,C,K,C,G,A,S,E,E,K,E,M,E,M,I,E,U,I,E,M,G,C,S,I,S,I,E,E,iB,C,E,E,E,E,O,E,a,C,K,C,S,I,E,E,e,C,E,E,E,C,K,C,G,A,S,E,E,K,E,M,E,M,I,E,U,I,E,M,G,C,G,C,A,U,O,G,G,C,E,A,U,O,G,E,M,E,Q,I,E,Y,E,Q,I,E,M,I,G,C,S,E,C,C,C,C,C,C,C,C,C,E,I,E,I,E,E,K,O,G,O,E,S,W,E,W,E,W,E,Q,E,K,E,W,G,G,C,E,W,E,I,E,O,W,0B,E,E,E,E,E,G,E,U,I,C,S,E,C,C,C,C,C,C,C,E,E,E,G,E,O,E,Q,E,E,O,I,W,E,Q,O,E,G,M,E,E,O,I,W,E,O,I,iB,E,E,O,I,kB,E,E,E,E,E,W,W,M,C,C,I,E,E,E,E,E,S,W,M,C,C,E,C,G,E,E,E,E,E,C,S,E,C,C,C,C,C,C,C,E,S,I,M,C,C,C,E,Q,K,E,E,G,E,E,E,E,E,W,G,E,E,E,E,E,S,E,C,G,E,E,E,E,E,C,S,E,C,C,C,C,C,C,C,E,E,E,G,I,E,E,W,E,E,M,E,E,K,C,E,O,M,E,E,Q,E,I,E,E,Q,E,E,Q,S,E,C,E,O,E,Y,G,E,O,C,S,E,C,E,M,C,E,E,C,G,E,E,M,O,E,M,E,I,K,M,E,K,E,I,K,I,E,K,E,I,E,M,E,c,E,E,E,E,S,E,kB,E,E,E,E,a,E,E,E,E,M,G,E,S,E,E,U,E,E,E,E,C,E,C,G,E,E,O,E,Q,E,E,S,E,E,O,I,W,E,Q,O,E,G,M,E,E,O,I,W,E,Q,O,E,G,M,E,E,O,I,W,E,O,I,iB,E,E,O,I,kB,E,E,E,E,E,W,G,E,E,E,E,E,W,I,E,E,E,E,E,S,E,C,G,E,E,E,E,E,S,E,C,G,E,E,E,E,O,C,I,E,E,O,I,M,E,E,O,Q,O,E,G,E,E,I,E,O,E,E,I,E,I,E,K,E,E,O,G,e,E,a,O,E,K,E,I,E,I,E,K,E,K,S,C,E,O,E,E,E,E,E,E,G,I,E,M,E,iB,E,K,E,K,C,C,S,E,C,C,C,C,C,E,I,E,E,M,C,E,C,G,A,G,A,S,C,E,I,C,A,U,O,G,E,E,G,I,I,E,O,K,G,E,E,E,E,O,E,E,G,E,U,C,C,C,C,E,C,E,M,C,E,M,C,E,E,I,I,E,E,O,E,O,K,G,E,C,E,E,C,E,E,C,E,E,E,O,I,M,E,Q,S,C,E,I,E,C,C,E,C,G,E,U,G,C,Y,O,G,C,E,C,C,E,C,E,M,E,E,I,E,G,E,M,E,G,E,Q,E,G,E,Q,E,G,E,U,K,C,O,E,E,I,E,K,O,G,I,S,E,G,K,K,S,E,I,E,K,K,K,S,M,Q,I,E,I,E,O,K,K,S,E,E,K,G,C,E,I,C,G,E,O,C,E,C,I,E,gB,E,C,Q,E,W,E,Q,E,I,E,O,S,C,C,C,E,E,Q,S,C,E,I,E,C,C,E,C,G,E,U,I,I,E,E,O,E,G,E,E,I,E,I,E,K,E,C,G,O,E,M,C,E,C,C,M,C,K,E,Q,E,M,W,I,E,E,I,E,E,K,Q,E,E,K,W,E,E,Q,E,G,E,G,I,E,E,O,E,E,G,E,E,K,E,E,Q,E,E,iB,E,E,G,E,E,E,K,C,G,G,C,E,E,K,E,E,E,yB,E,E,K,E,yB,8B,I,I,E,E,E,E,c,E,E,C,I,E,E,I,E,W,I,E,K,E,E,K,E,W,E,K,E,4B,E,K,E,e,M,I,E,mB,E,wB,E,I,E,S,E,S,E,e,E,W,E,a,K,E,6B,E,K,E,mB,E,I,E,M,E,M,E,M,E,O,E,iB,E,G,G,E,E,6B,E,I,E,a,C,O,E,E,O,I,oB,E,O,I,W,E,O,I,gB,O,K,G,Q,S,C,E,I,E,C,C,E,C,E,E,I,E,I,G,E,E,Q,E,M,E,K,E,W,E,U,E,Y,E,K,E,I,E,I,E,K,E,G,E,M,E,M,E,I,E,K,E,I,G,O,K,G,Q,S,C,E,I,E,E,E,C,C,E,C,E,C,C,E,C,E,E,Q,G,E,E,I,E,K,E,G,C,I,E,E,O,E,E,O,I,E,I,G,E,E,O,I,E,I,G,E,E,E,S,C,E,O,E,I,E,G,G,K,E,E,S,C,E,O,E,I,E,K,E,I,E,I,G,K,K,E,M,E,E,S,C,E,O,E,I,E,O,E,I,E,G,G,K,M,K,E,I,M,E,E,I,E,I,G,E,E,I,E,I,G,E,E,K,E,I,E,I,E,K,E,M,E,M,E,K,E,K,E,E,G,E,S,I,Q,S,C,C,C,C,C,C,C,C,C,E,I,E,G,C,E,M,E,K,G,O,K,E,Q,Q,S,C,E,E,E,E,E,G,G,Q,S,C,E,E,E,E,E,G,I,E,A,S,C,C,C,C,C,C,C,C,C,E,I,E,E,E,E,E,E,E,E,E,E,E,E,E,E,O,E,E,Q,E,S,W,I,E,C,G,G,G,G,G,G,G,G,G,M,C,O,G,S,E,C,E,O,K,G,Q,S,C,E,E,Q,E,Q,I,E,sB,E,I,E,W,E,C,E,G,E,E,G,I,E,A,S,C,C,C,E,I,E,E,O,G,A,U,O,C,C,G,E,A,U,O,C,C,G,C,C,G,O,K,E,S,O,E,O,K,I,E,E,O,E,O,K,G,G,E,O,G,A,U,O,C,C,C,C,E,C,C,C,I,I,E,E,C,E,E,E,E,O,E,E,E,A,U,O,C,C,C,C,E,C,C,+D,E,K,C,A,E,C,C,C,C,E,C,C,C,C,E,C,E,O,C,C,C,O,I,E,E,G,E,A,S,C,C,C,E,I,E,E,O,E,E,Q,G,M,E,C,I,E,C,C,G,Q,A,G,E,E,e,G,E,Q,E,8B,G,S,C,C,C,E,I,E,E,K,G,E,E,O,E,I,E,Y,Q,G,I,E,E,Q,O,E,I,E,I,G,E,U,E,I,E,I,G,E,W,C,I,G,S,C,C,C,E,I,E,E,O,E,I,E,Y,Q,Q,I,E,E,Q,O,E,I,E,I,G,E,I,I,E,I,E,I,G,E,I,I,M,E,C,I,C,M,C,E,O,K,I,E,C,C,G,C,O,G,E,S,C,C,C,E,I,E,E,O,E,G,E,E,O,E,E,Y,E,E,I,E,mB,E,K,E,S,W,E,O,E,I,E,K,E,6B,G,E,I,E,Q,G,I,E,E,Q,O,E,I,E,I,G,E,I,E,U,E,I,I,E,I,E,I,G,E,I,E,W,E,I,I,C,E,E,E,G,E,A,S,C,C,C,C,C,E,I,E,E,O,E,E,Q,S,E,C,E,G,K,E,C,I,E,E,E,C,C,E,C,E,Y,E,S,W,E,E,Y,I,E,C,E,E,A,E,E,E,E,A,E,E,E,M,U,G,E,A,E,E,M,E,Q,G,E,W,E,E,a,E,C,E,W,G,E,A,E,E,O,E,Q,G,E,W,E,E,a,E,C,E,I,G,C,G,G,E,Q,C,G,G,E,W,C,G,G,E,Q,S,C,C,C,E,I,E,E,O,Q,E,C,C,U,G,C,E,E,I,E,I,G,I,E,E,I,E,E,M,W,G,C,E,E,I,E,I,G,I,E,E,C,E,E,E,E,A,E,C,G,K,E,C,I,E,C,C,E,C,E,G,E,S,C,C,C,E,I,E,E,O,E,G,E,S,W,E,O,E,E,Y,E,c,W,E,G,I,E,E,O,Q,E,E,I,E,Q,E,E,I,E,Q,E,E,I,c,E,I,E,Y,I,E,I,G,I,E,K,E,E,I,e,E,I,E,a,I,E,I,G,I,E,K,O,E,S,W,E,O,E,E,Q,E,M,W,E,G,C,E,E,E,E,A,G,O,I,E,Q,E,S,E,Q,E,W,E,Y,E,W,E,Q,E,S,E,S,C,Q,A,E,I,G,E,Q,E,W,E,Q,S,C,C,C,E,I,E,E,O,Q,M,C,E,E,E,I,E,I,I,E,I,E,I,I,A,G,I,C,I,E,E,I,G,E,C,I,E,E,E,I,G,E,Q,E,W,E,Q,S,C,C,C,E,I,E,E,O,E,G,E,E,O,Q,O,E,I,E,I,G,C,C,E,E,E,I,E,I,G,C,C,E,E,C,E,C,M,C,S,E,Y,E,G,C,E,E,E,G,E,A,S,C,C,C,E,I,E,E,O,E,E,Q,E,C,E,E,C,E,E,A,W,G,A,Q,E,C,I,E,E,I,O,O,G,A,O,E,O,I,C,E,E,U,E,E,E,C,E,E,I,E,G,S,C,E,I,E,E,O,U,A,E,E,K,G,M,E,C,G,A,Q,E,C,E,C,E,I,E,E,I,O,G,E,S,C,C,C,E,I,E,E,O,E,G,O,E,I,E,O,I,W,E,I,E,C,O,I,I,E,C,E,E,A,W,G,M,E,C,I,E,C,C,G,C,G,E,S,E,G,G,C,I,E,E,S,E,O,E,C,G,E,E,Y,G,E,C,C,M,I,E,E,Y,G,E,C,E,E,Q,E,mB,E,a,I,E,G,S,C,C,C,E,G,E,C,I,E,E,K,G,O,E,S,E,C,C,O,E,S,K,I,G,O,E,M,E,C,C,G,M,E,C,E,C,E,I,E,C,C,G,C,O,G,E,S,C,C,C,E,I,E,E,O,E,E,a,E,E,S,E,E,O,E,G,E,E,I,Q,E,E,I,E,I,E,K,E,E,K,G,K,E,I,E,iB,E,M,K,E,I,E,gB,E,M,O,E,S,W,E,O,E,K,I,E,K,E,mB,G,E,M,G,E,K,E,K,G,K,E,kB,E,O,E,S,E,C,E,Q,A,E,I,G,E,Q,E,W,E,Q,S,C,C,C,E,O,E,I,E,O,I,e,E,O,S,gB,E,O,I,6B,G,I,I,S,E,C,C,C,E,G,K,E,C,I,E,A,E,C,C,E,C,O,E,E,O,E,E,U,E,E,Q,C,G,G,E,W,E,E,Y,G,S,C,C,C,E,O,G,C,E,O,C,E,C,E,C,G,K,E,C,I,E,C,C,E,C,O,G,E,S,C,C,C,E,I,E,E,O,E,G,O,I,E,O,E,E,S,W,E,O,E,E,M,W,E,I,C,E,C,G,E,C,G,E,O,G,S,C,C,C,E,O,E,O,E,C,G,G,E,O,I,G,E,Q,E,W,E,Q,S,C,C,C,E,O,E,I,E,O,I,e,E,O,I,uB,E,M,G,E,O,I,G,E,Q,E,W,E,Q,S,C,C,C,E,O,E,I,E,O,I,e,E,O,I,2B,G,O,I,C,I,E,E,G,C,G,E,A,W,G,M,E,C,I,E,C,C,G,C,O,E,U,E,E,iB,E,E,mB,E,Y,G,S,C,C,C,E,O,C,C,E,A,E,C,G,M,E,C,I,E,C,C,G,C,O,G,E,S,C,C,C,E,I,E,E,U,U,E,E,O,E,G,O,E,S,W,E,O,E,E,O,E,qC,O,K,G,G,E,I,E,I,E,I,E,Q,A,E,A,G,G,A,E,M,G,S,C,C,C,E,O,E,I,E,S,Y,G,G,W,O,C,G,I,G,E,Q,E,W,E,Q,S,C,C,C,E,I,E,E,S,O,E,I,E,I,E,a,E,G,E,I,G,E,Q,E,W,E,Q,S,C,C,C,E,O,E,I,E,O,I,e,E,O,I,0B,G,I,I,E,A,W,G,M,E,C,I,E,A,E,C,C,G,C,O,E,M,E,E,Q,A,U,O,G,G,E,uB,E,Y,G,W,O,C,E,C,G,M,E,C,I,E,C,C,G,C,O,G,E,S,C,C,C,E,I,E,E,O,E,G,O,E,S,W,E,O,E,U,E,gB,E,Q,E,O,E,M,uB,G,C,E,C,G,E,C,G,G,G,C,G,S,A,E,I,G,E,Q,E,W,E,Q,S,C,C,C,E,I,E,E,I,E,S,c,E,Q,O,E,S,W,E,O,E,E,M,iD,G,C,G,G,S,C,C,C,E,O,E,I,E,S,a,G,I,E,G,W,O,E,G,O,E,S,W,E,Q,C,C,G,C,C,I,E,I,G,E,S,E,Q,E,Y,E,W,E,S,E,Q,S,C,C,C,E,I,E,E,gB,A,E,O,E,I,E,I,E,c,E,O,O,E,I,E,I,E,gB,G,O,E,S,W,E,Q,C,C,G,C,Q,A,E,I,G,E,Q,E,W,E,Q,S,C,C,C,E,O,E,I,E,O,I,e,E,O,I,uB,G,I,I,M,C,S,E,U,E,M,E,U,E,G,C,G,O,E,I,E,U,E,e,E,O,C,C,E,E,G,G,E,A,E,O,E,A,E,Q,E,C,E,E,Q,S,C,E,I,E,E,G,S,E,C,C,C,E,G,K,E,C,I,E,E,C,C,E,C,C,C,C,E,C,G,W,O,C,E,M,G,K,E,C,I,E,C,C,E,A,C,C,C,E,C,G,E,S,C,C,C,E,O,E,E,E,E,O,E,G,E,C,C,O,G,K,G,K,G,K,G,K,G,K,G,K,G,K,G,K,G,K,G,K,G,O,E,S,C,E,O,E,Y,E,U,E,A,E,Y,C,E,S,C,C,C,C,C,E,O,E,S,W,E,O,E,U,E,e,gB,E,E,W,G,C,E,M,G,O,E,S,C,E,O,E,iB,E,G,W,E,A,E,Y,E,C,E,A,E,S,C,C,C,C,C,E,I,E,E,U,a,O,E,S,W,E,O,E,E,O,E,W,E,oB,O,K,I,G,E,I,E,I,E,I,E,M,G,O,E,S,C,E,O,E,Q,E,I,A,I,E,Q,A,U,O,C,C,E,E,A,U,O,C,C,E,E,C,C,E,E,C,C,E,C,0B,A,E,Y,C,E,S,C,C,C,C,C,E,O,E,S,W,E,O,E,E,O,Y,I,E,M,E,uB,E,0B,E,mB,E,Q,E,M,iC,G,C,E,I,I,E,O,E,I,I,E,O,A,E,M,G,O,E,S,C,E,E,Y,E,S,a,A,E,Y,I,E,W,E,E,O,E,I,E,a,E,E,S,E,I,E,W,E,E,O,E,I,E,a,E,E,S,E,I,O,E,iB,E,G,E,U,A,E,Y,E,iB,E,G,E,Y,A,E,Y,E,iB,E,G,E,U,A,E,Y,E,iB,E,G,E,Y,A,E,Y,E,Q,A,K,G,Q,E,K,G,sD,E,K,E,I,A,E,Y,C,E,C,E,C,E,C,E,C,E,C,E,C,E,C,E,C,A,E,S,C,C,C,C,C,E,I,E,E,U,W,S,E,C,C,C,E,I,E,E,I,I,E,E,Q,E,I,E,I,E,E,I,E,I,G,O,E,S,W,E,O,E,E,O,E,W,E,I,E,E,oB,O,K,I,G,C,C,E,S,W,E,O,E,E,Y,E,c,wC,G,I,E,E,M,O,E,E,M,O,E,S,W,I,E,E,U,yB,E,O,E,E,Y,E,S,E,Y,sD,G,I,E,E,I,E,I,E,K,E,E,I,E,I,E,M,S,K,M,C,E,E,I,E,I,E,K,E,E,I,E,I,E,M,S,K,A,E,M,G,O,E,S,C,Q,A,A,U,O,G,E,iB,E,E,W,E,A,E,Y,C,C,C,E,C,C,C,E,C,E,A,U,O,G,E,iB,E,I,E,E,O,A,E,Y,E,iB,E,M,E,E,S,A,E,Y,C,C,C,E,I,C,C,C,E,M,C,O,E,a,yB,A,E,W,E,S,C,C,C,C,C,E,I,E,E,U,e,E,E,M,E,E,M,E,E,K,U,E,e,O,E,S,W,S,E,C,C,C,C,C,E,E,O,E,E,O,E,W,E,oB,O,K,G,C,E,E,K,E,G,E,O,E,K,E,Y,E,c,W,G,E,E,K,E,O,E,Q,E,E,K,E,S,E,S,G,E,K,E,I,E,I,E,I,E,M,E,K,E,I,E,I,E,S,E,I,E,I,E,Y,E,G,C,E,E,A,E,M,G,O,E,S,C,E,O,E,Q,E,I,A,I,E,O,iC,A,E,Y,E,E,S,C,E,M,C,C,C,E,A,E,E,S,C,C,C,C,C,E,O,E,S,W,E,O,E,E,O,Y,I,E,M,E,c,iC,G,E,E,S,C,E,O,E,I,I,E,I,E,I,E,E,M,G,O,E,S,C,E,O,E,Y,E,S,E,A,E,Y,A,E,C,E,S,C,C,C,C,C,E,O,E,S,W,E,O,E,U,E,c,uB,G,E,I,E,K,E,M,G,O,E,S,C,E,E,Y,E,S,E,A,E,Y,I,E,E,K,O,E,E,K,E,E,S,E,E,K,G,O,E,iB,E,G,E,O,A,E,Y,E,Y,E,S,E,O,A,E,Y,E,Y,E,S,E,Q,A,E,Y,C,E,C,E,C,E,E,A,E,S,C,C,C,C,C,E,I,E,E,U,a,O,E,S,W,S,I,E,O,E,M,U,K,K,U,I,uB,C,E,E,Y,E,e,E,c,E,O,E,W,E,I,G,C,E,I,Y,E,I,E,I,E,Q,I,M,E,I,E,U,E,I,a,E,I,E,c,A,E,M,G,K,G,O,E,S,C,E,E,Y,E,S,E,A,E,Y,I,E,E,M,O,E,E,O,O,E,E,O,O,O,E,iB,E,G,E,Q,A,E,Y,E,iB,E,G,E,S,A,E,Y,E,iB,E,G,E,S,A,E,Y,C,I,G,K,K,E,C,E,C,E,C,E,C,E,C,E,C,A,E,S,C,C,C,C,C,E,I,E,E,U,W,S,E,C,E,O,E,S,W,E,O,E,M,E,Q,E,O,E,I,E,O,E,I,W,E,I,E,oB,O,K,I,G,E,I,I,E,Q,E,I,E,I,E,I,E,K,K,C,O,E,S,W,E,O,E,E,Y,E,c,W,E,G,C,I,G,K,K,E,Q,E,S,E,S,A,E,M,G,O,E,S,C,E,E,Y,E,S,E,A,E,Y,I,E,A,E,E,O,E,A,E,E,M,O,E,Y,E,S,E,U,A,E,Y,E,Y,E,S,E,S,A,E,Y,C,E,E,A,E,S,C,C,C,C,C,E,O,E,S,W,E,O,E,E,Y,E,c,W,E,G,C,E,I,E,a,E,I,E,Y,A,E,M,G,O,E,S,C,E,I,E,E,M,A,U,E,E,K,S,G,C,E,I,E,E,Q,C,C,E,E,A,E,Y,C,E,S,C,C,C,C,C,E,O,E,S,W,E,O,E,E,e,E,Y,oB,G,E,I,E,c,K,I,K,E,M,G,O,E,S,C,E,O,E,Q,A,U,O,G,G,E,a,C,E,E,G,E,a,C,E,C,yD,E,a,C,E,C,Q,E,a,C,E,C,A,E,Y,C,E,S,C,C,C,C,C,E,O,E,S,W,E,O,E,U,E,gB,E,K,E,a,C,E,C,K,E,K,E,a,C,E,C,qB,G,C,E,M,G,O,E,S,C,E,O,E,iB,E,G,E,A,E,Y,E,C,E,A,E,S,C,C,C,C,C,E,O,E,S,W,E,O,E,E,Y,E,W,2C,G,E,I,E,oB,E,M,G,O,E,S,C,E,O,E,Q,E,I,A,I,E,O,oC,A,E,Y,E,I,S,C,E,M,C,C,C,E,E,S,C,C,C,C,C,E,O,E,S,W,E,O,E,E,O,Y,I,E,M,E,c,qB,G,E,E,S,C,E,M,K,E,I,E,G,E,E,M,G,O,E,S,C,E,E,Q,A,U,O,G,E,E,A,E,Y,I,E,U,E,E,M,E,E,C,C,E,O,O,E,Q,A,U,O,G,G,G,G,E,yD,A,E,Y,C,E,E,A,E,S,C,C,C,C,C,E,O,E,S,W,E,O,E,E,Y,E,c,0B,G,C,E,I,c,E,K,E,Y,E,I,K,E,W,A,E,C,G,G,E,A,S,C,C,C,C,C,E,I,E,E,E,O,E,E,Q,S,E,C,E,G,K,E,C,I,E,E,G,C,C,E,E,E,S,W,E,O,E,C,E,C,E,E,e,G,I,E,G,W,O,C,G,O,E,G,E,C,C,G,K,E,C,I,E,C,C,E,C,O,G,E,S,C,C,C,E,I,E,E,O,E,G,E,E,I,E,O,Q,O,E,K,O,E,S,W,E,E,O,O,W,E,C,E,C,I,E,I,E,Q,K,G,C,E,C,O,I,C,I,E,E,I,E,E,I,E,K,O,G,I,G,I,E,E,Q,E,G,E,G,K,G,E,G,S,C,C,C,E,O,E,K,E,I,E,I,G,G,E,S,G,E,Q,G,E,Y,G,E,W,G,E,S,G,E,Q,S,C,C,C,E,I,E,E,E,E,O,O,E,E,E,O,E,G,E,I,E,I,I,E,E,E,O,E,G,E,I,E,I,I,I,E,E,Y,E,I,E,O,E,S,W,G,I,E,O,G,E,I,E,I,G,C,K,E,K,E,Q,E,Q,C,C,E,E,E,G,S,E,C,E,I,E,C,C,E,C,G,C,C,C,E,C,C,C,C,E,I,E,E,K,I,E,O,K,G,O,E,E,C,Y,E,K,E,O,E,M,E,M,E,S,K,Q,K,O,C,E,W,C,C,E,G,E,Q,A,S,C,E,I,E,E,E,O,E,E,Q,G,M,E,C,I,E,C,C,C,C,G,A,C,C,E,G,S,C,C,C,E,O,C,E,E,O,C,M,G,M,E,C,I,E,C,C,G,C,E,G,E,S,C,C,C,E,O,E,O,E,E,E,C,O,C,E,E,G,E,U,E,A,E,O,E,A,E,Q,E,C,E,O,K,G,Q,S,C,E,I,E,E,C,C,E,C,G,A,U,O,G,A,W,O,E,E,G,W,O,C,Q,G,A,Y,O,E,C,I,E,E,S,A,C,c,G,A,gB,E,E,G,S,C,E,O,E,K,E,G,A,gB,G,A,oB,G,E,Q,E,M,O,E,6D,E,I,A,E,Y,E,G,S,C,E,O,E,K,E,K,C,E,C,I,E,a,6B,E,I,A,E,W,M,E,G,E,G,S,C,E,O,E,O,I,I,E,E,O,S,C,E,O,E,Q,A,U,O,C,C,E,E,A,W,O,C,C,E,C,mB,E,E,Y,C,C,E,A,G,I,G,E,a,wC,E,I,A,E,W,C,E,M,E,C,C,E,C,C,G,O,K,G,Q,S,C,E,I,E,C,C,E,A,C,C,C,E,C,G,E,S,C,C,C,E,O,E,O,E,E,E,G,G,E,Q,E,S,E,I,C,E,S,E,S,C,G,E,wB,E,O,S,C,I,E,C,E,E,E,Q,W,I,S,C,E,I,E,E,M,C,E,C,O,E,G,C,C,E,C,G,G,G,E,O,E,C,I,E,E,O,E,U,C,W,E,S,E,O,Q,G,C,E,Q,I,G,K,K,K,S,C,C,C,E,O,E,K,E,G,E,O,C,C,C,C,O,E,E,O,C,E,E,Y,E,A,E,O,E,A,E,Q,E,C,E,O,K,G,Q,S,C,E,I,E,C,C,E,C,E,E,G,G,E,I,E,G,G,G,E,M,E,E,O,E,U,E,O,E,M,C,E,C,I,E,K,M,C,I,E,E,U,G,G,E,E,M,E,E,O,E,E,K,O,G,E,Q,A,U,O,G,E,8B,E,A,E,Y,a,E,C,I,E,E,Q,C,E,O,O,E,M,E,A,U,O,E,E,E,G,E,Q,E,I,E,O,G,E,Q,E,kC,E,A,E,Y,G,Q,S,C,C,C,E,E,E,Q,C,C,C,E,C,C,C,E,A,C,G,K,C,E,G,E,Q,E,U,E,O,E,O,M,C,E,C,I,E,U,E,Q,E,Q,C,C,E,iC,E,I,A,E,Y,I,E,A,E,E,O,E,Q,G,E,iC,E,I,A,E,Y,I,E,A,E,E,O,E,Q,G,G,E,I,iC,E,uC,A,E,Y,I,E,A,E,E,K,E,Q,C,C,S,C,G,E,G,G,E,+B,E,qB,A,E,Y,I,E,C,C,E,W,E,C,C,S,I,E,iB,E,K,E,8B,E,A,E,Y,E,C,C,E,K,E,I,E,A,E,E,Q,E,S,W,Y,I,E,Q,A,I,G,E,yC,E,8B,A,E,Y,E,Q,G,E,kC,E,I,A,E,a,I,E,A,E,W,E,C,S,S,U,a,O,O,S,C,O,K,G,Q,S,C,E,E,Q,E,Q,I,E,sB,E,4B,E,2B,E,I,E,E,G,E,O,E,E,M,E,E,K,E,E,W,E,E,K,G,E,M,E,O,E,E,O,E,E,Q,C,C,C,C,C,E,C,G,S,C,C,C,E,I,E,E,Y,G,K,E,O,C,C,E,C,I,E,C,S,C,C,E,O,O,K,G,Q,S,C,E,C,C,E,C,C,C,E,A,G,E,S,E,O,E,K,E,Q,E,K,E,M,E,O,U,C,C,E,C,E,C,E,G,O,K,G,Q,S,C,E,I,E,C,C,E,A,C,C,C,E,C,G,E,S,C,C,C,E,I,E,E,O,E,G,E,E,O,E,E,U,E,E,a,E,E,O,E,S,W,E,O,E,E,a,E,uB,E,oB,E,I,E,M,E,c,E,M,E,c,E,a,E,I,E,4B,E,a,E,yB,E,Y,I,E,gB,8B,E,I,G,I,E,C,S,E,I,C,E,E,E,I,C,C,E,M,E,O,K,G,Q,S,C,E,C,C,E,C,E,I,G,C,C,E,C,G,I,E,E,O,E,E,K,S,E,C,E,E,C,C,E,C,I,E,I,E,M,C,O,E,M,E,I,E,M,E,S,S,E,I,E,iB,M,I,E,K,E,I,E,U,S,E,I,E,c,E,K,M,E,K,E,I,E,U,0B,E,K,E,M,I,E,I,a,E,2B,C,C,E,C,E,C,C,I,E,a,G,M,G,I,S,C,E,O,C,C,E,A,G,K,K,M,S,G,I,S,C,C,C,E,O,C,C,E,C,I,E,oB,E,I,E,a,E,M,G,K,I,U,M,E,I,E,a,E,I,E,iB,M,I,E,Y,S,E,I,E,c,E,Y,I,E,c,E,I,E,Q,I,E,U,E,U,E,W,M,E,gB,E,Q,E,U,E,U,E,W,E,M,E,K,M,E,S,K,E,kB,E,K,K,C,E,G,G,E,S,E,A,E,O,E,A,E,Q,E,C,E,O,K,G,Q,S,C,E,I,E,C,C,E,A,C,C,C,E,C,G,S,C,C,C,Q,A,A,U,O,G,A,W,O,E,G,E,E,K,E,E,G,O,K,G,Q,S,C,E,I,E,C,C,E,A,C,C,C,E,C,G,E,S,C,C,C,E,O,E,O,E,E,E,G,G,C,E,E,E,E,E,G,O,A,S,C,C,C,E,I,E,E,K,O,G,E,E,G,E,E,E,E,S,E,E,E,E,a,E,E,E,G,E,E,E,E,O,E,E,E,E,C,E,C,G,I,E,E,O,Q,O,E,G,G,E,E,O,G,e,E,c,E,O,Q,E,E,E,E,E,O,a,C,E,E,O,I,kB,I,E,E,O,I,M,E,E,I,E,O,E,E,I,E,I,E,K,E,E,K,G,K,E,mB,K,E,I,E,I,E,K,E,K,S,C,E,O,E,E,E,E,E,E,G,I,E,K,E,mB,C,O,K,E,O,O,G,E,E,O,Q,gB,E,O,K,E,E,O,I,iB,E,E,G,A,S,C,C,C,E,I,E,E,K,Q,E,C,E,Q,K,I,E,E,O,E,E,Q,S,E,C,E,I,E,E,M,C,E,C,G,E,I,E,O,I,E,E,O,E,G,C,E,E,E,E,S,E,a,E,Y,O,E,G,G,O,K,E,Q,Q,S,C,E,I,E,A,E,K,C,E,C,O,E,G,E,G,E,Q,S,C,C,C,E,E,I,E,I,C,E,C,I,E,I,E,G,E,I,E,K,I,E,E,G,E,E,E,E,C,E,C,G,C,G,G,G,G,G,C,Q,S,C,E,I,E,E,I,C,E,C,G,E,I,E,K,I,E,G,E,O,E,G,G,O,K,E,U,Q,S,C,E,I,E,E,Q,C,E,C,O,E,G,M,Q,I,C,E,I,E,O,G,E,E,I,E,S,I,E,G,G,I,E,G,O,K,E,Y,Q,S,C,E,I,E,E,U,C,E,C,O,E,G,E,E,Y,G,O,K,I,G,Q,S,C,E,E,I,E,I,E,C,C,E,C,E,G,E,U,E,I,E,I,a,E,S,O,E,I,E,I,E,I,O,K,E,O,O,I,E,E,gB,E,K,E,iB,E,M,E,O,Q,O,E,Q,K,E,E,G,A,S,C,C,C,E,I,E,E,K,Q,E,C,E,Q,I,E,E,G,I,E,C,E,E,C,E,O,K,E,S,Q,S,C,E,E,G,E,O,C,E,C,O,G,I,E,E,E,E,S,E,C,G,I,E,E,Y,E,C,E,S,E,C,E,O,E,Y,G,E,O,C,G,E,Q,E,E,C,E,E,Y,G,C,E,C,C,E,G,E,E,E,I,E,E,E,M,E,M,U,E,M,S,S,C,E,C,C,E,E,E,E,G,E,E,E,E,M,S,C,E,M,C,E,E,G,E,S,E,E,U,E,E,E,E,C,E,M,E,W,E,E,a,E,E,iB,E,I,E,E,O,Q,G,E,Y,G,E,Q,E,E,E,E,U,C,I,E,E,O,E,G,G,E,E,O,G,e,E,c,E,O,Q,E,E,E,E,E,O,a,C,E,E,O,I,kB,I,E,E,O,I,M,E,E,I,E,O,E,E,I,E,I,E,K,E,E,K,G,K,E,sB,K,E,I,E,I,E,K,E,K,S,C,E,O,E,E,E,E,E,E,G,I,E,K,E,sB,C,C,O,K,E,O,O,G,E,E,O,Q,gB,E,O,K,E,E,O,I,iB,E,E,G,E,E,U,C,Q,W,E,O,Q,S,C,E,C,C,E,E,E,E,E,E,E,E,E,C,E,E,E,E,E,E,G,E,A,S,C,C,C,C,C,C,C,C,C,C,C,C,C,E,S,E,C,E,A,O,E,M,E,E,sB,qH,E,O,E,A,O,E,K,gB,C,E,C,Q,uC,E,E,K,gB,C,E,C,Q,S,K,E,S,W,E,mB,E,A,O,G,A,O,E,gF,O,G,E,E,U,uI,E,A,O,E,kE,I,I,E,E,E,E,E,E,E,iB,E,E,kB,E,K,E,G,E,E,I,E,K,E,S,oC,E,A,E,E,E,E,A,E,E,E,E,G,G,E,E,iB,kC,E,G,G,E,E,kB,kC,E,A,E,C,E,O,E,iB,C,E,E,A,E,C,E,Q,E,kB,C,E,E,E,M,M,I,A,O,E,E,a,W,+E,O,G,E,a,a,kF,E,E,G,E,G,E,iB,iC,E,E,G,E,G,E,kB,kC,I,I,E,E,E,E,O,I,A,O,E,E,I,W,G,O,G,C,E,G,I,a,E,G,E,a,E,oD,E,E,Y,E,yC,E,Y,K,G,E,W,E,E,E,E,K,E,G,C,C,O,S,C,M,S,A,A,G,gB,G,E,O,C,Y,A,E,W,E,W,E,E,E,G,G,E,E,C,E,E,E,E,M,K,E,E,E,G,E,E,K,E,E,O,G,E,C,G,E,C,G,E,C,G,C,E,U,C,G,K,S,K,G,A,I,G,O,C,G,E,S,G,K,M,C,G,E,K,I,K,I,I,E,G,O,E,G,E,E,E,C,I,E,E,C,E,C,G,E,E,K,E,C,E,Q,G,E,Q,C,S,K,C,I,G,O,G,C,G,E,K,G,C,C,S,K,K,E,O,I,G,K,C,S,G,C,E,E,iB,E,C,E,K,G,Q,S,C,E,G,E,C,S,G,C,E,E,W,E,C,E,E,U,E,U,E,U,E,U,E,U,E,U,E,U,G,E,U,E,M,U,K,G,Q,S,C,E,G,E,C,S,G,C,E,S,E,C,C,C,E,I,E,C,E,E,C,E,O,O,K,G,Q,S,C,E,I,E,C,C,E,C,G,E,U,G,C,C,C,E,C,E,M,E,G,M,C,G,G,M,Q,G,C,I,I,E,E,E,E,O,E,E,G,E,U,C,C,E,E,C,C,C,E,C,E,M,E,G,M,C,C,C,C,E,C,C,G,C,Q,E,O,C,C,C,E,C,C,E,+B,E,K,E,S,+B,I,E,E,E,S,C,E,C,G,E,E,E,U,C,E,C,G,E,E,E,Y,C,E,C,G,E,E,A,S,C,E,I,E,E,C,E,G,S,E,C,E,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,O,K,G,Q,S,C,E,C,C,E,I,E,C,C,C,E,A,E,C,C,O,O,E,S,O,E,W,O,E,Q,O,E,I,Y,G,E,Q,K,E,Q,O,E,Q,Q,E,Q,G,O,E,Q,I,E,S,E,S,E,Q,E,W,E,iB,E,W,E,U,Q,G,C,E,I,E,G,E,C,E,G,C,G,E,C,Q,E,Q,E,M,C,E,E,E,Q,E,E,E,E,G,E,E,K,E,E,M,E,E,M,E,E,C,O,E,S,C,C,C,E,I,E,G,G,E,M,gB,A,Y,O,E,O,E,K,I,C,K,E,G,G,A,Y,O,G,G,A,U,O,E,I,E,E,E,E,E,E,E,K,I,C,K,E,Q,I,M,Q,G,O,E,K,I,C,E,E,Q,I,E,E,E,E,O,E,E,E,K,I,C,C,C,E,C,E,Q,G,A,U,O,E,C,G,E,E,O,E,K,I,C,A,S,C,E,K,E,O,G,E,K,M,O,C,E,A,E,G,A,E,E,M,I,M,Q,G,O,E,K,I,C,Q,G,E,O,O,E,K,I,C,E,E,O,E,C,M,E,Q,W,E,S,C,E,C,I,E,iB,G,G,C,G,E,iB,G,G,C,I,I,G,E,O,G,C,Y,E,O,K,K,E,c,G,S,G,C,C,C,E,I,E,E,E,M,O,I,E,E,M,I,E,W,C,C,C,E,E,E,C,C,C,E,E,E,C,C,C,E,E,E,C,C,C,E,E,G,G,O,U,I,E,W,C,E,O,G,K,Y,I,E,a,A,E,E,S,G,M,E,C,C,E,8C,E,M,E,C,S,G,C,S,E,K,E,W,4C,G,K,G,K,C,O,W,I,E,G,G,G,E,G,E,+B,E,C,E,C,S,I,I,E,G,G,E,C,E,C,E,C,E,C,G,O,E,C,G,Q,E,G,Q,G,I,C,C,C,C,S,K,I,E,E,S,E,E,W,C,C,C,E,C,C,C,E,C,C,C,E,C,C,C,E,C,E,E,c,E,iB,E,mB,C,C,E,C,C,C,E,C,E,mB,E,e,E,kB,E,oB,C,C,E,C,C,C,E,C,E,mB,C,S,K,E,M,E,E,K,K,K,E,M,M,C,S,K,E,U,K,E,M,U,G,E,Q,C,S,K,M,A,C,I,C,E,G,C,K,I,G,E,G,C,M,S,C,E,G,E,A,U,O,G,E,yC,gB,G,G,E,a,A,oB,E,qB,I,I,E,E,E,E,E,E,G,E,C,Y,E,Y,K,C,E,A,E,G,S,G,E,S,G,K,E,E,K,E,O,K,K,G,Q,E,O,K,K,G,K,E,O,K,K,G,K,G,C,G,O,S,C,E,O,E,O,E,M,C,E,C,E,E,S,S,C,E,O,E,O,E,C,E,E,Q,E,S,K,E,W,a,E,O,Y,E,O,gB,E,W,I,E,U,W,E,M,G,G,S,C,C,C,M,E,O,E,K,E,W,wC,G,I,Q,O,G,E,K,O,E,G,K,K,U,E,G,K,K,U,E,G,K,S,E,M,2D,C,O,E,K,G,C,O,W,I,I,E,E,E,E,O,E,E,G,C,C,E,G,E,C,C,C,E,C,C,C,E,O,E,C,E,M,M,C,C,C,E,O,E,a,S,C,E,O,E,W,Q,E,gB,C,E,K,E,Q,W,G,O,E,K,I,E,oB,G,I,E,oB,G,K,E,Q,E,Q,E,Q,E,Q,E,Q,E,Q,E,Q,G,E,Q,G,Q,S,C,E,G,E,E,I,E,S,G,K,W,K,G,E,Q,E,I,G,M,C,G,O,E,O,K,I,E,C,I,I,G,C,E,E,G,S,I,I,E,G,W,I,I,E,G,Q,I,I,E,G,O,I,I,E,G,a,I,I,E,G,M,I,I,E,G,W,I,I,E,G,Y,I,I,E,G,S,I,I,E,G,U,I,I,E,G,c,I,I,E,G,W,I,I,E,G,Y,I,I,E,G,S,I,I,E,G,Q,I,I,E,G,kB,I,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DuvBiH,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,ACvvBnL,KDuvBsM,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,ACvvBxQ,KDuvB2R,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,ACvvB7V,KDuvBgX,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,ACvvBlb,KDuvBqc,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,ACvvBvgB,KDuvB0hB,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,ACvvB5lB,KDuvB+mB,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,ACvvBjrB,KDuvBosB,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,GAC9vB,CCrtBK,KAAK,OAAO,CAAA,KAAK,MAAQ,WAI5B,IAHA,IAAI,EAAI,EACJ,EAAI,UAAU,OAEX,KACL,GAAK,SAAS,CAAC,EAAE,CAAG,SAAS,CAAC,EAAE,CAGlC,OAAO,KAAK,KAAK,EACnB,CAAA,EDktBO,IAAI,GAAM,GAMN,GAAM,G,G,C,E,G,E,S,G,E,S,G,E,S,G,E,S,G,E,S,G,E,S,G,C,E,S,G,C,C,C,E,I,I,E,E,E,E,O,I,C,I,E,C,C,E,A,C,E,W,E,Y,C,E,E,a,C,E,U,G,C,E,S,C,C,E,O,e,E,A,S,C,E,I,E,A,S,C,C,C,E,G,A,U,O,G,A,O,E,O,E,I,E,C,C,O,Y,C,G,A,K,I,E,C,I,E,E,K,E,G,W,G,A,U,O,E,O,C,O,A,U,+C,C,M,A,C,A,W,E,O,M,E,E,E,E,U,M,A,U,O,E,E,O,E,E,E,K,E,C,C,S,G,C,C,C,C,C,E,O,G,G,E,U,G,G,G,E,G,O,e,E,Y,C,S,C,C,G,C,C,S,G,C,C,C,E,E,U,O,O,E,W,E,U,Y,E,G,E,E,C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AM,GAAO,CAAA,EAAM,CAAvB,EACI,EAAM,GAAO,CAAA,EAAM,CAAvB,QAID,CACL,IAAI,EAAQ,GACZ,IAAK,IAAI,KAAS,EACiC,MAA5C,CAAA,EAAQ,EAAQ,EAAO,EAAE,EAAO,EAAA,IAC/B,AAAQ,KAAA,IAAR,EACE,GAAS,GAAO,CAAA,EAAM,EAAM,CAAhC,GAEI,EAAM,GAAO,CAAA,EAAM,CAAvB,EACI,EAAM,GAAO,CAAA,EAAM,CAAvB,GAIR,CACA,MAAO,CAAC,EAAK,EAAI,AACnB,CFiBsB,GAAU,U,M,G,U,G,U,G,C,U,K,c,E,e,E,e,E,Y,C,E,W,C,E,4B,C,G,I,C,8B,I,Y,C,E,W,C,M,I,Q,E,O,E,U,G,e,I,wB,G,W,E,a,E,6B,C,E,I,C,mB,E,S,G,E,e,C,E,W,E,iB,C,C,E,G,A,G,A,Y,O,E,G,A,G,M,Q,G,G,A,G,a,O,G,A,G,A,a,Q,A,a,E,Y,M,A,W,E,Y,K,G,A,G,G,I,C,G,I,C,G,I,C,G,G,S,G,C,C,C,C,C,S,A,G,G,E,E,G,C,C,S,G,C,M,M,E,G,G,G,E,M,C,I,E,A,G,G,E,M,E,K,E,E,M,E,C,A,C,M,E,K,E,E,C,G,E,A,C,M,E,K,E,E,C,G,E,A,C,M,E,K,E,E,C,G,E,A,O,C,E,M,E,K,E,E,O,G,A,K,I,E,E,E,A,C,M,C,C,C,E,C,I,C,C,E,C,I,C,C,E,C,I,C,C,E,C,A,C,S,G,C,C,C,E,I,E,I,a,O,E,C,Y,C,G,K,E,E,M,G,C,C,M,G,a,C,I,C,gB,U,I,C,U,G,U,I,C,U,G,I,C,mB,G,I,C,S,E,I,C,c,G,c,I,C,0B,C,E,I,C,yB,K,E,I,C,U,G,I,C,mB,G,I,C,U,E,I,C,e,G,e,I,C,Y,G,Y,I,C,W,G,W,I,C,oB,G,e,I,C,4B,G,4B,I,C,8B,G,8B,I,C,Y,G,Y,I,C,W,C,M,G,W,M,Q,G,W,Q,O,G,W,O,U,G,W,U,e,G,W,e,wB,G,W,wB,W,G,W,W,a,G,W,a,6B,G,W,6B,mB,G,W,mB,S,G,W,S,Q,K,E,O,K,E,M,K,E,Q,K,E,U,K,C,E,I,C,O,C,Q,K,E,Y,K,E,gB,K,E,e,K,E,Y,K,E,O,K,E,U,K,C,E,I,C,e,G,e,I,C,W,G,W,I,C,iB,G,iB,I,C,W,K,C,C,K,C,C,C,O,K,G,Q,A,I,I,C,gB,I,C,Y,E,E,E,C,gB,C,C,C,C,C,C,C,G,C,C,E,G,G,C,C,E,E,O,K,C,C,E,E,Q,A,I,I,C,gB,C,C,E,C,C,C,E,C,E,G,C,C,E,C,C,C,E,A,C,W,C,O,I,A,C,C,M,G,Y,C,C,C,C,C,C,C,C,C,C,C,I,C,a,E,I,C,O,E,I,C,M,E,I,C,K,E,G,C,I,C,O,C,C,C,C,S,G,C,E,I,E,E,O,I,a,C,G,G,E,G,G,E,E,E,G,M,C,O,E,K,C,C,C,S,G,C,C,C,E,I,E,I,a,E,E,G,I,I,E,E,E,E,I,I,I,E,E,E,E,I,C,I,E,E,E,E,A,E,C,C,C,C,E,E,C,E,C,C,E,E,C,C,C,I,E,E,O,G,M,C,O,E,K,C,C,C,I,G,2H,G,uK,O,W,G,Q,C,G,C,a,C,C,C,I,A,C,I,C,c,E,Y,C,M,E,Q,C,K,I,a,G,K,G,M,C,E,E,E,C,K,O,G,M,C,E,Q,C,C,E,C,c,C,G,C,a,C,C,O,C,C,M,C,C,K,C,C,O,C,C,C,I,A,C,I,C,uB,E,C,K,G,K,G,Y,I,C,c,U,iB,M,E,W,C,K,G,E,C,G,I,C,2B,E,C,K,qH,K,6U,Y,I,I,C,c,U,S,M,I,E,M,O,W,C,Q,G,E,E,kB,E,S,C,S,I,M,E,K,E,E,oB,kB,I,E,iB,E,M,C,O,C,E,K,C,I,M,I,K,E,S,C,I,M,M,K,C,E,M,C,O,C,E,K,C,C,E,Q,C,O,C,C,C,G,I,C,W,E,C,K,+nB,K,G,Y,I,M,E,K,E,E,Y,U,iB,M,E,W,C,K,G,E,E,S,C,S,I,M,E,K,E,E,oB,W,I,I,C,c,O,K,I,E,O,A,O,C,E,E,U,G,A,K,I,E,K,E,E,M,E,M,I,E,K,C,E,C,K,C,I,E,E,C,A,Q,C,E,I,C,sB,G,A,K,I,G,E,K,I,E,A,O,C,E,I,C,0B,G,A,K,I,G,E,K,I,E,A,O,C,E,I,C,U,G,A,K,I,G,E,K,I,C,C,S,C,I,C,A,Q,C,E,I,C,a,G,A,K,I,G,E,S,C,C,M,W,G,c,C,G,C,a,C,C,O,C,C,M,C,C,O,C,C,C,I,A,C,I,C,W,E,C,K,0iB,K,G,Y,I,M,E,K,E,E,Y,U,iB,M,E,W,C,K,G,E,E,S,C,S,I,M,E,K,E,E,oB,Q,K,I,E,O,A,O,C,E,E,U,G,A,K,I,E,K,E,E,O,E,U,I,E,U,M,I,E,K,C,E,C,K,C,I,C,A,Q,C,E,I,C,U,G,A,K,I,G,E,K,I,C,C,E,A,S,C,E,E,S,W,E,S,U,E,G,C,E,C,C,E,O,W,G,a,C,K,I,W,I,C,0B,I,a,I,C,Q,I,a,I,C,e,C,C,O,C,C,C,G,C,a,C,C,M,C,kB,C,C,iB,C,C,C,K,C,C,C,I,A,C,I,C,0B,I,a,E,E,G,I,C,Q,I,a,E,E,G,I,E,I,a,E,E,G,E,I,a,E,E,G,E,I,E,S,E,2B,E,0B,C,I,C,e,E,I,E,E,E,Q,C,E,K,I,C,yB,C,A,E,E,E,C,E,E,I,C,yB,C,A,E,E,E,C,K,M,E,G,I,C,yB,C,A,E,E,E,C,E,K,E,Q,A,I,I,E,C,C,I,C,O,C,A,E,E,E,C,E,E,I,C,O,C,A,E,E,E,C,K,M,E,G,I,E,A,O,C,E,E,M,C,E,2B,G,A,G,A,K,I,E,E,E,E,A,O,C,E,E,M,C,E,2B,G,A,G,A,K,I,E,E,E,E,E,K,I,E,G,E,K,K,G,C,C,A,E,E,E,C,E,C,E,C,E,C,C,A,E,E,E,C,E,C,C,A,E,E,C,I,C,M,e,E,G,G,C,G,I,C,e,K,I,I,C,e,E,K,G,I,C,6B,E,Y,C,M,E,Q,C,K,I,C,0B,M,C,E,E,E,C,K,O,G,M,C,E,Q,C,C,G,I,C,W,E,Y,C,M,E,Q,C,K,I,C,Q,M,C,E,E,E,C,K,O,G,M,C,E,Q,C,C,G,I,C,mB,E,Y,C,M,E,Q,C,K,E,M,C,E,E,E,C,K,O,G,M,C,E,Q,C,C,G,I,C,kB,E,Y,C,M,E,Q,C,K,E,M,C,E,E,E,C,K,O,G,M,C,E,Q,C,C,E,C,c,C,G,C,a,C,C,O,C,C,M,C,C,O,C,C,C,I,A,C,I,C,W,E,C,K,I,C;;;;;;;;;;;;;;;;;;;;;wB,E,I,C,e;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;E,C,C,K,G,Y,I,M,E,K,E,E,Y,U,iB,M,E,W,C,K,G,E,E,S,C,S,I,M,E,K,E,E,oB,W,K,I,E,O,A,O,C,E,E,U,G,A,K,I,E,K,E,E,U,E,a,K,I,E,O,A,O,C,E,E,U,G,A,K,I,E,K,E,E,Y,E,6B,K,I,E,O,A,O,C,E,E,U,G,A,K,I,E,K,E,E,4B,E,0B,I,I,C,6B,Y,I,I,C,W,oB,I,I,C,mB,sB,I,I,C,kB,kB,I,E,kB,iB,I,E,iB,M,I,E,K,C,E,C,K,C,I,C,A,Q,C,E,I,C,U,G,A,K,I,G,E,K,I,C,C,S,C,I,E,E,E,C,A,Q,C,E,I,C,4B,G,A,K,I,G,E,U,A,O,C,E,I,C,U,G,A,K,I,G,E,U,A,O,C,E,I,C,kB,G,A,K,I,G,E,U,A,O,C,E,I,C,iB,G,A,K,I,G,E,S,C,C,I,G,qH,G,ohB,O,W,G,a,C,K,I,W,I,C,W,I,I,I,C,e,C,C,Q,C,I,E,G,C,a,C,C,O,C,C,M,C,C,C,I,A,C,I,C,e,K,K,A,O,C,E,E,S,G,A,K,I,E,E,G,W,I,I,E,E,E,I,C,e,G,E,C,I,E,K,I,E,E,G,I,C,W,I,C,M,E,E,C,C,C,E,Y,C,M,C,E,E,C,U,Q,M,C,E,Q,C,C,G,C,I,E,I,a,E,kB,E,kB,G,I,I,E,E,E,E,kB,E,kB,E,E,C,C,A,E,E,C,A,K,E,e,G,G,C,C,A,E,E,E,C,A,K,E,e,G,E,C,I,C,gB,E,Y,C,M,E,Q,C,K,E,M,C,E,kB,E,kB,E,C,K,O,G,M,C,E,Q,C,C,E,C,c,C,G,C,a,C,C,O,C,C,M,C,C,K,C,C,O,C,C,C,I,A,C,I,C,mB,E,C,K,G,K,G,Y,C,E,I,E,S,U,iB,M,E,W,C,K,G,E,C,G,I,C,uB,E,C,K,G,K,G,Y,C,E,I,E,S,U,S,M,I,E,M,O,W,C,Q,G,E,E,kB,E,S,C,S,I,M,E,K,E,E,oB,kB,I,E,kB,iB,C,E,I,E,iB,S,C,E,I,E,Q,E,M,C,O,C,E,K,C,I,M,I,K,E,S,C,I,M,M,K,C,E,M,C,O,C,E,K,C,C,E,Q,C,O,C,C,C,G,I,C,a,E,C,K,q4E,K,G,Y,I,M,E,K,E,E,Y,U,iB,M,E,W,C,K,G,E,E,S,C,S,I,M,E,K,E,E,oB,M,C,E,I,E,M,O,I,C,e,S,C,E,I,E,S,iB,C,E,I,E,iB,M,I,E,M,U,K,I,E,O,A,O,C,E,E,U,G,A,K,I,E,K,E,E,S,E,U,I,E,U,M,K,I,E,O,A,O,C,E,E,U,G,A,K,I,E,K,E,E,c,C,E,M,C,O,C,E,K,C,I,M,I,K,E,S,C,I,M,M,K,C,E,M,C,O,C,E,K,C,C,E,Q,C,O,C,C,C,G,I,C,iC,E,C,K,8/B,K,G,Y,I,M,E,K,E,E,Y,U,iB,M,E,W,C,K,G,E,E,S,C,S,I,M,E,K,E,E,oB,a,I,I,C,gB,S,C,E,I,E,S,iB,C,E,I,E,iB,M,I,E,M,U,K,I,E,O,A,O,C,E,E,U,G,A,K,I,E,K,E,E,S,E,U,I,E,S,E,M,C,O,C,E,K,C,I,M,I,K,E,S,C,I,M,M,K,C,E,M,C,O,C,E,K,C,C,E,Q,C,O,C,C,C,G,I,C,qB,E,C,K,G,K,G,Y,I,M,E,K,E,E,Y,U,iB,M,E,W,C,K,G,E,C,E,C,K,C,I,E,E,E,E,E,E,G,C,O,C,C,C,I,C,I,I,E,E,E,I,C,e,G,E,C,A,O,C,E,I,C,kB,G,A,K,I,G,E,K,I,C,C,S,I,C,W,I,C,M,E,E,C,C,C,G,I,E,K,I,E,E,G,E,A,C,A,O,C,E,E,S,G,A,K,I,E,E,G,S,E,C,A,Q,C,E,I,C,sB,G,A,K,I,G,E,K,I,C,C,S,I,C,W,I,C,M,E,E,C,C,E,iB,E,S,C,E,C,A,O,C,E,I,C,oB,G,A,K,I,G,E,K,I,E,I,I,E,E,E,I,C,e,G,E,C,I,E,K,I,E,E,E,A,Q,C,E,I,C,Y,G,A,K,I,G,E,K,I,C,C,S,I,C,W,I,C,M,E,E,C,C,E,iB,E,M,C,G,I,I,C,e,G,C,A,O,C,E,I,C,gC,G,A,K,I,G,E,K,I,C,C,S,I,C,W,I,C,M,E,E,C,C,E,iB,E,M,C,E,C,C,C,S,C,I,C,A,Q,C,E,I,C,e,G,A,K,I,G,E,U,I,C,W,Q,A,I,C,M,E,K,E,E,a,W,G,E,S,G,I,C,W,O,C,C,M,W,G,a,C,K,I,W,I,C,W,I,I,I,C,e,C,C,Q,C,I,E,G,C,a,C,C,O,C,C,M,C,C,C,I,A,C,I,C,e,K,K,A,O,C,E,E,S,G,A,K,I,E,E,G,W,I,I,E,E,E,I,C,e,G,E,C,I,E,K,I,E,E,G,I,C,W,I,C,M,E,E,C,C,C,E,Y,C,M,E,Q,C,K,I,a,E,E,G,M,C,E,E,E,C,K,O,G,M,C,E,Q,C,C,G,C,I,E,I,a,E,kB,E,kB,G,I,I,E,E,E,E,kB,E,kB,E,E,C,C,A,E,E,C,A,K,E,e,G,G,C,C,A,E,E,E,C,A,K,E,e,G,E,C,I,C,gB,E,Y,C,M,E,Q,C,K,E,M,C,E,kB,E,kB,E,C,K,O,G,M,C,E,Q,C,C,E,C,c,C,I,E,E,G,C,a,C,C,O,C,C,M,C,C,K,C,C,O,C,C,C,I,A,C,I,C,mB,E,C,K,G,K,G,Y,C,E,I,E,S,U,iB,M,E,W,C,K,G,E,C,G,I,C,uB,E,C,K,G,K,G,Y,C,E,I,E,S,U,S,M,I,E,M,O,W,C,Q,G,E,E,kB,E,S,C,S,I,M,E,K,E,E,oB,kB,I,E,kB,iB,C,E,I,E,iB,S,C,E,I,E,Q,E,M,C,O,C,E,K,C,I,M,I,K,E,S,C,I,M,M,K,C,E,M,C,O,C,E,K,C,C,E,Q,C,O,C,C,C,G,I,C,gB,E,C,K,A,S,C,C,C,E,E,K,I,E,G,I,E,E,E,E,C;;;;;;;E,C,C,M,C;;;;;;;;;;;wB,E,E;;;;;;;;;;;;;;;;;;;E,E,A,M,G,K,G,I,C,E,I,C,W,E,E,E,Q,E,E,O,C,E,K,M;;mC,E,E;qC,E,E;M,E,A,S,E,C,E,G,G,E,O,C,E,I,E,K,I,E,E,G,E,A,M,E,E,G,K,G,I,C,E,I,C,S,E,E,C,E,C,E,O,E,E,E,C,E,K,K,E,A,M,E,E,G,K,G,I,C,E,I,C,S,E,E,C,E,C,E,O,E,E,E,C,E,K,K,M,C;mB,E,E,U,E,E,U,E,E;e,E,E;e,E,E;c,E,E,a,E,E,U,E,E;c,E,E,a,E,E,U,E,E;2B,E,E,e,E,E,E,G,E,E;2B,E,E,e,E,E,E,G,E,E;sC,E,E;sC,E,E;;0C,E,E;;;;;oB,E,E,E,Q,E,E,E;Y,E,E;;Y,E,E,E,G;;;;M,C,A,C,E,G;;;;;;;;A,C,A,E,A,O,C,E,A,O,C,E,E,U,G,A,K,I,E,K,E,E,uB,G,A,K,I,E,E,I,C,e,I,C,gB,K,G,Y,I,M,E,K,E,E,Y,U,iB,M,E,W,C,K,G,E,E,S,C,S,I,M,E,K,E,E,oB,a,I,I,C,gB,U,I,E,U,U,K,I,E,O,A,O,C,E,E,U,G,A,K,I,E,K,E,E,S,E,M,K,I,E,O,A,O,C,E,E,U,G,A,K,I,E,K,E,E,c,E,M,I,E,M,G,O,Y,I,C,W,A,C,E,C,K,C,I,E,E,E,E,G,C,O,C,C,C,I,C,I,I,E,E,E,I,C,e,G,E,C,A,O,C,E,I,C,kB,G,A,K,I,G,E,K,I,C,C,S,I,C,W,I,C,M,E,E,C,C,C,G,I,E,K,I,E,E,G,E,A,C,A,O,C,E,E,S,G,A,K,I,E,E,G,S,E,C,A,Q,C,E,I,C,sB,G,A,K,I,G,E,K,I,C,C,S,I,C,W,I,C,M,E,E,C,C,E,iB,E,S,C,E,C,A,O,C,E,I,C,e,G,A,K,I,G,E,K,I,C,C,S,C,I,C,A,Q,C,E,I,C,e,G,A,K,I,G,E,U,I,C,W,Q,A,I,C,M,E,K,E,E,a,W,G,E,S,G,I,C,W,O,C,C,M,W,G,c,C,G,C,a,C,C,O,C,C,M,C,C,O,C,C,C,I,A,C,I,C,W,E,C,K,ogB,K,G,Y,I,M,E,K,E,E,Y,U,iB,M,E,W,C,K,G,E,E,S,C,S,I,M,E,K,E,E,oB,S,I,E,c,U,K,I,E,O,A,O,C,E,E,U,G,A,K,I,E,K,E,E,kB,C,C,E,C,K,C,I,C,A,Q,C,E,I,C,U,G,A,K,I,G,E,K,I,C,C,C,A,a,O,W,W,A,a,O,O,O,A,K,I,G,A,a,O,M,K,I,G,C,Q,C,C,CrH5CiC,C,GAAiB,QAShF,MAME,YAAY,CAAE,CAAE,EAAW,CAAA,CAAE,CAAE,CAC7B,IAAI,CAAC,IATG,65BAUR,IAAI,CAAC,IAZG,snEAaR,IAAI,CAAC,YAAc,KAAM,EACzB,IAAI,CAAC,YAAc,KAAM,EACzB,IAAI,CAAC,SAAW,GAChB,IAAI,CAAC,QAAU,GAEf,IAAI,CAAC,MAAQ,EAAE,CACf,IAAI,CAAC,UAAY,EAAE,CACnB,IAAI,CAAC,UAAY,EAAE,CACnB,IAAI,CAAC,aAAe,EAAE,CACtB,IAAI,CAAC,MAAQ,AAAI,MAAM,IAAI,CAAC,UAC5B,IAAI,CAAC,IAAM,IAAO,aAAe,YAAY,IAAO,YAAY,MAAQ,KAAK,MAC7E,IAAI,CAAC,SAAW,KACd,EAAE,CAAC,QAAQ,KAAK,IAAI,CAAC,KAAK,CAAC,aAAa,CAAE,AAAA,IACxC,EAAK,MAAM,QAAU,IAAI,CAAC,SAAW,SAAW,MAC1D,EACA,EAEM,OAA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C,C,I,E,C,A,Q,C,E,I,C,K,G,A,K,I,G,E,I,S,A,O,C,E,I,C,K,G,A,K,I,G,E,U,E,C,S,C,I,C,M,K,E,A,G,a,Q,C,C,M,G,a,C,I,C,c,I,I,I,C,O,E,C,I,C,2B,I,I,I,C,2B,I,I,I,C,O,E,C,I,C,O,E,C,I,C,Y,I,I,I,C,2B,I,I,I,C,2B,I,I,I,C,mB,I,I,I,C,kB,I,I,I,C,gB,I,I,I,C,iB,I,G,C,I,O,C,O,I,C,M,C,I,O,C,O,I,C,M,C,I,a,C,O,I,C,c,I,C,Q,C,C,C,C,C,I,C,Y,Q,I,C,mB,Q,I,C,kB,Q,I,C,gB,Q,I,C,iB,Q,E,Q,C,E,K,I,C,Y,I,E,G,G,I,C,kB,I,E,E,I,I,C,gB,I,E,G,G,I,C,iB,I,E,G,E,G,I,C,c,Q,E,Q,A,I,I,E,I,C,Y,I,E,Q,E,I,C,Y,I,E,Q,G,A,K,I,G,A,K,I,E,C,I,C,c,I,G,I,E,I,C,iB,I,E,G,M,I,G,I,C,iB,I,E,G,E,G,I,E,I,C,gB,I,E,G,M,I,G,I,C,gB,I,E,G,E,E,C,G,I,C,O,A,M,E,Q,E,Q,C,E,K,I,E,I,C,iB,I,E,I,E,I,C,gB,I,E,G,C,I,C,M,C,E,C,A,C,M,E,E,C,E,C,M,E,E,C,C,G,I,C,2B,Q,I,C,2B,Q,I,E,O,Q,I,C,Q,K,C,E,I,C,C,E,C,C,C,E,E,E,Q,C,C,E,C,K,I,E,C,E,I,C,2B,I,E,G,I,C,2B,I,E,G,I,C,mB,I,I,C,kB,I,G,E,G,I,C,2B,Q,I,C,2B,Q,E,Q,A,I,I,E,I,C,mB,I,E,Q,E,I,C,mB,I,E,Q,G,A,K,I,G,A,K,I,E,C,K,I,I,C,2B,I,I,I,C,2B,I,E,I,K,I,E,I,C,2B,I,E,O,G,E,I,G,K,I,I,C,2B,I,I,I,C,2B,I,E,I,K,I,E,I,C,2B,I,E,O,G,E,I,E,C,G,I,C,O,E,I,C,O,C,C,Y,C,C,C,O,I,C,Y,I,E,C,e,C,C,C,O,I,C,M,C,E,A,C,2B,C,C,C,O,I,C,2B,I,E,C,2B,C,C,C,O,I,C,2B,I,E,C,mB,C,C,C,O,A,K,I,E,I,C,mB,I,G,K,C,C,iB,C,C,C,I,E,E,I,E,I,C,mB,G,G,A,K,I,E,O,I,E,A,O,C,E,I,C,2B,I,E,G,A,K,I,E,E,E,C,E,A,O,C,E,I,C,2B,I,E,G,A,K,I,E,E,E,C,M,I,I,I,I,K,E,E,C,I,A,G,I,C,e,I,C,2B,I,C,C,M,W,G,Q,C,I,C,c,I,C,a,C,c,C,G,C,a,C,C,O,C,C,M,C,C,K,C,C,O,C,C,C,I,C,C,kB,C,C,C,E,E,C,O,E,O,C,C,E,I,C,C,E,I,C,C,E,G,C,C,E,I,C,C,E,G,C,C,E,G,C,E,Q,C,E,E,E,C,E,c,Q,A,I,I,E,E,mB,E,Q,E,E,mB,E,Q,E,K,M,E,G,E,K,M,E,G,E,K,C,E,E,E,E,E,K,C,E,E,E,C,G,I,E,E,O,E,C,I,C,oB,E,C,K,0qF,K,2kC,W,C,S,E,O,C,O,I,E,Q,E,O,A,E,a,kB,O,A,E,a,iB,E,O,C,O,I,E,Q,E,O,A,E,a,kB,O,A,E,a,iB,E,M,C,O,I,I,C,Y,Q,E,O,A,E,a,kB,O,A,E,a,iB,E,M,C,O,I,I,C,Y,Q,E,O,A,E,a,kB,O,A,E,a,iB,C,E,S,C,U,I,M,E,K,E,E,mB,a,I,M,E,K,E,E,Q,sB,I,M,E,K,E,E,iB,U,I,E,U,kB,I,E,kB,c,I,E,c,W,I,E,e,S,I,E,W,e,I,E,oB,U,I,E,U,W,I,E,W,M,I,E,W,4B,I,E,4B,8B,I,E,8B,e,I,E,mB,iB,I,E,gB,E,K,C,O,C,E,K,M,E,M,C,O,C,E,K,C,O,sB,O,Y,S,sB,S,K,E,S,C,I,M,M,K,C,E,M,C,O,C,E,K,C,C,E,M,E,U,I,E,W,E,C,M,C,I,C,C,I,C,a,I,C,a,C,A,O,C,E,I,C,mB,G,A,K,I,G,E,K,I,C,C,C,a,C,G,C,a,C,C,O,C,C,K,C,C,C,I,C,E,E,C,E,c,Q,A,I,I,E,I,E,A,O,C,E,G,E,E,U,G,A,K,I,E,E,G,E,G,G,E,K,E,G,I,C,Y,E,O,E,C,a,C,G,C,a,C,C,O,C,C,K,C,C,C,I,C,E,E,C,E,c,Q,A,I,I,E,G,E,E,W,E,K,C,M,E,E,E,C,G,I,C,Y,E,O,E,C,S,C,I,E,C,A,Q,C,E,I,C,W,G,A,K,I,G,E,U,A,O,C,E,I,C,W,G,A,K,I,G,E,S,C,C,S,G,C,C,C,E,I,E,G,E,G,O,M,E,E,C,C,M,W,G,a,C,K,I,W,I,C,qB,I,G,C,Q,C,I,E,E,G,C,a,C,C,O,C,C,M,C,C,K,C,C,C,I,C,C,U,C,C,C,E,C,kB,C,C,C,E,E,E,M,O,E,I,a,E,E,G,I,I,E,E,E,E,E,E,C,I,E,I,C,K,2B,G,E,E,K,C,E,C,G,G,A,K,I,E,C,I,E,M,E,E,G,S,C,C,C,A,E,E,E,C,A,O,C,E,E,C,G,A,K,I,E,E,E,E,e,K,M,C,C,A,E,E,E,C,A,O,C,E,E,C,G,A,K,I,E,E,E,E,e,K,K,C,C,I,C,mB,E,Y,C,M,E,Q,C,K,E,M,C,E,E,E,C,K,O,G,M,C,E,Q,C,C,G,I,C,oB,E,Y,C,M,E,Q,C,K,E,M,C,E,E,E,C,K,O,G,M,C,E,Q,C,C,G,I,C,Y,E,Y,C,M,E,Q,C,K,I,a,E,E,G,K,G,M,C,E,E,E,C,K,O,G,M,C,E,Q,C,C,G,I,C,Y,E,Y,C,M,E,Q,C,K,E,M,C,E,E,E,C,K,O,G,M,C,E,Q,C,C,G,I,C,W,E,Y,C,M,C,E,E,C,U,Q,M,C,E,Q,C,C,G,I,C,a,I,C,c,I,C,qB,C,c,C,G,C,a,C,C,O,C,C,M,C,C,K,C,C,C,I,A,C,I,C,sB,E,C,K,se,K,G,Y,I,I,C,mB,U,iB,M,E,W,C,K,G,E,E,S,C,S,I,I,C,oB,S,I,I,C,Y,S,K,I,E,O,A,O,C,E,E,U,G,A,K,I,E,K,E,E,Q,E,U,I,E,S,C,G,I,C,Y,E,C,K,oW,K,wuC,U,S,M,I,E,M,O,W,C,Q,G,E,E,kB,E,S,C,U,I,I,C,mB,c,I,I,C,S,sB,I,I,C,iB,a,I,I,C,Q,M,I,E,W,U,I,E,c,kB,I,E,kB,U,I,E,U,U,I,E,U,W,I,E,W,e,I,E,mB,iB,I,E,gB,E,M,C,O,C,E,K,C,O,sB,O,Y,S,sB,S,K,E,S,C,I,M,M,K,C,E,M,C,O,C,E,K,C,C,C,G,I,C,iC,E,C,K,4oC,K,G,Y,I,I,C,Y,U,iB,M,E,W,C,K,G,E,E,S,C,S,I,I,C,mB,a,I,I,C,Q,U,I,E,U,W,I,E,W,U,I,E,c,U,I,E,U,M,I,E,W,e,I,E,Y,C,E,C,e,I,E,Y,C,E,C,iB,I,E,iB,a,I,E,Y,C,G,I,C,uB,E,C,K,G,K,G,Y,I,C,W,U,iB,M,E,W,C,K,G,E,C,G,I,C,wB,E,C,K,qH,K,o1C,U,S,M,I,E,M,O,Y,I,I,C,W,W,C,Q,G,E,E,kB,E,S,C,S,I,I,C,mB,a,I,I,C,Q,M,I,E,W,U,I,E,c,kB,I,E,kB,U,I,E,U,U,I,E,U,W,I,E,W,iB,I,E,iB,c,I,E,oB,a,I,E,Y,E,M,C,O,C,E,K,C,C,C,G,I,C,uB,E,C,K,mU,K,orC,W,C,K,G,E,E,U,iB,M,E,S,C,M,E,K,S,M,E,K,S,W,E,K,c,U,I,I,C,mB,a,I,I,C,Q,U,I,E,c,kB,I,E,kB,U,I,E,U,U,I,E,U,W,I,E,W,iB,I,E,iB,a,I,E,Y,E,M,C,O,C,E,K,C,O,sB,O,Y,S,sB,S,K,E,S,C,I,M,M,K,C,E,M,C,O,C,E,K,C,C,C,G,I,C,mB,E,C,K,ma,K,G,Y,I,I,C,oB,U,iB,M,E,W,C,K,G,E,E,S,C,S,I,I,C,mB,e,I,I,C,kB,kB,I,E,iB,C,E,C,a,C,G,C,a,C,C,O,C,C,M,C,C,K,C,C,C,I,A,C,I,C,S,A,S,C,C,C,C,C,C,C,E,I,E,I,E,I,a,E,E,G,I,I,E,E,E,E,M,O,E,E,C,I,E,E,2B,G,E,E,K,C,E,C,G,G,A,K,I,E,C,I,E,A,O,C,E,G,E,E,G,A,K,I,E,E,G,E,G,E,C,C,C,A,E,E,E,C,C,C,E,C,C,C,A,E,E,E,C,C,C,E,C,C,C,A,E,E,E,C,C,C,E,C,C,C,A,E,E,E,C,C,C,E,A,C,C,I,E,E,Q,C,K,E,M,E,O,E,K,O,G,O,E,Y,C,M,E,M,C,E,Q,C,C,E,E,E,E,E,kB,E,U,C,qB,C,G,C,a,C,C,M,C,C,C,I,A,C,I,C,iB,A,S,C,C,C,C,C,E,I,E,I,a,E,E,G,K,E,E,G,G,E,I,I,K,E,C,C,A,E,E,C,E,I,E,E,Q,C,K,E,M,E,O,E,K,O,G,O,E,Y,C,M,E,M,C,E,Q,C,C,E,E,E,gB,E,E,kB,C,Y,C,G,C,a,C,C,O,C,C,M,C,C,K,C,C,C,I,A,C,I,C,Q,A,S,C,C,C,C,C,C,C,E,I,E,E,M,O,E,I,a,E,E,G,I,I,E,E,E,E,E,E,C,I,E,E,2B,G,E,E,K,C,E,C,G,A,K,I,G,C,C,C,A,E,E,C,G,E,E,C,C,I,E,E,Q,C,K,E,M,E,O,E,K,O,G,O,E,Y,C,M,E,M,C,E,Q,C,C,E,E,E,E,E,kB,E,S,C,a,C,I,C,C,I,C,mB,I,C,qB,C,A,O,C,E,I,C,kB,G,A,K,I,G,E,K,I,C,C,C,M,C,I,E,E,C,A,Q,C,E,I,C,W,G,A,K,I,G,E,K,I,E,I,C,O,4B,I,C,M,a,C,A,O,C,E,I,C,sB,G,A,K,I,G,E,K,I,C,C,M,I,M,I,C,M,qB,W,I,C,M,Y,K,E,E,I,C,M,a,C,A,O,C,E,I,C,sB,G,A,K,I,G,E,K,I,C,C,M,I,M,I,C,M,qB,W,I,C,M,Y,K,E,E,C,gB,C,I,C,A,Q,C,E,I,C,qB,G,A,K,I,G,E,K,I,E,I,C,S,C,2B,C,I,C,A,Q,C,E,I,C,gC,G,A,K,I,G,E,K,I,C,C,kB,C,I,E,C,A,Q,C,E,I,C,sB,G,A,K,I,G,E,K,I,E,A,O,C,E,I,C,uB,G,A,K,I,G,E,K,I,C,C,c,C,C,C,G,C,S,C,C,C,I,C,O,O,G,E,G,C,C,gB,C,C,C,I,C,W,E,O,E,K,E,I,C,qB,Q,I,E,E,I,A,G,I,C,K,mB,I,O,A,G,A,K,I,E,C,I,C,oB,I,C,kB,U,I,C,kB,K,G,I,C,sB,I,C,oB,U,I,C,oB,K,G,E,S,I,C,kB,A,S,C,C,C,C,C,E,I,E,K,K,K,K,E,S,E,I,a,E,E,G,K,I,I,G,C,E,E,G,E,U,K,I,I,C,C,A,E,E,C,E,E,C,C,A,E,E,E,C,K,M,E,G,C,C,A,E,E,E,C,E,C,C,A,E,E,E,C,G,I,E,E,Q,C,K,E,M,E,O,E,K,O,G,O,E,Y,C,M,E,M,C,E,Q,C,C,E,E,E,I,C,M,kB,I,C,c,I,C,oB,A,S,C,C,C,E,I,E,K,K,K,K,E,S,O,E,Y,C,M,C,E,E,C,M,C,E,Q,C,E,U,O,E,E,E,I,C,e,I,C,a,C,qB,C,G,C,I,C,W,O,I,C,qB,I,E,G,I,C,a,I,C,qB,O,I,C,W,Q,C,E,K,I,E,C,C,A,E,E,C,E,C,C,A,E,E,E,A,M,I,G,A,K,I,G,I,C,qB,I,E,C,E,E,C,G,I,C,oB,C,S,C,I,E,E,E,E,E,E,E,E,E,C,A,Q,C,E,I,C,kB,G,A,K,I,G,E,U,A,O,C,E,I,C,mB,G,A,K,I,G,E,U,A,O,C,E,I,C,W,G,A,K,I,G,E,U,A,O,C,E,I,C,W,G,A,K,I,G,E,U,A,O,C,E,I,C,Q,G,A,K,I,G,E,U,A,O,C,E,I,C,O,G,A,K,I,G,E,U,A,O,C,E,I,C,gB,G,A,K,I,G,E,U,A,O,C,E,I,C,U,G,A,K,I,G,E,U,A,O,C,E,I,C,iB,G,A,K,I,G,E,U,A,O,C,E,I,C,mB,G,A,K,I,G,E,S,C,S,C,I,E,I,C,mB,C,I,C,oB,I,C,mB,I,C,mB,C,C,C,M,G,a,C,I,C,kB,E,I,C,iB,E,I,C,M,E,I,C,U,A,G,S,I,C,gB,C,E,E,E,E,C,I,C,W,C,E,E,C,I,C,c,C,E,E,C,I,C,oB,C,E,E,C,I,C,a,C,C,E,E,C,C,E,E,C,C,I,C,oB,C,E,I,C,mB,E,I,C,gB,K,I,C,a,G,I,C,Y,K,E,I,C,Y,K,E,I,C,qB,C,E,E,E,G,C,I,C,qB,C,E,E,E,I,C,I,C,Y,E,I,C,W,A,K,I,C,W,A,K,I,C,O,I,G,I,C,W,A,G,E,K,I,K,E,E,C,c,C,C,C,I,C,O,I,C,O,M,E,C,e,C,C,C,C,C,O,I,C,O,M,E,E,C,iB,C,C,C,C,C,C,C,I,C,W,C,E,E,C,I,C,W,O,C,E,E,E,M,C,A,C,E,C,E,E,A,C,E,C,E,E,E,I,C,W,O,C,E,E,E,M,C,A,C,E,C,E,E,A,C,E,C,E,E,C,C,O,C,C,C,O,I,C,W,E,C,O,C,C,C,O,I,C,W,E,C,4B,C,C,C,I,E,G,E,C,I,C,oB,C,E,C,C,C,E,C,I,C,oB,C,E,C,C,C,E,C,I,C,oB,C,E,C,C,C,E,C,I,C,oB,C,E,C,C,C,E,C,I,C,oB,C,E,C,C,C,E,C,I,C,oB,C,E,C,C,C,E,A,C,e,C,C,C,C,C,G,A,K,I,E,I,C,Y,C,K,E,M,C,E,I,C,Y,K,C,C,S,C,C,C,M,A,C,I,C,Y,I,C,K,E,I,C,W,E,C,C,M,G,Y,C,C,C,C,C,I,C,e,G,I,C,S,A6GzLY,CAAA,WACb,IAUI,EACA,EACA,EAZA,EAAS,GACT,EAAS,GACT,EAAY,GACZ,EAAa,GACb,EAAY,GACZ,EAAc,CAAC,EAAG,IAAS,CAC3B,EAAkB,CAAC,CAAC,CAAC,IAAU,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,E,E,C,E,E,E,A,G,M,E,E,C,E,E,E,A,G,U,E,E,C,E,E,E,E,E,A,G,M,E,E,C,E,E,E,E,E,A,G,M,E,E,C,E,G,E,I,E,C,C,E,W,A,Q,C,E,A,O,C,E,A,O,C,E,I,C,M,G,A,K,I,E,K,E,E,M,G,A,K,I,E,K,E,E,M,G,A,K,I,G,E,K,E,E,E,G,G,M,A,I,I,E,E,C,C,I,C,U,C,E,I,E,C,C,E,W,A,Q,C,E,A,O,C,E,A,O,C,E,I,C,M,G,A,K,I,E,K,E,E,M,G,A,K,I,E,K,E,E,S,G,A,K,I,G,E,K,E,E,E,G,I,C,U,C,E,I,C,M,E,I,C,O,C,C,a,C,C,C,C,C,G,A,I,E,O,O,I,C,e,G,C,M,C,W,C,C,a,C,C,C,C,I,C,E,C,C,E,C,E,C,C,E,C,E,A,G,E,I,A,G,C,C,E,G,E,A,G,E,I,A,G,C,C,E,E,C,C,C,E,C,I,C,M,O,C,C,E,C,E,G,C,C,E,C,I,C,M,O,C,C,E,C,E,G,C,C,E,C,I,C,M,O,C,C,E,C,E,G,C,C,E,C,I,C,M,O,C,C,E,C,E,G,I,E,E,C,C,C,E,C,C,C,E,A,E,E,E,C,C,C,E,C,C,C,E,A,E,E,A,S,C,C,C,C,C,E,O,K,I,K,I,E,G,E,E,M,E,E,K,I,E,M,I,C,S,e,E,A,C,C,C,E,C,C,C,E,A,E,E,E,A,C,C,C,E,C,C,C,E,A,E,E,E,E,E,E,E,E,E,E,E,E,E,A,G,U,E,G,M,G,O,C,C,mB,C,C,C,G,C,E,C,C,E,C,C,E,C,C,C,I,C,e,E,I,C,a,C,E,C,G,E,E,E,E,E,E,E,E,O,K,K,E,E,E,E,C,wB,C,C,C,G,C,M,C,W,C,C,C,e,C,E,C,C,E,C,C,E,C,C,C,C,I,C,E,C,C,E,C,E,C,C,E,C,E,I,C,M,O,C,C,E,E,E,I,C,M,O,C,C,E,E,O,A,G,U,E,E,A,C,A,C,E,E,C,E,E,C,E,E,E,E,E,A,C,A,C,E,E,C,E,E,C,E,E,G,M,E,C,6B,C,C,C,I,E,I,C,e,O,I,C,M,O,C,C,E,G,E,I,C,e,O,I,C,M,O,C,C,E,G,M,C,E,E,A,C,2B,C,C,C,G,C,O,C,iB,C,C,C,M,C,a,C,C,C,e,C,E,C,C,C,C,I,C,E,A,E,E,O,E,G,E,G,K,I,E,K,I,E,A,I,I,K,I,E,G,C,C,C,M,G,Y,C,C,C,C,C,I,C,C,I,C,O,I,G,I,C,wB,E,I,C,kB,C,E,I,C,M,I,G,I,C,M,I,G,I,C,a,I,G,I,C,M,I,C,Q,I,C,yB,C,E,G,I,C,O,K,G,I,E,E,Y,E,E,a,I,C,M,iB,E,E,I,C,O,W,E,M,E,I,C,O,W,E,O,E,I,C,O,W,K,E,M,O,A,K,E,M,Q,A,G,G,M,Q,Q,M,S,Q,I,C,O,E,I,C,kB,A,G,G,I,C,a,S,G,e,A,I,I,C,a,C,G,G,c,A,I,I,E,C,C,E,Y,G,I,C,oB,E,a,I,C,a,C,G,G,a,A,I,I,C,a,C,G,I,C,kB,K,I,C,a,U,G,Q,I,C,Q,K,I,G,G,Y,I,C,Y,K,I,G,G,c,I,C,kB,K,I,G,I,C,a,A,E,I,C,O,I,C,O,W,C,U,C,E,sB,C,E,mB,C,E,M,C,C,E,W,C,oB,yB,A,G,I,C,M,a,A,C,A,O,C,E,I,C,a,O,a,C,E,A,G,A,K,I,E,E,E,E,I,C,O,W,I,C,O,I,G,I,C,a,I,C,O,I,C,M,I,C,O,I,C,M,I,G,I,C,a,I,C,O,I,C,M,I,C,M,I,C,Q,I,C,a,I,G,I,C,a,I,C,O,I,C,M,I,C,M,I,C,Q,I,C,Y,I,G,I,C,a,I,C,O,I,C,M,I,C,M,I,C,Q,I,C,c,I,C,O,Y,I,G,I,C,a,I,C,O,I,C,M,I,C,M,I,C,Q,I,G,I,C,a,I,C,O,I,C,M,I,C,M,I,C,Q,I,C,kB,I,G,I,C,a,I,C,O,I,C,M,I,C,M,I,C,Q,I,C,kB,I,G,I,C,a,I,C,O,I,C,M,I,C,M,I,C,Q,I,C,W,I,G,I,C,a,I,C,O,I,C,M,I,C,M,I,C,Q,I,C,M,gB,G,I,C,O,iB,I,C,O,0B,I,C,M,4B,I,C,O,0B,I,C,O,gB,C,I,C,W,I,G,I,C,O,E,K,I,I,C,O,Y,I,C,M,c,I,C,O,W,C,I,U,C,O,I,C,M,kB,C,I,qB,C,O,I,C,M,mB,C,I,c,C,O,I,C,M,Y,C,U,C,C,C,I,E,E,I,E,C,G,I,C,M,A,E,I,C,O,K,G,E,Y,I,C,O,W,I,C,M,c,E,Y,I,C,O,W,I,C,O,c,E,W,I,C,O,U,I,C,O,a,E,Y,I,C,O,W,I,C,M,c,E,kB,I,C,O,iB,C,I,C,M,gB,G,I,C,O,gB,E,E,2B,I,C,O,0B,I,C,M,4B,I,C,O,0B,C,E,Y,I,C,O,W,E,W,0B,I,C,O,W,uB,G,I,C,O,I,C,M,qB,E,iB,I,C,O,iB,I,C,O,e,I,C,W,I,G,I,C,S,A,O,C,E,I,C,U,G,A,K,I,G,E,U,I,C,W,K,I,E,a,I,C,O,Y,C,I,C,M,a,A,C,A,O,C,E,I,C,a,O,a,C,E,A,G,A,K,I,E,E,E,E,I,C,O,U,C,C,Q,C,C,C,C,E,C,C,C,C,G,C,E,Q,C,E,O,C,I,C,U,I,C,a,M,C,M,I,C,M,gB,M,E,Q,C,G,M,C,I,C,M,Q,E,G,I,C,O,E,C,e,C,C,E,G,C,E,C,C,E,C,C,C,C,I,E,I,C,M,Y,G,G,I,C,W,E,E,E,E,C,kB,C,C,E,G,C,E,C,C,E,C,C,C,C,I,E,I,C,M,e,G,G,I,C,W,E,E,E,E,C,K,C,C,E,C,C,C,I,C,a,E,E,C,a,C,C,E,C,C,C,I,C,kB,a,S,G,K,I,C,a,S,Q,E,C,c,C,O,I,C,a,e,C,C,kB,C,G,I,C,yB,M,C,E,I,E,G,I,C,a,I,C,O,oB,O,I,C,M,M,O,C,E,K,I,E,I,C,M,mB,E,I,E,C,C,A,E,E,E,C,E,C,C,A,E,E,E,C,O,K,I,G,A,K,I,G,C,C,C,E,G,C,C,E,E,E,C,C,E,C,E,C,E,C,qB,C,I,E,I,I,G,I,C,yB,O,E,I,E,G,I,C,a,I,C,O,oB,O,I,C,M,M,O,C,E,K,I,E,I,C,M,mB,E,I,E,C,C,A,E,E,E,C,E,C,C,A,E,E,E,C,O,K,I,G,A,K,I,G,E,I,E,G,C,E,E,E,C,E,E,C,uB,C,I,E,E,C,G,I,C,yB,M,E,C,I,E,G,I,C,a,I,C,O,mB,C,E,O,I,C,M,M,O,I,I,E,E,E,I,C,M,M,O,G,E,C,I,E,I,C,M,2B,G,E,C,C,A,E,E,E,C,E,C,C,A,E,E,E,A,M,I,G,A,K,I,G,C,C,C,E,C,C,E,E,A,C,C,O,C,C,Q,E,G,C,C,I,C,gC,I,C,wB,E,C,iB,C,C,E,G,C,C,I,E,I,C,sB,E,E,I,A,G,E,I,I,O,A,G,A,K,I,G,I,C,gC,E,E,C,mB,C,C,C,G,E,C,I,E,I,C,M,U,C,E,A,C,I,C,M,a,C,C,C,C,E,C,E,C,E,C,C,E,C,E,C,C,C,C,C,E,C,E,C,E,C,C,E,C,E,C,C,C,I,C,O,4B,I,E,G,I,C,a,I,C,O,Y,C,I,C,M,gB,E,I,C,E,I,A,E,G,G,A,I,E,E,E,I,O,A,G,A,K,E,M,I,C,M,gB,K,I,C,M,iB,I,C,O,qB,C,e,C,C,E,C,C,C,C,I,E,G,E,C,I,E,A,O,C,E,I,C,M,iB,E,G,A,K,I,E,E,E,C,I,C,iB,C,K,E,I,A,G,E,I,C,M,I,C,iB,C,E,E,I,C,M,e,I,C,M,Y,G,I,C,M,mB,G,C,kB,C,C,E,C,C,C,C,I,E,I,C,M,e,G,G,I,C,e,E,G,E,C,iB,C,C,C,I,C,qB,M,E,K,E,E,I,A,G,I,C,M,mB,I,C,qB,C,C,C,E,A,I,E,O,I,C,M,gB,I,a,I,C,M,gB,I,a,E,O,A,G,A,K,I,I,I,C,M,gB,K,I,C,M,iB,I,C,O,qB,C,e,C,I,C,M,gB,K,I,C,M,iB,I,C,O,qB,C,kB,C,G,C,gB,C,C,C,I,C,M,G,C,E,O,K,I,E,A,M,E,Q,I,G,C,E,E,G,E,U,G,A,K,I,E,C,I,E,I,C,M,2B,E,M,I,G,C,C,C,E,C,I,C,M,K,C,E,A,C,C,O,C,C,iB,C,C,C,O,I,C,M,iB,E,C,sB,C,C,C,O,I,C,a,6B,E,C,oB,C,C,C,O,I,C,a,2B,E,C,qB,C,C,C,I,E,I,C,M,e,G,O,G,I,C,O,c,E,C,kB,C,C,C,I,E,I,C,M,Y,G,O,G,I,C,O,c,E,C,wB,C,C,C,I,C,O,gB,E,C,4B,C,C,C,I,C,O,gB,E,I,A,G,I,C,M,e,I,O,A,G,A,K,I,G,I,A,G,E,I,C,4B,C,O,I,C,O,qB,C,M,E,C,C,C,I,E,C,C,I,C,M,M,S,I,C,M,oB,C,E,I,C,M,M,E,I,C,M,mB,E,A,O,C,E,A,C,E,I,C,O,U,E,O,G,A,K,I,G,E,K,G,I,C,a,I,C,Q,C,O,C,I,E,C,C,I,C,M,oB,C,E,A,O,C,E,A,C,E,I,C,O,U,E,O,G,A,K,I,G,E,K,E,C,S,C,I,E,C,C,I,C,M,oB,C,E,A,O,C,E,A,C,E,I,C,O,U,E,S,G,A,K,I,G,E,K,E,C,M,C,I,C,M,oB,C,E,I,C,a,I,C,O,C,S,C,I,E,I,C,a,I,C,2B,I,C,O,U,I,C,M,U,I,C,Y,U,I,C,kB,U,I,C,kB,U,A,O,C,E,I,C,a,G,A,K,I,G,E,U,I,C,a,U,I,C,yB,C,E,C,Q,C,I,E,I,C,O,S,I,C,M,S,A,O,C,E,I,C,a,G,A,K,I,G,E,S,I,C,kB,O,E,U,I,C,kB,O,E,U,I,C,Y,S,I,C,yB,C,C,C,O,C,C,C,G,C,M,C,C,C,I,A,C,I,C,M,kB,K,K,K,K,E,M,S,I,C,M,iB,K,K,K,K,A,E,E,c,I,C,U,I,C,S,I,C,e,E,I,C,Q,I,C,M,C,c,C,I,E,I,C,O,e,I,C,M,e,I,C,a,e,I,C,kB,e,I,C,kB,e,I,C,W,e,A,O,C,E,I,C,a,G,A,K,I,G,E,e,I,C,Y,c,C,O,C,G,C,O,C,W,C,C,Y,C,C,C,M,C,M,C,C,oB,C,C,C,C,I,C,E,M,G,I,C,M,I,C,wB,O,sB,A,I,I,E,E,E,E,E,C,A,Q,C,E,I,C,U,G,A,K,I,G,E,Q,I,C,e,I,C,mB,I,C,oB,G,I,C,M,I,I,C,W,M,I,C,O,kB,G,C,I,C,a,Y,E,U,I,C,a,M,I,C,O,kB,E,S,I,C,Y,M,I,C,O,kB,A,O,C,E,I,C,a,G,A,K,I,G,E,M,I,C,O,iB,I,C,kB,M,I,C,O,iB,I,C,kB,M,I,C,O,iB,I,C,M,O,I,C,M,S,A,O,C,E,I,C,O,W,K,G,A,K,I,E,E,G,W,O,I,C,mB,C,I,C,M,M,K,I,I,C,M,M,G,E,I,C,M,mB,K,K,K,I,E,A,K,I,C,M,Q,A,O,C,E,A,C,E,I,C,O,U,E,M,G,A,K,I,G,E,K,E,I,C,M,Q,I,C,O,c,I,C,a,M,C,M,I,C,M,gB,M,E,Q,C,G,G,I,C,M,O,I,C,O,O,A,O,C,E,I,C,U,G,A,K,I,G,E,I,G,I,C,a,K,E,I,C,O,E,C,Y,C,I,C,yB,O,qB,I,C,wB,C,K,C,I,E,C,C,I,C,M,oB,C,E,I,C,M,mB,E,A,O,C,E,A,C,E,I,C,O,U,E,K,G,A,K,I,G,E,K,E,C,Q,C,C,C,I,E,E,E,E,E,E,I,C,M,e,A,O,C,E,I,C,M,W,G,A,K,I,E,K,E,E,K,A,O,C,E,I,C,M,W,G,A,K,I,E,K,E,E,O,A,O,C,E,A,C,E,I,C,O,M,E,O,G,A,K,I,G,E,K,E,A,O,C,E,I,C,M,W,G,A,K,I,E,K,E,E,K,I,C,M,Y,I,C,M,2B,I,C,M,Y,O,K,E,A,O,C,E,I,C,M,W,G,A,K,I,E,K,E,E,S,E,C,oB,C,C,C,G,C,G,A,K,I,E,S,A,K,I,E,Q,O,G,C,E,C,C,E,C,C,E,C,C,C,I,C,a,e,E,I,C,O,a,E,E,Q,E,E,O,C,I,C,M,c,C,A,C,E,C,E,E,E,A,C,E,C,E,E,C,I,C,M,a,C,E,E,A,C,I,C,M,U,C,E,C,I,C,O,S,E,E,I,C,M,a,C,E,E,A,C,I,C,M,U,C,E,C,I,C,O,S,E,E,I,C,M,oB,C,E,I,C,M,U,C,E,C,E,A,C,Y,C,C,C,I,E,E,E,C,C,I,C,a,E,I,C,oB,G,I,C,kB,A,I,E,M,A,O,C,E,A,C,E,I,C,O,M,E,W,G,A,K,I,G,E,K,E,A,O,C,E,I,C,M,W,G,A,K,I,E,K,E,E,K,I,C,M,Y,I,C,M,2B,I,C,M,Y,O,K,E,A,O,C,E,I,C,M,W,G,A,K,I,E,K,E,E,S,I,C,a,C,kB,C,C,C,E,gB,C,c,C,I,E,I,C,O,M,E,I,C,O,O,E,I,C,O,Y,E,I,C,O,a,C,I,E,I,C,O,Y,I,E,I,C,O,U,I,I,C,M,iB,E,E,I,C,O,W,I,C,O,M,E,I,C,O,W,I,C,O,O,E,I,C,O,W,I,C,a,O,I,C,kB,K,I,C,a,S,U,I,C,a,gB,C,gC,C,C,E,G,C,C,C,C,I,E,I,C,a,a,E,G,I,C,kB,a,K,I,S,G,K,I,C,a,S,U,E,C,W,C,C,C,C,C,C,C,C,C,G,C,M,C,C,M,C,W,C,C,C,C,I,C,E,G,I,C,a,I,C,O,oB,E,E,mB,E,I,G,A,K,I,E,O,I,E,C,C,A,E,E,E,C,E,C,C,A,E,E,E,C,G,A,K,I,G,A,K,I,E,O,I,E,I,C,a,mB,C,E,E,E,E,E,E,K,I,I,C,e,G,G,E,K,I,C,C,E,C,C,C,E,E,I,C,gC,C,C,E,E,C,C,E,O,C,I,E,I,C,a,a,C,C,E,E,C,C,G,E,I,C,a,wB,C,E,E,E,I,C,kB,a,K,I,S,E,G,K,I,C,a,S,U,G,a,K,I,S,E,G,K,I,C,a,S,U,E,C,C,kB,C,I,E,E,E,E,E,I,C,O,mB,I,E,C,E,E,C,E,E,G,I,C,a,I,C,O,Y,E,C,C,E,C,G,E,C,I,E,C,C,E,C,E,I,C,M,2B,G,E,A,K,I,E,I,C,M,e,G,K,E,C,A,O,C,E,I,C,M,W,G,A,K,I,E,K,E,E,I,I,G,C,E,C,C,E,I,E,C,C,E,C,E,C,C,E,A,C,I,C,M,Y,G,C,K,E,M,E,S,C,E,E,A,C,M,I,C,M,a,C,E,C,C,E,I,C,M,Y,K,E,G,I,C,M,a,C,A,O,C,E,A,C,E,I,C,O,M,E,e,G,A,K,I,G,E,K,E,I,C,M,Y,K,I,C,M,2B,I,C,M,mB,I,C,M,Y,K,K,I,C,M,Y,S,I,C,a,E,G,C,A,O,C,E,A,C,E,I,C,O,M,E,c,G,A,K,I,G,E,K,E,I,C,a,C,C,C,M,G,A,E,qG,G,G,A,E,2E,G,G,A,E,6qC,I,G,A,E,6E,GlK3ZM4sB,GAAQ,CACZ,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,SACP,EA4BMQ,GAAYvB,ACXH,SAAA,IACb,IAAI,EAAQ,AAAA,GAAU,AAzDxB,CAAA,WACE,IAEI,EACA,EACA,EACA,EAGA,EARA,EAAK,EACL,EAAK,EAKL,EAAe,GACf,EAAQ,CAAA,EAGZ,SAAS,EAAM,CAAC,EACd,OAAO,AAAK,MAAL,GAAa,MAAM,EAAI,CAAC,GAAK,EAAU,EAAa,AAAQ,IAAR,EAAY,GAAO,CAAA,EAAK,AAAA,CAAA,EAAU,GAAK,CAAA,EAAM,EAAK,EAAQ,KAAK,IAAI,EAAG,KAAK,IAAI,EAAG,IAAM,CAAA,EACrJ,CAcA,SAAS,EAAM,CAAW,EACxB,OAAO,SAAS,CAAC,EACf,IAAI,EAAI,EACR,OAAO,UAAU,OAAU,CAAA,CAAC,EAAI,EAAG,CAAG,EAAG,EAAe,EAAY,EAAI,GAAK,CAAA,EAAS,CAAC,EAAa,GAAI,EAAa,GAAG,AAC1H,CACF,CAUA,OA3BA,EAAM,OAAS,SAAS,CAAC,EACvB,OAAO,UAAU,OAAU,CAAA,CAAC,EAAI,EAAG,CAAG,EAAuD,EAAM,AAA1D,CAAA,EAAK,EAAU,EAAK,CAAC,EAAA,IAAK,CAAA,EAAK,EAAU,EAAK,CAAC,EAAA,EAAuB,EAAI,EAAK,CAAA,EAAK,CAAA,EAAK,CAAA,EAAS,CAAC,EAAI,EAAG,AACrJ,EAEA,EAAM,MAAQ,SAAS,CAAC,EACtB,OAAO,UAAU,OAAU,CAAA,EAAQ,CAAC,CAAC,EAAG,CAAA,EAAS,CACnD,EAEA,EAAM,aAAe,SAAS,CAAC,EAC7B,OAAO,UAAU,OAAU,CAAA,EAAe,EAAG,CAAA,EAAS,CACxD,EASA,EAAM,MAAQ,EAAM,IAEpB,EAAM,WAAa,EAAM,IAEzB,EAAM,QAAU,SAAS,CAAC,EACxB,OAAO,UAAU,OAAU,CAAA,EAAU,EAAG,CAAA,EAAS,CACnD,EAEO,SAAS,CAAC,EAEf,OADA,EAAY,EAA2B,EAAM,AAA9B,CAAA,EAAK,EAAE,EAAA,IAAK,CAAA,EAAK,EAAE,EAAA,EAAuB,EAAI,EAAK,CAAA,EAAK,CAAA,EAChE,CACT,CACF,CAAA,IAWsC,KAMpC,OAJA,EAAM,KAAO,WACX,OAXK,AAWc,IAVhB,OAAO,AAUE,EAVK,UACd,aAAa,AASJ,EATW,gBACpB,MAAM,AAQG,EARI,SACb,QAAQ,AAOC,EAPM,UAQpB,EAEO,AAAA,GAAiB,MAAM,EAAO,UACvC,EDGkCE,IAE5BsB,GAAa,CACjBpuE,MAAO,CACL,CAAE11B,GAAI,EAAG+8F,MAAO,CAAC,EAARA,AAAW,EACpB,CAAE/8F,GAAI,EAAG+8F,MAAO,CAAC,EAARA,AAAW,EACpB,CAAE/8F,GAAI,EAAG+8F,MAAO,CAAC,EAAG,EAAXA,AAAc,EACvB,CAAE/8F,GAAI,EAAG+8F,MAAO,CAAC,EAARA,AAAW,EACpB,CAAE/8F,GAAI,EAAG+8F,MAAO,CAAC,EAARA,AAAW,EACpB,CAAE/8F,GAAI,EAAG+8F,MAAO,CAAC,EAARA,AAAW,EAAA,AAExB,EAEM+E,GAAQA,SD4VG,MChUX7E,EA3BJ,GAAM,CAACrxE,EAAQsxE,EAAU,CAAG+E,AAAAA,EAAqB,IAC3C,CAAC9E,EAAYC,EAAc,CAAG6E,AAAAA,IAC9B,CAAC5E,EAAWC,EAAa,CAAG2E,AAAAA,EAAwB6B,IACpD,CAACvG,EAAmBC,EAAqB,CAAGyE,AAAAA,EAAuB,EAAE,EACrE,CAACxE,EAAUC,EAAY,CAAGuE,AAAAA,EAAqB,GAC/C,CAACtE,EAAYC,EAAc,CAAGqE,AAAAA,EAGjC,CACDj9E,MAAOpmB,OAAO2+C,WACd9V,OAAQ7oC,OAAO4+C,WACjB,GACM,CAAC5c,EAASi9D,EAAW,CAAGoE,AAAAA,EAAqB,IAC7C,CAAC9/E,EAAQ27E,EAAU,CAAGmE,AAAAA,EAA+B,CAAC,EAAG,EAAE,EAC3D,CAAClE,EAAgBC,EAAkB,CAAGiE,AAAAA,IAEtChE,EAAeA,AAACh3E,IACpB,IAAI/jB,EAEJ,GAAI,CACFA,EAAIq1D,KAAKr9B,MAAMjU,EACjB,CAAE,MAAO9nB,EAAG,CACV+D,EAAIy/F,A6K5GH,SAAuB17E,CAAa,EACzC,IAAMqa,EAAQra,EAAMyI,MAAM,MACpBgG,EAAkB,EAAE,CAE1B,IAAK,IAAMgM,KAAQJ,EAAO,CACxB,GAAI,CAACI,EAAKw8D,SAAS,MAAO,SAE1B,IAAM7yE,EAAUqW,EAAK7lB,OAAO4I,MAAM,6CAClC,GAAI4G,AAAW,MAAXA,EAAiB,SAErB,IAAMhE,EAAOgE,CAAO,CAAC,EAAE,CACjB8yE,EAAK9yE,CAAO,CAAC,EAAE,CAErB,GAAI,CAAChE,GAAQ,CAAC82E,EAAI,SAElB,IAAMC,EAAW1oE,EAAMlK,KAAMpsB,AAAAA,GAAMA,EAAEY,KAAOqnB,EACxC+2E,AAAY,OAAZA,EACFA,EAASrB,OAAOz5F,KAAK66F,GAErBzoE,EAAMpyB,KAAK,CAAEtD,GAAIqnB,EAAMwwD,MAAOxwD,EAAM01E,MAAO,CAACoB,EAARpB,AAAY,GAGlD,IAAMsB,EAAS3oE,EAAMlK,KAAMpsB,AAAAA,GAAMA,EAAEY,KAAOm+F,GACrCE,GACH3oE,EAAMpyB,KAAK,CAAEtD,GAAIm+F,EAAItmB,MAAOsmB,EAAIpB,MAAO,EAAPA,AAAU,EAE9C,CAEA,MAAO,CAAErnE,MAAAA,CAAM,CACjB,E7K+EwBzO,EACpB,CACAq2E,EAAap6F,EACf,EA+HA,ODmMe,EC9TP,SAgBFsZ,EAdJ,GAAIygF,AAAa,MAAbA,EACF,OAGFr+F,OAAOwzB,iBACL,SACAwwE,A8K9HC,SAAkBrtC,CAAS,CAAE+oC,EAAU,GAAG,EAC/C,IAAIzkE,EACJ,MAAO,CAAC,GAAG3C,KACT6B,aAAac,GAEbA,EAAQ7B,WAAW,KAEjBu9B,EAAK9rD,MAAM,IAAI,CAAEytB,EACnB,EAAGonE,EACL,CACF,E9KoHe,KACPV,EAAc,CACZ54E,MAAOpmB,OAAO2+C,WACd9V,OAAQ7oC,OAAO4+C,WACjB,EACF,IAKF,IAAMxJ,EAA2C,CAC/C0rC,mBAAoB,GACpBF,gBAAiB6jB,EAAK,CAAC,MAAM,CAC7BpjB,WAAY,CAAA,EACZH,UAAYhpB,AAAAA,GAASusC,EAAK,CAAC,MAAM,CACjCrjB,UAAW,GACXvB,iBAAkB,CAAA,EAClBD,eAAgB,CAAA,EAChBiB,UAAY33E,AAAAA,GAAS+7F,GAAU/7F,EAAKy2F,SACpClhB,cAAe,GACfmD,OAAQ,CACNC,QAAU34E,AAAAA,IAGJA,AAAQ,MAARA,EACF0U,EAAEg+E,iBAEFwD,IACAxhF,EAAE09E,eAAepyF,EAAK9H,IAE1B,CACF,CACF,EAEAwc,EAAI,IAAIimF,GAAWxF,EAAWjpD,GAE9Bp1C,OAAO4d,EAAIA,EACX4gF,EAAc5gF,EAChB,EDiRA,EAAa,IAAM,EAAQ,IC/Q3B2lF,AAAAA,EAAa,KAEX,IAAM3lF,EAAI2gF,IACJqB,EAAKnB,IAGX,GAAIJ,AAAa,MAAbA,GAAqBzgF,AAAK,MAALA,EACvB,OAGF,IAAIiiF,EAAS,EACTC,EAAiB,EAEf3B,EAAgB,EAAE,CAClBrnE,EAAgB8oE,EAAG9oE,MAAMtlB,IAAKtI,AAAAA,IAClC,IAAIy2F,EAAU,EAmBd,OAjBkB,MAAdz2F,EAAKi1F,QACPwB,CAAAA,EAAUz2F,EAAKi1F,MAAM97F,MAArBs9F,EAEcG,GACZA,CAAAA,EAAiBH,CADnB,EAIAz2F,EAAKi1F,MAAM7uF,QAASywF,AAAAA,IAClB5B,EAAMz5F,KAAK,CACTtD,GAAIy+F,EACJ30F,OAAQhC,EAAK9H,GAAG8O,WAChBhB,OAAQ6wF,EAAM7vF,UAChB,GACA2vF,GAAU,CACZ,IAGK,CACLz+F,GAAI8H,EAAK9H,GAAG8O,WACZyvF,QAAAA,EACAK,SAAU,CACZ,CACF,GAGAiF,GAAU1hF,OAAO,CAAC,EAAGu8E,EAAe,EACpChB,EAAYe,GAEZjiF,EAAE0uE,QAAQx1D,EAAOqnE,GAEjB/kE,WAAW,WACTxb,EAAEo9E,SACJ,EAAG,IACL,GAEAuI,AAAAA,EAAa,KACExE,IACb,IAAMnhF,EAAI2gF,GAGD,OAAL3gF,GAIJA,EAAEo9E,SACJ,GAEAuI,AAAAA,EAAa,KAEX,IAAM3D,EAAKnB,IAEXG,EACEgB,EAAG9oE,MACA9J,OAAQxsB,AAAAA,GAAM2B,OAAO3B,EAAEY,IAAIk+F,SAAStyE,MACpCwJ,KAAK,CAACr2B,EAAG+E,IAAO/E,EAAEiB,GAAK8D,EAAE9D,GAAK,EAAI,IAEzC,GAEA,AAAA,CAAA,KAAA,IAAA6+F,EAAAmF,GAAAryE,UAAA,CAAA,GAAAmtE,EAAAD,EAAAzxF,WAAA2xF,EAAAD,EAAA1xF,WAAA4xF,EAAAD,EAAA5uF,YAAA8uF,EAAAD,EAAA5xF,WAAA8xF,EAAAD,EAAA9uF,YAAAgvF,EAAAH,EAAA7uF,YAAAivF,EAAAD,EAAAhvF,YAAAkvF,EAAAD,EAAAhyF,WAAAkyF,EAAAD,EAAAjyF,WAAAmyF,EAAAF,EAAAlvF,YAAAqvF,EAAAD,EAAApvF,YAAAsvF,EAAAD,EAAApyF,WAAAsyF,EAAAF,EAAArvF,YAAAwvF,EAAAb,EAAA3uF,YAAAyvF,EAAAD,EAAAvyF,WAAAyyF,EAAAD,EAAAzvF,YAAA2vF,EAAAD,EAAAzyF,WAAA2yF,GAAAD,EAAA1yF,WAAA0yF,EAAA3vF,YAAA4vF,CAAAA,EAAA3yF,WAAA6xF,EAAAe,QAkBmB,UACP,IAAMhqE,EAAO,MAAMgX,UAAUizD,UAAUC,WACvCjC,EAAajoE,EACf,EAACkpE,EAAA9sE,iBAAA,OASQ+tE,AAAAA,IACPA,EAAGz4B,iBACoB,MAAnBy4B,EAAGC,cAAwBD,EAAGC,aAAax1F,OAE7C,IAAIu1F,EAAGC,aAAax1F,MAAM,CAACsD,QAAQ,CAACxC,EAAM1K,KAExC,GAAI0K,AAAc,SAAdA,EAAK20F,KAAiB,CACxB,IAAMt+D,EAAOr2B,EAAK40F,YACdv+D,GACFA,EAAK/L,OAAOuhC,KAAMtwC,AAAAA,IAChBg3E,EAAah3E,EACf,EAEJ,CACF,EAEJ,GAACi4E,EAAA9sE,iBAAA,WAnBY+tE,AAAAA,IACXA,EAAGz4B,gBACL,GAAC43B,EAAAU,QA2BU,UACP,IAAMxB,EAAKnB,IACL9xF,EAAQ/H,KAAKq0B,MACb0oE,EAASsC,A+K1SxB,SAAgB57E,CAAgB,EAErC,IAAM7nB,EAAI6nB,EAAMyO,MAAMz0B,OAChB,CAACub,EAAGgkF,EAAU,CAAGuE,AAsElB,SACL99E,CAAgB,EAEhB,IAAMvc,EAAkC,CAAC,EAEnCg2F,EAAkC,CAAC,EACnCF,EAAiC,CAAC,EAExCv5E,EAAMyO,MAAMxnB,QAAQ,CAACpG,EAAM9G,KACzB0/F,CAAS,CAAC54F,EAAK9H,GAAG,CAAGgB,EACrBw/F,CAAS,CAACx/F,EAAE,CAAG8G,EAAK9H,EACtB,GAEA,IAAK,IAAIgB,EAAI,EAAGA,EAAIimB,EAAMyO,MAAMz0B,OAAQD,IAAK,CAC3C,IAAM8G,EAAOmf,EAAMyO,KAAK,CAAC10B,EAAE,CAG3B,IAAK,IAAI2/F,KAFTj2F,CAAI,CAAC1J,EAAE,CAAG,EAAE,CAEK8G,EAAKi1F,OAAS,EAAE,EAC/BryF,CAAI,CAAC1J,EAAE,CAACsC,KAAKo9F,CAAS,CAACC,EAAK,CAEhC,CAEA,MAAO,CAACj2F,EAAM81F,EAAU,AAC1B,EA7FuCv5E,GAEjCjnB,EAAK,EAEHkxF,EAAMrlF,MAAMzM,GAAGulB,KANH,IAOZi8E,EAAM/0F,MAAMzM,GAAGulB,KAAK,GACpBk8E,EAAUh1F,MAAMzM,GAAGulB,KAAK,CAAA,GACxBsd,EAAkB,EAAE,CAEpB6+D,EAAMA,AAACC,IAQX,IAAK,IAAI5C,KAPTl8D,EAAM3+B,KAAKy9F,GACXF,CAAO,CAACE,EAAG,CAAG,CAAA,EACd7P,CAAG,CAAC6P,EAAG,CAAG/gG,EACV4gG,CAAG,CAACG,EAAG,CAAG/gG,EACVA,GAAM,EAGSwc,CAAC,CAACukF,EAAG,EAGd7P,AAtBU,KAsBVA,CAAG,CAACiN,EAAG,EACT2C,EAAI3C,GACJyC,CAAG,CAACG,EAAG,CAAGp9F,KAAKoI,IAAI60F,CAAG,CAACG,EAAG,CAAEH,CAAG,CAACzC,EAAG,GACV,CAAA,IAAhB0C,CAAO,CAAC1C,EAAG,EACpByC,CAAAA,CAAG,CAACG,EAAG,CAAGp9F,KAAKoI,IAAI60F,CAAG,CAACG,EAAG,CAAE7P,CAAG,CAACiN,EAAG,CAAA,EAMvC,GAAIjN,CAAG,CAAC6P,EAAG,GAAKH,CAAG,CAACG,EAAG,CAAE,CACvB,IAAIj5F,EAEJ,GAEE+4F,CAAO,CADP/4F,EAAOm6B,EAAMl4B,MACA,CAAG,CAAA,EAChB62F,CAAG,CAAC94F,EAAK,CAAGopF,CAAG,CAAC6P,EAAG,OACZj5F,IAASi5F,EAAlB,AACF,CACF,EAEA,IAAK,IAAI//F,EAAI,EAAGA,EAAI5B,EAAG4B,IA3CL,KA4CZkwF,CAAG,CAAClwF,EAAE,EACR8/F,EAAI9/F,GAMR,IAAMggG,EAAyC,CAAC,EAChD,IAAK,IAAIhgG,EAAI,EAAGA,EAAI5B,EAAG4B,IACM,MAAvBggG,CAAW,CAACJ,CAAG,CAAC5/F,EAAE,CAAC,EACrBggG,CAAAA,CAAW,CAACJ,CAAG,CAAC5/F,EAAE,CAAC,CAAG,EAAE,AAAF,EAGxBggG,CAAW,CAACJ,CAAG,CAAC5/F,EAAE,CAAC,CAACsC,KAAKtC,GAG3B,IAAMu/F,EAAiB,EAAE,CACzB,IAAK,GAAM,EAAGx1F,EAAQ,GAAIxL,OAAOmsF,QAAQsV,GAEnCj2F,EAAQ9J,OAAS,GAEnBs/F,EAAOj9F,KAAKyH,EAAQqF,IAAKpP,AAAAA,GAAMw/F,CAAS,CAACx/F,EAAE,GAI/C,OAAOu/F,CACT,E/KmOsC/B,GAChBhzF,EAAMhI,KAAKq0B,MAEjB,GAAI0oE,EAAOt/F,OAAS,EAAG,CACrB48F,EACG,CAAA,gBAAA,EAAmBryF,AAAAA,CAAAA,EAAMD,CAAAA,EAAO+Z,QAC/B,GACA;AAAA,EAAOizC,KAAKC,UAAU+nC,EAAQ,KAAM,GAAG,CAC3C,EAEA,MACF,CAEA1C,EAAY,CAAA,mBAAA,EAAsBryF,AAAAA,CAAAA,EAAMD,CAAAA,EAAO+Z,QAAQ,GAAG,GAAA,CAAI,CAChE,EAACq+E,AAAAA,EAAAvE,EAAA4C,AAAAA,EAMJK,EANIsB,CAMA,IAACp3F,MAAD,CAAK,OAAEq0B,GAAS,EAAA,IAAA10B,UAAA,CAAA,IAAA+0F,EAAAkD,GAAAxyE,UAAA,CAAA,GAET,OAFSgyE,AAAAA,EAAA1C,EAEhBrgE,GAAOqgE,CAAA,CAAA,GAAA1B,GAAAE,EAAAyB,QASE/hG,AAAAA,GAAM+9F,EAAU/9F,EAAE2O,OAAO9H,OAAM29F,AAAAA,EAAAjE,EAAAsC,AAAAA,EAQ1CI,EAR0CuB,CAQvC,IAAC13F,MAAD,CAAK,OAAEsxF,IAAoBh6F,MAAM,EArRzB,GAqR4C,EAAA2I,SACpDpE,AAAAA,GADoDoE,AAAAA,CAAAA,KAChD,IAAAi1F,EAAAiD,GAAAzyE,UAAA,CAAA,GAAAyvE,EAAAD,EAAA/zF,WAWkB,OAXlB+zF,EAAAnB,QAGO,KACP,IAAM73F,EAAIg1F,GACA72F,MAAAA,IAAN6B,IAEJA,EAAE+xF,eAAepyF,EAAK9H,GAAG8O,YACzB+xB,QAAQoE,IAAI,uBACd,EAAC0+D,AAAAA,EAAAvC,EAAA,IAEYt5F,EAAK9H,IAAEmhG,CAAA,CAAA,GAEvB,IAAAwC,AAAAA,EAAAvE,EAAA4C,AAAAA,EAGJK,EAHIsB,CAGA,IAACp3F,MAAD,CAAK,OAAEgxF,IAAoBt8F,OAtSlB,EAsS0C,EAAA,IAAAiL,UAAA,CAAA,IAAAm1F,EAAAgD,GAAA1yE,UAAA,CAAA,GAAA2vE,EAAAD,EAAAj0F,WAEP,OAFOu2F,AAAAA,EAAAtC,EAAA,IAEnD9D,IAAoBt8F,OAxSX,GAwSmCqgG,GAAAD,CAAA,CAAA,GAAA,MAAA,IAAAE,EAOrBtE,EAGP,MAHgB,AAAA,YAAA,OAAAsE,EFhKtC,AAAA,EAAQ,IAAM,AEgKwBA,EAAA3B,EFjKrB,KAAA,IEiKY3C,EAAS2C,EAAA+D,AAAAA,EAAA7D,EAAA,IAExBzC,IAAY3nE,MAAMz0B,OAFM0iG,MAEAA,AAAAA,EAAA5D,EACxBtC,EADwBkG,MAChB9E,CAAA,CAAA,GAK/B,GAEiB0F,AF7QjB,SAAwB,CAAU,CAAE,EAAW,OAAO,QAAQ,EAC5D,IAAM,EAAI,CAAQ,CAAC,EAAS,EAAK,CAAA,CAAQ,CAAC,EAAS,CAAG,IAAI,GAAA,EAC1D,IAAK,IAAI,EAAI,EAAG,EAAI,EAAW,OAAQ,EAAI,EAAG,IAAK,CACjD,IAAM,EAAO,CAAU,CAAC,EAAE,CACrB,EAAE,IAAI,KACT,EAAE,IAAI,GACN,EAAS,iBAAiB,EAAM,GAEpC,CACF,EEoQiBA,CAAAA,QAAAA,QAAAA,EHlXjB,MAAMxC,GAAM/0F,SAAS20F,eAAe,OAEhCI,IACFF,ACgFF,SAAgB,CAAI,CAAE,CAAO,CAAE,CAAI,CAAE,EAAU,CAAC,CAAC,EAC/C,IAAI,EACJ,AAAA,EAAW,AAAA,IACT,EAAW,EACX,IAAY,SAAW,IAAS,EAAO,EAAS,IAAQ,EAAQ,WAAa,KAAO,KAAA,EAJzD,KAAA,EAK7B,EAAG,EAAQ,OACJ,KACL,IACA,EAAQ,YAAc,EACxB,CACF,ED1FS,IAAAG,AAAAA,EAAOF,GAAK,CAAA,GAAKC","sources":["<anon>","node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/alea.js","node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor128.js","node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorwow.js","node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorshift7.js","node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor4096.js","node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/tychei.js","node_modules/.pnpm/@parcel+node-resolver-core@3.0.2_@parcel+core@2.9.2/node_modules/@parcel/node-resolver-core/lib/_empty.js","src/main.tsx","node_modules/.pnpm/solid-js@1.6.3/node_modules/solid-js/web/dist/web.js","node_modules/.pnpm/solid-js@1.6.3/node_modules/solid-js/dist/solid.js","src/components/graph.tsx","node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/sequential.js","node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/value.js","node_modules/.pnpm/d3-color@3.1.0/node_modules/d3-color/src/color.js","node_modules/.pnpm/d3-color@3.1.0/node_modules/d3-color/src/define.js","node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/rgb.js","node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/basis.js","node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/basisClosed.js","node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/color.js","node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/constant.js","node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/array.js","node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/numberArray.js","node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/date.js","node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/number.js","node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/object.js","node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/string.js","node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/round.js","node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/continuous.js","node_modules/.pnpm/d3-array@3.2.4/node_modules/d3-array/src/bisect.js","node_modules/.pnpm/d3-array@3.2.4/node_modules/d3-array/src/ascending.js","node_modules/.pnpm/d3-array@3.2.4/node_modules/d3-array/src/bisector.js","node_modules/.pnpm/d3-array@3.2.4/node_modules/d3-array/src/descending.js","node_modules/.pnpm/d3-array@3.2.4/node_modules/d3-array/src/number.js","node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/constant.js","node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/number.js","node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/init.js","node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/linear.js","node_modules/.pnpm/d3-array@3.2.4/node_modules/d3-array/src/ticks.js","node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/tickFormat.js","node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/defaultLocale.js","node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/locale.js","node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/exponent.js","node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/formatDecimal.js","node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/formatGroup.js","node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/formatNumerals.js","node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/formatSpecifier.js","node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/formatTrim.js","node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/formatTypes.js","node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/formatPrefixAuto.js","node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/formatRounded.js","node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/identity.js","node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/precisionFixed.js","node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/precisionPrefix.js","node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/precisionRound.js","node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/log.js","node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/nice.js","node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/symlog.js","node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/pow.js","node_modules/.pnpm/d3-scale-chromatic@3.0.0/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","node_modules/.pnpm/d3-color@3.1.0/node_modules/d3-color/src/cubehelix.js","node_modules/.pnpm/d3-color@3.1.0/node_modules/d3-color/src/math.js","node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/cubehelix.js","node_modules/.pnpm/@cosmograph+cosmos@1.3.0/node_modules/@cosmograph/cosmos/dist/index.js","node_modules/.pnpm/@cosmograph+cosmos@1.3.0/node_modules/@cosmograph/cosmos/node_modules/gl-bench/dist/gl-bench.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/select.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/index.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/select.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selector.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/selectAll.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/array.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selectorAll.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/selectChild.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/matcher.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/selectChildren.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/filter.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/data.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/enter.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/sparse.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/constant.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/exit.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/join.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/merge.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/order.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/sort.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/call.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/nodes.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/node.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/size.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/empty.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/each.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/attr.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/namespace.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/namespaces.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/style.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/window.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/property.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/classed.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/text.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/html.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/raise.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/lower.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/append.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/creator.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/insert.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/remove.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/clone.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/datum.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/on.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/dispatch.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/selection/iterator.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/index.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/selection/index.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/selection/interrupt.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/interrupt.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/schedule.js","node_modules/.pnpm/d3-dispatch@3.0.1/node_modules/d3-dispatch/src/dispatch.js","node_modules/.pnpm/d3-timer@3.0.1/node_modules/d3-timer/src/timeout.js","node_modules/.pnpm/d3-timer@3.0.1/node_modules/d3-timer/src/timer.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/selection/transition.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/index.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/attr.js","node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/transform/index.js","node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/transform/parse.js","node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/transform/decompose.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/tween.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/interpolate.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/attrTween.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/delay.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/duration.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/ease.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/easeVarying.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/filter.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/merge.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/on.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/remove.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/select.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/selectAll.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/selection.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/style.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/styleTween.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/text.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/textTween.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/transition.js","node_modules/.pnpm/d3-transition@3.0.1_d3-selection@3.0.0/node_modules/d3-transition/src/transition/end.js","node_modules/.pnpm/d3-ease@3.0.1/node_modules/d3-ease/src/cubic.js","node_modules/.pnpm/d3-ease@3.0.1/node_modules/d3-ease/src/quad.js","node_modules/.pnpm/regl@2.1.0/node_modules/regl/dist/regl.js","node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/mat3.js","node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/common.js","node_modules/.pnpm/random@4.1.0/node_modules/random/dist/random.module.js","node_modules/.pnpm/random@4.1.0/node_modules/random/src/rng.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/generators/function.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/rng-factory.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/uniform.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/validation.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/uniform-int.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/uniform-boolean.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/normal.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/log-normal.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/bernoulli.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/binomial.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/geometric.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/poisson.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/exponential.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/irwin-hall.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/bates.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/distributions/pareto.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/generators/math-random.ts","node_modules/.pnpm/random@4.1.0/node_modules/random/src/random.ts","node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/index.js","node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/seedrandom.js","node_modules/.pnpm/d3-zoom@3.0.0/node_modules/d3-zoom/src/index.js","node_modules/.pnpm/d3-zoom@3.0.0/node_modules/d3-zoom/src/zoom.js","node_modules/.pnpm/d3-drag@3.0.0/node_modules/d3-drag/src/nodrag.js","node_modules/.pnpm/d3-drag@3.0.0/node_modules/d3-drag/src/noevent.js","node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/zoom.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/pointer.js","node_modules/.pnpm/d3-selection@3.0.0/node_modules/d3-selection/src/sourceEvent.js","node_modules/.pnpm/d3-zoom@3.0.0/node_modules/d3-zoom/src/constant.js","node_modules/.pnpm/d3-zoom@3.0.0/node_modules/d3-zoom/src/event.js","node_modules/.pnpm/d3-zoom@3.0.0/node_modules/d3-zoom/src/transform.js","node_modules/.pnpm/d3-zoom@3.0.0/node_modules/d3-zoom/src/noevent.js","node_modules/.pnpm/d3-array@3.2.4/node_modules/d3-array/src/extent.js","src/util/parsers/dot.ts","src/util/general.ts","src/util/algo/tarjan.ts"],"sourcesContent":["var $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirefc75\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirefc75\"] = parcelRequire;\n}\nparcelRequire.register(\"1NWL6\", function(module, exports) {\n// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n(function(global, module1, define1) {\n    function Alea(seed) {\n        var me = this, mash = Mash();\n        me.next = function() {\n            var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n            me.s0 = me.s1;\n            me.s1 = me.s2;\n            return me.s2 = t - (me.c = t | 0);\n        };\n        // Apply the seeding algorithm from Baagoe.\n        me.c = 1;\n        me.s0 = mash(\" \");\n        me.s1 = mash(\" \");\n        me.s2 = mash(\" \");\n        me.s0 -= mash(seed);\n        if (me.s0 < 0) me.s0 += 1;\n        me.s1 -= mash(seed);\n        if (me.s1 < 0) me.s1 += 1;\n        me.s2 -= mash(seed);\n        if (me.s2 < 0) me.s2 += 1;\n        mash = null;\n    }\n    function copy(f, t) {\n        t.c = f.c;\n        t.s0 = f.s0;\n        t.s1 = f.s1;\n        t.s2 = f.s2;\n        return t;\n    }\n    function impl(seed, opts) {\n        var xg = new Alea(seed), state = opts && opts.state, prng = xg.next;\n        prng.int32 = function() {\n            return xg.next() * 0x100000000 | 0;\n        };\n        prng.double = function() {\n            return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n        };\n        prng.quick = prng;\n        if (state) {\n            if (typeof state == \"object\") copy(state, xg);\n            prng.state = function() {\n                return copy(xg, {});\n            };\n        }\n        return prng;\n    }\n    function Mash() {\n        var n = 0xefc8249d;\n        var mash = function(data) {\n            data = String(data);\n            for(var i = 0; i < data.length; i++){\n                n += data.charCodeAt(i);\n                var h = 0.02519603282416938 * n;\n                n = h >>> 0;\n                h -= n;\n                h *= n;\n                n = h >>> 0;\n                h -= n;\n                n += h * 0x100000000; // 2^32\n            }\n            return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n        };\n        return mash;\n    }\n    if (module1 && module1.exports) module1.exports = impl;\n    else if (define1 && define1.amd) define1(function() {\n        return impl;\n    });\n    else this.alea = impl;\n})(this, module, typeof define == \"function\" && define // present with an AMD loader\n);\n\n});\n\nparcelRequire.register(\"8FlDu\", function(module, exports) {\n// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n(function(global, module1, define1) {\n    function XorGen(seed) {\n        var me = this, strseed = \"\";\n        me.x = 0;\n        me.y = 0;\n        me.z = 0;\n        me.w = 0;\n        // Set up generator function.\n        me.next = function() {\n            var t = me.x ^ me.x << 11;\n            me.x = me.y;\n            me.y = me.z;\n            me.z = me.w;\n            return me.w ^= me.w >>> 19 ^ t ^ t >>> 8;\n        };\n        if (seed === (seed | 0)) // Integer seed.\n        me.x = seed;\n        else // String seed.\n        strseed += seed;\n        // Mix in string seed, then discard an initial batch of 64 values.\n        for(var k = 0; k < strseed.length + 64; k++){\n            me.x ^= strseed.charCodeAt(k) | 0;\n            me.next();\n        }\n    }\n    function copy(f, t) {\n        t.x = f.x;\n        t.y = f.y;\n        t.z = f.z;\n        t.w = f.w;\n        return t;\n    }\n    function impl(seed, opts) {\n        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {\n            return (xg.next() >>> 0) / 0x100000000;\n        };\n        prng.double = function() {\n            do var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 0x100000000, result = (top + bot) / 2097152;\n            while (result === 0);\n            return result;\n        };\n        prng.int32 = xg.next;\n        prng.quick = prng;\n        if (state) {\n            if (typeof state == \"object\") copy(state, xg);\n            prng.state = function() {\n                return copy(xg, {});\n            };\n        }\n        return prng;\n    }\n    if (module1 && module1.exports) module1.exports = impl;\n    else if (define1 && define1.amd) define1(function() {\n        return impl;\n    });\n    else this.xor128 = impl;\n})(this, module, typeof define == \"function\" && define // present with an AMD loader\n);\n\n});\n\nparcelRequire.register(\"1rFi6\", function(module, exports) {\n// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n(function(global, module1, define1) {\n    function XorGen(seed) {\n        var me = this, strseed = \"\";\n        // Set up generator function.\n        me.next = function() {\n            var t = me.x ^ me.x >>> 2;\n            me.x = me.y;\n            me.y = me.z;\n            me.z = me.w;\n            me.w = me.v;\n            return (me.d = me.d + 362437 | 0) + (me.v = me.v ^ me.v << 4 ^ (t ^ t << 1)) | 0;\n        };\n        me.x = 0;\n        me.y = 0;\n        me.z = 0;\n        me.w = 0;\n        me.v = 0;\n        if (seed === (seed | 0)) // Integer seed.\n        me.x = seed;\n        else // String seed.\n        strseed += seed;\n        // Mix in string seed, then discard an initial batch of 64 values.\n        for(var k = 0; k < strseed.length + 64; k++){\n            me.x ^= strseed.charCodeAt(k) | 0;\n            if (k == strseed.length) me.d = me.x << 10 ^ me.x >>> 4;\n            me.next();\n        }\n    }\n    function copy(f, t) {\n        t.x = f.x;\n        t.y = f.y;\n        t.z = f.z;\n        t.w = f.w;\n        t.v = f.v;\n        t.d = f.d;\n        return t;\n    }\n    function impl(seed, opts) {\n        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {\n            return (xg.next() >>> 0) / 0x100000000;\n        };\n        prng.double = function() {\n            do var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 0x100000000, result = (top + bot) / 2097152;\n            while (result === 0);\n            return result;\n        };\n        prng.int32 = xg.next;\n        prng.quick = prng;\n        if (state) {\n            if (typeof state == \"object\") copy(state, xg);\n            prng.state = function() {\n                return copy(xg, {});\n            };\n        }\n        return prng;\n    }\n    if (module1 && module1.exports) module1.exports = impl;\n    else if (define1 && define1.amd) define1(function() {\n        return impl;\n    });\n    else this.xorwow = impl;\n})(this, module, typeof define == \"function\" && define // present with an AMD loader\n);\n\n});\n\nparcelRequire.register(\"iDdZD\", function(module, exports) {\n// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n(function(global, module1, define1) {\n    function XorGen(seed) {\n        var me = this;\n        // Set up generator function.\n        me.next = function() {\n            // Update xor generator.\n            var X = me.x, i = me.i, t, v, w;\n            t = X[i];\n            t ^= t >>> 7;\n            v = t ^ t << 24;\n            t = X[i + 1 & 7];\n            v ^= t ^ t >>> 10;\n            t = X[i + 3 & 7];\n            v ^= t ^ t >>> 3;\n            t = X[i + 4 & 7];\n            v ^= t ^ t << 7;\n            t = X[i + 7 & 7];\n            t = t ^ t << 13;\n            v ^= t ^ t << 9;\n            X[i] = v;\n            me.i = i + 1 & 7;\n            return v;\n        };\n        function init(me, seed) {\n            var j, w, X = [];\n            if (seed === (seed | 0)) // Seed state array using a 32-bit integer.\n            w = X[0] = seed;\n            else {\n                // Seed state using a string.\n                seed = \"\" + seed;\n                for(j = 0; j < seed.length; ++j)X[j & 7] = X[j & 7] << 15 ^ seed.charCodeAt(j) + X[j + 1 & 7] << 13;\n            }\n            // Enforce an array length of 8, not all zeroes.\n            while(X.length < 8)X.push(0);\n            for(j = 0; j < 8 && X[j] === 0; ++j);\n            if (j == 8) w = X[7] = -1;\n            else w = X[j];\n            me.x = X;\n            me.i = 0;\n            // Discard an initial 256 values.\n            for(j = 256; j > 0; --j)me.next();\n        }\n        init(me, seed);\n    }\n    function copy(f, t) {\n        t.x = f.x.slice();\n        t.i = f.i;\n        return t;\n    }\n    function impl(seed, opts) {\n        if (seed == null) seed = +new Date;\n        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {\n            return (xg.next() >>> 0) / 0x100000000;\n        };\n        prng.double = function() {\n            do var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 0x100000000, result = (top + bot) / 2097152;\n            while (result === 0);\n            return result;\n        };\n        prng.int32 = xg.next;\n        prng.quick = prng;\n        if (state) {\n            if (state.x) copy(state, xg);\n            prng.state = function() {\n                return copy(xg, {});\n            };\n        }\n        return prng;\n    }\n    if (module1 && module1.exports) module1.exports = impl;\n    else if (define1 && define1.amd) define1(function() {\n        return impl;\n    });\n    else this.xorshift7 = impl;\n})(this, module, typeof define == \"function\" && define // present with an AMD loader\n);\n\n});\n\nparcelRequire.register(\"bDA0X\", function(module, exports) {\n// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n(function(global, module1, define1) {\n    function XorGen(seed) {\n        var me = this;\n        // Set up generator function.\n        me.next = function() {\n            var w = me.w, X = me.X, i = me.i, t, v;\n            // Update Weyl generator.\n            me.w = w = w + 0x61c88647 | 0;\n            // Update xor generator.\n            v = X[i + 34 & 127];\n            t = X[i = i + 1 & 127];\n            v ^= v << 13;\n            t ^= t << 17;\n            v ^= v >>> 15;\n            t ^= t >>> 12;\n            // Update Xor generator array state.\n            v = X[i] = v ^ t;\n            me.i = i;\n            // Result is the combination.\n            return v + (w ^ w >>> 16) | 0;\n        };\n        function init(me, seed) {\n            var t, v, i, j, w, X = [], limit = 128;\n            if (seed === (seed | 0)) {\n                // Numeric seeds initialize v, which is used to generates X.\n                v = seed;\n                seed = null;\n            } else {\n                // String seeds are mixed into v and X one character at a time.\n                seed = seed + \"\\x00\";\n                v = 0;\n                limit = Math.max(limit, seed.length);\n            }\n            // Initialize circular array and weyl value.\n            for(i = 0, j = -32; j < limit; ++j){\n                // Put the unicode characters into the array, and shuffle them.\n                if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n                // After 32 shuffles, take v as the starting w value.\n                if (j === 0) w = v;\n                v ^= v << 10;\n                v ^= v >>> 15;\n                v ^= v << 4;\n                v ^= v >>> 13;\n                if (j >= 0) {\n                    w = w + 0x61c88647 | 0; // Weyl.\n                    t = X[j & 127] ^= v + w; // Combine xor and weyl to init array.\n                    i = 0 == t ? i + 1 : 0; // Count zeroes.\n                }\n            }\n            // We have detected all zeroes; make the key nonzero.\n            if (i >= 128) X[(seed && seed.length || 0) & 127] = -1;\n            // Run the generator 512 times to further mix the state before using it.\n            // Factoring this as a function slows the main generator, so it is just\n            // unrolled here.  The weyl generator is not advanced while warming up.\n            i = 127;\n            for(j = 512; j > 0; --j){\n                v = X[i + 34 & 127];\n                t = X[i = i + 1 & 127];\n                v ^= v << 13;\n                t ^= t << 17;\n                v ^= v >>> 15;\n                t ^= t >>> 12;\n                X[i] = v ^ t;\n            }\n            // Storing state as object members is faster than using closure variables.\n            me.w = w;\n            me.X = X;\n            me.i = i;\n        }\n        init(me, seed);\n    }\n    function copy(f, t) {\n        t.i = f.i;\n        t.w = f.w;\n        t.X = f.X.slice();\n        return t;\n    }\n    function impl(seed, opts) {\n        if (seed == null) seed = +new Date;\n        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {\n            return (xg.next() >>> 0) / 0x100000000;\n        };\n        prng.double = function() {\n            do var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 0x100000000, result = (top + bot) / 2097152;\n            while (result === 0);\n            return result;\n        };\n        prng.int32 = xg.next;\n        prng.quick = prng;\n        if (state) {\n            if (state.X) copy(state, xg);\n            prng.state = function() {\n                return copy(xg, {});\n            };\n        }\n        return prng;\n    }\n    if (module1 && module1.exports) module1.exports = impl;\n    else if (define1 && define1.amd) define1(function() {\n        return impl;\n    });\n    else this.xor4096 = impl;\n})(this, module, typeof define == \"function\" && define // present with an AMD loader\n);\n\n});\n\nparcelRequire.register(\"oBon1\", function(module, exports) {\n// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n(function(global, module1, define1) {\n    function XorGen(seed) {\n        var me = this, strseed = \"\";\n        // Set up generator function.\n        me.next = function() {\n            var b = me.b, c = me.c, d = me.d, a = me.a;\n            b = b << 25 ^ b >>> 7 ^ c;\n            c = c - d | 0;\n            d = d << 24 ^ d >>> 8 ^ a;\n            a = a - b | 0;\n            me.b = b = b << 20 ^ b >>> 12 ^ c;\n            me.c = c = c - d | 0;\n            me.d = d << 16 ^ c >>> 16 ^ a;\n            return me.a = a - b | 0;\n        };\n        /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */ me.a = 0;\n        me.b = 0;\n        me.c = -1640531527;\n        me.d = 1367130551;\n        if (seed === Math.floor(seed)) {\n            // Integer seed.\n            me.a = seed / 0x100000000 | 0;\n            me.b = seed | 0;\n        } else // String seed.\n        strseed += seed;\n        // Mix in string seed, then discard an initial batch of 64 values.\n        for(var k = 0; k < strseed.length + 20; k++){\n            me.b ^= strseed.charCodeAt(k) | 0;\n            me.next();\n        }\n    }\n    function copy(f, t) {\n        t.a = f.a;\n        t.b = f.b;\n        t.c = f.c;\n        t.d = f.d;\n        return t;\n    }\n    function impl(seed, opts) {\n        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {\n            return (xg.next() >>> 0) / 0x100000000;\n        };\n        prng.double = function() {\n            do var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 0x100000000, result = (top + bot) / 2097152;\n            while (result === 0);\n            return result;\n        };\n        prng.int32 = xg.next;\n        prng.quick = prng;\n        if (state) {\n            if (typeof state == \"object\") copy(state, xg);\n            prng.state = function() {\n                return copy(xg, {});\n            };\n        }\n        return prng;\n    }\n    if (module1 && module1.exports) module1.exports = impl;\n    else if (define1 && define1.amd) define1(function() {\n        return impl;\n    });\n    else this.tychei = impl;\n})(this, module, typeof define == \"function\" && define // present with an AMD loader\n);\n\n});\n\nparcelRequire.register(\"eO58V\", function(module, exports) {\n\"use strict\";\n\n});\n\nlet $82b01333e79ab06f$var$taskIdCounter = 1, $82b01333e79ab06f$var$isCallbackScheduled = false, $82b01333e79ab06f$var$isPerformingWork = false, $82b01333e79ab06f$var$taskQueue = [], $82b01333e79ab06f$var$currentTask = null, $82b01333e79ab06f$var$shouldYieldToHost = null, $82b01333e79ab06f$var$yieldInterval = 5, $82b01333e79ab06f$var$deadline = 0, $82b01333e79ab06f$var$maxYieldInterval = 300, $82b01333e79ab06f$var$scheduleCallback = null, $82b01333e79ab06f$var$scheduledCallback = null;\nconst $82b01333e79ab06f$var$maxSigned31BitInt = 1073741823;\nfunction $82b01333e79ab06f$var$setupScheduler() {\n    const channel = new MessageChannel(), port = channel.port2;\n    $82b01333e79ab06f$var$scheduleCallback = ()=>port.postMessage(null);\n    channel.port1.onmessage = ()=>{\n        if ($82b01333e79ab06f$var$scheduledCallback !== null) {\n            const currentTime = performance.now();\n            $82b01333e79ab06f$var$deadline = currentTime + $82b01333e79ab06f$var$yieldInterval;\n            const hasTimeRemaining = true;\n            try {\n                const hasMoreWork = $82b01333e79ab06f$var$scheduledCallback(hasTimeRemaining, currentTime);\n                if (!hasMoreWork) $82b01333e79ab06f$var$scheduledCallback = null;\n                else port.postMessage(null);\n            } catch (error) {\n                port.postMessage(null);\n                throw error;\n            }\n        }\n    };\n    if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n        const scheduling = navigator.scheduling;\n        $82b01333e79ab06f$var$shouldYieldToHost = ()=>{\n            const currentTime = performance.now();\n            if (currentTime >= $82b01333e79ab06f$var$deadline) {\n                if (scheduling.isInputPending()) return true;\n                return currentTime >= $82b01333e79ab06f$var$maxYieldInterval;\n            } else return false;\n        };\n    } else $82b01333e79ab06f$var$shouldYieldToHost = ()=>performance.now() >= $82b01333e79ab06f$var$deadline;\n}\nfunction $82b01333e79ab06f$var$enqueue(taskQueue, task) {\n    function findIndex() {\n        let m = 0;\n        let n = taskQueue.length - 1;\n        while(m <= n){\n            const k = n + m >> 1;\n            const cmp = task.expirationTime - taskQueue[k].expirationTime;\n            if (cmp > 0) m = k + 1;\n            else if (cmp < 0) n = k - 1;\n            else return k;\n        }\n        return m;\n    }\n    taskQueue.splice(findIndex(), 0, task);\n}\nfunction $82b01333e79ab06f$export$4b5e076b3a2fbe0a(fn, options) {\n    if (!$82b01333e79ab06f$var$scheduleCallback) $82b01333e79ab06f$var$setupScheduler();\n    let startTime = performance.now(), timeout = $82b01333e79ab06f$var$maxSigned31BitInt;\n    if (options && options.timeout) timeout = options.timeout;\n    const newTask = {\n        id: $82b01333e79ab06f$var$taskIdCounter++,\n        fn: fn,\n        startTime: startTime,\n        expirationTime: startTime + timeout\n    };\n    $82b01333e79ab06f$var$enqueue($82b01333e79ab06f$var$taskQueue, newTask);\n    if (!$82b01333e79ab06f$var$isCallbackScheduled && !$82b01333e79ab06f$var$isPerformingWork) {\n        $82b01333e79ab06f$var$isCallbackScheduled = true;\n        $82b01333e79ab06f$var$scheduledCallback = $82b01333e79ab06f$var$flushWork;\n        $82b01333e79ab06f$var$scheduleCallback();\n    }\n    return newTask;\n}\nfunction $82b01333e79ab06f$export$b888d8f981c07a46(task) {\n    task.fn = null;\n}\nfunction $82b01333e79ab06f$var$flushWork(hasTimeRemaining, initialTime) {\n    $82b01333e79ab06f$var$isCallbackScheduled = false;\n    $82b01333e79ab06f$var$isPerformingWork = true;\n    try {\n        return $82b01333e79ab06f$var$workLoop(hasTimeRemaining, initialTime);\n    } finally{\n        $82b01333e79ab06f$var$currentTask = null;\n        $82b01333e79ab06f$var$isPerformingWork = false;\n    }\n}\nfunction $82b01333e79ab06f$var$workLoop(hasTimeRemaining, initialTime) {\n    let currentTime = initialTime;\n    $82b01333e79ab06f$var$currentTask = $82b01333e79ab06f$var$taskQueue[0] || null;\n    while($82b01333e79ab06f$var$currentTask !== null){\n        if ($82b01333e79ab06f$var$currentTask.expirationTime > currentTime && (!hasTimeRemaining || $82b01333e79ab06f$var$shouldYieldToHost())) break;\n        const callback = $82b01333e79ab06f$var$currentTask.fn;\n        if (callback !== null) {\n            $82b01333e79ab06f$var$currentTask.fn = null;\n            const didUserCallbackTimeout = $82b01333e79ab06f$var$currentTask.expirationTime <= currentTime;\n            callback(didUserCallbackTimeout);\n            currentTime = performance.now();\n            if ($82b01333e79ab06f$var$currentTask === $82b01333e79ab06f$var$taskQueue[0]) $82b01333e79ab06f$var$taskQueue.shift();\n        } else $82b01333e79ab06f$var$taskQueue.shift();\n        $82b01333e79ab06f$var$currentTask = $82b01333e79ab06f$var$taskQueue[0] || null;\n    }\n    return $82b01333e79ab06f$var$currentTask !== null;\n}\nconst $82b01333e79ab06f$export$2cb4986bed338027 = {};\nfunction $82b01333e79ab06f$var$setHydrateContext(context) {\n    $82b01333e79ab06f$export$2cb4986bed338027.context = context;\n}\nfunction $82b01333e79ab06f$var$nextHydrateContext() {\n    return {\n        ...$82b01333e79ab06f$export$2cb4986bed338027.context,\n        id: `${$82b01333e79ab06f$export$2cb4986bed338027.context.id}${$82b01333e79ab06f$export$2cb4986bed338027.context.count++}-`,\n        count: 0\n    };\n}\nconst $82b01333e79ab06f$export$34b67c27f2ca7498 = (a, b)=>a === b;\nconst $82b01333e79ab06f$export$5cd89106e2f6c2c5 = Symbol(\"solid-proxy\");\nconst $82b01333e79ab06f$export$17a675b7c02a7b1d = Symbol(\"solid-track\");\nconst $82b01333e79ab06f$export$f5625ae0b78e5b20 = Symbol(\"solid-dev-component\");\nconst $82b01333e79ab06f$var$signalOptions = {\n    equals: $82b01333e79ab06f$export$34b67c27f2ca7498\n};\nlet $82b01333e79ab06f$var$ERROR = null;\nlet $82b01333e79ab06f$var$runEffects = $82b01333e79ab06f$var$runQueue;\nconst $82b01333e79ab06f$var$STALE = 1;\nconst $82b01333e79ab06f$var$PENDING = 2;\nconst $82b01333e79ab06f$var$UNOWNED = {\n    owned: null,\n    cleanups: null,\n    context: null,\n    owner: null\n};\nconst $82b01333e79ab06f$var$NO_INIT = {};\nvar $82b01333e79ab06f$var$Owner = null;\nlet $82b01333e79ab06f$var$Transition = null;\nlet $82b01333e79ab06f$var$Scheduler = null;\nlet $82b01333e79ab06f$var$ExternalSourceFactory = null;\nlet $82b01333e79ab06f$var$Listener = null;\nlet $82b01333e79ab06f$var$Updates = null;\nlet $82b01333e79ab06f$var$Effects = null;\nlet $82b01333e79ab06f$var$ExecCount = 0;\nconst [$82b01333e79ab06f$var$transPending, $82b01333e79ab06f$var$setTransPending] = /*@__PURE__*/ $82b01333e79ab06f$export$c1e1e1ecbbe76a5(false);\nfunction $82b01333e79ab06f$export$882461b6382ed46c(fn, detachedOwner) {\n    const listener = $82b01333e79ab06f$var$Listener, owner = $82b01333e79ab06f$var$Owner, unowned = fn.length === 0, root = unowned && true ? $82b01333e79ab06f$var$UNOWNED : {\n        owned: null,\n        cleanups: null,\n        context: null,\n        owner: detachedOwner || owner\n    }, updateFn = unowned ? fn : ()=>fn(()=>$82b01333e79ab06f$export$363ebc4b78b8f807(()=>$82b01333e79ab06f$var$cleanNode(root)));\n    $82b01333e79ab06f$var$Owner = root;\n    $82b01333e79ab06f$var$Listener = null;\n    try {\n        return $82b01333e79ab06f$var$runUpdates(updateFn, true);\n    } finally{\n        $82b01333e79ab06f$var$Listener = listener;\n        $82b01333e79ab06f$var$Owner = owner;\n    }\n}\nfunction $82b01333e79ab06f$export$c1e1e1ecbbe76a5(value, options) {\n    options = options ? Object.assign({}, $82b01333e79ab06f$var$signalOptions, options) : $82b01333e79ab06f$var$signalOptions;\n    const s = {\n        value: value,\n        observers: null,\n        observerSlots: null,\n        comparator: options.equals || undefined\n    };\n    const setter = (value)=>{\n        if (typeof value === \"function\") {\n            if ($82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running && $82b01333e79ab06f$var$Transition.sources.has(s)) value = value(s.tValue);\n            else value = value(s.value);\n        }\n        return $82b01333e79ab06f$var$writeSignal(s, value);\n    };\n    return [\n        $82b01333e79ab06f$var$readSignal.bind(s),\n        setter\n    ];\n}\nfunction $82b01333e79ab06f$export$234a23cdc77e6a3d(fn, value, options) {\n    const c = $82b01333e79ab06f$var$createComputation(fn, value, true, $82b01333e79ab06f$var$STALE);\n    if ($82b01333e79ab06f$var$Scheduler && $82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running) $82b01333e79ab06f$var$Updates.push(c);\n    else $82b01333e79ab06f$var$updateComputation(c);\n}\nfunction $82b01333e79ab06f$export$314dade334ae905d(fn, value, options) {\n    const c = $82b01333e79ab06f$var$createComputation(fn, value, false, $82b01333e79ab06f$var$STALE);\n    if ($82b01333e79ab06f$var$Scheduler && $82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running) $82b01333e79ab06f$var$Updates.push(c);\n    else $82b01333e79ab06f$var$updateComputation(c);\n}\nfunction $82b01333e79ab06f$export$7ea7134f704deda4(fn, value, options) {\n    $82b01333e79ab06f$var$runEffects = $82b01333e79ab06f$var$runUserEffects;\n    const c = $82b01333e79ab06f$var$createComputation(fn, value, false, $82b01333e79ab06f$var$STALE), s = $82b01333e79ab06f$var$SuspenseContext && $82b01333e79ab06f$var$lookup($82b01333e79ab06f$var$Owner, $82b01333e79ab06f$var$SuspenseContext.id);\n    if (s) c.suspense = s;\n    c.user = true;\n    $82b01333e79ab06f$var$Effects ? $82b01333e79ab06f$var$Effects.push(c) : $82b01333e79ab06f$var$updateComputation(c);\n}\nfunction $82b01333e79ab06f$export$5ce14d95ebb45542(onInvalidate, options) {\n    let fn;\n    const c = $82b01333e79ab06f$var$createComputation(()=>{\n        fn ? fn() : $82b01333e79ab06f$export$363ebc4b78b8f807(onInvalidate);\n        fn = undefined;\n    }, undefined, false, 0), s = $82b01333e79ab06f$var$SuspenseContext && $82b01333e79ab06f$var$lookup($82b01333e79ab06f$var$Owner, $82b01333e79ab06f$var$SuspenseContext.id);\n    if (s) c.suspense = s;\n    c.user = true;\n    return (tracking)=>{\n        fn = tracking;\n        $82b01333e79ab06f$var$updateComputation(c);\n    };\n}\nfunction $82b01333e79ab06f$export$c0c6c8b9c16bf6aa(fn, value, options) {\n    options = options ? Object.assign({}, $82b01333e79ab06f$var$signalOptions, options) : $82b01333e79ab06f$var$signalOptions;\n    const c = $82b01333e79ab06f$var$createComputation(fn, value, true, 0);\n    c.observers = null;\n    c.observerSlots = null;\n    c.comparator = options.equals || undefined;\n    if ($82b01333e79ab06f$var$Scheduler && $82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running) {\n        c.tState = $82b01333e79ab06f$var$STALE;\n        $82b01333e79ab06f$var$Updates.push(c);\n    } else $82b01333e79ab06f$var$updateComputation(c);\n    return $82b01333e79ab06f$var$readSignal.bind(c);\n}\nfunction $82b01333e79ab06f$export$edd172c6c83c39cc(pSource, pFetcher, pOptions) {\n    let source;\n    let fetcher;\n    let options;\n    if (arguments.length === 2 && typeof pFetcher === \"object\" || arguments.length === 1) {\n        source = true;\n        fetcher = pSource;\n        options = pFetcher || {};\n    } else {\n        source = pSource;\n        fetcher = pFetcher;\n        options = pOptions || {};\n    }\n    let pr = null, initP = $82b01333e79ab06f$var$NO_INIT, id = null, loadedUnderTransition = false, scheduled = false, resolved = \"initialValue\" in options, dynamic = typeof source === \"function\" && $82b01333e79ab06f$export$c0c6c8b9c16bf6aa(source);\n    const contexts = new Set(), [value, setValue] = (options.storage || $82b01333e79ab06f$export$c1e1e1ecbbe76a5)(options.initialValue), [error, setError] = $82b01333e79ab06f$export$c1e1e1ecbbe76a5(undefined), [track, trigger] = $82b01333e79ab06f$export$c1e1e1ecbbe76a5(undefined, {\n        equals: false\n    }), [state, setState] = $82b01333e79ab06f$export$c1e1e1ecbbe76a5(resolved ? \"ready\" : \"unresolved\");\n    if ($82b01333e79ab06f$export$2cb4986bed338027.context) {\n        id = `${$82b01333e79ab06f$export$2cb4986bed338027.context.id}${$82b01333e79ab06f$export$2cb4986bed338027.context.count++}`;\n        let v;\n        if (options.ssrLoadFrom === \"initial\") initP = options.initialValue;\n        else if ($82b01333e79ab06f$export$2cb4986bed338027.load && (v = $82b01333e79ab06f$export$2cb4986bed338027.load(id))) initP = v[0];\n    }\n    function loadEnd(p, v, error, key) {\n        if (pr === p) {\n            pr = null;\n            resolved = true;\n            if ((p === initP || v === initP) && options.onHydrated) queueMicrotask(()=>options.onHydrated(key, {\n                    value: v\n                }));\n            initP = $82b01333e79ab06f$var$NO_INIT;\n            if ($82b01333e79ab06f$var$Transition && p && loadedUnderTransition) {\n                $82b01333e79ab06f$var$Transition.promises.delete(p);\n                loadedUnderTransition = false;\n                $82b01333e79ab06f$var$runUpdates(()=>{\n                    $82b01333e79ab06f$var$Transition.running = true;\n                    completeLoad(v, error);\n                }, false);\n            } else completeLoad(v, error);\n        }\n        return v;\n    }\n    function completeLoad(v, err) {\n        $82b01333e79ab06f$var$runUpdates(()=>{\n            if (!err) setValue(()=>v);\n            setState(err ? \"errored\" : \"ready\");\n            setError(err);\n            for (const c of contexts.keys())c.decrement();\n            contexts.clear();\n        }, false);\n    }\n    function read() {\n        const c = $82b01333e79ab06f$var$SuspenseContext && $82b01333e79ab06f$var$lookup($82b01333e79ab06f$var$Owner, $82b01333e79ab06f$var$SuspenseContext.id), v = value(), err = error();\n        if (err && !pr) throw err;\n        if ($82b01333e79ab06f$var$Listener && !$82b01333e79ab06f$var$Listener.user && c) $82b01333e79ab06f$export$234a23cdc77e6a3d(()=>{\n            track();\n            if (pr) {\n                if (c.resolved && $82b01333e79ab06f$var$Transition && loadedUnderTransition) $82b01333e79ab06f$var$Transition.promises.add(pr);\n                else if (!contexts.has(c)) {\n                    c.increment();\n                    contexts.add(c);\n                }\n            }\n        });\n        return v;\n    }\n    function load(refetching = true) {\n        if (refetching !== false && scheduled) return;\n        scheduled = false;\n        const lookup = dynamic ? dynamic() : source;\n        loadedUnderTransition = $82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running;\n        if (lookup == null || lookup === false) {\n            loadEnd(pr, $82b01333e79ab06f$export$363ebc4b78b8f807(value));\n            return;\n        }\n        if ($82b01333e79ab06f$var$Transition && pr) $82b01333e79ab06f$var$Transition.promises.delete(pr);\n        const p = initP !== $82b01333e79ab06f$var$NO_INIT ? initP : $82b01333e79ab06f$export$363ebc4b78b8f807(()=>fetcher(lookup, {\n                value: value(),\n                refetching: refetching\n            }));\n        if (typeof p !== \"object\" || !(p && \"then\" in p)) {\n            loadEnd(pr, p, undefined, lookup);\n            return p;\n        }\n        pr = p;\n        scheduled = true;\n        queueMicrotask(()=>scheduled = false);\n        $82b01333e79ab06f$var$runUpdates(()=>{\n            setState(resolved ? \"refreshing\" : \"pending\");\n            trigger();\n        }, false);\n        return p.then((v)=>loadEnd(p, v, undefined, lookup), (e)=>loadEnd(p, undefined, $82b01333e79ab06f$var$castError(e), lookup));\n    }\n    Object.defineProperties(read, {\n        state: {\n            get: ()=>state()\n        },\n        error: {\n            get: ()=>error()\n        },\n        loading: {\n            get () {\n                const s = state();\n                return s === \"pending\" || s === \"refreshing\";\n            }\n        },\n        latest: {\n            get () {\n                if (!resolved) return read();\n                const err = error();\n                if (err && !pr) throw err;\n                return value();\n            }\n        }\n    });\n    if (dynamic) $82b01333e79ab06f$export$234a23cdc77e6a3d(()=>load(false));\n    else load(false);\n    return [\n        read,\n        {\n            refetch: load,\n            mutate: setValue\n        }\n    ];\n}\nfunction $82b01333e79ab06f$export$e673efccd97e4223(source, options) {\n    let t, timeout = options ? options.timeoutMs : undefined;\n    const node = $82b01333e79ab06f$var$createComputation(()=>{\n        if (!t || !t.fn) t = $82b01333e79ab06f$export$4b5e076b3a2fbe0a(()=>setDeferred(()=>node.value), timeout !== undefined ? {\n            timeout: timeout\n        } : undefined);\n        return source();\n    }, undefined, true);\n    const [deferred, setDeferred] = $82b01333e79ab06f$export$c1e1e1ecbbe76a5(node.value, options);\n    $82b01333e79ab06f$var$updateComputation(node);\n    setDeferred(()=>node.value);\n    return deferred;\n}\nfunction $82b01333e79ab06f$export$595d22ed68ca2841(source, fn = $82b01333e79ab06f$export$34b67c27f2ca7498, options) {\n    const subs = new Map();\n    const node = $82b01333e79ab06f$var$createComputation((p)=>{\n        const v = source();\n        for (const [key, val] of subs.entries())if (fn(key, v) !== fn(key, p)) for (const c of val.values()){\n            c.state = $82b01333e79ab06f$var$STALE;\n            if (c.pure) $82b01333e79ab06f$var$Updates.push(c);\n            else $82b01333e79ab06f$var$Effects.push(c);\n        }\n        return v;\n    }, undefined, true, $82b01333e79ab06f$var$STALE);\n    $82b01333e79ab06f$var$updateComputation(node);\n    return (key)=>{\n        const listener = $82b01333e79ab06f$var$Listener;\n        if (listener) {\n            let l;\n            if (l = subs.get(key)) l.add(listener);\n            else subs.set(key, l = new Set([\n                listener\n            ]));\n            $82b01333e79ab06f$export$b36e5eaa3e8c43ab(()=>{\n                l.delete(listener);\n                !l.size && subs.delete(key);\n            });\n        }\n        return fn(key, $82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running && $82b01333e79ab06f$var$Transition.sources.has(node) ? node.tValue : node.value);\n    };\n}\nfunction $82b01333e79ab06f$export$712ea50be43a7858(fn) {\n    return $82b01333e79ab06f$var$runUpdates(fn, false);\n}\nfunction $82b01333e79ab06f$export$363ebc4b78b8f807(fn) {\n    const listener = $82b01333e79ab06f$var$Listener;\n    $82b01333e79ab06f$var$Listener = null;\n    try {\n        return fn();\n    } finally{\n        $82b01333e79ab06f$var$Listener = listener;\n    }\n}\nfunction $82b01333e79ab06f$export$af631764ddc44097(deps, fn, options) {\n    const isArray = Array.isArray(deps);\n    let prevInput;\n    let defer = options && options.defer;\n    return (prevValue)=>{\n        let input;\n        if (isArray) {\n            input = Array(deps.length);\n            for(let i = 0; i < deps.length; i++)input[i] = deps[i]();\n        } else input = deps();\n        if (defer) {\n            defer = false;\n            return undefined;\n        }\n        const result = $82b01333e79ab06f$export$363ebc4b78b8f807(()=>fn(input, prevInput, prevValue));\n        prevInput = input;\n        return result;\n    };\n}\nfunction $82b01333e79ab06f$export$1e848a9e87980bd5(fn) {\n    $82b01333e79ab06f$export$7ea7134f704deda4(()=>$82b01333e79ab06f$export$363ebc4b78b8f807(fn));\n}\nfunction $82b01333e79ab06f$export$b36e5eaa3e8c43ab(fn) {\n    if ($82b01333e79ab06f$var$Owner === null) ;\n    else if ($82b01333e79ab06f$var$Owner.cleanups === null) $82b01333e79ab06f$var$Owner.cleanups = [\n        fn\n    ];\n    else $82b01333e79ab06f$var$Owner.cleanups.push(fn);\n    return fn;\n}\nfunction $82b01333e79ab06f$export$2288787135a8f66e(fn) {\n    $82b01333e79ab06f$var$ERROR || ($82b01333e79ab06f$var$ERROR = Symbol(\"error\"));\n    if ($82b01333e79ab06f$var$Owner === null) ;\n    else if ($82b01333e79ab06f$var$Owner.context === null) $82b01333e79ab06f$var$Owner.context = {\n        [$82b01333e79ab06f$var$ERROR]: [\n            fn\n        ]\n    };\n    else if (!$82b01333e79ab06f$var$Owner.context[$82b01333e79ab06f$var$ERROR]) $82b01333e79ab06f$var$Owner.context[$82b01333e79ab06f$var$ERROR] = [\n        fn\n    ];\n    else $82b01333e79ab06f$var$Owner.context[$82b01333e79ab06f$var$ERROR].push(fn);\n}\nfunction $82b01333e79ab06f$export$12abb5141c6fdc9c() {\n    return $82b01333e79ab06f$var$Listener;\n}\nfunction $82b01333e79ab06f$export$5f4ed0d56c2c0edf() {\n    return $82b01333e79ab06f$var$Owner;\n}\nfunction $82b01333e79ab06f$export$c14f3e3abbc7d6b5(o, fn) {\n    const prev = $82b01333e79ab06f$var$Owner;\n    $82b01333e79ab06f$var$Owner = o;\n    try {\n        return $82b01333e79ab06f$var$runUpdates(fn, true);\n    } finally{\n        $82b01333e79ab06f$var$Owner = prev;\n    }\n}\nfunction $82b01333e79ab06f$export$45e8540700504e87(scheduler = $82b01333e79ab06f$export$4b5e076b3a2fbe0a) {\n    $82b01333e79ab06f$var$Scheduler = scheduler;\n}\nfunction $82b01333e79ab06f$export$7568632d0d33d16d(fn) {\n    if ($82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running) {\n        fn();\n        return $82b01333e79ab06f$var$Transition.done;\n    }\n    const l = $82b01333e79ab06f$var$Listener;\n    const o = $82b01333e79ab06f$var$Owner;\n    return Promise.resolve().then(()=>{\n        $82b01333e79ab06f$var$Listener = l;\n        $82b01333e79ab06f$var$Owner = o;\n        let t;\n        if ($82b01333e79ab06f$var$Scheduler || $82b01333e79ab06f$var$SuspenseContext) {\n            t = $82b01333e79ab06f$var$Transition || ($82b01333e79ab06f$var$Transition = {\n                sources: new Set(),\n                effects: [],\n                promises: new Set(),\n                disposed: new Set(),\n                queue: new Set(),\n                running: true\n            });\n            t.done || (t.done = new Promise((res)=>t.resolve = res));\n            t.running = true;\n        }\n        $82b01333e79ab06f$var$runUpdates(fn, false);\n        $82b01333e79ab06f$var$Listener = $82b01333e79ab06f$var$Owner = null;\n        return t ? t.done : undefined;\n    });\n}\nfunction $82b01333e79ab06f$export$7b286972b8d8ccbf() {\n    return [\n        $82b01333e79ab06f$var$transPending,\n        $82b01333e79ab06f$export$7568632d0d33d16d\n    ];\n}\nfunction $82b01333e79ab06f$var$resumeEffects(e) {\n    $82b01333e79ab06f$var$Effects.push.apply($82b01333e79ab06f$var$Effects, e);\n    e.length = 0;\n}\nfunction $82b01333e79ab06f$export$fd42f52fd3ae1109(defaultValue, options) {\n    const id = Symbol(\"context\");\n    return {\n        id: id,\n        Provider: $82b01333e79ab06f$var$createProvider(id),\n        defaultValue: defaultValue\n    };\n}\nfunction $82b01333e79ab06f$export$fae74005e78b1a27(context) {\n    let ctx;\n    return (ctx = $82b01333e79ab06f$var$lookup($82b01333e79ab06f$var$Owner, context.id)) !== undefined ? ctx : context.defaultValue;\n}\nfunction $82b01333e79ab06f$export$bacb5cc5a11aef16(fn) {\n    const children = $82b01333e79ab06f$export$c0c6c8b9c16bf6aa(fn);\n    const memo = $82b01333e79ab06f$export$c0c6c8b9c16bf6aa(()=>$82b01333e79ab06f$var$resolveChildren(children()));\n    memo.toArray = ()=>{\n        const c = memo();\n        return Array.isArray(c) ? c : c != null ? [\n            c\n        ] : [];\n    };\n    return memo;\n}\nlet $82b01333e79ab06f$var$SuspenseContext;\nfunction $82b01333e79ab06f$var$getSuspenseContext() {\n    return $82b01333e79ab06f$var$SuspenseContext || ($82b01333e79ab06f$var$SuspenseContext = $82b01333e79ab06f$export$fd42f52fd3ae1109({}));\n}\nfunction $82b01333e79ab06f$export$315ab94ce87a624f(factory) {\n    if ($82b01333e79ab06f$var$ExternalSourceFactory) {\n        const oldFactory = $82b01333e79ab06f$var$ExternalSourceFactory;\n        $82b01333e79ab06f$var$ExternalSourceFactory = (fn, trigger)=>{\n            const oldSource = oldFactory(fn, trigger);\n            const source = factory((x)=>oldSource.track(x), trigger);\n            return {\n                track: (x)=>source.track(x),\n                dispose () {\n                    source.dispose();\n                    oldSource.dispose();\n                }\n            };\n        };\n    } else $82b01333e79ab06f$var$ExternalSourceFactory = factory;\n}\nfunction $82b01333e79ab06f$var$readSignal() {\n    const runningTransition = $82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running;\n    if (this.sources && (!runningTransition && this.state || runningTransition && this.tState)) {\n        if (!runningTransition && this.state === $82b01333e79ab06f$var$STALE || runningTransition && this.tState === $82b01333e79ab06f$var$STALE) $82b01333e79ab06f$var$updateComputation(this);\n        else {\n            const updates = $82b01333e79ab06f$var$Updates;\n            $82b01333e79ab06f$var$Updates = null;\n            $82b01333e79ab06f$var$runUpdates(()=>$82b01333e79ab06f$var$lookUpstream(this), false);\n            $82b01333e79ab06f$var$Updates = updates;\n        }\n    }\n    if ($82b01333e79ab06f$var$Listener) {\n        const sSlot = this.observers ? this.observers.length : 0;\n        if (!$82b01333e79ab06f$var$Listener.sources) {\n            $82b01333e79ab06f$var$Listener.sources = [\n                this\n            ];\n            $82b01333e79ab06f$var$Listener.sourceSlots = [\n                sSlot\n            ];\n        } else {\n            $82b01333e79ab06f$var$Listener.sources.push(this);\n            $82b01333e79ab06f$var$Listener.sourceSlots.push(sSlot);\n        }\n        if (!this.observers) {\n            this.observers = [\n                $82b01333e79ab06f$var$Listener\n            ];\n            this.observerSlots = [\n                $82b01333e79ab06f$var$Listener.sources.length - 1\n            ];\n        } else {\n            this.observers.push($82b01333e79ab06f$var$Listener);\n            this.observerSlots.push($82b01333e79ab06f$var$Listener.sources.length - 1);\n        }\n    }\n    if (runningTransition && $82b01333e79ab06f$var$Transition.sources.has(this)) return this.tValue;\n    return this.value;\n}\nfunction $82b01333e79ab06f$var$writeSignal(node, value, isComp) {\n    let current = $82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running && $82b01333e79ab06f$var$Transition.sources.has(node) ? node.tValue : node.value;\n    if (!node.comparator || !node.comparator(current, value)) {\n        if ($82b01333e79ab06f$var$Transition) {\n            const TransitionRunning = $82b01333e79ab06f$var$Transition.running;\n            if (TransitionRunning || !isComp && $82b01333e79ab06f$var$Transition.sources.has(node)) {\n                $82b01333e79ab06f$var$Transition.sources.add(node);\n                node.tValue = value;\n            }\n            if (!TransitionRunning) node.value = value;\n        } else node.value = value;\n        if (node.observers && node.observers.length) $82b01333e79ab06f$var$runUpdates(()=>{\n            for(let i = 0; i < node.observers.length; i += 1){\n                const o = node.observers[i];\n                const TransitionRunning = $82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running;\n                if (TransitionRunning && $82b01333e79ab06f$var$Transition.disposed.has(o)) continue;\n                if (TransitionRunning && !o.tState || !TransitionRunning && !o.state) {\n                    if (o.pure) $82b01333e79ab06f$var$Updates.push(o);\n                    else $82b01333e79ab06f$var$Effects.push(o);\n                    if (o.observers) $82b01333e79ab06f$var$markDownstream(o);\n                }\n                if (TransitionRunning) o.tState = $82b01333e79ab06f$var$STALE;\n                else o.state = $82b01333e79ab06f$var$STALE;\n            }\n            if ($82b01333e79ab06f$var$Updates.length > 10e5) {\n                $82b01333e79ab06f$var$Updates = [];\n                throw new Error();\n            }\n        }, false);\n    }\n    return value;\n}\nfunction $82b01333e79ab06f$var$updateComputation(node) {\n    if (!node.fn) return;\n    $82b01333e79ab06f$var$cleanNode(node);\n    const owner = $82b01333e79ab06f$var$Owner, listener = $82b01333e79ab06f$var$Listener, time = $82b01333e79ab06f$var$ExecCount;\n    $82b01333e79ab06f$var$Listener = $82b01333e79ab06f$var$Owner = node;\n    $82b01333e79ab06f$var$runComputation(node, $82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running && $82b01333e79ab06f$var$Transition.sources.has(node) ? node.tValue : node.value, time);\n    if ($82b01333e79ab06f$var$Transition && !$82b01333e79ab06f$var$Transition.running && $82b01333e79ab06f$var$Transition.sources.has(node)) queueMicrotask(()=>{\n        $82b01333e79ab06f$var$runUpdates(()=>{\n            $82b01333e79ab06f$var$Transition && ($82b01333e79ab06f$var$Transition.running = true);\n            $82b01333e79ab06f$var$Listener = $82b01333e79ab06f$var$Owner = node;\n            $82b01333e79ab06f$var$runComputation(node, node.tValue, time);\n            $82b01333e79ab06f$var$Listener = $82b01333e79ab06f$var$Owner = null;\n        }, false);\n    });\n    $82b01333e79ab06f$var$Listener = listener;\n    $82b01333e79ab06f$var$Owner = owner;\n}\nfunction $82b01333e79ab06f$var$runComputation(node, value, time) {\n    let nextValue;\n    try {\n        nextValue = node.fn(value);\n    } catch (err) {\n        if (node.pure) $82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running ? node.tState = $82b01333e79ab06f$var$STALE : node.state = $82b01333e79ab06f$var$STALE;\n        $82b01333e79ab06f$var$handleError(err);\n    }\n    if (!node.updatedAt || node.updatedAt <= time) {\n        if (node.updatedAt != null && \"observers\" in node) $82b01333e79ab06f$var$writeSignal(node, nextValue, true);\n        else if ($82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running && node.pure) {\n            $82b01333e79ab06f$var$Transition.sources.add(node);\n            node.tValue = nextValue;\n        } else node.value = nextValue;\n        node.updatedAt = time;\n    }\n}\nfunction $82b01333e79ab06f$var$createComputation(fn, init, pure, state = $82b01333e79ab06f$var$STALE, options) {\n    const c = {\n        fn: fn,\n        state: state,\n        updatedAt: null,\n        owned: null,\n        sources: null,\n        sourceSlots: null,\n        cleanups: null,\n        value: init,\n        owner: $82b01333e79ab06f$var$Owner,\n        context: null,\n        pure: pure\n    };\n    if ($82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running) {\n        c.state = 0;\n        c.tState = state;\n    }\n    if ($82b01333e79ab06f$var$Owner === null) ;\n    else if ($82b01333e79ab06f$var$Owner !== $82b01333e79ab06f$var$UNOWNED) {\n        if ($82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running && $82b01333e79ab06f$var$Owner.pure) {\n            if (!$82b01333e79ab06f$var$Owner.tOwned) $82b01333e79ab06f$var$Owner.tOwned = [\n                c\n            ];\n            else $82b01333e79ab06f$var$Owner.tOwned.push(c);\n        } else if (!$82b01333e79ab06f$var$Owner.owned) $82b01333e79ab06f$var$Owner.owned = [\n            c\n        ];\n        else $82b01333e79ab06f$var$Owner.owned.push(c);\n    }\n    if ($82b01333e79ab06f$var$ExternalSourceFactory) {\n        const [track, trigger] = $82b01333e79ab06f$export$c1e1e1ecbbe76a5(undefined, {\n            equals: false\n        });\n        const ordinary = $82b01333e79ab06f$var$ExternalSourceFactory(c.fn, trigger);\n        $82b01333e79ab06f$export$b36e5eaa3e8c43ab(()=>ordinary.dispose());\n        const triggerInTransition = ()=>$82b01333e79ab06f$export$7568632d0d33d16d(trigger).then(()=>inTransition.dispose());\n        const inTransition = $82b01333e79ab06f$var$ExternalSourceFactory(c.fn, triggerInTransition);\n        c.fn = (x)=>{\n            track();\n            return $82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running ? inTransition.track(x) : ordinary.track(x);\n        };\n    }\n    return c;\n}\nfunction $82b01333e79ab06f$var$runTop(node) {\n    const runningTransition = $82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running;\n    if (!runningTransition && node.state === 0 || runningTransition && node.tState === 0) return;\n    if (!runningTransition && node.state === $82b01333e79ab06f$var$PENDING || runningTransition && node.tState === $82b01333e79ab06f$var$PENDING) return $82b01333e79ab06f$var$lookUpstream(node);\n    if (node.suspense && $82b01333e79ab06f$export$363ebc4b78b8f807(node.suspense.inFallback)) return node.suspense.effects.push(node);\n    const ancestors = [\n        node\n    ];\n    while((node = node.owner) && (!node.updatedAt || node.updatedAt < $82b01333e79ab06f$var$ExecCount)){\n        if (runningTransition && $82b01333e79ab06f$var$Transition.disposed.has(node)) return;\n        if (!runningTransition && node.state || runningTransition && node.tState) ancestors.push(node);\n    }\n    for(let i = ancestors.length - 1; i >= 0; i--){\n        node = ancestors[i];\n        if (runningTransition) {\n            let top = node, prev = ancestors[i + 1];\n            while((top = top.owner) && top !== prev){\n                if ($82b01333e79ab06f$var$Transition.disposed.has(top)) return;\n            }\n        }\n        if (!runningTransition && node.state === $82b01333e79ab06f$var$STALE || runningTransition && node.tState === $82b01333e79ab06f$var$STALE) $82b01333e79ab06f$var$updateComputation(node);\n        else if (!runningTransition && node.state === $82b01333e79ab06f$var$PENDING || runningTransition && node.tState === $82b01333e79ab06f$var$PENDING) {\n            const updates = $82b01333e79ab06f$var$Updates;\n            $82b01333e79ab06f$var$Updates = null;\n            $82b01333e79ab06f$var$runUpdates(()=>$82b01333e79ab06f$var$lookUpstream(node, ancestors[0]), false);\n            $82b01333e79ab06f$var$Updates = updates;\n        }\n    }\n}\nfunction $82b01333e79ab06f$var$runUpdates(fn, init) {\n    if ($82b01333e79ab06f$var$Updates) return fn();\n    let wait = false;\n    if (!init) $82b01333e79ab06f$var$Updates = [];\n    if ($82b01333e79ab06f$var$Effects) wait = true;\n    else $82b01333e79ab06f$var$Effects = [];\n    $82b01333e79ab06f$var$ExecCount++;\n    try {\n        const res = fn();\n        $82b01333e79ab06f$var$completeUpdates(wait);\n        return res;\n    } catch (err) {\n        if (!$82b01333e79ab06f$var$Updates) $82b01333e79ab06f$var$Effects = null;\n        $82b01333e79ab06f$var$handleError(err);\n    }\n}\nfunction $82b01333e79ab06f$var$completeUpdates(wait) {\n    if ($82b01333e79ab06f$var$Updates) {\n        if ($82b01333e79ab06f$var$Scheduler && $82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running) $82b01333e79ab06f$var$scheduleQueue($82b01333e79ab06f$var$Updates);\n        else $82b01333e79ab06f$var$runQueue($82b01333e79ab06f$var$Updates);\n        $82b01333e79ab06f$var$Updates = null;\n    }\n    if (wait) return;\n    let res;\n    if ($82b01333e79ab06f$var$Transition) {\n        if (!$82b01333e79ab06f$var$Transition.promises.size && !$82b01333e79ab06f$var$Transition.queue.size) {\n            const sources = $82b01333e79ab06f$var$Transition.sources;\n            const disposed = $82b01333e79ab06f$var$Transition.disposed;\n            $82b01333e79ab06f$var$Effects.push.apply($82b01333e79ab06f$var$Effects, $82b01333e79ab06f$var$Transition.effects);\n            res = $82b01333e79ab06f$var$Transition.resolve;\n            for (const e of $82b01333e79ab06f$var$Effects){\n                \"tState\" in e && (e.state = e.tState);\n                delete e.tState;\n            }\n            $82b01333e79ab06f$var$Transition = null;\n            $82b01333e79ab06f$var$runUpdates(()=>{\n                for (const d of disposed)$82b01333e79ab06f$var$cleanNode(d);\n                for (const v of sources){\n                    v.value = v.tValue;\n                    if (v.owned) for(let i = 0, len = v.owned.length; i < len; i++)$82b01333e79ab06f$var$cleanNode(v.owned[i]);\n                    if (v.tOwned) v.owned = v.tOwned;\n                    delete v.tValue;\n                    delete v.tOwned;\n                    v.tState = 0;\n                }\n                $82b01333e79ab06f$var$setTransPending(false);\n            }, false);\n        } else if ($82b01333e79ab06f$var$Transition.running) {\n            $82b01333e79ab06f$var$Transition.running = false;\n            $82b01333e79ab06f$var$Transition.effects.push.apply($82b01333e79ab06f$var$Transition.effects, $82b01333e79ab06f$var$Effects);\n            $82b01333e79ab06f$var$Effects = null;\n            $82b01333e79ab06f$var$setTransPending(true);\n            return;\n        }\n    }\n    const e = $82b01333e79ab06f$var$Effects;\n    $82b01333e79ab06f$var$Effects = null;\n    if (e.length) $82b01333e79ab06f$var$runUpdates(()=>$82b01333e79ab06f$var$runEffects(e), false);\n    if (res) res();\n}\nfunction $82b01333e79ab06f$var$runQueue(queue) {\n    for(let i = 0; i < queue.length; i++)$82b01333e79ab06f$var$runTop(queue[i]);\n}\nfunction $82b01333e79ab06f$var$scheduleQueue(queue) {\n    for(let i = 0; i < queue.length; i++){\n        const item = queue[i];\n        const tasks = $82b01333e79ab06f$var$Transition.queue;\n        if (!tasks.has(item)) {\n            tasks.add(item);\n            $82b01333e79ab06f$var$Scheduler(()=>{\n                tasks.delete(item);\n                $82b01333e79ab06f$var$runUpdates(()=>{\n                    $82b01333e79ab06f$var$Transition.running = true;\n                    $82b01333e79ab06f$var$runTop(item);\n                }, false);\n                $82b01333e79ab06f$var$Transition && ($82b01333e79ab06f$var$Transition.running = false);\n            });\n        }\n    }\n}\nfunction $82b01333e79ab06f$var$runUserEffects(queue) {\n    let i, userLength = 0;\n    for(i = 0; i < queue.length; i++){\n        const e = queue[i];\n        if (!e.user) $82b01333e79ab06f$var$runTop(e);\n        else queue[userLength++] = e;\n    }\n    if ($82b01333e79ab06f$export$2cb4986bed338027.context) $82b01333e79ab06f$var$setHydrateContext();\n    for(i = 0; i < userLength; i++)$82b01333e79ab06f$var$runTop(queue[i]);\n}\nfunction $82b01333e79ab06f$var$lookUpstream(node, ignore) {\n    const runningTransition = $82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running;\n    if (runningTransition) node.tState = 0;\n    else node.state = 0;\n    for(let i = 0; i < node.sources.length; i += 1){\n        const source = node.sources[i];\n        if (source.sources) {\n            if (!runningTransition && source.state === $82b01333e79ab06f$var$STALE || runningTransition && source.tState === $82b01333e79ab06f$var$STALE) {\n                if (source !== ignore) $82b01333e79ab06f$var$runTop(source);\n            } else if (!runningTransition && source.state === $82b01333e79ab06f$var$PENDING || runningTransition && source.tState === $82b01333e79ab06f$var$PENDING) $82b01333e79ab06f$var$lookUpstream(source, ignore);\n        }\n    }\n}\nfunction $82b01333e79ab06f$var$markDownstream(node) {\n    const runningTransition = $82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running;\n    for(let i = 0; i < node.observers.length; i += 1){\n        const o = node.observers[i];\n        if (!runningTransition && !o.state || runningTransition && !o.tState) {\n            if (runningTransition) o.tState = $82b01333e79ab06f$var$PENDING;\n            else o.state = $82b01333e79ab06f$var$PENDING;\n            if (o.pure) $82b01333e79ab06f$var$Updates.push(o);\n            else $82b01333e79ab06f$var$Effects.push(o);\n            o.observers && $82b01333e79ab06f$var$markDownstream(o);\n        }\n    }\n}\nfunction $82b01333e79ab06f$var$cleanNode(node) {\n    let i;\n    if (node.sources) while(node.sources.length){\n        const source = node.sources.pop(), index = node.sourceSlots.pop(), obs = source.observers;\n        if (obs && obs.length) {\n            const n = obs.pop(), s = source.observerSlots.pop();\n            if (index < obs.length) {\n                n.sourceSlots[s] = index;\n                obs[index] = n;\n                source.observerSlots[index] = s;\n            }\n        }\n    }\n    if ($82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running && node.pure) {\n        if (node.tOwned) {\n            for(i = 0; i < node.tOwned.length; i++)$82b01333e79ab06f$var$cleanNode(node.tOwned[i]);\n            delete node.tOwned;\n        }\n        $82b01333e79ab06f$var$reset(node, true);\n    } else if (node.owned) {\n        for(i = 0; i < node.owned.length; i++)$82b01333e79ab06f$var$cleanNode(node.owned[i]);\n        node.owned = null;\n    }\n    if (node.cleanups) {\n        for(i = 0; i < node.cleanups.length; i++)node.cleanups[i]();\n        node.cleanups = null;\n    }\n    if ($82b01333e79ab06f$var$Transition && $82b01333e79ab06f$var$Transition.running) node.tState = 0;\n    else node.state = 0;\n    node.context = null;\n}\nfunction $82b01333e79ab06f$var$reset(node, top) {\n    if (!top) {\n        node.tState = 0;\n        $82b01333e79ab06f$var$Transition.disposed.add(node);\n    }\n    if (node.owned) for(let i = 0; i < node.owned.length; i++)$82b01333e79ab06f$var$reset(node.owned[i]);\n}\nfunction $82b01333e79ab06f$var$castError(err) {\n    if (err instanceof Error || typeof err === \"string\") return err;\n    return new Error(\"Unknown error\");\n}\nfunction $82b01333e79ab06f$var$handleError(err) {\n    err = $82b01333e79ab06f$var$castError(err);\n    const fns = $82b01333e79ab06f$var$ERROR && $82b01333e79ab06f$var$lookup($82b01333e79ab06f$var$Owner, $82b01333e79ab06f$var$ERROR);\n    if (!fns) throw err;\n    for (const f of fns)f(err);\n}\nfunction $82b01333e79ab06f$var$lookup(owner, key) {\n    return owner ? owner.context && owner.context[key] !== undefined ? owner.context[key] : $82b01333e79ab06f$var$lookup(owner.owner, key) : undefined;\n}\nfunction $82b01333e79ab06f$var$resolveChildren(children) {\n    if (typeof children === \"function\" && !children.length) return $82b01333e79ab06f$var$resolveChildren(children());\n    if (Array.isArray(children)) {\n        const results = [];\n        for(let i = 0; i < children.length; i++){\n            const result = $82b01333e79ab06f$var$resolveChildren(children[i]);\n            Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n        }\n        return results;\n    }\n    return children;\n}\nfunction $82b01333e79ab06f$var$createProvider(id, options) {\n    return function provider(props) {\n        let res;\n        $82b01333e79ab06f$export$314dade334ae905d(()=>res = $82b01333e79ab06f$export$363ebc4b78b8f807(()=>{\n                $82b01333e79ab06f$var$Owner.context = {\n                    [id]: props.value\n                };\n                return $82b01333e79ab06f$export$bacb5cc5a11aef16(()=>props.children);\n            }), undefined);\n        return res;\n    };\n}\nfunction $82b01333e79ab06f$export$5ab46cbf6120b33a(input) {\n    return {\n        subscribe (observer) {\n            if (!(observer instanceof Object) || observer == null) throw new TypeError(\"Expected the observer to be an object.\");\n            const handler = typeof observer === \"function\" ? observer : observer.next && observer.next.bind(observer);\n            if (!handler) return {\n                unsubscribe () {}\n            };\n            const dispose = $82b01333e79ab06f$export$882461b6382ed46c((disposer)=>{\n                $82b01333e79ab06f$export$7ea7134f704deda4(()=>{\n                    const v = input();\n                    $82b01333e79ab06f$export$363ebc4b78b8f807(()=>handler(v));\n                });\n                return disposer;\n            });\n            if ($82b01333e79ab06f$export$5f4ed0d56c2c0edf()) $82b01333e79ab06f$export$b36e5eaa3e8c43ab(dispose);\n            return {\n                unsubscribe () {\n                    dispose();\n                }\n            };\n        },\n        [Symbol.observable || \"@@observable\"] () {\n            return this;\n        }\n    };\n}\nfunction $82b01333e79ab06f$export$6788812c4e6611e6(producer) {\n    const [s, set] = $82b01333e79ab06f$export$c1e1e1ecbbe76a5(undefined, {\n        equals: false\n    });\n    if (\"subscribe\" in producer) {\n        const unsub = producer.subscribe((v)=>set(()=>v));\n        $82b01333e79ab06f$export$b36e5eaa3e8c43ab(()=>\"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub());\n    } else {\n        const clean = producer(set);\n        $82b01333e79ab06f$export$b36e5eaa3e8c43ab(clean);\n    }\n    return s;\n}\nconst $82b01333e79ab06f$var$FALLBACK = Symbol(\"fallback\");\nfunction $82b01333e79ab06f$var$dispose(d) {\n    for(let i = 0; i < d.length; i++)d[i]();\n}\nfunction $82b01333e79ab06f$export$4c9116dcf1374231(list, mapFn, options = {}) {\n    let items = [], mapped = [], disposers = [], len = 0, indexes = mapFn.length > 1 ? [] : null;\n    $82b01333e79ab06f$export$b36e5eaa3e8c43ab(()=>$82b01333e79ab06f$var$dispose(disposers));\n    return ()=>{\n        let newItems = list() || [], i, j;\n        newItems[$82b01333e79ab06f$export$17a675b7c02a7b1d];\n        return $82b01333e79ab06f$export$363ebc4b78b8f807(()=>{\n            let newLen = newItems.length, newIndices, newIndicesNext, temp, tempdisposers, tempIndexes, start, end, newEnd, item;\n            if (newLen === 0) {\n                if (len !== 0) {\n                    $82b01333e79ab06f$var$dispose(disposers);\n                    disposers = [];\n                    items = [];\n                    mapped = [];\n                    len = 0;\n                    indexes && (indexes = []);\n                }\n                if (options.fallback) {\n                    items = [\n                        $82b01333e79ab06f$var$FALLBACK\n                    ];\n                    mapped[0] = $82b01333e79ab06f$export$882461b6382ed46c((disposer)=>{\n                        disposers[0] = disposer;\n                        return options.fallback();\n                    });\n                    len = 1;\n                }\n            } else if (len === 0) {\n                mapped = new Array(newLen);\n                for(j = 0; j < newLen; j++){\n                    items[j] = newItems[j];\n                    mapped[j] = $82b01333e79ab06f$export$882461b6382ed46c(mapper);\n                }\n                len = newLen;\n            } else {\n                temp = new Array(newLen);\n                tempdisposers = new Array(newLen);\n                indexes && (tempIndexes = new Array(newLen));\n                for(start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n                for(end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--){\n                    temp[newEnd] = mapped[end];\n                    tempdisposers[newEnd] = disposers[end];\n                    indexes && (tempIndexes[newEnd] = indexes[end]);\n                }\n                newIndices = new Map();\n                newIndicesNext = new Array(newEnd + 1);\n                for(j = newEnd; j >= start; j--){\n                    item = newItems[j];\n                    i = newIndices.get(item);\n                    newIndicesNext[j] = i === undefined ? -1 : i;\n                    newIndices.set(item, j);\n                }\n                for(i = start; i <= end; i++){\n                    item = items[i];\n                    j = newIndices.get(item);\n                    if (j !== undefined && j !== -1) {\n                        temp[j] = mapped[i];\n                        tempdisposers[j] = disposers[i];\n                        indexes && (tempIndexes[j] = indexes[i]);\n                        j = newIndicesNext[j];\n                        newIndices.set(item, j);\n                    } else disposers[i]();\n                }\n                for(j = start; j < newLen; j++)if (j in temp) {\n                    mapped[j] = temp[j];\n                    disposers[j] = tempdisposers[j];\n                    if (indexes) {\n                        indexes[j] = tempIndexes[j];\n                        indexes[j](j);\n                    }\n                } else mapped[j] = $82b01333e79ab06f$export$882461b6382ed46c(mapper);\n                mapped = mapped.slice(0, len = newLen);\n                items = newItems.slice(0);\n            }\n            return mapped;\n        });\n        function mapper(disposer) {\n            disposers[j] = disposer;\n            if (indexes) {\n                const [s, set] = $82b01333e79ab06f$export$c1e1e1ecbbe76a5(j);\n                indexes[j] = set;\n                return mapFn(newItems[j], s);\n            }\n            return mapFn(newItems[j]);\n        }\n    };\n}\nfunction $82b01333e79ab06f$export$2cd1c249765cd0a4(list, mapFn, options = {}) {\n    let items = [], mapped = [], disposers = [], signals = [], len = 0, i;\n    $82b01333e79ab06f$export$b36e5eaa3e8c43ab(()=>$82b01333e79ab06f$var$dispose(disposers));\n    return ()=>{\n        const newItems = list() || [];\n        newItems[$82b01333e79ab06f$export$17a675b7c02a7b1d];\n        return $82b01333e79ab06f$export$363ebc4b78b8f807(()=>{\n            if (newItems.length === 0) {\n                if (len !== 0) {\n                    $82b01333e79ab06f$var$dispose(disposers);\n                    disposers = [];\n                    items = [];\n                    mapped = [];\n                    len = 0;\n                    signals = [];\n                }\n                if (options.fallback) {\n                    items = [\n                        $82b01333e79ab06f$var$FALLBACK\n                    ];\n                    mapped[0] = $82b01333e79ab06f$export$882461b6382ed46c((disposer)=>{\n                        disposers[0] = disposer;\n                        return options.fallback();\n                    });\n                    len = 1;\n                }\n                return mapped;\n            }\n            if (items[0] === $82b01333e79ab06f$var$FALLBACK) {\n                disposers[0]();\n                disposers = [];\n                items = [];\n                mapped = [];\n                len = 0;\n            }\n            for(i = 0; i < newItems.length; i++){\n                if (i < items.length && items[i] !== newItems[i]) signals[i](()=>newItems[i]);\n                else if (i >= items.length) mapped[i] = $82b01333e79ab06f$export$882461b6382ed46c(mapper);\n            }\n            for(; i < items.length; i++)disposers[i]();\n            len = signals.length = disposers.length = newItems.length;\n            items = newItems.slice(0);\n            return mapped = mapped.slice(0, len);\n        });\n        function mapper(disposer) {\n            disposers[i] = disposer;\n            const [s, set] = $82b01333e79ab06f$export$c1e1e1ecbbe76a5(newItems[i]);\n            signals[i] = set;\n            return mapFn(s, i);\n        }\n    };\n}\nlet $82b01333e79ab06f$var$hydrationEnabled = false;\nfunction $82b01333e79ab06f$export$849801d35d2160c9() {\n    $82b01333e79ab06f$var$hydrationEnabled = true;\n}\nfunction $82b01333e79ab06f$export$60e54eaca7e7fb38(Comp, props) {\n    if ($82b01333e79ab06f$var$hydrationEnabled) {\n        if ($82b01333e79ab06f$export$2cb4986bed338027.context) {\n            const c = $82b01333e79ab06f$export$2cb4986bed338027.context;\n            $82b01333e79ab06f$var$setHydrateContext($82b01333e79ab06f$var$nextHydrateContext());\n            const r = $82b01333e79ab06f$export$363ebc4b78b8f807(()=>Comp(props || {}));\n            $82b01333e79ab06f$var$setHydrateContext(c);\n            return r;\n        }\n    }\n    return $82b01333e79ab06f$export$363ebc4b78b8f807(()=>Comp(props || {}));\n}\nfunction $82b01333e79ab06f$var$trueFn() {\n    return true;\n}\nconst $82b01333e79ab06f$var$propTraps = {\n    get (_, property, receiver) {\n        if (property === $82b01333e79ab06f$export$5cd89106e2f6c2c5) return receiver;\n        return _.get(property);\n    },\n    has (_, property) {\n        return _.has(property);\n    },\n    set: $82b01333e79ab06f$var$trueFn,\n    deleteProperty: $82b01333e79ab06f$var$trueFn,\n    getOwnPropertyDescriptor (_, property) {\n        return {\n            configurable: true,\n            enumerable: true,\n            get () {\n                return _.get(property);\n            },\n            set: $82b01333e79ab06f$var$trueFn,\n            deleteProperty: $82b01333e79ab06f$var$trueFn\n        };\n    },\n    ownKeys (_) {\n        return _.keys();\n    }\n};\nfunction $82b01333e79ab06f$var$resolveSource(s) {\n    return !(s = typeof s === \"function\" ? s() : s) ? {} : s;\n}\nfunction $82b01333e79ab06f$export$9d1611c77c2fe928(...sources) {\n    if (sources.some((s)=>s && ($82b01333e79ab06f$export$5cd89106e2f6c2c5 in s || typeof s === \"function\"))) return new Proxy({\n        get (property) {\n            for(let i = sources.length - 1; i >= 0; i--){\n                const v = $82b01333e79ab06f$var$resolveSource(sources[i])[property];\n                if (v !== undefined) return v;\n            }\n        },\n        has (property) {\n            for(let i = sources.length - 1; i >= 0; i--){\n                if (property in $82b01333e79ab06f$var$resolveSource(sources[i])) return true;\n            }\n            return false;\n        },\n        keys () {\n            const keys = [];\n            for(let i = 0; i < sources.length; i++)keys.push(...Object.keys($82b01333e79ab06f$var$resolveSource(sources[i])));\n            return [\n                ...new Set(keys)\n            ];\n        }\n    }, $82b01333e79ab06f$var$propTraps);\n    const target = {};\n    for(let i = sources.length - 1; i >= 0; i--)if (sources[i]) {\n        const descriptors = Object.getOwnPropertyDescriptors(sources[i]);\n        for(const key in descriptors){\n            if (key in target) continue;\n            Object.defineProperty(target, key, {\n                enumerable: true,\n                get () {\n                    for(let i = sources.length - 1; i >= 0; i--){\n                        const v = (sources[i] || {})[key];\n                        if (v !== undefined) return v;\n                    }\n                }\n            });\n        }\n    }\n    return target;\n}\nfunction $82b01333e79ab06f$export$45029c61b0073d87(props, ...keys) {\n    const blocked = new Set(keys.flat());\n    const descriptors = Object.getOwnPropertyDescriptors(props);\n    const isProxy = $82b01333e79ab06f$export$5cd89106e2f6c2c5 in props;\n    if (!isProxy) keys.push(Object.keys(descriptors).filter((k)=>!blocked.has(k)));\n    const res = keys.map((k)=>{\n        const clone = {};\n        for(let i = 0; i < k.length; i++){\n            const key = k[i];\n            if (!isProxy && !(key in props)) continue;\n            Object.defineProperty(clone, key, descriptors[key] ? descriptors[key] : {\n                get () {\n                    return props[key];\n                },\n                set () {\n                    return true;\n                },\n                enumerable: true\n            });\n        }\n        return clone;\n    });\n    if (isProxy) res.push(new Proxy({\n        get (property) {\n            return blocked.has(property) ? undefined : props[property];\n        },\n        has (property) {\n            return blocked.has(property) ? false : property in props;\n        },\n        keys () {\n            return Object.keys(props).filter((k)=>!blocked.has(k));\n        }\n    }, $82b01333e79ab06f$var$propTraps));\n    return res;\n}\nfunction $82b01333e79ab06f$export$488013bae63b21da(fn) {\n    let comp;\n    let p;\n    const wrap = (props)=>{\n        const ctx = $82b01333e79ab06f$export$2cb4986bed338027.context;\n        if (ctx) {\n            const [s, set] = $82b01333e79ab06f$export$c1e1e1ecbbe76a5();\n            (p || (p = fn())).then((mod)=>{\n                $82b01333e79ab06f$var$setHydrateContext(ctx);\n                set(()=>mod.default);\n                $82b01333e79ab06f$var$setHydrateContext();\n            });\n            comp = s;\n        } else if (!comp) {\n            const [s] = $82b01333e79ab06f$export$edd172c6c83c39cc(()=>(p || (p = fn())).then((mod)=>mod.default));\n            comp = s;\n        } else {\n            const c = comp();\n            if (c) return c(props);\n        }\n        let Comp;\n        return $82b01333e79ab06f$export$c0c6c8b9c16bf6aa(()=>(Comp = comp()) && $82b01333e79ab06f$export$363ebc4b78b8f807(()=>{\n                if (!ctx) return Comp(props);\n                const c = $82b01333e79ab06f$export$2cb4986bed338027.context;\n                $82b01333e79ab06f$var$setHydrateContext(ctx);\n                const r = Comp(props);\n                $82b01333e79ab06f$var$setHydrateContext(c);\n                return r;\n            }));\n    };\n    wrap.preload = ()=>p || ((p = fn()).then((mod)=>comp = ()=>mod.default), p);\n    return wrap;\n}\nlet $82b01333e79ab06f$var$counter = 0;\nfunction $82b01333e79ab06f$export$33208d63bc845a83() {\n    const ctx = $82b01333e79ab06f$export$2cb4986bed338027.context;\n    return ctx ? `${ctx.id}${ctx.count++}` : `cl-${$82b01333e79ab06f$var$counter++}`;\n}\nfunction $82b01333e79ab06f$export$bdf530073099ce9f(props) {\n    const fallback = \"fallback\" in props && {\n        fallback: ()=>props.fallback\n    };\n    return $82b01333e79ab06f$export$c0c6c8b9c16bf6aa($82b01333e79ab06f$export$4c9116dcf1374231(()=>props.each, props.children, fallback || undefined));\n}\nfunction $82b01333e79ab06f$export$cf17b003b6192af3(props) {\n    const fallback = \"fallback\" in props && {\n        fallback: ()=>props.fallback\n    };\n    return $82b01333e79ab06f$export$c0c6c8b9c16bf6aa($82b01333e79ab06f$export$2cd1c249765cd0a4(()=>props.each, props.children, fallback || undefined));\n}\nfunction $82b01333e79ab06f$export$f6a3d19be20f5819(props) {\n    let strictEqual = false;\n    const keyed = props.keyed;\n    const condition = $82b01333e79ab06f$export$c0c6c8b9c16bf6aa(()=>props.when, undefined, {\n        equals: (a, b)=>strictEqual ? a === b : !a === !b\n    });\n    return $82b01333e79ab06f$export$c0c6c8b9c16bf6aa(()=>{\n        const c = condition();\n        if (c) {\n            const child = props.children;\n            const fn = typeof child === \"function\" && child.length > 0;\n            strictEqual = keyed || fn;\n            return fn ? $82b01333e79ab06f$export$363ebc4b78b8f807(()=>child(c)) : child;\n        }\n        return props.fallback;\n    }, undefined, undefined);\n}\nfunction $82b01333e79ab06f$export$b5d5cf8927ab7262(props) {\n    let strictEqual = false;\n    let keyed = false;\n    const equals = (a, b)=>a[0] === b[0] && (strictEqual ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2];\n    const conditions = $82b01333e79ab06f$export$bacb5cc5a11aef16(()=>props.children), evalConditions = $82b01333e79ab06f$export$c0c6c8b9c16bf6aa(()=>{\n        let conds = conditions();\n        if (!Array.isArray(conds)) conds = [\n            conds\n        ];\n        for(let i = 0; i < conds.length; i++){\n            const c = conds[i].when;\n            if (c) {\n                keyed = !!conds[i].keyed;\n                return [\n                    i,\n                    c,\n                    conds[i]\n                ];\n            }\n        }\n        return [\n            -1\n        ];\n    }, undefined, {\n        equals: equals\n    });\n    return $82b01333e79ab06f$export$c0c6c8b9c16bf6aa(()=>{\n        const [index, when, cond] = evalConditions();\n        if (index < 0) return props.fallback;\n        const c = cond.children;\n        const fn = typeof c === \"function\" && c.length > 0;\n        strictEqual = keyed || fn;\n        return fn ? $82b01333e79ab06f$export$363ebc4b78b8f807(()=>c(when)) : c;\n    }, undefined, undefined);\n}\nfunction $82b01333e79ab06f$export$f421feb8fad20413(props) {\n    return props;\n}\nlet $82b01333e79ab06f$var$Errors;\nfunction $82b01333e79ab06f$export$4eaee74ee7a14dca() {\n    $82b01333e79ab06f$var$Errors && [\n        ...$82b01333e79ab06f$var$Errors\n    ].forEach((fn)=>fn());\n}\nfunction $82b01333e79ab06f$export$e926676385687eaf(props) {\n    let err;\n    let v;\n    if ($82b01333e79ab06f$export$2cb4986bed338027.context && $82b01333e79ab06f$export$2cb4986bed338027.load && (v = $82b01333e79ab06f$export$2cb4986bed338027.load($82b01333e79ab06f$export$2cb4986bed338027.context.id + $82b01333e79ab06f$export$2cb4986bed338027.context.count))) err = v[0];\n    const [errored, setErrored] = $82b01333e79ab06f$export$c1e1e1ecbbe76a5(err, undefined);\n    $82b01333e79ab06f$var$Errors || ($82b01333e79ab06f$var$Errors = new Set());\n    $82b01333e79ab06f$var$Errors.add(setErrored);\n    $82b01333e79ab06f$export$b36e5eaa3e8c43ab(()=>$82b01333e79ab06f$var$Errors.delete(setErrored));\n    return $82b01333e79ab06f$export$c0c6c8b9c16bf6aa(()=>{\n        let e;\n        if (e = errored()) {\n            const f = props.fallback;\n            const res = typeof f === \"function\" && f.length ? $82b01333e79ab06f$export$363ebc4b78b8f807(()=>f(e, ()=>setErrored())) : f;\n            $82b01333e79ab06f$export$2288787135a8f66e(setErrored);\n            return res;\n        }\n        $82b01333e79ab06f$export$2288787135a8f66e(setErrored);\n        return props.children;\n    }, undefined, undefined);\n}\nconst $82b01333e79ab06f$var$suspenseListEquals = (a, b)=>a.showContent === b.showContent && a.showFallback === b.showFallback;\nconst $82b01333e79ab06f$var$SuspenseListContext = $82b01333e79ab06f$export$fd42f52fd3ae1109();\nfunction $82b01333e79ab06f$export$998bcd577473dd93(props) {\n    let [wrapper, setWrapper] = $82b01333e79ab06f$export$c1e1e1ecbbe76a5(()=>({\n            inFallback: false\n        })), show;\n    const listContext = $82b01333e79ab06f$export$fae74005e78b1a27($82b01333e79ab06f$var$SuspenseListContext);\n    const [registry, setRegistry] = $82b01333e79ab06f$export$c1e1e1ecbbe76a5([]);\n    if (listContext) show = listContext.register($82b01333e79ab06f$export$c0c6c8b9c16bf6aa(()=>wrapper()().inFallback));\n    const resolved = $82b01333e79ab06f$export$c0c6c8b9c16bf6aa((prev)=>{\n        const reveal = props.revealOrder, tail = props.tail, { showContent: showContent = true , showFallback: showFallback = true  } = show ? show() : {}, reg = registry(), reverse = reveal === \"backwards\";\n        if (reveal === \"together\") {\n            const all = reg.every((inFallback)=>!inFallback());\n            const res = reg.map(()=>({\n                    showContent: all && showContent,\n                    showFallback: showFallback\n                }));\n            res.inFallback = !all;\n            return res;\n        }\n        let stop = false;\n        let inFallback = prev.inFallback;\n        const res = [];\n        for(let i = 0, len = reg.length; i < len; i++){\n            const n = reverse ? len - i - 1 : i, s = reg[n]();\n            if (!stop && !s) res[n] = {\n                showContent: showContent,\n                showFallback: showFallback\n            };\n            else {\n                const next = !stop;\n                if (next) inFallback = true;\n                res[n] = {\n                    showContent: next,\n                    showFallback: !tail || next && tail === \"collapsed\" ? showFallback : false\n                };\n                stop = true;\n            }\n        }\n        if (!stop) inFallback = false;\n        res.inFallback = inFallback;\n        return res;\n    }, {\n        inFallback: false\n    });\n    setWrapper(()=>resolved);\n    return $82b01333e79ab06f$export$60e54eaca7e7fb38($82b01333e79ab06f$var$SuspenseListContext.Provider, {\n        value: {\n            register: (inFallback)=>{\n                let index;\n                setRegistry((registry)=>{\n                    index = registry.length;\n                    return [\n                        ...registry,\n                        inFallback\n                    ];\n                });\n                return $82b01333e79ab06f$export$c0c6c8b9c16bf6aa(()=>resolved()[index], undefined, {\n                    equals: $82b01333e79ab06f$var$suspenseListEquals\n                });\n            }\n        },\n        get children () {\n            return props.children;\n        }\n    });\n}\nfunction $82b01333e79ab06f$export$74bf444e3cd11ea5(props) {\n    let counter = 0, show, ctx, p, flicker, error;\n    const [inFallback, setFallback] = $82b01333e79ab06f$export$c1e1e1ecbbe76a5(false), SuspenseContext = $82b01333e79ab06f$var$getSuspenseContext(), store = {\n        increment: ()=>{\n            if (++counter === 1) setFallback(true);\n        },\n        decrement: ()=>{\n            if (--counter === 0) setFallback(false);\n        },\n        inFallback: inFallback,\n        effects: [],\n        resolved: false\n    }, owner = $82b01333e79ab06f$export$5f4ed0d56c2c0edf();\n    if ($82b01333e79ab06f$export$2cb4986bed338027.context && $82b01333e79ab06f$export$2cb4986bed338027.load) {\n        const key = $82b01333e79ab06f$export$2cb4986bed338027.context.id + $82b01333e79ab06f$export$2cb4986bed338027.context.count;\n        let ref = $82b01333e79ab06f$export$2cb4986bed338027.load(key);\n        if (ref && (p = ref[0]) && p !== \"$$f\") {\n            if (typeof p !== \"object\" || !(\"then\" in p)) p = Promise.resolve(p);\n            const [s, set] = $82b01333e79ab06f$export$c1e1e1ecbbe76a5(undefined, {\n                equals: false\n            });\n            flicker = s;\n            p.then((err)=>{\n                if (err || $82b01333e79ab06f$export$2cb4986bed338027.done) {\n                    err && (error = err);\n                    return set();\n                }\n                $82b01333e79ab06f$export$2cb4986bed338027.gather(key);\n                $82b01333e79ab06f$var$setHydrateContext(ctx);\n                set();\n                $82b01333e79ab06f$var$setHydrateContext();\n            });\n        }\n    }\n    const listContext = $82b01333e79ab06f$export$fae74005e78b1a27($82b01333e79ab06f$var$SuspenseListContext);\n    if (listContext) show = listContext.register(store.inFallback);\n    let dispose;\n    $82b01333e79ab06f$export$b36e5eaa3e8c43ab(()=>dispose && dispose());\n    return $82b01333e79ab06f$export$60e54eaca7e7fb38(SuspenseContext.Provider, {\n        value: store,\n        get children () {\n            return $82b01333e79ab06f$export$c0c6c8b9c16bf6aa(()=>{\n                if (error) throw error;\n                ctx = $82b01333e79ab06f$export$2cb4986bed338027.context;\n                if (flicker) {\n                    flicker();\n                    return flicker = undefined;\n                }\n                if (ctx && p === \"$$f\") $82b01333e79ab06f$var$setHydrateContext();\n                const rendered = $82b01333e79ab06f$export$c0c6c8b9c16bf6aa(()=>props.children);\n                return $82b01333e79ab06f$export$c0c6c8b9c16bf6aa((prev)=>{\n                    const inFallback = store.inFallback(), { showContent: showContent = true , showFallback: showFallback = true  } = show ? show() : {};\n                    if ((!inFallback || p && p !== \"$$f\") && showContent) {\n                        store.resolved = true;\n                        dispose && dispose();\n                        dispose = ctx = p = undefined;\n                        $82b01333e79ab06f$var$resumeEffects(store.effects);\n                        return rendered();\n                    }\n                    if (!showFallback) return;\n                    if (dispose) return prev;\n                    return $82b01333e79ab06f$export$882461b6382ed46c((disposer)=>{\n                        dispose = disposer;\n                        if (ctx) {\n                            $82b01333e79ab06f$var$setHydrateContext({\n                                id: ctx.id + \"f\",\n                                count: 0\n                            });\n                            ctx = undefined;\n                        }\n                        return props.fallback;\n                    }, owner);\n                });\n            });\n        }\n    });\n}\nlet $82b01333e79ab06f$export$404582bc18fe4d9e;\n\n\nconst $478712cee1e6b565$var$booleans = [\n    \"allowfullscreen\",\n    \"async\",\n    \"autofocus\",\n    \"autoplay\",\n    \"checked\",\n    \"controls\",\n    \"default\",\n    \"disabled\",\n    \"formnovalidate\",\n    \"hidden\",\n    \"indeterminate\",\n    \"ismap\",\n    \"loop\",\n    \"multiple\",\n    \"muted\",\n    \"nomodule\",\n    \"novalidate\",\n    \"open\",\n    \"playsinline\",\n    \"readonly\",\n    \"required\",\n    \"reversed\",\n    \"seamless\",\n    \"selected\"\n];\nconst $478712cee1e6b565$export$8714badcfa4caafb = /*#__PURE__*/ new Set([\n    \"className\",\n    \"value\",\n    \"readOnly\",\n    \"formNoValidate\",\n    \"isMap\",\n    \"noModule\",\n    \"playsInline\",\n    ...$478712cee1e6b565$var$booleans\n]);\nconst $478712cee1e6b565$export$2c72a9edec54d5d9 = /*#__PURE__*/ new Set([\n    \"innerHTML\",\n    \"textContent\",\n    \"innerText\",\n    \"children\"\n]);\nconst $478712cee1e6b565$export$8915b7db7f70cfed = /*#__PURE__*/ Object.assign(Object.create(null), {\n    className: \"class\",\n    htmlFor: \"for\"\n});\nconst $478712cee1e6b565$export$6e5cb8d2bac52b29 = /*#__PURE__*/ Object.assign(Object.create(null), {\n    class: \"className\",\n    formnovalidate: \"formNoValidate\",\n    ismap: \"isMap\",\n    nomodule: \"noModule\",\n    playsinline: \"playsInline\",\n    readonly: \"readOnly\"\n});\nconst $478712cee1e6b565$export$389d7c657d123a81 = /*#__PURE__*/ new Set([\n    \"beforeinput\",\n    \"click\",\n    \"dblclick\",\n    \"contextmenu\",\n    \"focusin\",\n    \"focusout\",\n    \"input\",\n    \"keydown\",\n    \"keyup\",\n    \"mousedown\",\n    \"mousemove\",\n    \"mouseout\",\n    \"mouseover\",\n    \"mouseup\",\n    \"pointerdown\",\n    \"pointermove\",\n    \"pointerout\",\n    \"pointerover\",\n    \"pointerup\",\n    \"touchend\",\n    \"touchmove\",\n    \"touchstart\"\n]);\nconst $478712cee1e6b565$export$ccaf9b9a82de4b98 = /*#__PURE__*/ new Set([\n    \"altGlyph\",\n    \"altGlyphDef\",\n    \"altGlyphItem\",\n    \"animate\",\n    \"animateColor\",\n    \"animateMotion\",\n    \"animateTransform\",\n    \"circle\",\n    \"clipPath\",\n    \"color-profile\",\n    \"cursor\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feDistantLight\",\n    \"feFlood\",\n    \"feFuncA\",\n    \"feFuncB\",\n    \"feFuncG\",\n    \"feFuncR\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMergeNode\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"fePointLight\",\n    \"feSpecularLighting\",\n    \"feSpotLight\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"filter\",\n    \"font\",\n    \"font-face\",\n    \"font-face-format\",\n    \"font-face-name\",\n    \"font-face-src\",\n    \"font-face-uri\",\n    \"foreignObject\",\n    \"g\",\n    \"glyph\",\n    \"glyphRef\",\n    \"hkern\",\n    \"image\",\n    \"line\",\n    \"linearGradient\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"missing-glyph\",\n    \"mpath\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"radialGradient\",\n    \"rect\",\n    \"set\",\n    \"stop\",\n    \"svg\",\n    \"switch\",\n    \"symbol\",\n    \"text\",\n    \"textPath\",\n    \"tref\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n    \"vkern\"\n]);\nconst $478712cee1e6b565$export$fa927d1d0495a67d = {\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nconst $478712cee1e6b565$export$87d0e790667228e9 = /*#__PURE__*/ new Set([\n    \"html\",\n    \"base\",\n    \"head\",\n    \"link\",\n    \"meta\",\n    \"style\",\n    \"title\",\n    \"body\",\n    \"address\",\n    \"article\",\n    \"aside\",\n    \"footer\",\n    \"header\",\n    \"main\",\n    \"nav\",\n    \"section\",\n    \"body\",\n    \"blockquote\",\n    \"dd\",\n    \"div\",\n    \"dl\",\n    \"dt\",\n    \"figcaption\",\n    \"figure\",\n    \"hr\",\n    \"li\",\n    \"ol\",\n    \"p\",\n    \"pre\",\n    \"ul\",\n    \"a\",\n    \"abbr\",\n    \"b\",\n    \"bdi\",\n    \"bdo\",\n    \"br\",\n    \"cite\",\n    \"code\",\n    \"data\",\n    \"dfn\",\n    \"em\",\n    \"i\",\n    \"kbd\",\n    \"mark\",\n    \"q\",\n    \"rp\",\n    \"rt\",\n    \"ruby\",\n    \"s\",\n    \"samp\",\n    \"small\",\n    \"span\",\n    \"strong\",\n    \"sub\",\n    \"sup\",\n    \"time\",\n    \"u\",\n    \"var\",\n    \"wbr\",\n    \"area\",\n    \"audio\",\n    \"img\",\n    \"map\",\n    \"track\",\n    \"video\",\n    \"embed\",\n    \"iframe\",\n    \"object\",\n    \"param\",\n    \"picture\",\n    \"portal\",\n    \"source\",\n    \"svg\",\n    \"math\",\n    \"canvas\",\n    \"noscript\",\n    \"script\",\n    \"del\",\n    \"ins\",\n    \"caption\",\n    \"col\",\n    \"colgroup\",\n    \"table\",\n    \"tbody\",\n    \"td\",\n    \"tfoot\",\n    \"th\",\n    \"thead\",\n    \"tr\",\n    \"button\",\n    \"datalist\",\n    \"fieldset\",\n    \"form\",\n    \"input\",\n    \"label\",\n    \"legend\",\n    \"meter\",\n    \"optgroup\",\n    \"option\",\n    \"output\",\n    \"progress\",\n    \"select\",\n    \"textarea\",\n    \"details\",\n    \"dialog\",\n    \"menu\",\n    \"summary\",\n    \"details\",\n    \"slot\",\n    \"template\",\n    \"acronym\",\n    \"applet\",\n    \"basefont\",\n    \"bgsound\",\n    \"big\",\n    \"blink\",\n    \"center\",\n    \"content\",\n    \"dir\",\n    \"font\",\n    \"frame\",\n    \"frameset\",\n    \"hgroup\",\n    \"image\",\n    \"keygen\",\n    \"marquee\",\n    \"menuitem\",\n    \"nobr\",\n    \"noembed\",\n    \"noframes\",\n    \"plaintext\",\n    \"rb\",\n    \"rtc\",\n    \"shadow\",\n    \"spacer\",\n    \"strike\",\n    \"tt\",\n    \"xmp\",\n    \"a\",\n    \"abbr\",\n    \"acronym\",\n    \"address\",\n    \"applet\",\n    \"area\",\n    \"article\",\n    \"aside\",\n    \"audio\",\n    \"b\",\n    \"base\",\n    \"basefont\",\n    \"bdi\",\n    \"bdo\",\n    \"bgsound\",\n    \"big\",\n    \"blink\",\n    \"blockquote\",\n    \"body\",\n    \"br\",\n    \"button\",\n    \"canvas\",\n    \"caption\",\n    \"center\",\n    \"cite\",\n    \"code\",\n    \"col\",\n    \"colgroup\",\n    \"content\",\n    \"data\",\n    \"datalist\",\n    \"dd\",\n    \"del\",\n    \"details\",\n    \"dfn\",\n    \"dialog\",\n    \"dir\",\n    \"div\",\n    \"dl\",\n    \"dt\",\n    \"em\",\n    \"embed\",\n    \"fieldset\",\n    \"figcaption\",\n    \"figure\",\n    \"font\",\n    \"footer\",\n    \"form\",\n    \"frame\",\n    \"frameset\",\n    \"head\",\n    \"header\",\n    \"hgroup\",\n    \"hr\",\n    \"html\",\n    \"i\",\n    \"iframe\",\n    \"image\",\n    \"img\",\n    \"input\",\n    \"ins\",\n    \"kbd\",\n    \"keygen\",\n    \"label\",\n    \"legend\",\n    \"li\",\n    \"link\",\n    \"main\",\n    \"map\",\n    \"mark\",\n    \"marquee\",\n    \"menu\",\n    \"menuitem\",\n    \"meta\",\n    \"meter\",\n    \"nav\",\n    \"nobr\",\n    \"noembed\",\n    \"noframes\",\n    \"noscript\",\n    \"object\",\n    \"ol\",\n    \"optgroup\",\n    \"option\",\n    \"output\",\n    \"p\",\n    \"param\",\n    \"picture\",\n    \"plaintext\",\n    \"portal\",\n    \"pre\",\n    \"progress\",\n    \"q\",\n    \"rb\",\n    \"rp\",\n    \"rt\",\n    \"rtc\",\n    \"ruby\",\n    \"s\",\n    \"samp\",\n    \"script\",\n    \"section\",\n    \"select\",\n    \"shadow\",\n    \"slot\",\n    \"small\",\n    \"source\",\n    \"spacer\",\n    \"span\",\n    \"strike\",\n    \"strong\",\n    \"style\",\n    \"sub\",\n    \"summary\",\n    \"sup\",\n    \"table\",\n    \"tbody\",\n    \"td\",\n    \"template\",\n    \"textarea\",\n    \"tfoot\",\n    \"th\",\n    \"thead\",\n    \"time\",\n    \"title\",\n    \"tr\",\n    \"track\",\n    \"tt\",\n    \"u\",\n    \"ul\",\n    \"var\",\n    \"video\",\n    \"wbr\",\n    \"xmp\",\n    \"input\"\n]);\nfunction $478712cee1e6b565$var$reconcileArrays(parentNode, a, b) {\n    let bLength = b.length, aEnd = a.length, bEnd = bLength, aStart = 0, bStart = 0, after = a[aEnd - 1].nextSibling, map = null;\n    while(aStart < aEnd || bStart < bEnd){\n        if (a[aStart] === b[bStart]) {\n            aStart++;\n            bStart++;\n            continue;\n        }\n        while(a[aEnd - 1] === b[bEnd - 1]){\n            aEnd--;\n            bEnd--;\n        }\n        if (aEnd === aStart) {\n            const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n            while(bStart < bEnd)parentNode.insertBefore(b[bStart++], node);\n        } else if (bEnd === bStart) while(aStart < aEnd){\n            if (!map || !map.has(a[aStart])) a[aStart].remove();\n            aStart++;\n        }\n        else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n            const node = a[--aEnd].nextSibling;\n            parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n            parentNode.insertBefore(b[--bEnd], node);\n            a[aEnd] = b[bEnd];\n        } else {\n            if (!map) {\n                map = new Map();\n                let i = bStart;\n                while(i < bEnd)map.set(b[i], i++);\n            }\n            const index = map.get(a[aStart]);\n            if (index != null) {\n                if (bStart < index && index < bEnd) {\n                    let i = aStart, sequence = 1, t;\n                    while(++i < aEnd && i < bEnd){\n                        if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n                        sequence++;\n                    }\n                    if (sequence > index - bStart) {\n                        const node = a[aStart];\n                        while(bStart < index)parentNode.insertBefore(b[bStart++], node);\n                    } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n                } else aStart++;\n            } else a[aStart++].remove();\n        }\n    }\n}\nconst $478712cee1e6b565$var$$$EVENTS = \"_$DX_DELEGATE\";\nfunction $478712cee1e6b565$export$b3890eb0ae9dca99(code, element, init, options = {}) {\n    let disposer;\n    (0, $82b01333e79ab06f$export$882461b6382ed46c)((dispose)=>{\n        disposer = dispose;\n        element === document ? code() : $478712cee1e6b565$export$21a5ca8aa77d35ff(element, code(), element.firstChild ? null : undefined, init);\n    }, options.owner);\n    return ()=>{\n        disposer();\n        element.textContent = \"\";\n    };\n}\nfunction $478712cee1e6b565$export$ce69bd05624d0c48(html, check, isSVG) {\n    const t = document.createElement(\"template\");\n    t.innerHTML = html;\n    let node = t.content.firstChild;\n    if (isSVG) node = node.firstChild;\n    return node;\n}\nfunction $478712cee1e6b565$export$ad0f7f87f67e17d6(eventNames, document1 = window.document) {\n    const e = document1[$478712cee1e6b565$var$$$EVENTS] || (document1[$478712cee1e6b565$var$$$EVENTS] = new Set());\n    for(let i = 0, l = eventNames.length; i < l; i++){\n        const name = eventNames[i];\n        if (!e.has(name)) {\n            e.add(name);\n            document1.addEventListener(name, $478712cee1e6b565$var$eventHandler);\n        }\n    }\n}\nfunction $478712cee1e6b565$export$aedd29ca2033b694(document1 = window.document) {\n    if (document1[$478712cee1e6b565$var$$$EVENTS]) {\n        for (let name of document1[$478712cee1e6b565$var$$$EVENTS].keys())document1.removeEventListener(name, $478712cee1e6b565$var$eventHandler);\n        delete document1[$478712cee1e6b565$var$$$EVENTS];\n    }\n}\nfunction $478712cee1e6b565$export$9fec4d97f1922e0b(node, name, value) {\n    if (value == null) node.removeAttribute(name);\n    else node.setAttribute(name, value);\n}\nfunction $478712cee1e6b565$export$75900142c9e21800(node, namespace, name, value) {\n    if (value == null) node.removeAttributeNS(namespace, name);\n    else node.setAttributeNS(namespace, name, value);\n}\nfunction $478712cee1e6b565$export$2913c0c0b5623090(node, value) {\n    if (value == null) node.removeAttribute(\"class\");\n    else node.className = value;\n}\nfunction $478712cee1e6b565$export$3f65cefe8380dbea(node, name, handler, delegate) {\n    if (delegate) {\n        if (Array.isArray(handler)) {\n            node[`$$${name}`] = handler[0];\n            node[`$$${name}Data`] = handler[1];\n        } else node[`$$${name}`] = handler;\n    } else if (Array.isArray(handler)) {\n        const handlerFn = handler[0];\n        node.addEventListener(name, handler[0] = (e)=>handlerFn.call(node, handler[1], e));\n    } else node.addEventListener(name, handler);\n}\nfunction $478712cee1e6b565$export$11c615ce16f87241(node, value, prev = {}) {\n    const classKeys = Object.keys(value || {}), prevKeys = Object.keys(prev);\n    let i, len;\n    for(i = 0, len = prevKeys.length; i < len; i++){\n        const key = prevKeys[i];\n        if (!key || key === \"undefined\" || value[key]) continue;\n        $478712cee1e6b565$var$toggleClassKey(node, key, false);\n        delete prev[key];\n    }\n    for(i = 0, len = classKeys.length; i < len; i++){\n        const key = classKeys[i], classValue = !!value[key];\n        if (!key || key === \"undefined\" || prev[key] === classValue || !classValue) continue;\n        $478712cee1e6b565$var$toggleClassKey(node, key, true);\n        prev[key] = classValue;\n    }\n    return prev;\n}\nfunction $478712cee1e6b565$export$1d567c320f4763bc(node, value, prev) {\n    if (!value) return prev ? $478712cee1e6b565$export$9fec4d97f1922e0b(node, \"style\") : value;\n    const nodeStyle = node.style;\n    if (typeof value === \"string\") return nodeStyle.cssText = value;\n    typeof prev === \"string\" && (nodeStyle.cssText = prev = undefined);\n    prev || (prev = {});\n    value || (value = {});\n    let v, s;\n    for(s in prev){\n        value[s] == null && nodeStyle.removeProperty(s);\n        delete prev[s];\n    }\n    for(s in value){\n        v = value[s];\n        if (v !== prev[s]) {\n            nodeStyle.setProperty(s, v);\n            prev[s] = v;\n        }\n    }\n    return prev;\n}\nfunction $478712cee1e6b565$export$3ae0fd4797ed47c8(node, props = {}, isSVG, skipChildren) {\n    const prevProps = {};\n    if (!skipChildren) (0, $82b01333e79ab06f$export$314dade334ae905d)(()=>prevProps.children = $478712cee1e6b565$var$insertExpression(node, props.children, prevProps.children));\n    (0, $82b01333e79ab06f$export$314dade334ae905d)(()=>props.ref && props.ref(node));\n    (0, $82b01333e79ab06f$export$314dade334ae905d)(()=>$478712cee1e6b565$export$e6e34fd1f2686227(node, props, isSVG, true, prevProps, true));\n    return prevProps;\n}\nfunction $478712cee1e6b565$export$2810486c22c942e9(props, key) {\n    const src = props[key];\n    Object.defineProperty(props, key, {\n        get () {\n            return src();\n        },\n        enumerable: true\n    });\n    return props;\n}\nfunction $478712cee1e6b565$export$8bd3fff6c675ca8d(parent, content) {\n    !(0, $82b01333e79ab06f$export$2cb4986bed338027).context && (parent.innerHTML = content);\n}\nfunction $478712cee1e6b565$export$1f96ae73734a86cc(fn, element, arg) {\n    return (0, $82b01333e79ab06f$export$363ebc4b78b8f807)(()=>fn(element, arg));\n}\nfunction $478712cee1e6b565$export$21a5ca8aa77d35ff(parent, accessor, marker, initial) {\n    if (marker !== undefined && !initial) initial = [];\n    if (typeof accessor !== \"function\") return $478712cee1e6b565$var$insertExpression(parent, accessor, initial, marker);\n    (0, $82b01333e79ab06f$export$314dade334ae905d)((current)=>$478712cee1e6b565$var$insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction $478712cee1e6b565$export$e6e34fd1f2686227(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n    props || (props = {});\n    for(const prop in prevProps)if (!(prop in props)) {\n        if (prop === \"children\") continue;\n        prevProps[prop] = $478712cee1e6b565$var$assignProp(node, prop, null, prevProps[prop], isSVG, skipRef);\n    }\n    for(const prop in props){\n        if (prop === \"children\") {\n            if (!skipChildren) $478712cee1e6b565$var$insertExpression(node, props.children);\n            continue;\n        }\n        const value = props[prop];\n        prevProps[prop] = $478712cee1e6b565$var$assignProp(node, prop, value, prevProps[prop], isSVG, skipRef);\n    }\n}\nfunction $478712cee1e6b565$var$hydrate$1(code, element, options = {}) {\n    (0, $82b01333e79ab06f$export$2cb4986bed338027).completed = globalThis._$HY.completed;\n    (0, $82b01333e79ab06f$export$2cb4986bed338027).events = globalThis._$HY.events;\n    (0, $82b01333e79ab06f$export$2cb4986bed338027).load = globalThis._$HY.load;\n    (0, $82b01333e79ab06f$export$2cb4986bed338027).gather = (root)=>$478712cee1e6b565$var$gatherHydratable(element, root);\n    (0, $82b01333e79ab06f$export$2cb4986bed338027).registry = new Map();\n    (0, $82b01333e79ab06f$export$2cb4986bed338027).context = {\n        id: options.renderId || \"\",\n        count: 0\n    };\n    $478712cee1e6b565$var$gatherHydratable(element, options.renderId);\n    const dispose = $478712cee1e6b565$export$b3890eb0ae9dca99(code, element, [\n        ...element.childNodes\n    ], options);\n    (0, $82b01333e79ab06f$export$2cb4986bed338027).context = null;\n    return dispose;\n}\nfunction $478712cee1e6b565$export$4109ed81edd7716d(template) {\n    let node, key;\n    if (!(0, $82b01333e79ab06f$export$2cb4986bed338027).context || !(node = (0, $82b01333e79ab06f$export$2cb4986bed338027).registry.get(key = $478712cee1e6b565$export$a5a9dff0691837de()))) return template.cloneNode(true);\n    if ((0, $82b01333e79ab06f$export$2cb4986bed338027).completed) (0, $82b01333e79ab06f$export$2cb4986bed338027).completed.add(node);\n    (0, $82b01333e79ab06f$export$2cb4986bed338027).registry.delete(key);\n    return node;\n}\nfunction $478712cee1e6b565$export$c19731b2c49ee4c9(el, nodeName) {\n    while(el && el.localName !== nodeName)el = el.nextSibling;\n    return el;\n}\nfunction $478712cee1e6b565$export$5cf9b6f37b7c0802(start) {\n    let end = start, count = 0, current = [];\n    if ((0, $82b01333e79ab06f$export$2cb4986bed338027).context) while(end){\n        if (end.nodeType === 8) {\n            const v = end.nodeValue;\n            if (v === \"#\") count++;\n            else if (v === \"/\") {\n                if (count === 0) return [\n                    end,\n                    current\n                ];\n                count--;\n            }\n        }\n        current.push(end);\n        end = end.nextSibling;\n    }\n    return [\n        end,\n        current\n    ];\n}\nfunction $478712cee1e6b565$export$6fef5763b6d3688d() {\n    if ((0, $82b01333e79ab06f$export$2cb4986bed338027).events && !(0, $82b01333e79ab06f$export$2cb4986bed338027).events.queued) {\n        queueMicrotask(()=>{\n            const { completed: completed , events: events  } = (0, $82b01333e79ab06f$export$2cb4986bed338027);\n            events.queued = false;\n            while(events.length){\n                const [el, e] = events[0];\n                if (!completed.has(el)) return;\n                $478712cee1e6b565$var$eventHandler(e);\n                events.shift();\n            }\n        });\n        (0, $82b01333e79ab06f$export$2cb4986bed338027).events.queued = true;\n    }\n}\nfunction $478712cee1e6b565$var$toPropertyName(name) {\n    return name.toLowerCase().replace(/-([a-z])/g, (_, w)=>w.toUpperCase());\n}\nfunction $478712cee1e6b565$var$toggleClassKey(node, key, value) {\n    const classNames = key.trim().split(/\\s+/);\n    for(let i = 0, nameLen = classNames.length; i < nameLen; i++)node.classList.toggle(classNames[i], value);\n}\nfunction $478712cee1e6b565$var$assignProp(node, prop, value, prev, isSVG, skipRef) {\n    let isCE, isProp, isChildProp;\n    if (prop === \"style\") return $478712cee1e6b565$export$1d567c320f4763bc(node, value, prev);\n    if (prop === \"classList\") return $478712cee1e6b565$export$11c615ce16f87241(node, value, prev);\n    if (value === prev) return prev;\n    if (prop === \"ref\") {\n        if (!skipRef) value(node);\n    } else if (prop.slice(0, 3) === \"on:\") {\n        const e = prop.slice(3);\n        prev && node.removeEventListener(e, prev);\n        value && node.addEventListener(e, value);\n    } else if (prop.slice(0, 10) === \"oncapture:\") {\n        const e = prop.slice(10);\n        prev && node.removeEventListener(e, prev, true);\n        value && node.addEventListener(e, value, true);\n    } else if (prop.slice(0, 2) === \"on\") {\n        const name = prop.slice(2).toLowerCase();\n        const delegate = $478712cee1e6b565$export$389d7c657d123a81.has(name);\n        if (!delegate && prev) {\n            const h = Array.isArray(prev) ? prev[0] : prev;\n            node.removeEventListener(name, h);\n        }\n        if (delegate || value) {\n            $478712cee1e6b565$export$3f65cefe8380dbea(node, name, value, delegate);\n            delegate && $478712cee1e6b565$export$ad0f7f87f67e17d6([\n                name\n            ]);\n        }\n    } else if ((isChildProp = $478712cee1e6b565$export$2c72a9edec54d5d9.has(prop)) || !isSVG && ($478712cee1e6b565$export$6e5cb8d2bac52b29[prop] || (isProp = $478712cee1e6b565$export$8714badcfa4caafb.has(prop))) || (isCE = node.nodeName.includes(\"-\"))) {\n        if (prop === \"class\" || prop === \"className\") $478712cee1e6b565$export$2913c0c0b5623090(node, value);\n        else if (isCE && !isProp && !isChildProp) node[$478712cee1e6b565$var$toPropertyName(prop)] = value;\n        else node[$478712cee1e6b565$export$6e5cb8d2bac52b29[prop] || prop] = value;\n    } else {\n        const ns = isSVG && prop.indexOf(\":\") > -1 && $478712cee1e6b565$export$fa927d1d0495a67d[prop.split(\":\")[0]];\n        if (ns) $478712cee1e6b565$export$75900142c9e21800(node, ns, prop, value);\n        else $478712cee1e6b565$export$9fec4d97f1922e0b(node, $478712cee1e6b565$export$8915b7db7f70cfed[prop] || prop, value);\n    }\n    return value;\n}\nfunction $478712cee1e6b565$var$eventHandler(e) {\n    const key = `$$${e.type}`;\n    let node = e.composedPath && e.composedPath()[0] || e.target;\n    if (e.target !== node) Object.defineProperty(e, \"target\", {\n        configurable: true,\n        value: node\n    });\n    Object.defineProperty(e, \"currentTarget\", {\n        configurable: true,\n        get () {\n            return node || document;\n        }\n    });\n    if ((0, $82b01333e79ab06f$export$2cb4986bed338027).registry && !(0, $82b01333e79ab06f$export$2cb4986bed338027).done) {\n        (0, $82b01333e79ab06f$export$2cb4986bed338027).done = true;\n        document.querySelectorAll(\"[id^=pl-]\").forEach((elem)=>elem.remove());\n    }\n    while(node){\n        const handler = node[key];\n        if (handler && !node.disabled) {\n            const data = node[`${key}Data`];\n            data !== undefined ? handler.call(node, data, e) : handler.call(node, e);\n            if (e.cancelBubble) return;\n        }\n        node = node._$host || node.parentNode || node.host;\n    }\n}\nfunction $478712cee1e6b565$var$insertExpression(parent, value, current, marker, unwrapArray) {\n    if ((0, $82b01333e79ab06f$export$2cb4986bed338027).context && !current) current = [\n        ...parent.childNodes\n    ];\n    while(typeof current === \"function\")current = current();\n    if (value === current) return current;\n    const t = typeof value, multi = marker !== undefined;\n    parent = multi && current[0] && current[0].parentNode || parent;\n    if (t === \"string\" || t === \"number\") {\n        if ((0, $82b01333e79ab06f$export$2cb4986bed338027).context) return current;\n        if (t === \"number\") value = value.toString();\n        if (multi) {\n            let node = current[0];\n            if (node && node.nodeType === 3) node.data = value;\n            else node = document.createTextNode(value);\n            current = $478712cee1e6b565$var$cleanChildren(parent, current, marker, node);\n        } else if (current !== \"\" && typeof current === \"string\") current = parent.firstChild.data = value;\n        else current = parent.textContent = value;\n    } else if (value == null || t === \"boolean\") {\n        if ((0, $82b01333e79ab06f$export$2cb4986bed338027).context) return current;\n        current = $478712cee1e6b565$var$cleanChildren(parent, current, marker);\n    } else if (t === \"function\") {\n        (0, $82b01333e79ab06f$export$314dade334ae905d)(()=>{\n            let v = value();\n            while(typeof v === \"function\")v = v();\n            current = $478712cee1e6b565$var$insertExpression(parent, v, current, marker);\n        });\n        return ()=>current;\n    } else if (Array.isArray(value)) {\n        const array = [];\n        const currentArray = current && Array.isArray(current);\n        if ($478712cee1e6b565$var$normalizeIncomingArray(array, value, current, unwrapArray)) {\n            (0, $82b01333e79ab06f$export$314dade334ae905d)(()=>current = $478712cee1e6b565$var$insertExpression(parent, array, current, marker, true));\n            return ()=>current;\n        }\n        if ((0, $82b01333e79ab06f$export$2cb4986bed338027).context) {\n            if (!array.length) return current;\n            for(let i = 0; i < array.length; i++){\n                if (array[i].parentNode) return current = array;\n            }\n        }\n        if (array.length === 0) {\n            current = $478712cee1e6b565$var$cleanChildren(parent, current, marker);\n            if (multi) return current;\n        } else if (currentArray) {\n            if (current.length === 0) $478712cee1e6b565$var$appendNodes(parent, array, marker);\n            else $478712cee1e6b565$var$reconcileArrays(parent, current, array);\n        } else {\n            current && $478712cee1e6b565$var$cleanChildren(parent);\n            $478712cee1e6b565$var$appendNodes(parent, array);\n        }\n        current = array;\n    } else if (value instanceof Node) {\n        if ((0, $82b01333e79ab06f$export$2cb4986bed338027).context && value.parentNode) return current = multi ? [\n            value\n        ] : value;\n        if (Array.isArray(current)) {\n            if (multi) return current = $478712cee1e6b565$var$cleanChildren(parent, current, marker, value);\n            $478712cee1e6b565$var$cleanChildren(parent, current, null, value);\n        } else if (current == null || current === \"\" || !parent.firstChild) parent.appendChild(value);\n        else parent.replaceChild(value, parent.firstChild);\n        current = value;\n    }\n    return current;\n}\nfunction $478712cee1e6b565$var$normalizeIncomingArray(normalized, array, current, unwrap) {\n    let dynamic = false;\n    for(let i = 0, len = array.length; i < len; i++){\n        let item = array[i], prev = current && current[i];\n        if (item instanceof Node) normalized.push(item);\n        else if (item == null || item === true || item === false) ;\n        else if (Array.isArray(item)) dynamic = $478712cee1e6b565$var$normalizeIncomingArray(normalized, item, prev) || dynamic;\n        else if (typeof item === \"function\") {\n            if (unwrap) {\n                while(typeof item === \"function\")item = item();\n                dynamic = $478712cee1e6b565$var$normalizeIncomingArray(normalized, Array.isArray(item) ? item : [\n                    item\n                ], Array.isArray(prev) ? prev : [\n                    prev\n                ]) || dynamic;\n            } else {\n                normalized.push(item);\n                dynamic = true;\n            }\n        } else {\n            const value = String(item);\n            if (prev && prev.nodeType === 3 && prev.data === value) normalized.push(prev);\n            else normalized.push(document.createTextNode(value));\n        }\n    }\n    return dynamic;\n}\nfunction $478712cee1e6b565$var$appendNodes(parent, array, marker = null) {\n    for(let i = 0, len = array.length; i < len; i++)parent.insertBefore(array[i], marker);\n}\nfunction $478712cee1e6b565$var$cleanChildren(parent, current, marker, replacement) {\n    if (marker === undefined) return parent.textContent = \"\";\n    const node = replacement || document.createTextNode(\"\");\n    if (current.length) {\n        let inserted = false;\n        for(let i = current.length - 1; i >= 0; i--){\n            const el = current[i];\n            if (node !== el) {\n                const isParent = el.parentNode === parent;\n                if (!inserted && !i) isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);\n                else isParent && el.remove();\n            } else inserted = true;\n        }\n    } else parent.insertBefore(node, marker);\n    return [\n        node\n    ];\n}\nfunction $478712cee1e6b565$var$gatherHydratable(element, root) {\n    const templates = element.querySelectorAll(`*[data-hk]`);\n    for(let i = 0; i < templates.length; i++){\n        const node = templates[i];\n        const key = node.getAttribute(\"data-hk\");\n        if ((!root || key.startsWith(root)) && !(0, $82b01333e79ab06f$export$2cb4986bed338027).registry.has(key)) (0, $82b01333e79ab06f$export$2cb4986bed338027).registry.set(key, node);\n    }\n}\nfunction $478712cee1e6b565$export$a5a9dff0691837de() {\n    const hydrate = (0, $82b01333e79ab06f$export$2cb4986bed338027).context;\n    return `${hydrate.id}${hydrate.count++}`;\n}\nfunction $478712cee1e6b565$export$36143b7c9c07dd39(props) {\n    return (0, $82b01333e79ab06f$export$2cb4986bed338027).context ? undefined : props.children;\n}\nfunction $478712cee1e6b565$export$da8cca6e5dfa3577(props) {\n    return props.children;\n}\nfunction $478712cee1e6b565$export$c8eca95e306f7116() {}\nfunction $478712cee1e6b565$var$throwInBrowser(func) {\n    const err = new Error(`${func.name} is not supported in the browser, returning undefined`);\n    console.error(err);\n}\nfunction $478712cee1e6b565$export$80e7718417253a51(fn, options) {\n    $478712cee1e6b565$var$throwInBrowser($478712cee1e6b565$export$80e7718417253a51);\n}\nfunction $478712cee1e6b565$export$f3aefc4196cd5f3e(fn, options) {\n    $478712cee1e6b565$var$throwInBrowser($478712cee1e6b565$export$f3aefc4196cd5f3e);\n}\nfunction $478712cee1e6b565$export$97f86213fef5749d(fn, options) {\n    $478712cee1e6b565$var$throwInBrowser($478712cee1e6b565$export$97f86213fef5749d);\n}\nfunction $478712cee1e6b565$export$ea2375f6c0c9ffdc(template, ...nodes) {}\nfunction $478712cee1e6b565$export$1844beb7faeb4553(name, props, children, needsId) {}\nfunction $478712cee1e6b565$export$e92e0c287593a882(value) {}\nfunction $478712cee1e6b565$export$9e97f11b9d683d7a(value) {}\nfunction $478712cee1e6b565$export$9ab8bdc1e27e51e1(key, value) {}\nfunction $478712cee1e6b565$export$7e66a08c0b8ab2aa() {}\nfunction $478712cee1e6b565$export$755e9f954b4fd36e(node) {}\nfunction $478712cee1e6b565$export$4e7f196112fea3c5(html) {}\nfunction $478712cee1e6b565$export$8c2b042ce8153017(props, isSVG, skipChildren) {}\nconst $478712cee1e6b565$export$6acf61af03e62db = false;\nconst $478712cee1e6b565$var$SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction $478712cee1e6b565$var$createElement(tagName, isSVG = false) {\n    return isSVG ? document.createElementNS($478712cee1e6b565$var$SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nconst $478712cee1e6b565$export$fa8d919ba61d84db = (...args)=>{\n    (0, $82b01333e79ab06f$export$849801d35d2160c9)();\n    return $478712cee1e6b565$var$hydrate$1(...args);\n};\nfunction $478712cee1e6b565$export$602eac185826482c(props) {\n    const { useShadow: useShadow  } = props, marker = document.createTextNode(\"\"), mount = props.mount || document.body;\n    function renderPortal() {\n        if ((0, $82b01333e79ab06f$export$2cb4986bed338027).context) {\n            const [s, set] = (0, $82b01333e79ab06f$export$c1e1e1ecbbe76a5)(false);\n            queueMicrotask(()=>set(true));\n            return ()=>s() && props.children;\n        } else return ()=>props.children;\n    }\n    if (mount instanceof HTMLHeadElement) {\n        const [clean, setClean] = (0, $82b01333e79ab06f$export$c1e1e1ecbbe76a5)(false);\n        const cleanup = ()=>setClean(true);\n        (0, $82b01333e79ab06f$export$882461b6382ed46c)((dispose)=>$478712cee1e6b565$export$21a5ca8aa77d35ff(mount, ()=>!clean() ? renderPortal()() : dispose(), null));\n        (0, $82b01333e79ab06f$export$b36e5eaa3e8c43ab)(()=>{\n            if ((0, $82b01333e79ab06f$export$2cb4986bed338027).context) queueMicrotask(cleanup);\n            else cleanup();\n        });\n    } else {\n        const container = $478712cee1e6b565$var$createElement(props.isSVG ? \"g\" : \"div\", props.isSVG), renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n            mode: \"open\"\n        }) : container;\n        Object.defineProperty(container, \"_$host\", {\n            get () {\n                return marker.parentNode;\n            },\n            configurable: true\n        });\n        $478712cee1e6b565$export$21a5ca8aa77d35ff(renderRoot, renderPortal());\n        mount.appendChild(container);\n        props.ref && props.ref(container);\n        (0, $82b01333e79ab06f$export$b36e5eaa3e8c43ab)(()=>mount.removeChild(container));\n    }\n    return marker;\n}\nfunction $478712cee1e6b565$export$e18282e419e46834(props) {\n    const [p, others] = (0, $82b01333e79ab06f$export$45029c61b0073d87)(props, [\n        \"component\"\n    ]);\n    const cached = (0, $82b01333e79ab06f$export$c0c6c8b9c16bf6aa)(()=>p.component);\n    return (0, $82b01333e79ab06f$export$c0c6c8b9c16bf6aa)(()=>{\n        const component = cached();\n        switch(typeof component){\n            case \"function\":\n                return (0, $82b01333e79ab06f$export$363ebc4b78b8f807)(()=>component(others));\n            case \"string\":\n                const isSvg = $478712cee1e6b565$export$ccaf9b9a82de4b98.has(component);\n                const el = (0, $82b01333e79ab06f$export$2cb4986bed338027).context ? $478712cee1e6b565$export$4109ed81edd7716d() : $478712cee1e6b565$var$createElement(component, isSvg);\n                $478712cee1e6b565$export$3ae0fd4797ed47c8(el, others, isSvg);\n                return el;\n        }\n    });\n}\n\n\n\n\nfunction $e6141bbfd30ac9e4$export$2e2bcd8739ae039(constructor, factory, prototype) {\n    constructor.prototype = factory.prototype = prototype;\n    prototype.constructor = constructor;\n}\nfunction $e6141bbfd30ac9e4$export$8b58be045bf06082(parent, definition) {\n    var prototype = Object.create(parent.prototype);\n    for(var key in definition)prototype[key] = definition[key];\n    return prototype;\n}\n\n\nfunction $6b954386a0255d00$export$892596cec99bc70e() {}\nvar $6b954386a0255d00$export$4adafc6ed0600c10 = 0.7;\nvar $6b954386a0255d00$export$9eace2cc0d12c98d = 1 / $6b954386a0255d00$export$4adafc6ed0600c10;\nvar $6b954386a0255d00$var$reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\", $6b954386a0255d00$var$reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\", $6b954386a0255d00$var$reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\", $6b954386a0255d00$var$reHex = /^#([0-9a-f]{3,8})$/, $6b954386a0255d00$var$reRgbInteger = new RegExp(`^rgb\\\\(${$6b954386a0255d00$var$reI},${$6b954386a0255d00$var$reI},${$6b954386a0255d00$var$reI}\\\\)$`), $6b954386a0255d00$var$reRgbPercent = new RegExp(`^rgb\\\\(${$6b954386a0255d00$var$reP},${$6b954386a0255d00$var$reP},${$6b954386a0255d00$var$reP}\\\\)$`), $6b954386a0255d00$var$reRgbaInteger = new RegExp(`^rgba\\\\(${$6b954386a0255d00$var$reI},${$6b954386a0255d00$var$reI},${$6b954386a0255d00$var$reI},${$6b954386a0255d00$var$reN}\\\\)$`), $6b954386a0255d00$var$reRgbaPercent = new RegExp(`^rgba\\\\(${$6b954386a0255d00$var$reP},${$6b954386a0255d00$var$reP},${$6b954386a0255d00$var$reP},${$6b954386a0255d00$var$reN}\\\\)$`), $6b954386a0255d00$var$reHslPercent = new RegExp(`^hsl\\\\(${$6b954386a0255d00$var$reN},${$6b954386a0255d00$var$reP},${$6b954386a0255d00$var$reP}\\\\)$`), $6b954386a0255d00$var$reHslaPercent = new RegExp(`^hsla\\\\(${$6b954386a0255d00$var$reN},${$6b954386a0255d00$var$reP},${$6b954386a0255d00$var$reP},${$6b954386a0255d00$var$reN}\\\\)$`);\nvar $6b954386a0255d00$var$named = {\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    rebeccapurple: 0x663399,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32\n};\n(0, $e6141bbfd30ac9e4$export$2e2bcd8739ae039)($6b954386a0255d00$export$892596cec99bc70e, $6b954386a0255d00$export$2e2bcd8739ae039, {\n    copy (channels) {\n        return Object.assign(new this.constructor, this, channels);\n    },\n    displayable () {\n        return this.rgb().displayable();\n    },\n    hex: $6b954386a0255d00$var$color_formatHex,\n    formatHex: $6b954386a0255d00$var$color_formatHex,\n    formatHex8: $6b954386a0255d00$var$color_formatHex8,\n    formatHsl: $6b954386a0255d00$var$color_formatHsl,\n    formatRgb: $6b954386a0255d00$var$color_formatRgb,\n    toString: $6b954386a0255d00$var$color_formatRgb\n});\nfunction $6b954386a0255d00$var$color_formatHex() {\n    return this.rgb().formatHex();\n}\nfunction $6b954386a0255d00$var$color_formatHex8() {\n    return this.rgb().formatHex8();\n}\nfunction $6b954386a0255d00$var$color_formatHsl() {\n    return $6b954386a0255d00$export$8133dc3fa904d6d1(this).formatHsl();\n}\nfunction $6b954386a0255d00$var$color_formatRgb() {\n    return this.rgb().formatRgb();\n}\nfunction $6b954386a0255d00$export$2e2bcd8739ae039(format) {\n    var m, l;\n    format = (format + \"\").trim().toLowerCase();\n    return (m = $6b954386a0255d00$var$reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? $6b954386a0255d00$var$rgbn(m) // #ff0000\n     : l === 3 ? new $6b954386a0255d00$export$5e05a94393ac29e3(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00\n     : l === 8 ? $6b954386a0255d00$var$rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n     : l === 4 ? $6b954386a0255d00$var$rgba(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000\n     : null // invalid hex\n    ) : (m = $6b954386a0255d00$var$reRgbInteger.exec(format)) ? new $6b954386a0255d00$export$5e05a94393ac29e3(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n     : (m = $6b954386a0255d00$var$reRgbPercent.exec(format)) ? new $6b954386a0255d00$export$5e05a94393ac29e3(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n     : (m = $6b954386a0255d00$var$reRgbaInteger.exec(format)) ? $6b954386a0255d00$var$rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n     : (m = $6b954386a0255d00$var$reRgbaPercent.exec(format)) ? $6b954386a0255d00$var$rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n     : (m = $6b954386a0255d00$var$reHslPercent.exec(format)) ? $6b954386a0255d00$var$hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n     : (m = $6b954386a0255d00$var$reHslaPercent.exec(format)) ? $6b954386a0255d00$var$hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n     : $6b954386a0255d00$var$named.hasOwnProperty(format) ? $6b954386a0255d00$var$rgbn($6b954386a0255d00$var$named[format]) // eslint-disable-line no-prototype-builtins\n     : format === \"transparent\" ? new $6b954386a0255d00$export$5e05a94393ac29e3(NaN, NaN, NaN, 0) : null;\n}\nfunction $6b954386a0255d00$var$rgbn(n) {\n    return new $6b954386a0255d00$export$5e05a94393ac29e3(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\nfunction $6b954386a0255d00$var$rgba(r, g, b, a) {\n    if (a <= 0) r = g = b = NaN;\n    return new $6b954386a0255d00$export$5e05a94393ac29e3(r, g, b, a);\n}\nfunction $6b954386a0255d00$export$42da0a331c2802f5(o) {\n    if (!(o instanceof $6b954386a0255d00$export$892596cec99bc70e)) o = $6b954386a0255d00$export$2e2bcd8739ae039(o);\n    if (!o) return new $6b954386a0255d00$export$5e05a94393ac29e3;\n    o = o.rgb();\n    return new $6b954386a0255d00$export$5e05a94393ac29e3(o.r, o.g, o.b, o.opacity);\n}\nfunction $6b954386a0255d00$export$8972dc0e6ad9238f(r, g, b, opacity) {\n    return arguments.length === 1 ? $6b954386a0255d00$export$42da0a331c2802f5(r) : new $6b954386a0255d00$export$5e05a94393ac29e3(r, g, b, opacity == null ? 1 : opacity);\n}\nfunction $6b954386a0255d00$export$5e05a94393ac29e3(r, g, b, opacity) {\n    this.r = +r;\n    this.g = +g;\n    this.b = +b;\n    this.opacity = +opacity;\n}\n(0, $e6141bbfd30ac9e4$export$2e2bcd8739ae039)($6b954386a0255d00$export$5e05a94393ac29e3, $6b954386a0255d00$export$8972dc0e6ad9238f, (0, $e6141bbfd30ac9e4$export$8b58be045bf06082)($6b954386a0255d00$export$892596cec99bc70e, {\n    brighter (k) {\n        k = k == null ? $6b954386a0255d00$export$9eace2cc0d12c98d : Math.pow($6b954386a0255d00$export$9eace2cc0d12c98d, k);\n        return new $6b954386a0255d00$export$5e05a94393ac29e3(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    darker (k) {\n        k = k == null ? $6b954386a0255d00$export$4adafc6ed0600c10 : Math.pow($6b954386a0255d00$export$4adafc6ed0600c10, k);\n        return new $6b954386a0255d00$export$5e05a94393ac29e3(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    rgb () {\n        return this;\n    },\n    clamp () {\n        return new $6b954386a0255d00$export$5e05a94393ac29e3($6b954386a0255d00$var$clampi(this.r), $6b954386a0255d00$var$clampi(this.g), $6b954386a0255d00$var$clampi(this.b), $6b954386a0255d00$var$clampa(this.opacity));\n    },\n    displayable () {\n        return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;\n    },\n    hex: $6b954386a0255d00$var$rgb_formatHex,\n    formatHex: $6b954386a0255d00$var$rgb_formatHex,\n    formatHex8: $6b954386a0255d00$var$rgb_formatHex8,\n    formatRgb: $6b954386a0255d00$var$rgb_formatRgb,\n    toString: $6b954386a0255d00$var$rgb_formatRgb\n}));\nfunction $6b954386a0255d00$var$rgb_formatHex() {\n    return `#${$6b954386a0255d00$var$hex(this.r)}${$6b954386a0255d00$var$hex(this.g)}${$6b954386a0255d00$var$hex(this.b)}`;\n}\nfunction $6b954386a0255d00$var$rgb_formatHex8() {\n    return `#${$6b954386a0255d00$var$hex(this.r)}${$6b954386a0255d00$var$hex(this.g)}${$6b954386a0255d00$var$hex(this.b)}${$6b954386a0255d00$var$hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\nfunction $6b954386a0255d00$var$rgb_formatRgb() {\n    const a = $6b954386a0255d00$var$clampa(this.opacity);\n    return `${a === 1 ? \"rgb(\" : \"rgba(\"}${$6b954386a0255d00$var$clampi(this.r)}, ${$6b954386a0255d00$var$clampi(this.g)}, ${$6b954386a0255d00$var$clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\nfunction $6b954386a0255d00$var$clampa(opacity) {\n    return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\nfunction $6b954386a0255d00$var$clampi(value) {\n    return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\nfunction $6b954386a0255d00$var$hex(value) {\n    value = $6b954386a0255d00$var$clampi(value);\n    return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\nfunction $6b954386a0255d00$var$hsla(h, s, l, a) {\n    if (a <= 0) h = s = l = NaN;\n    else if (l <= 0 || l >= 1) h = s = NaN;\n    else if (s <= 0) h = NaN;\n    return new $6b954386a0255d00$var$Hsl(h, s, l, a);\n}\nfunction $6b954386a0255d00$export$8133dc3fa904d6d1(o) {\n    if (o instanceof $6b954386a0255d00$var$Hsl) return new $6b954386a0255d00$var$Hsl(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof $6b954386a0255d00$export$892596cec99bc70e)) o = $6b954386a0255d00$export$2e2bcd8739ae039(o);\n    if (!o) return new $6b954386a0255d00$var$Hsl;\n    if (o instanceof $6b954386a0255d00$var$Hsl) return o;\n    o = o.rgb();\n    var r = o.r / 255, g = o.g / 255, b = o.b / 255, min = Math.min(r, g, b), max = Math.max(r, g, b), h = NaN, s = max - min, l = (max + min) / 2;\n    if (s) {\n        if (r === max) h = (g - b) / s + (g < b) * 6;\n        else if (g === max) h = (b - r) / s + 2;\n        else h = (r - g) / s + 4;\n        s /= l < 0.5 ? max + min : 2 - max - min;\n        h *= 60;\n    } else s = l > 0 && l < 1 ? 0 : h;\n    return new $6b954386a0255d00$var$Hsl(h, s, l, o.opacity);\n}\nfunction $6b954386a0255d00$export$8f4a7c0bb78e6ea8(h, s, l, opacity) {\n    return arguments.length === 1 ? $6b954386a0255d00$export$8133dc3fa904d6d1(h) : new $6b954386a0255d00$var$Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\nfunction $6b954386a0255d00$var$Hsl(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n}\n(0, $e6141bbfd30ac9e4$export$2e2bcd8739ae039)($6b954386a0255d00$var$Hsl, $6b954386a0255d00$export$8f4a7c0bb78e6ea8, (0, $e6141bbfd30ac9e4$export$8b58be045bf06082)($6b954386a0255d00$export$892596cec99bc70e, {\n    brighter (k) {\n        k = k == null ? $6b954386a0255d00$export$9eace2cc0d12c98d : Math.pow($6b954386a0255d00$export$9eace2cc0d12c98d, k);\n        return new $6b954386a0255d00$var$Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker (k) {\n        k = k == null ? $6b954386a0255d00$export$4adafc6ed0600c10 : Math.pow($6b954386a0255d00$export$4adafc6ed0600c10, k);\n        return new $6b954386a0255d00$var$Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb () {\n        var h = this.h % 360 + (this.h < 0) * 360, s = isNaN(h) || isNaN(this.s) ? 0 : this.s, l = this.l, m2 = l + (l < 0.5 ? l : 1 - l) * s, m1 = 2 * l - m2;\n        return new $6b954386a0255d00$export$5e05a94393ac29e3($6b954386a0255d00$var$hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), $6b954386a0255d00$var$hsl2rgb(h, m1, m2), $6b954386a0255d00$var$hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);\n    },\n    clamp () {\n        return new $6b954386a0255d00$var$Hsl($6b954386a0255d00$var$clamph(this.h), $6b954386a0255d00$var$clampt(this.s), $6b954386a0255d00$var$clampt(this.l), $6b954386a0255d00$var$clampa(this.opacity));\n    },\n    displayable () {\n        return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;\n    },\n    formatHsl () {\n        const a = $6b954386a0255d00$var$clampa(this.opacity);\n        return `${a === 1 ? \"hsl(\" : \"hsla(\"}${$6b954386a0255d00$var$clamph(this.h)}, ${$6b954386a0255d00$var$clampt(this.s) * 100}%, ${$6b954386a0255d00$var$clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n    }\n}));\nfunction $6b954386a0255d00$var$clamph(value) {\n    value = (value || 0) % 360;\n    return value < 0 ? value + 360 : value;\n}\nfunction $6b954386a0255d00$var$clampt(value) {\n    return Math.max(0, Math.min(1, value || 0));\n}\n/* From FvD 13.37, CSS Color Module Level 3 */ function $6b954386a0255d00$var$hsl2rgb(h, m1, m2) {\n    return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;\n}\n\n\n\nfunction $881d0702247da37d$export$4e41033bfeec1a4c(t1, v0, v1, v2, v3) {\n    var t2 = t1 * t1, t3 = t2 * t1;\n    return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;\n}\nfunction $881d0702247da37d$export$2e2bcd8739ae039(values) {\n    var n = values.length - 1;\n    return function(t) {\n        var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n), v1 = values[i], v2 = values[i + 1], v0 = i > 0 ? values[i - 1] : 2 * v1 - v2, v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n        return $881d0702247da37d$export$4e41033bfeec1a4c((t - i / n) * n, v0, v1, v2, v3);\n    };\n}\n\n\n\nfunction $d875b83ab5863578$export$2e2bcd8739ae039(values) {\n    var n = values.length;\n    return function(t) {\n        var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n), v0 = values[(i + n - 1) % n], v1 = values[i % n], v2 = values[(i + 1) % n], v3 = values[(i + 2) % n];\n        return (0, $881d0702247da37d$export$4e41033bfeec1a4c)((t - i / n) * n, v0, v1, v2, v3);\n    };\n}\n\n\nvar $32a1f36c13df06e0$export$2e2bcd8739ae039 = (x)=>()=>x;\n\n\nfunction $8dfce0561889250e$var$linear(a, d) {\n    return function(t) {\n        return a + t * d;\n    };\n}\nfunction $8dfce0561889250e$var$exponential(a, b, y) {\n    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n        return Math.pow(a + t * b, y);\n    };\n}\nfunction $8dfce0561889250e$export$97d7b0c7ddb78dcf(a, b) {\n    var d = b - a;\n    return d ? $8dfce0561889250e$var$linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : (0, $32a1f36c13df06e0$export$2e2bcd8739ae039)(isNaN(a) ? b : a);\n}\nfunction $8dfce0561889250e$export$a7ebe8cc6aaf8d37(y) {\n    return (y = +y) === 1 ? $8dfce0561889250e$export$2e2bcd8739ae039 : function(a, b) {\n        return b - a ? $8dfce0561889250e$var$exponential(a, b, y) : (0, $32a1f36c13df06e0$export$2e2bcd8739ae039)(isNaN(a) ? b : a);\n    };\n}\nfunction $8dfce0561889250e$export$2e2bcd8739ae039(a, b) {\n    var d = b - a;\n    return d ? $8dfce0561889250e$var$linear(a, d) : (0, $32a1f36c13df06e0$export$2e2bcd8739ae039)(isNaN(a) ? b : a);\n}\n\n\nvar $c99ed0dd240dae7d$export$2e2bcd8739ae039 = function rgbGamma(y) {\n    var color = (0, $8dfce0561889250e$export$a7ebe8cc6aaf8d37)(y);\n    function rgb(start, end) {\n        var r = color((start = (0, $6b954386a0255d00$export$8972dc0e6ad9238f)(start)).r, (end = (0, $6b954386a0255d00$export$8972dc0e6ad9238f)(end)).r), g = color(start.g, end.g), b = color(start.b, end.b), opacity = (0, $8dfce0561889250e$export$2e2bcd8739ae039)(start.opacity, end.opacity);\n        return function(t) {\n            start.r = r(t);\n            start.g = g(t);\n            start.b = b(t);\n            start.opacity = opacity(t);\n            return start + \"\";\n        };\n    }\n    rgb.gamma = rgbGamma;\n    return rgb;\n}(1);\nfunction $c99ed0dd240dae7d$var$rgbSpline(spline) {\n    return function(colors) {\n        var n = colors.length, r = new Array(n), g = new Array(n), b = new Array(n), i, color;\n        for(i = 0; i < n; ++i){\n            color = (0, $6b954386a0255d00$export$8972dc0e6ad9238f)(colors[i]);\n            r[i] = color.r || 0;\n            g[i] = color.g || 0;\n            b[i] = color.b || 0;\n        }\n        r = spline(r);\n        g = spline(g);\n        b = spline(b);\n        color.opacity = 1;\n        return function(t) {\n            color.r = r(t);\n            color.g = g(t);\n            color.b = b(t);\n            return color + \"\";\n        };\n    };\n}\nvar $c99ed0dd240dae7d$export$2c0e28f2e2852d3f = $c99ed0dd240dae7d$var$rgbSpline((0, $881d0702247da37d$export$2e2bcd8739ae039));\nvar $c99ed0dd240dae7d$export$53d5214f625ccd4c = $c99ed0dd240dae7d$var$rgbSpline((0, $d875b83ab5863578$export$2e2bcd8739ae039));\n\n\n\nfunction $910b5323d0705334$export$2e2bcd8739ae039(a, b) {\n    if (!b) b = [];\n    var n = a ? Math.min(b.length, a.length) : 0, c = b.slice(), i;\n    return function(t) {\n        for(i = 0; i < n; ++i)c[i] = a[i] * (1 - t) + b[i] * t;\n        return c;\n    };\n}\nfunction $910b5323d0705334$export$5cd576d1827d40c8(x) {\n    return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n\n\nfunction $66ad23a6bb88ccc7$export$2e2bcd8739ae039(a, b) {\n    return ((0, $910b5323d0705334$export$5cd576d1827d40c8)(b) ? (0, $910b5323d0705334$export$2e2bcd8739ae039) : $66ad23a6bb88ccc7$export$15d09067c6a5ee49)(a, b);\n}\nfunction $66ad23a6bb88ccc7$export$15d09067c6a5ee49(a, b) {\n    var nb = b ? b.length : 0, na = a ? Math.min(nb, a.length) : 0, x = new Array(na), c = new Array(nb), i;\n    for(i = 0; i < na; ++i)x[i] = (0, $0a6b21d627aa3b76$export$2e2bcd8739ae039)(a[i], b[i]);\n    for(; i < nb; ++i)c[i] = b[i];\n    return function(t) {\n        for(i = 0; i < na; ++i)c[i] = x[i](t);\n        return c;\n    };\n}\n\n\nfunction $3133c9670a94856a$export$2e2bcd8739ae039(a, b) {\n    var d = new Date;\n    return a = +a, b = +b, function(t) {\n        return d.setTime(a * (1 - t) + b * t), d;\n    };\n}\n\n\nfunction $4a087d8646486986$export$2e2bcd8739ae039(a, b) {\n    return a = +a, b = +b, function(t) {\n        return a * (1 - t) + b * t;\n    };\n}\n\n\n\nfunction $83516c74d826a95f$export$2e2bcd8739ae039(a, b) {\n    var i = {}, c = {}, k;\n    if (a === null || typeof a !== \"object\") a = {};\n    if (b === null || typeof b !== \"object\") b = {};\n    for(k in b)if (k in a) i[k] = (0, $0a6b21d627aa3b76$export$2e2bcd8739ae039)(a[k], b[k]);\n    else c[k] = b[k];\n    return function(t) {\n        for(k in i)c[k] = i[k](t);\n        return c;\n    };\n}\n\n\n\nvar $256699786eb44963$var$reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, $256699786eb44963$var$reB = new RegExp($256699786eb44963$var$reA.source, \"g\");\nfunction $256699786eb44963$var$zero(b) {\n    return function() {\n        return b;\n    };\n}\nfunction $256699786eb44963$var$one(b) {\n    return function(t) {\n        return b(t) + \"\";\n    };\n}\nfunction $256699786eb44963$export$2e2bcd8739ae039(a, b) {\n    var bi = $256699786eb44963$var$reA.lastIndex = $256699786eb44963$var$reB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = []; // number interpolators\n    // Coerce inputs to strings.\n    a = a + \"\", b = b + \"\";\n    // Interpolate pairs of numbers in a & b.\n    while((am = $256699786eb44963$var$reA.exec(a)) && (bm = $256699786eb44963$var$reB.exec(b))){\n        if ((bs = bm.index) > bi) {\n            bs = b.slice(bi, bs);\n            if (s[i]) s[i] += bs; // coalesce with previous string\n            else s[++i] = bs;\n        }\n        if ((am = am[0]) === (bm = bm[0])) {\n            if (s[i]) s[i] += bm; // coalesce with previous string\n            else s[++i] = bm;\n        } else {\n            s[++i] = null;\n            q.push({\n                i: i,\n                x: (0, $4a087d8646486986$export$2e2bcd8739ae039)(am, bm)\n            });\n        }\n        bi = $256699786eb44963$var$reB.lastIndex;\n    }\n    // Add remains of b.\n    if (bi < b.length) {\n        bs = b.slice(bi);\n        if (s[i]) s[i] += bs; // coalesce with previous string\n        else s[++i] = bs;\n    }\n    // Special optimization for only a single match.\n    // Otherwise, interpolate each of the numbers and rejoin the string.\n    return s.length < 2 ? q[0] ? $256699786eb44963$var$one(q[0].x) : $256699786eb44963$var$zero(b) : (b = q.length, function(t) {\n        for(var i = 0, o; i < b; ++i)s[(o = q[i]).i] = o.x(t);\n        return s.join(\"\");\n    });\n}\n\n\n\n\nfunction $0a6b21d627aa3b76$export$2e2bcd8739ae039(a, b) {\n    var t = typeof b, c;\n    return b == null || t === \"boolean\" ? (0, $32a1f36c13df06e0$export$2e2bcd8739ae039)(b) : (t === \"number\" ? (0, $4a087d8646486986$export$2e2bcd8739ae039) : t === \"string\" ? (c = (0, $6b954386a0255d00$export$2e2bcd8739ae039)(b)) ? (b = c, $c99ed0dd240dae7d$export$2e2bcd8739ae039) : (0, $256699786eb44963$export$2e2bcd8739ae039) : b instanceof (0, $6b954386a0255d00$export$2e2bcd8739ae039) ? (0, $c99ed0dd240dae7d$export$2e2bcd8739ae039) : b instanceof Date ? (0, $3133c9670a94856a$export$2e2bcd8739ae039) : (0, $910b5323d0705334$export$5cd576d1827d40c8)(b) ? (0, $910b5323d0705334$export$2e2bcd8739ae039) : Array.isArray(b) ? (0, $66ad23a6bb88ccc7$export$15d09067c6a5ee49) : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? (0, $83516c74d826a95f$export$2e2bcd8739ae039) : (0, $4a087d8646486986$export$2e2bcd8739ae039))(a, b);\n}\n\nfunction $a7eb384d18622265$export$2e2bcd8739ae039(a, b) {\n    return a = +a, b = +b, function(t) {\n        return Math.round(a * (1 - t) + b * t);\n    };\n}\n\n\nfunction $d281dc4bedcaa4bb$export$2e2bcd8739ae039(a, b) {\n    return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\n\n\nfunction $66d3a017ba11c809$export$2e2bcd8739ae039(a, b) {\n    return a == null || b == null ? NaN : b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\n\nfunction $2e786e1650447282$export$2e2bcd8739ae039(f) {\n    let compare1, compare2, delta;\n    // If an accessor is specified, promote it to a comparator. In this case we\n    // can test whether the search value is (self-) comparable. We can’t do this\n    // for a comparator (except for specific, known comparators) because we can’t\n    // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n    // used to test whether a single value is comparable.\n    if (f.length !== 2) {\n        compare1 = (0, $d281dc4bedcaa4bb$export$2e2bcd8739ae039);\n        compare2 = (d, x)=>(0, $d281dc4bedcaa4bb$export$2e2bcd8739ae039)(f(d), x);\n        delta = (d, x)=>f(d) - x;\n    } else {\n        compare1 = f === (0, $d281dc4bedcaa4bb$export$2e2bcd8739ae039) || f === (0, $66d3a017ba11c809$export$2e2bcd8739ae039) ? f : $2e786e1650447282$var$zero;\n        compare2 = f;\n        delta = f;\n    }\n    function left(a, x, lo = 0, hi = a.length) {\n        if (lo < hi) {\n            if (compare1(x, x) !== 0) return hi;\n            do {\n                const mid = lo + hi >>> 1;\n                if (compare2(a[mid], x) < 0) lo = mid + 1;\n                else hi = mid;\n            }while (lo < hi);\n        }\n        return lo;\n    }\n    function right(a, x, lo = 0, hi = a.length) {\n        if (lo < hi) {\n            if (compare1(x, x) !== 0) return hi;\n            do {\n                const mid = lo + hi >>> 1;\n                if (compare2(a[mid], x) <= 0) lo = mid + 1;\n                else hi = mid;\n            }while (lo < hi);\n        }\n        return lo;\n    }\n    function center(a, x, lo = 0, hi = a.length) {\n        const i = left(a, x, lo, hi - 1);\n        return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n    }\n    return {\n        left: left,\n        center: center,\n        right: right\n    };\n}\nfunction $2e786e1650447282$var$zero() {\n    return 0;\n}\n\n\nfunction $7fd7fc20c5d99156$export$2e2bcd8739ae039(x) {\n    return x === null ? NaN : +x;\n}\nfunction* $7fd7fc20c5d99156$export$1f6c9cc012ebacae(values, valueof) {\n    if (valueof === undefined) {\n        for (let value of values)if (value != null && (value = +value) >= value) yield value;\n    } else {\n        let index = -1;\n        for (let value of values)if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) yield value;\n    }\n}\n\n\nconst $cc44a5a8212c170d$var$ascendingBisect = (0, $2e786e1650447282$export$2e2bcd8739ae039)((0, $d281dc4bedcaa4bb$export$2e2bcd8739ae039));\nconst $cc44a5a8212c170d$export$4d945ad3ad5751b0 = $cc44a5a8212c170d$var$ascendingBisect.right;\nconst $cc44a5a8212c170d$export$df7d25c84ebd12a5 = $cc44a5a8212c170d$var$ascendingBisect.left;\nconst $cc44a5a8212c170d$export$c1cb828b1117c77b = (0, $2e786e1650447282$export$2e2bcd8739ae039)((0, $7fd7fc20c5d99156$export$2e2bcd8739ae039)).center;\nvar $cc44a5a8212c170d$export$2e2bcd8739ae039 = $cc44a5a8212c170d$export$4d945ad3ad5751b0;\n\n\n\nfunction $92141dad1564853d$export$2e2bcd8739ae039(x) {\n    return function() {\n        return x;\n    };\n}\n\n\nfunction $7c3585a41f9f1074$export$2e2bcd8739ae039(x) {\n    return +x;\n}\n\n\nvar $ca897062bcd43aee$var$unit = [\n    0,\n    1\n];\nfunction $ca897062bcd43aee$export$f0954fd7d5368655(x) {\n    return x;\n}\nfunction $ca897062bcd43aee$var$normalize(a, b) {\n    return (b -= a = +a) ? function(x) {\n        return (x - a) / b;\n    } : (0, $92141dad1564853d$export$2e2bcd8739ae039)(isNaN(b) ? NaN : 0.5);\n}\nfunction $ca897062bcd43aee$var$clamper(a, b) {\n    var t;\n    if (a > b) t = a, a = b, b = t;\n    return function(x) {\n        return Math.max(a, Math.min(b, x));\n    };\n}\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction $ca897062bcd43aee$var$bimap(domain, range, interpolate) {\n    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n    if (d1 < d0) d0 = $ca897062bcd43aee$var$normalize(d1, d0), r0 = interpolate(r1, r0);\n    else d0 = $ca897062bcd43aee$var$normalize(d0, d1), r0 = interpolate(r0, r1);\n    return function(x) {\n        return r0(d0(x));\n    };\n}\nfunction $ca897062bcd43aee$var$polymap(domain, range, interpolate) {\n    var j = Math.min(domain.length, range.length) - 1, d = new Array(j), r = new Array(j), i = -1;\n    // Reverse descending domains.\n    if (domain[j] < domain[0]) {\n        domain = domain.slice().reverse();\n        range = range.slice().reverse();\n    }\n    while(++i < j){\n        d[i] = $ca897062bcd43aee$var$normalize(domain[i], domain[i + 1]);\n        r[i] = interpolate(range[i], range[i + 1]);\n    }\n    return function(x) {\n        var i = (0, $cc44a5a8212c170d$export$2e2bcd8739ae039)(domain, x, 1, j) - 1;\n        return r[i](d[i](x));\n    };\n}\nfunction $ca897062bcd43aee$export$784d13d8ee351f07(source, target) {\n    return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());\n}\nfunction $ca897062bcd43aee$export$6b468dcfb64c653c() {\n    var domain = $ca897062bcd43aee$var$unit, range = $ca897062bcd43aee$var$unit, interpolate = (0, $0a6b21d627aa3b76$export$2e2bcd8739ae039), transform, untransform, unknown, clamp = $ca897062bcd43aee$export$f0954fd7d5368655, piecewise, output, input;\n    function rescale() {\n        var n = Math.min(domain.length, range.length);\n        if (clamp !== $ca897062bcd43aee$export$f0954fd7d5368655) clamp = $ca897062bcd43aee$var$clamper(domain[0], domain[n - 1]);\n        piecewise = n > 2 ? $ca897062bcd43aee$var$polymap : $ca897062bcd43aee$var$bimap;\n        output = input = null;\n        return scale;\n    }\n    function scale(x) {\n        return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n    }\n    scale.invert = function(y) {\n        return clamp(untransform((input || (input = piecewise(range, domain.map(transform), (0, $4a087d8646486986$export$2e2bcd8739ae039))))(y)));\n    };\n    scale.domain = function(_) {\n        return arguments.length ? (domain = Array.from(_, (0, $7c3585a41f9f1074$export$2e2bcd8739ae039)), rescale()) : domain.slice();\n    };\n    scale.range = function(_) {\n        return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n    };\n    scale.rangeRound = function(_) {\n        return range = Array.from(_), interpolate = (0, $a7eb384d18622265$export$2e2bcd8739ae039), rescale();\n    };\n    scale.clamp = function(_) {\n        return arguments.length ? (clamp = _ ? true : $ca897062bcd43aee$export$f0954fd7d5368655, rescale()) : clamp !== $ca897062bcd43aee$export$f0954fd7d5368655;\n    };\n    scale.interpolate = function(_) {\n        return arguments.length ? (interpolate = _, rescale()) : interpolate;\n    };\n    scale.unknown = function(_) {\n        return arguments.length ? (unknown = _, scale) : unknown;\n    };\n    return function(t, u) {\n        transform = t, untransform = u;\n        return rescale();\n    };\n}\nfunction $ca897062bcd43aee$export$2e2bcd8739ae039() {\n    return $ca897062bcd43aee$export$6b468dcfb64c653c()($ca897062bcd43aee$export$f0954fd7d5368655, $ca897062bcd43aee$export$f0954fd7d5368655);\n}\n\n\nfunction $9d977ca9c6671195$export$23c7bb9e6558da2a(domain, range) {\n    switch(arguments.length){\n        case 0:\n            break;\n        case 1:\n            this.range(domain);\n            break;\n        default:\n            this.range(range).domain(domain);\n            break;\n    }\n    return this;\n}\nfunction $9d977ca9c6671195$export$7d6b419e59e83f3d(domain, interpolator) {\n    switch(arguments.length){\n        case 0:\n            break;\n        case 1:\n            if (typeof domain === \"function\") this.interpolator(domain);\n            else this.range(domain);\n            break;\n        default:\n            this.domain(domain);\n            if (typeof interpolator === \"function\") this.interpolator(interpolator);\n            else this.range(interpolator);\n            break;\n    }\n    return this;\n}\n\n\nconst $9db2f87bc4be21a0$var$e10 = Math.sqrt(50), $9db2f87bc4be21a0$var$e5 = Math.sqrt(10), $9db2f87bc4be21a0$var$e2 = Math.sqrt(2);\nfunction $9db2f87bc4be21a0$var$tickSpec(start, stop, count) {\n    const step = (stop - start) / Math.max(0, count), power = Math.floor(Math.log10(step)), error = step / Math.pow(10, power), factor = error >= $9db2f87bc4be21a0$var$e10 ? 10 : error >= $9db2f87bc4be21a0$var$e5 ? 5 : error >= $9db2f87bc4be21a0$var$e2 ? 2 : 1;\n    let i1, i2, inc;\n    if (power < 0) {\n        inc = Math.pow(10, -power) / factor;\n        i1 = Math.round(start * inc);\n        i2 = Math.round(stop * inc);\n        if (i1 / inc < start) ++i1;\n        if (i2 / inc > stop) --i2;\n        inc = -inc;\n    } else {\n        inc = Math.pow(10, power) * factor;\n        i1 = Math.round(start / inc);\n        i2 = Math.round(stop / inc);\n        if (i1 * inc < start) ++i1;\n        if (i2 * inc > stop) --i2;\n    }\n    if (i2 < i1 && 0.5 <= count && count < 2) return $9db2f87bc4be21a0$var$tickSpec(start, stop, count * 2);\n    return [\n        i1,\n        i2,\n        inc\n    ];\n}\nfunction $9db2f87bc4be21a0$export$2e2bcd8739ae039(start, stop, count) {\n    stop = +stop, start = +start, count = +count;\n    if (!(count > 0)) return [];\n    if (start === stop) return [\n        start\n    ];\n    const reverse = stop < start, [i1, i2, inc] = reverse ? $9db2f87bc4be21a0$var$tickSpec(stop, start, count) : $9db2f87bc4be21a0$var$tickSpec(start, stop, count);\n    if (!(i2 >= i1)) return [];\n    const n = i2 - i1 + 1, ticks = new Array(n);\n    if (reverse) {\n        if (inc < 0) for(let i = 0; i < n; ++i)ticks[i] = (i2 - i) / -inc;\n        else for(let i = 0; i < n; ++i)ticks[i] = (i2 - i) * inc;\n    } else {\n        if (inc < 0) for(let i = 0; i < n; ++i)ticks[i] = (i1 + i) / -inc;\n        else for(let i = 0; i < n; ++i)ticks[i] = (i1 + i) * inc;\n    }\n    return ticks;\n}\nfunction $9db2f87bc4be21a0$export$bc64d00cc98e7e95(start, stop, count) {\n    stop = +stop, start = +start, count = +count;\n    return $9db2f87bc4be21a0$var$tickSpec(start, stop, count)[2];\n}\nfunction $9db2f87bc4be21a0$export$81087d9b915d4ede(start, stop, count) {\n    stop = +stop, start = +start, count = +count;\n    const reverse = stop < start, inc = reverse ? $9db2f87bc4be21a0$export$bc64d00cc98e7e95(stop, start, count) : $9db2f87bc4be21a0$export$bc64d00cc98e7e95(start, stop, count);\n    return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\n\n\n\n\n\nfunction $1d9a870fdc1109a5$export$2e2bcd8739ae039(x) {\n    return Math.abs(x = Math.round(x)) >= 1e21 ? x.toLocaleString(\"en\").replace(/,/g, \"\") : x.toString(10);\n}\nfunction $1d9a870fdc1109a5$export$8f8e23dd27dc19f5(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n        coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n        +x.slice(i + 1)\n    ];\n}\n\n\nfunction $6b24ab7f3f29a4f5$export$2e2bcd8739ae039(x) {\n    return x = (0, $1d9a870fdc1109a5$export$8f8e23dd27dc19f5)(Math.abs(x)), x ? x[1] : NaN;\n}\n\n\nfunction $988ad308093e40d7$export$2e2bcd8739ae039(grouping, thousands) {\n    return function(value, width) {\n        var i = value.length, t = [], j = 0, g = grouping[0], length = 0;\n        while(i > 0 && g > 0){\n            if (length + g + 1 > width) g = Math.max(1, width - length);\n            t.push(value.substring(i -= g, i + g));\n            if ((length += g + 1) > width) break;\n            g = grouping[j = (j + 1) % grouping.length];\n        }\n        return t.reverse().join(thousands);\n    };\n}\n\n\nfunction $e7b99f448d26ef0e$export$2e2bcd8739ae039(numerals) {\n    return function(value) {\n        return value.replace(/[0-9]/g, function(i) {\n            return numerals[+i];\n        });\n    };\n}\n\n\n// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar $d74b19cadd883994$var$re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\nfunction $d74b19cadd883994$export$2e2bcd8739ae039(specifier) {\n    if (!(match = $d74b19cadd883994$var$re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n    var match;\n    return new $d74b19cadd883994$export$963aac351db36ed4({\n        fill: match[1],\n        align: match[2],\n        sign: match[3],\n        symbol: match[4],\n        zero: match[5],\n        width: match[6],\n        comma: match[7],\n        precision: match[8] && match[8].slice(1),\n        trim: match[9],\n        type: match[10]\n    });\n}\n$d74b19cadd883994$export$2e2bcd8739ae039.prototype = $d74b19cadd883994$export$963aac351db36ed4.prototype; // instanceof\nfunction $d74b19cadd883994$export$963aac351db36ed4(specifier) {\n    this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n    this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n    this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n    this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n    this.zero = !!specifier.zero;\n    this.width = specifier.width === undefined ? undefined : +specifier.width;\n    this.comma = !!specifier.comma;\n    this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n    this.trim = !!specifier.trim;\n    this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n$d74b19cadd883994$export$963aac351db36ed4.prototype.toString = function() {\n    return this.fill + this.align + this.sign + this.symbol + (this.zero ? \"0\" : \"\") + (this.width === undefined ? \"\" : Math.max(1, this.width | 0)) + (this.comma ? \",\" : \"\") + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0)) + (this.trim ? \"~\" : \"\") + this.type;\n};\n\n\n// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nfunction $5a3e903d533a5f71$export$2e2bcd8739ae039(s) {\n    out: for(var n = s.length, i = 1, i0 = -1, i1; i < n; ++i)switch(s[i]){\n        case \".\":\n            i0 = i1 = i;\n            break;\n        case \"0\":\n            if (i0 === 0) i0 = i;\n            i1 = i;\n            break;\n        default:\n            if (!+s[i]) break out;\n            if (i0 > 0) i0 = 0;\n            break;\n    }\n    return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n\n\n\n\nvar $4322a59c8c68d6bd$export$6863724d9a42263;\nfunction $4322a59c8c68d6bd$export$2e2bcd8739ae039(x, p) {\n    var d = (0, $1d9a870fdc1109a5$export$8f8e23dd27dc19f5)(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0], exponent = d[1], i = exponent - ($4322a59c8c68d6bd$export$6863724d9a42263 = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1, n = coefficient.length;\n    return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join(\"0\") : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i) : \"0.\" + new Array(1 - i).join(\"0\") + (0, $1d9a870fdc1109a5$export$8f8e23dd27dc19f5)(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n\n\n\nfunction $cdbbd899de71a4c0$export$2e2bcd8739ae039(x, p) {\n    var d = (0, $1d9a870fdc1109a5$export$8f8e23dd27dc19f5)(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0], exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n\n\nvar $f2f670716c3bc305$export$2e2bcd8739ae039 = {\n    \"%\": (x, p)=>(x * 100).toFixed(p),\n    \"b\": (x)=>Math.round(x).toString(2),\n    \"c\": (x)=>x + \"\",\n    \"d\": (0, $1d9a870fdc1109a5$export$2e2bcd8739ae039),\n    \"e\": (x, p)=>x.toExponential(p),\n    \"f\": (x, p)=>x.toFixed(p),\n    \"g\": (x, p)=>x.toPrecision(p),\n    \"o\": (x)=>Math.round(x).toString(8),\n    \"p\": (x, p)=>(0, $cdbbd899de71a4c0$export$2e2bcd8739ae039)(x * 100, p),\n    \"r\": (0, $cdbbd899de71a4c0$export$2e2bcd8739ae039),\n    \"s\": (0, $4322a59c8c68d6bd$export$2e2bcd8739ae039),\n    \"X\": (x)=>Math.round(x).toString(16).toUpperCase(),\n    \"x\": (x)=>Math.round(x).toString(16)\n};\n\n\n\nfunction $91261e455a6a466a$export$2e2bcd8739ae039(x) {\n    return x;\n}\n\n\nvar $7c46bc54500186c4$var$map = Array.prototype.map, $7c46bc54500186c4$var$prefixes = [\n    \"y\",\n    \"z\",\n    \"a\",\n    \"f\",\n    \"p\",\n    \"n\",\n    \"\\xb5\",\n    \"m\",\n    \"\",\n    \"k\",\n    \"M\",\n    \"G\",\n    \"T\",\n    \"P\",\n    \"E\",\n    \"Z\",\n    \"Y\"\n];\nfunction $7c46bc54500186c4$export$2e2bcd8739ae039(locale) {\n    var group = locale.grouping === undefined || locale.thousands === undefined ? (0, $91261e455a6a466a$export$2e2bcd8739ae039) : (0, $988ad308093e40d7$export$2e2bcd8739ae039)($7c46bc54500186c4$var$map.call(locale.grouping, Number), locale.thousands + \"\"), currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\", currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\", decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\", numerals = locale.numerals === undefined ? (0, $91261e455a6a466a$export$2e2bcd8739ae039) : (0, $e7b99f448d26ef0e$export$2e2bcd8739ae039)($7c46bc54500186c4$var$map.call(locale.numerals, String)), percent = locale.percent === undefined ? \"%\" : locale.percent + \"\", minus = locale.minus === undefined ? \"−\" : locale.minus + \"\", nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n    function newFormat(specifier) {\n        specifier = (0, $d74b19cadd883994$export$2e2bcd8739ae039)(specifier);\n        var fill = specifier.fill, align = specifier.align, sign = specifier.sign, symbol = specifier.symbol, zero = specifier.zero, width = specifier.width, comma = specifier.comma, precision = specifier.precision, trim = specifier.trim, type = specifier.type;\n        // The \"n\" type is an alias for \",g\".\n        if (type === \"n\") comma = true, type = \"g\";\n        else if (!(0, $f2f670716c3bc305$export$2e2bcd8739ae039)[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n        // If zero fill is specified, padding goes after sign and before digits.\n        if (zero || fill === \"0\" && align === \"=\") zero = true, fill = \"0\", align = \"=\";\n        // Compute the prefix and suffix.\n        // For SI-prefix, the suffix is lazily computed.\n        var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\", suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n        // What format function should we use?\n        // Is this an integer type?\n        // Can this type generate exponential notation?\n        var formatType = (0, $f2f670716c3bc305$export$2e2bcd8739ae039)[type], maybeSuffix = /[defgprs%]/.test(type);\n        // Set the default precision if not specified,\n        // or clamp the specified precision to the supported range.\n        // For significant precision, it must be in [1, 21].\n        // For fixed precision, it must be in [0, 20].\n        precision = precision === undefined ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));\n        function format(value) {\n            var valuePrefix = prefix, valueSuffix = suffix, i, n, c;\n            if (type === \"c\") {\n                valueSuffix = formatType(value) + valueSuffix;\n                value = \"\";\n            } else {\n                value = +value;\n                // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n                var valueNegative = value < 0 || 1 / value < 0;\n                // Perform the initial formatting.\n                value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n                // Trim insignificant zeros.\n                if (trim) value = (0, $5a3e903d533a5f71$export$2e2bcd8739ae039)(value);\n                // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n                if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n                // Compute the prefix and suffix.\n                valuePrefix = (valueNegative ? sign === \"(\" ? sign : minus : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n                valueSuffix = (type === \"s\" ? $7c46bc54500186c4$var$prefixes[8 + (0, $4322a59c8c68d6bd$export$6863724d9a42263) / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n                // Break the formatted value into the integer “value” part that can be\n                // grouped, and fractional or exponential “suffix” part that is not.\n                if (maybeSuffix) {\n                    i = -1, n = value.length;\n                    while(++i < n)if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                        valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                        value = value.slice(0, i);\n                        break;\n                    }\n                }\n            }\n            // If the fill character is not \"0\", grouping is applied before padding.\n            if (comma && !zero) value = group(value, Infinity);\n            // Compute the padding.\n            var length = valuePrefix.length + value.length + valueSuffix.length, padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n            // If the fill character is \"0\", grouping is applied after padding.\n            if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n            // Reconstruct the final output based on the desired alignment.\n            switch(align){\n                case \"<\":\n                    value = valuePrefix + value + valueSuffix + padding;\n                    break;\n                case \"=\":\n                    value = valuePrefix + padding + value + valueSuffix;\n                    break;\n                case \"^\":\n                    value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n                    break;\n                default:\n                    value = padding + valuePrefix + value + valueSuffix;\n                    break;\n            }\n            return numerals(value);\n        }\n        format.toString = function() {\n            return specifier + \"\";\n        };\n        return format;\n    }\n    function formatPrefix(specifier, value) {\n        var f = newFormat((specifier = (0, $d74b19cadd883994$export$2e2bcd8739ae039)(specifier), specifier.type = \"f\", specifier)), e = Math.max(-8, Math.min(8, Math.floor((0, $6b24ab7f3f29a4f5$export$2e2bcd8739ae039)(value) / 3))) * 3, k = Math.pow(10, -e), prefix = $7c46bc54500186c4$var$prefixes[8 + e / 3];\n        return function(value) {\n            return f(k * value) + prefix;\n        };\n    }\n    return {\n        format: newFormat,\n        formatPrefix: formatPrefix\n    };\n}\n\n\nvar $ddfc15ed0708ecec$var$locale;\nvar $ddfc15ed0708ecec$export$d9468344d3651243;\nvar $ddfc15ed0708ecec$export$8d85692a469dde6f;\n$ddfc15ed0708ecec$export$2e2bcd8739ae039({\n    thousands: \",\",\n    grouping: [\n        3\n    ],\n    currency: [\n        \"$\",\n        \"\"\n    ]\n});\nfunction $ddfc15ed0708ecec$export$2e2bcd8739ae039(definition) {\n    $ddfc15ed0708ecec$var$locale = (0, $7c46bc54500186c4$export$2e2bcd8739ae039)(definition);\n    $ddfc15ed0708ecec$export$d9468344d3651243 = $ddfc15ed0708ecec$var$locale.format;\n    $ddfc15ed0708ecec$export$8d85692a469dde6f = $ddfc15ed0708ecec$var$locale.formatPrefix;\n    return $ddfc15ed0708ecec$var$locale;\n}\n\n\nfunction $df240540b1d4e271$export$2e2bcd8739ae039(step) {\n    return Math.max(0, -(0, $6b24ab7f3f29a4f5$export$2e2bcd8739ae039)(Math.abs(step)));\n}\n\n\nfunction $30d00cc2394b8577$export$2e2bcd8739ae039(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor((0, $6b24ab7f3f29a4f5$export$2e2bcd8739ae039)(value) / 3))) * 3 - (0, $6b24ab7f3f29a4f5$export$2e2bcd8739ae039)(Math.abs(step)));\n}\n\n\nfunction $c16c33fc30a4b567$export$2e2bcd8739ae039(step, max) {\n    step = Math.abs(step), max = Math.abs(max) - step;\n    return Math.max(0, (0, $6b24ab7f3f29a4f5$export$2e2bcd8739ae039)(max) - (0, $6b24ab7f3f29a4f5$export$2e2bcd8739ae039)(step)) + 1;\n}\n\n\nfunction $36618bdb29fe134f$export$2e2bcd8739ae039(start, stop, count, specifier) {\n    var step = (0, $9db2f87bc4be21a0$export$81087d9b915d4ede)(start, stop, count), precision;\n    specifier = (0, $d74b19cadd883994$export$2e2bcd8739ae039)(specifier == null ? \",f\" : specifier);\n    switch(specifier.type){\n        case \"s\":\n            var value = Math.max(Math.abs(start), Math.abs(stop));\n            if (specifier.precision == null && !isNaN(precision = (0, $30d00cc2394b8577$export$2e2bcd8739ae039)(step, value))) specifier.precision = precision;\n            return (0, $ddfc15ed0708ecec$export$8d85692a469dde6f)(specifier, value);\n        case \"\":\n        case \"e\":\n        case \"g\":\n        case \"p\":\n        case \"r\":\n            if (specifier.precision == null && !isNaN(precision = (0, $c16c33fc30a4b567$export$2e2bcd8739ae039)(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n            break;\n        case \"f\":\n        case \"%\":\n            if (specifier.precision == null && !isNaN(precision = (0, $df240540b1d4e271$export$2e2bcd8739ae039)(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n            break;\n    }\n    return (0, $ddfc15ed0708ecec$export$d9468344d3651243)(specifier);\n}\n\n\nfunction $9d892af289cba166$export$16a5d4b4a61a274d(scale) {\n    var domain = scale.domain;\n    scale.ticks = function(count) {\n        var d = domain();\n        return (0, $9db2f87bc4be21a0$export$2e2bcd8739ae039)(d[0], d[d.length - 1], count == null ? 10 : count);\n    };\n    scale.tickFormat = function(count, specifier) {\n        var d = domain();\n        return (0, $36618bdb29fe134f$export$2e2bcd8739ae039)(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n    };\n    scale.nice = function(count) {\n        if (count == null) count = 10;\n        var d = domain();\n        var i0 = 0;\n        var i1 = d.length - 1;\n        var start = d[i0];\n        var stop = d[i1];\n        var prestep;\n        var step;\n        var maxIter = 10;\n        if (stop < start) {\n            step = start, start = stop, stop = step;\n            step = i0, i0 = i1, i1 = step;\n        }\n        while(maxIter-- > 0){\n            step = (0, $9db2f87bc4be21a0$export$bc64d00cc98e7e95)(start, stop, count);\n            if (step === prestep) {\n                d[i0] = start;\n                d[i1] = stop;\n                return domain(d);\n            } else if (step > 0) {\n                start = Math.floor(start / step) * step;\n                stop = Math.ceil(stop / step) * step;\n            } else if (step < 0) {\n                start = Math.ceil(start * step) / step;\n                stop = Math.floor(stop * step) / step;\n            } else break;\n            prestep = step;\n        }\n        return scale;\n    };\n    return scale;\n}\nfunction $9d892af289cba166$export$2e2bcd8739ae039() {\n    var scale = (0, $ca897062bcd43aee$export$2e2bcd8739ae039)();\n    scale.copy = function() {\n        return (0, $ca897062bcd43aee$export$784d13d8ee351f07)(scale, $9d892af289cba166$export$2e2bcd8739ae039());\n    };\n    (0, $9d977ca9c6671195$export$23c7bb9e6558da2a).apply(scale, arguments);\n    return $9d892af289cba166$export$16a5d4b4a61a274d(scale);\n}\n\n\n\n\nfunction $8df5ecfba528bb74$export$2e2bcd8739ae039(domain, interval) {\n    domain = domain.slice();\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], t;\n    if (x1 < x0) {\n        t = i0, i0 = i1, i1 = t;\n        t = x0, x0 = x1, x1 = t;\n    }\n    domain[i0] = interval.floor(x0);\n    domain[i1] = interval.ceil(x1);\n    return domain;\n}\n\n\n\n\nfunction $6d34d2706a66a4b6$var$transformLog(x) {\n    return Math.log(x);\n}\nfunction $6d34d2706a66a4b6$var$transformExp(x) {\n    return Math.exp(x);\n}\nfunction $6d34d2706a66a4b6$var$transformLogn(x) {\n    return -Math.log(-x);\n}\nfunction $6d34d2706a66a4b6$var$transformExpn(x) {\n    return -Math.exp(-x);\n}\nfunction $6d34d2706a66a4b6$var$pow10(x) {\n    return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\nfunction $6d34d2706a66a4b6$var$powp(base) {\n    return base === 10 ? $6d34d2706a66a4b6$var$pow10 : base === Math.E ? Math.exp : (x)=>Math.pow(base, x);\n}\nfunction $6d34d2706a66a4b6$var$logp(base) {\n    return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), (x)=>Math.log(x) / base);\n}\nfunction $6d34d2706a66a4b6$var$reflect(f) {\n    return (x, k)=>-f(-x, k);\n}\nfunction $6d34d2706a66a4b6$export$860836db074028f0(transform) {\n    const scale = transform($6d34d2706a66a4b6$var$transformLog, $6d34d2706a66a4b6$var$transformExp);\n    const domain = scale.domain;\n    let base = 10;\n    let logs;\n    let pows;\n    function rescale() {\n        logs = $6d34d2706a66a4b6$var$logp(base), pows = $6d34d2706a66a4b6$var$powp(base);\n        if (domain()[0] < 0) {\n            logs = $6d34d2706a66a4b6$var$reflect(logs), pows = $6d34d2706a66a4b6$var$reflect(pows);\n            transform($6d34d2706a66a4b6$var$transformLogn, $6d34d2706a66a4b6$var$transformExpn);\n        } else transform($6d34d2706a66a4b6$var$transformLog, $6d34d2706a66a4b6$var$transformExp);\n        return scale;\n    }\n    scale.base = function(_) {\n        return arguments.length ? (base = +_, rescale()) : base;\n    };\n    scale.domain = function(_) {\n        return arguments.length ? (domain(_), rescale()) : domain();\n    };\n    scale.ticks = (count)=>{\n        const d = domain();\n        let u = d[0];\n        let v = d[d.length - 1];\n        const r = v < u;\n        if (r) [u, v] = [\n            v,\n            u\n        ];\n        let i = logs(u);\n        let j = logs(v);\n        let k;\n        let t;\n        const n = count == null ? 10 : +count;\n        let z = [];\n        if (!(base % 1) && j - i < n) {\n            i = Math.floor(i), j = Math.ceil(j);\n            if (u > 0) for(; i <= j; ++i)for(k = 1; k < base; ++k){\n                t = i < 0 ? k / pows(-i) : k * pows(i);\n                if (t < u) continue;\n                if (t > v) break;\n                z.push(t);\n            }\n            else for(; i <= j; ++i)for(k = base - 1; k >= 1; --k){\n                t = i > 0 ? k / pows(-i) : k * pows(i);\n                if (t < u) continue;\n                if (t > v) break;\n                z.push(t);\n            }\n            if (z.length * 2 < n) z = (0, $9db2f87bc4be21a0$export$2e2bcd8739ae039)(u, v, n);\n        } else z = (0, $9db2f87bc4be21a0$export$2e2bcd8739ae039)(i, j, Math.min(j - i, n)).map(pows);\n        return r ? z.reverse() : z;\n    };\n    scale.tickFormat = (count, specifier)=>{\n        if (count == null) count = 10;\n        if (specifier == null) specifier = base === 10 ? \"s\" : \",\";\n        if (typeof specifier !== \"function\") {\n            if (!(base % 1) && (specifier = (0, $d74b19cadd883994$export$2e2bcd8739ae039)(specifier)).precision == null) specifier.trim = true;\n            specifier = (0, $ddfc15ed0708ecec$export$d9468344d3651243)(specifier);\n        }\n        if (count === Infinity) return specifier;\n        const k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n        return (d)=>{\n            let i = d / pows(Math.round(logs(d)));\n            if (i * base < base - 0.5) i *= base;\n            return i <= k ? specifier(d) : \"\";\n        };\n    };\n    scale.nice = ()=>{\n        return domain((0, $8df5ecfba528bb74$export$2e2bcd8739ae039)(domain(), {\n            floor: (x)=>pows(Math.floor(logs(x))),\n            ceil: (x)=>pows(Math.ceil(logs(x)))\n        }));\n    };\n    return scale;\n}\nfunction $6d34d2706a66a4b6$export$2e2bcd8739ae039() {\n    const scale = $6d34d2706a66a4b6$export$860836db074028f0((0, $ca897062bcd43aee$export$6b468dcfb64c653c)()).domain([\n        1,\n        10\n    ]);\n    scale.copy = ()=>(0, $ca897062bcd43aee$export$784d13d8ee351f07)(scale, $6d34d2706a66a4b6$export$2e2bcd8739ae039()).base(scale.base());\n    (0, $9d977ca9c6671195$export$23c7bb9e6558da2a).apply(scale, arguments);\n    return scale;\n}\n\n\n\n\n\nfunction $4d8d9c4f2eaba224$var$transformSymlog(c) {\n    return function(x) {\n        return Math.sign(x) * Math.log1p(Math.abs(x / c));\n    };\n}\nfunction $4d8d9c4f2eaba224$var$transformSymexp(c) {\n    return function(x) {\n        return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n    };\n}\nfunction $4d8d9c4f2eaba224$export$4602684e614eba38(transform) {\n    var c = 1, scale = transform($4d8d9c4f2eaba224$var$transformSymlog(c), $4d8d9c4f2eaba224$var$transformSymexp(c));\n    scale.constant = function(_) {\n        return arguments.length ? transform($4d8d9c4f2eaba224$var$transformSymlog(c = +_), $4d8d9c4f2eaba224$var$transformSymexp(c)) : c;\n    };\n    return (0, $9d892af289cba166$export$16a5d4b4a61a274d)(scale);\n}\nfunction $4d8d9c4f2eaba224$export$2e2bcd8739ae039() {\n    var scale = $4d8d9c4f2eaba224$export$4602684e614eba38((0, $ca897062bcd43aee$export$6b468dcfb64c653c)());\n    scale.copy = function() {\n        return (0, $ca897062bcd43aee$export$784d13d8ee351f07)(scale, $4d8d9c4f2eaba224$export$2e2bcd8739ae039()).constant(scale.constant());\n    };\n    return (0, $9d977ca9c6671195$export$23c7bb9e6558da2a).apply(scale, arguments);\n}\n\n\n\n\n\nfunction $943d43665bf2f2ea$var$transformPow(exponent) {\n    return function(x) {\n        return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n    };\n}\nfunction $943d43665bf2f2ea$var$transformSqrt(x) {\n    return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\nfunction $943d43665bf2f2ea$var$transformSquare(x) {\n    return x < 0 ? -x * x : x * x;\n}\nfunction $943d43665bf2f2ea$export$34695211ec403a46(transform) {\n    var scale = transform((0, $ca897062bcd43aee$export$f0954fd7d5368655), (0, $ca897062bcd43aee$export$f0954fd7d5368655)), exponent = 1;\n    function rescale() {\n        return exponent === 1 ? transform((0, $ca897062bcd43aee$export$f0954fd7d5368655), (0, $ca897062bcd43aee$export$f0954fd7d5368655)) : exponent === 0.5 ? transform($943d43665bf2f2ea$var$transformSqrt, $943d43665bf2f2ea$var$transformSquare) : transform($943d43665bf2f2ea$var$transformPow(exponent), $943d43665bf2f2ea$var$transformPow(1 / exponent));\n    }\n    scale.exponent = function(_) {\n        return arguments.length ? (exponent = +_, rescale()) : exponent;\n    };\n    return (0, $9d892af289cba166$export$16a5d4b4a61a274d)(scale);\n}\nfunction $943d43665bf2f2ea$export$2e2bcd8739ae039() {\n    var scale = $943d43665bf2f2ea$export$34695211ec403a46((0, $ca897062bcd43aee$export$6b468dcfb64c653c)());\n    scale.copy = function() {\n        return (0, $ca897062bcd43aee$export$784d13d8ee351f07)(scale, $943d43665bf2f2ea$export$2e2bcd8739ae039()).exponent(scale.exponent());\n    };\n    (0, $9d977ca9c6671195$export$23c7bb9e6558da2a).apply(scale, arguments);\n    return scale;\n}\nfunction $943d43665bf2f2ea$export$eba8049fb5020b81() {\n    return $943d43665bf2f2ea$export$2e2bcd8739ae039.apply(null, arguments).exponent(0.5);\n}\n\n\nfunction $970875132489e6ff$var$transformer() {\n    var x0 = 0, x1 = 1, t0, t1, k10, transform, interpolator = (0, $ca897062bcd43aee$export$f0954fd7d5368655), clamp = false, unknown;\n    function scale(x) {\n        return x == null || isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n    }\n    scale.domain = function(_) {\n        return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [\n            x0,\n            x1\n        ];\n    };\n    scale.clamp = function(_) {\n        return arguments.length ? (clamp = !!_, scale) : clamp;\n    };\n    scale.interpolator = function(_) {\n        return arguments.length ? (interpolator = _, scale) : interpolator;\n    };\n    function range(interpolate) {\n        return function(_) {\n            var r0, r1;\n            return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [\n                interpolator(0),\n                interpolator(1)\n            ];\n        };\n    }\n    scale.range = range((0, $0a6b21d627aa3b76$export$2e2bcd8739ae039));\n    scale.rangeRound = range((0, $a7eb384d18622265$export$2e2bcd8739ae039));\n    scale.unknown = function(_) {\n        return arguments.length ? (unknown = _, scale) : unknown;\n    };\n    return function(t) {\n        transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n        return scale;\n    };\n}\nfunction $970875132489e6ff$export$784d13d8ee351f07(source, target) {\n    return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());\n}\nfunction $970875132489e6ff$export$2e2bcd8739ae039() {\n    var scale = (0, $9d892af289cba166$export$16a5d4b4a61a274d)($970875132489e6ff$var$transformer()((0, $ca897062bcd43aee$export$f0954fd7d5368655)));\n    scale.copy = function() {\n        return $970875132489e6ff$export$784d13d8ee351f07(scale, $970875132489e6ff$export$2e2bcd8739ae039());\n    };\n    return (0, $9d977ca9c6671195$export$7d6b419e59e83f3d).apply(scale, arguments);\n}\nfunction $970875132489e6ff$export$6843e08bf2ff981f() {\n    var scale = (0, $6d34d2706a66a4b6$export$860836db074028f0)($970875132489e6ff$var$transformer()).domain([\n        1,\n        10\n    ]);\n    scale.copy = function() {\n        return $970875132489e6ff$export$784d13d8ee351f07(scale, $970875132489e6ff$export$6843e08bf2ff981f()).base(scale.base());\n    };\n    return (0, $9d977ca9c6671195$export$7d6b419e59e83f3d).apply(scale, arguments);\n}\nfunction $970875132489e6ff$export$9d4af4de62c81941() {\n    var scale = (0, $4d8d9c4f2eaba224$export$4602684e614eba38)($970875132489e6ff$var$transformer());\n    scale.copy = function() {\n        return $970875132489e6ff$export$784d13d8ee351f07(scale, $970875132489e6ff$export$9d4af4de62c81941()).constant(scale.constant());\n    };\n    return (0, $9d977ca9c6671195$export$7d6b419e59e83f3d).apply(scale, arguments);\n}\nfunction $970875132489e6ff$export$de9f78581b4f2405() {\n    var scale = (0, $943d43665bf2f2ea$export$34695211ec403a46)($970875132489e6ff$var$transformer());\n    scale.copy = function() {\n        return $970875132489e6ff$export$784d13d8ee351f07(scale, $970875132489e6ff$export$de9f78581b4f2405()).exponent(scale.exponent());\n    };\n    return (0, $9d977ca9c6671195$export$7d6b419e59e83f3d).apply(scale, arguments);\n}\nfunction $970875132489e6ff$export$413d935127ed466e() {\n    return $970875132489e6ff$export$de9f78581b4f2405.apply(null, arguments).exponent(0.5);\n}\n\n\n\n\nconst $934e15f7e80b4c50$export$8449e153fbd325fc = Math.PI / 180;\nconst $934e15f7e80b4c50$export$41fc368e1a942b97 = 180 / Math.PI;\n\n\nvar $71c371d0463c3865$var$A = -0.14861, $71c371d0463c3865$var$B = 1.78277, $71c371d0463c3865$var$C = -0.29227, $71c371d0463c3865$var$D = -0.90649, $71c371d0463c3865$var$E = 1.97294, $71c371d0463c3865$var$ED = $71c371d0463c3865$var$E * $71c371d0463c3865$var$D, $71c371d0463c3865$var$EB = $71c371d0463c3865$var$E * $71c371d0463c3865$var$B, $71c371d0463c3865$var$BC_DA = $71c371d0463c3865$var$B * $71c371d0463c3865$var$C - $71c371d0463c3865$var$D * $71c371d0463c3865$var$A;\nfunction $71c371d0463c3865$var$cubehelixConvert(o) {\n    if (o instanceof $71c371d0463c3865$export$57ed4bde61a1e2f2) return new $71c371d0463c3865$export$57ed4bde61a1e2f2(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof (0, $6b954386a0255d00$export$5e05a94393ac29e3))) o = (0, $6b954386a0255d00$export$42da0a331c2802f5)(o);\n    var r = o.r / 255, g = o.g / 255, b = o.b / 255, l = ($71c371d0463c3865$var$BC_DA * b + $71c371d0463c3865$var$ED * r - $71c371d0463c3865$var$EB * g) / ($71c371d0463c3865$var$BC_DA + $71c371d0463c3865$var$ED - $71c371d0463c3865$var$EB), bl = b - l, k = ($71c371d0463c3865$var$E * (g - l) - $71c371d0463c3865$var$C * bl) / $71c371d0463c3865$var$D, s = Math.sqrt(k * k + bl * bl) / ($71c371d0463c3865$var$E * l * (1 - l)), h = s ? Math.atan2(k, bl) * (0, $934e15f7e80b4c50$export$41fc368e1a942b97) - 120 : NaN;\n    return new $71c371d0463c3865$export$57ed4bde61a1e2f2(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\nfunction $71c371d0463c3865$export$2e2bcd8739ae039(h, s, l, opacity) {\n    return arguments.length === 1 ? $71c371d0463c3865$var$cubehelixConvert(h) : new $71c371d0463c3865$export$57ed4bde61a1e2f2(h, s, l, opacity == null ? 1 : opacity);\n}\nfunction $71c371d0463c3865$export$57ed4bde61a1e2f2(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n}\n(0, $e6141bbfd30ac9e4$export$2e2bcd8739ae039)($71c371d0463c3865$export$57ed4bde61a1e2f2, $71c371d0463c3865$export$2e2bcd8739ae039, (0, $e6141bbfd30ac9e4$export$8b58be045bf06082)((0, $6b954386a0255d00$export$892596cec99bc70e), {\n    brighter (k) {\n        k = k == null ? (0, $6b954386a0255d00$export$9eace2cc0d12c98d) : Math.pow((0, $6b954386a0255d00$export$9eace2cc0d12c98d), k);\n        return new $71c371d0463c3865$export$57ed4bde61a1e2f2(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker (k) {\n        k = k == null ? (0, $6b954386a0255d00$export$4adafc6ed0600c10) : Math.pow((0, $6b954386a0255d00$export$4adafc6ed0600c10), k);\n        return new $71c371d0463c3865$export$57ed4bde61a1e2f2(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb () {\n        var h = isNaN(this.h) ? 0 : (this.h + 120) * (0, $934e15f7e80b4c50$export$8449e153fbd325fc), l = +this.l, a = isNaN(this.s) ? 0 : this.s * l * (1 - l), cosh = Math.cos(h), sinh = Math.sin(h);\n        return new (0, $6b954386a0255d00$export$5e05a94393ac29e3)(255 * (l + a * ($71c371d0463c3865$var$A * cosh + $71c371d0463c3865$var$B * sinh)), 255 * (l + a * ($71c371d0463c3865$var$C * cosh + $71c371d0463c3865$var$D * sinh)), 255 * (l + a * ($71c371d0463c3865$var$E * cosh)), this.opacity);\n    }\n}));\n\n\n\n\nfunction $c9c323aa53ae4fa4$var$cubehelix(hue) {\n    return function cubehelixGamma(y) {\n        y = +y;\n        function cubehelix(start, end) {\n            var h = hue((start = (0, $71c371d0463c3865$export$2e2bcd8739ae039)(start)).h, (end = (0, $71c371d0463c3865$export$2e2bcd8739ae039)(end)).h), s = (0, $8dfce0561889250e$export$2e2bcd8739ae039)(start.s, end.s), l = (0, $8dfce0561889250e$export$2e2bcd8739ae039)(start.l, end.l), opacity = (0, $8dfce0561889250e$export$2e2bcd8739ae039)(start.opacity, end.opacity);\n            return function(t) {\n                start.h = h(t);\n                start.s = s(t);\n                start.l = l(Math.pow(t, y));\n                start.opacity = opacity(t);\n                return start + \"\";\n            };\n        }\n        cubehelix.gamma = cubehelixGamma;\n        return cubehelix;\n    }(1);\n}\nvar $c9c323aa53ae4fa4$export$2e2bcd8739ae039 = $c9c323aa53ae4fa4$var$cubehelix((0, $8dfce0561889250e$export$97d7b0c7ddb78dcf));\nvar $c9c323aa53ae4fa4$export$934fa09ad474a1b4 = $c9c323aa53ae4fa4$var$cubehelix((0, $8dfce0561889250e$export$2e2bcd8739ae039));\n\n\nvar $55faa4b4fb802c91$export$fc70efcec537be98 = (0, $c9c323aa53ae4fa4$export$934fa09ad474a1b4)((0, $71c371d0463c3865$export$2e2bcd8739ae039)(-100, 0.75, 0.35), (0, $71c371d0463c3865$export$2e2bcd8739ae039)(80, 1.50, 0.8));\nvar $55faa4b4fb802c91$export$c5cedbc1ab3be2c3 = (0, $c9c323aa53ae4fa4$export$934fa09ad474a1b4)((0, $71c371d0463c3865$export$2e2bcd8739ae039)(260, 0.75, 0.35), (0, $71c371d0463c3865$export$2e2bcd8739ae039)(80, 1.50, 0.8));\nvar $55faa4b4fb802c91$var$c = (0, $71c371d0463c3865$export$2e2bcd8739ae039)();\nfunction $55faa4b4fb802c91$export$2e2bcd8739ae039(t) {\n    if (t < 0 || t > 1) t -= Math.floor(t);\n    var ts = Math.abs(t - 0.5);\n    $55faa4b4fb802c91$var$c.h = 360 * t - 100;\n    $55faa4b4fb802c91$var$c.s = 1.5 - 1.5 * ts;\n    $55faa4b4fb802c91$var$c.l = 0.8 - 0.9 * ts;\n    return $55faa4b4fb802c91$var$c + \"\";\n}\n\n\n\nfunction $a696f7efe74d657f$var$none() {}\nfunction $a696f7efe74d657f$export$2e2bcd8739ae039(selector) {\n    return selector == null ? $a696f7efe74d657f$var$none : function() {\n        return this.querySelector(selector);\n    };\n}\n\n\nfunction $fe3e8a5771c356f3$export$2e2bcd8739ae039(select) {\n    if (typeof select !== \"function\") select = (0, $a696f7efe74d657f$export$2e2bcd8739ae039)(select);\n    for(var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j){\n        for(var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i)if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n            if (\"__data__\" in node) subnode.__data__ = node.__data__;\n            subgroup[i] = subnode;\n        }\n    }\n    return new (0, $3fa3bddc94b4f8a8$export$52baac22726c72bf)(subgroups, this._parents);\n}\n\n\n\n// Given something array like (or null), returns something that is strictly an\n// array. This is used to ensure that array-like objects passed to d3.selectAll\n// or selection.selectAll are converted into proper arrays when creating a\n// selection; we don’t ever want to create a selection backed by a live\n// HTMLCollection or NodeList. However, note that selection.selectAll will use a\n// static NodeList as a group, since it safely derived from querySelectorAll.\nfunction $6100a2c8d9353abb$export$2e2bcd8739ae039(x) {\n    return x == null ? [] : Array.isArray(x) ? x : Array.from(x);\n}\n\n\nfunction $a251e86126c3c196$var$empty() {\n    return [];\n}\nfunction $a251e86126c3c196$export$2e2bcd8739ae039(selector) {\n    return selector == null ? $a251e86126c3c196$var$empty : function() {\n        return this.querySelectorAll(selector);\n    };\n}\n\n\nfunction $c3afa9f57c3c6584$var$arrayAll(select) {\n    return function() {\n        return (0, $6100a2c8d9353abb$export$2e2bcd8739ae039)(select.apply(this, arguments));\n    };\n}\nfunction $c3afa9f57c3c6584$export$2e2bcd8739ae039(select) {\n    if (typeof select === \"function\") select = $c3afa9f57c3c6584$var$arrayAll(select);\n    else select = (0, $a251e86126c3c196$export$2e2bcd8739ae039)(select);\n    for(var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j){\n        for(var group = groups[j], n = group.length, node, i = 0; i < n; ++i)if (node = group[i]) {\n            subgroups.push(select.call(node, node.__data__, i, group));\n            parents.push(node);\n        }\n    }\n    return new (0, $3fa3bddc94b4f8a8$export$52baac22726c72bf)(subgroups, parents);\n}\n\n\nfunction $9217c1f6bb2d2b85$export$2e2bcd8739ae039(selector) {\n    return function() {\n        return this.matches(selector);\n    };\n}\nfunction $9217c1f6bb2d2b85$export$90c2759c036528(selector) {\n    return function(node) {\n        return node.matches(selector);\n    };\n}\n\n\nvar $b34141b01ced0a61$var$find = Array.prototype.find;\nfunction $b34141b01ced0a61$var$childFind(match) {\n    return function() {\n        return $b34141b01ced0a61$var$find.call(this.children, match);\n    };\n}\nfunction $b34141b01ced0a61$var$childFirst() {\n    return this.firstElementChild;\n}\nfunction $b34141b01ced0a61$export$2e2bcd8739ae039(match) {\n    return this.select(match == null ? $b34141b01ced0a61$var$childFirst : $b34141b01ced0a61$var$childFind(typeof match === \"function\" ? match : (0, $9217c1f6bb2d2b85$export$90c2759c036528)(match)));\n}\n\n\n\nvar $437727374f9902ec$var$filter = Array.prototype.filter;\nfunction $437727374f9902ec$var$children() {\n    return Array.from(this.children);\n}\nfunction $437727374f9902ec$var$childrenFilter(match) {\n    return function() {\n        return $437727374f9902ec$var$filter.call(this.children, match);\n    };\n}\nfunction $437727374f9902ec$export$2e2bcd8739ae039(match) {\n    return this.selectAll(match == null ? $437727374f9902ec$var$children : $437727374f9902ec$var$childrenFilter(typeof match === \"function\" ? match : (0, $9217c1f6bb2d2b85$export$90c2759c036528)(match)));\n}\n\n\n\n\nfunction $417eb06912872de0$export$2e2bcd8739ae039(match) {\n    if (typeof match !== \"function\") match = (0, $9217c1f6bb2d2b85$export$2e2bcd8739ae039)(match);\n    for(var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j){\n        for(var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i)if ((node = group[i]) && match.call(node, node.__data__, i, group)) subgroup.push(node);\n    }\n    return new (0, $3fa3bddc94b4f8a8$export$52baac22726c72bf)(subgroups, this._parents);\n}\n\n\n\nfunction $16e10e18a783a307$export$2e2bcd8739ae039(update) {\n    return new Array(update.length);\n}\n\n\n\nfunction $b2f4aac14f806d3c$export$2e2bcd8739ae039() {\n    return new (0, $3fa3bddc94b4f8a8$export$52baac22726c72bf)(this._enter || this._groups.map((0, $16e10e18a783a307$export$2e2bcd8739ae039)), this._parents);\n}\nfunction $b2f4aac14f806d3c$export$67b01759a14cf6a4(parent, datum) {\n    this.ownerDocument = parent.ownerDocument;\n    this.namespaceURI = parent.namespaceURI;\n    this._next = null;\n    this._parent = parent;\n    this.__data__ = datum;\n}\n$b2f4aac14f806d3c$export$67b01759a14cf6a4.prototype = {\n    constructor: $b2f4aac14f806d3c$export$67b01759a14cf6a4,\n    appendChild: function(child) {\n        return this._parent.insertBefore(child, this._next);\n    },\n    insertBefore: function(child, next) {\n        return this._parent.insertBefore(child, next);\n    },\n    querySelector: function(selector) {\n        return this._parent.querySelector(selector);\n    },\n    querySelectorAll: function(selector) {\n        return this._parent.querySelectorAll(selector);\n    }\n};\n\n\nfunction $75c268d1af54dd4d$export$2e2bcd8739ae039(x) {\n    return function() {\n        return x;\n    };\n}\n\n\nfunction $052a9a1821040aa9$var$bindIndex(parent, group, enter, update, exit, data) {\n    var i = 0, node, groupLength = group.length, dataLength = data.length;\n    // Put any non-null nodes that fit into update.\n    // Put any null nodes into enter.\n    // Put any remaining data into enter.\n    for(; i < dataLength; ++i)if (node = group[i]) {\n        node.__data__ = data[i];\n        update[i] = node;\n    } else enter[i] = new (0, $b2f4aac14f806d3c$export$67b01759a14cf6a4)(parent, data[i]);\n    // Put any non-null nodes that don’t fit into exit.\n    for(; i < groupLength; ++i)if (node = group[i]) exit[i] = node;\n}\nfunction $052a9a1821040aa9$var$bindKey(parent, group, enter, update, exit, data, key) {\n    var i, node, nodeByKeyValue = new Map, groupLength = group.length, dataLength = data.length, keyValues = new Array(groupLength), keyValue;\n    // Compute the key for each node.\n    // If multiple nodes have the same key, the duplicates are added to exit.\n    for(i = 0; i < groupLength; ++i)if (node = group[i]) {\n        keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + \"\";\n        if (nodeByKeyValue.has(keyValue)) exit[i] = node;\n        else nodeByKeyValue.set(keyValue, node);\n    }\n    // Compute the key for each datum.\n    // If there a node associated with this key, join and add it to update.\n    // If there is not (or the key is a duplicate), add it to enter.\n    for(i = 0; i < dataLength; ++i){\n        keyValue = key.call(parent, data[i], i, data) + \"\";\n        if (node = nodeByKeyValue.get(keyValue)) {\n            update[i] = node;\n            node.__data__ = data[i];\n            nodeByKeyValue.delete(keyValue);\n        } else enter[i] = new (0, $b2f4aac14f806d3c$export$67b01759a14cf6a4)(parent, data[i]);\n    }\n    // Add any remaining nodes that were not bound to data to exit.\n    for(i = 0; i < groupLength; ++i)if ((node = group[i]) && nodeByKeyValue.get(keyValues[i]) === node) exit[i] = node;\n}\nfunction $052a9a1821040aa9$var$datum(node) {\n    return node.__data__;\n}\nfunction $052a9a1821040aa9$export$2e2bcd8739ae039(value, key) {\n    if (!arguments.length) return Array.from(this, $052a9a1821040aa9$var$datum);\n    var bind = key ? $052a9a1821040aa9$var$bindKey : $052a9a1821040aa9$var$bindIndex, parents = this._parents, groups = this._groups;\n    if (typeof value !== \"function\") value = (0, $75c268d1af54dd4d$export$2e2bcd8739ae039)(value);\n    for(var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j){\n        var parent = parents[j], group = groups[j], groupLength = group.length, data = $052a9a1821040aa9$var$arraylike(value.call(parent, parent && parent.__data__, j, parents)), dataLength = data.length, enterGroup = enter[j] = new Array(dataLength), updateGroup = update[j] = new Array(dataLength), exitGroup = exit[j] = new Array(groupLength);\n        bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n        // Now connect the enter nodes to their following update node, such that\n        // appendChild can insert the materialized enter node before this node,\n        // rather than at the end of the parent node.\n        for(var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0)if (previous = enterGroup[i0]) {\n            if (i0 >= i1) i1 = i0 + 1;\n            while(!(next = updateGroup[i1]) && ++i1 < dataLength);\n            previous._next = next || null;\n        }\n    }\n    update = new (0, $3fa3bddc94b4f8a8$export$52baac22726c72bf)(update, parents);\n    update._enter = enter;\n    update._exit = exit;\n    return update;\n}\n// Given some data, this returns an array-like view of it: an object that\n// exposes a length property and allows numeric indexing. Note that unlike\n// selectAll, this isn’t worried about “live” collections because the resulting\n// array will only be used briefly while data is being bound. (It is possible to\n// cause the data to change while iterating by using a key function, but please\n// don’t; we’d rather avoid a gratuitous copy.)\nfunction $052a9a1821040aa9$var$arraylike(data) {\n    return typeof data === \"object\" && \"length\" in data ? data // Array, TypedArray, NodeList, array-like\n     : Array.from(data); // Map, Set, iterable, string, or anything else\n}\n\n\n\n\n\nfunction $0e815177caeed21b$export$2e2bcd8739ae039() {\n    return new (0, $3fa3bddc94b4f8a8$export$52baac22726c72bf)(this._exit || this._groups.map((0, $16e10e18a783a307$export$2e2bcd8739ae039)), this._parents);\n}\n\n\nfunction $63f586900c2b4b42$export$2e2bcd8739ae039(onenter, onupdate, onexit) {\n    var enter = this.enter(), update = this, exit = this.exit();\n    if (typeof onenter === \"function\") {\n        enter = onenter(enter);\n        if (enter) enter = enter.selection();\n    } else enter = enter.append(onenter + \"\");\n    if (onupdate != null) {\n        update = onupdate(update);\n        if (update) update = update.selection();\n    }\n    if (onexit == null) exit.remove();\n    else onexit(exit);\n    return enter && update ? enter.merge(update).order() : update;\n}\n\n\n\nfunction $7a412a9de8021db3$export$2e2bcd8739ae039(context) {\n    var selection = context.selection ? context.selection() : context;\n    for(var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j){\n        for(var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i)if (node = group0[i] || group1[i]) merge[i] = node;\n    }\n    for(; j < m0; ++j)merges[j] = groups0[j];\n    return new (0, $3fa3bddc94b4f8a8$export$52baac22726c72bf)(merges, this._parents);\n}\n\n\nfunction $e17552b51cfac160$export$2e2bcd8739ae039() {\n    for(var groups = this._groups, j = -1, m = groups.length; ++j < m;){\n        for(var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;)if (node = group[i]) {\n            if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n            next = node;\n        }\n    }\n    return this;\n}\n\n\n\nfunction $6d597722efeda79a$export$2e2bcd8739ae039(compare) {\n    if (!compare) compare = $6d597722efeda79a$var$ascending;\n    function compareNode(a, b) {\n        return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n    }\n    for(var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j){\n        for(var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i)if (node = group[i]) sortgroup[i] = node;\n        sortgroup.sort(compareNode);\n    }\n    return new (0, $3fa3bddc94b4f8a8$export$52baac22726c72bf)(sortgroups, this._parents).order();\n}\nfunction $6d597722efeda79a$var$ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\n\nfunction $ae070bcd7d1235fe$export$2e2bcd8739ae039() {\n    var callback = arguments[0];\n    arguments[0] = this;\n    callback.apply(null, arguments);\n    return this;\n}\n\n\nfunction $c6e4ab7976218275$export$2e2bcd8739ae039() {\n    return Array.from(this);\n}\n\n\nfunction $055d135910c13cd5$export$2e2bcd8739ae039() {\n    for(var groups = this._groups, j = 0, m = groups.length; j < m; ++j)for(var group = groups[j], i = 0, n = group.length; i < n; ++i){\n        var node = group[i];\n        if (node) return node;\n    }\n    return null;\n}\n\n\nfunction $f897b6f378fcb9fc$export$2e2bcd8739ae039() {\n    let size = 0;\n    for (const node of this)++size; // eslint-disable-line no-unused-vars\n    return size;\n}\n\n\nfunction $889880c4b5f21a22$export$2e2bcd8739ae039() {\n    return !this.node();\n}\n\n\nfunction $b879b1474342de48$export$2e2bcd8739ae039(callback) {\n    for(var groups = this._groups, j = 0, m = groups.length; j < m; ++j){\n        for(var group = groups[j], i = 0, n = group.length, node; i < n; ++i)if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n    return this;\n}\n\n\nvar $a95bc3014beac1d3$export$201a3f7520ccc326 = \"http://www.w3.org/1999/xhtml\";\nvar $a95bc3014beac1d3$export$2e2bcd8739ae039 = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: $a95bc3014beac1d3$export$201a3f7520ccc326,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\n\nfunction $58b58edfe5dae49c$export$2e2bcd8739ae039(name) {\n    var prefix = name += \"\", i = prefix.indexOf(\":\");\n    if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n    return (0, $a95bc3014beac1d3$export$2e2bcd8739ae039).hasOwnProperty(prefix) ? {\n        space: (0, $a95bc3014beac1d3$export$2e2bcd8739ae039)[prefix],\n        local: name\n    } : name; // eslint-disable-line no-prototype-builtins\n}\n\n\nfunction $d206eec3d2c8e9d1$var$attrRemove(name) {\n    return function() {\n        this.removeAttribute(name);\n    };\n}\nfunction $d206eec3d2c8e9d1$var$attrRemoveNS(fullname) {\n    return function() {\n        this.removeAttributeNS(fullname.space, fullname.local);\n    };\n}\nfunction $d206eec3d2c8e9d1$var$attrConstant(name, value) {\n    return function() {\n        this.setAttribute(name, value);\n    };\n}\nfunction $d206eec3d2c8e9d1$var$attrConstantNS(fullname, value) {\n    return function() {\n        this.setAttributeNS(fullname.space, fullname.local, value);\n    };\n}\nfunction $d206eec3d2c8e9d1$var$attrFunction(name, value) {\n    return function() {\n        var v = value.apply(this, arguments);\n        if (v == null) this.removeAttribute(name);\n        else this.setAttribute(name, v);\n    };\n}\nfunction $d206eec3d2c8e9d1$var$attrFunctionNS(fullname, value) {\n    return function() {\n        var v = value.apply(this, arguments);\n        if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n        else this.setAttributeNS(fullname.space, fullname.local, v);\n    };\n}\nfunction $d206eec3d2c8e9d1$export$2e2bcd8739ae039(name, value) {\n    var fullname = (0, $58b58edfe5dae49c$export$2e2bcd8739ae039)(name);\n    if (arguments.length < 2) {\n        var node = this.node();\n        return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);\n    }\n    return this.each((value == null ? fullname.local ? $d206eec3d2c8e9d1$var$attrRemoveNS : $d206eec3d2c8e9d1$var$attrRemove : typeof value === \"function\" ? fullname.local ? $d206eec3d2c8e9d1$var$attrFunctionNS : $d206eec3d2c8e9d1$var$attrFunction : fullname.local ? $d206eec3d2c8e9d1$var$attrConstantNS : $d206eec3d2c8e9d1$var$attrConstant)(fullname, value));\n}\n\n\nfunction $a802501d7f7ae391$export$2e2bcd8739ae039(node) {\n    return node.ownerDocument && node.ownerDocument.defaultView // node is a Node\n     || node.document && node // node is a Window\n     || node.defaultView; // node is a Document\n}\n\n\nfunction $df9d8f43b4be6d4b$var$styleRemove(name) {\n    return function() {\n        this.style.removeProperty(name);\n    };\n}\nfunction $df9d8f43b4be6d4b$var$styleConstant(name, value, priority) {\n    return function() {\n        this.style.setProperty(name, value, priority);\n    };\n}\nfunction $df9d8f43b4be6d4b$var$styleFunction(name, value, priority) {\n    return function() {\n        var v = value.apply(this, arguments);\n        if (v == null) this.style.removeProperty(name);\n        else this.style.setProperty(name, v, priority);\n    };\n}\nfunction $df9d8f43b4be6d4b$export$2e2bcd8739ae039(name, value, priority) {\n    return arguments.length > 1 ? this.each((value == null ? $df9d8f43b4be6d4b$var$styleRemove : typeof value === \"function\" ? $df9d8f43b4be6d4b$var$styleFunction : $df9d8f43b4be6d4b$var$styleConstant)(name, value, priority == null ? \"\" : priority)) : $df9d8f43b4be6d4b$export$5e3cec964f0b5efd(this.node(), name);\n}\nfunction $df9d8f43b4be6d4b$export$5e3cec964f0b5efd(node, name) {\n    return node.style.getPropertyValue(name) || (0, $a802501d7f7ae391$export$2e2bcd8739ae039)(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\n\nfunction $f99b3adab0522f33$var$propertyRemove(name) {\n    return function() {\n        delete this[name];\n    };\n}\nfunction $f99b3adab0522f33$var$propertyConstant(name, value) {\n    return function() {\n        this[name] = value;\n    };\n}\nfunction $f99b3adab0522f33$var$propertyFunction(name, value) {\n    return function() {\n        var v = value.apply(this, arguments);\n        if (v == null) delete this[name];\n        else this[name] = v;\n    };\n}\nfunction $f99b3adab0522f33$export$2e2bcd8739ae039(name, value) {\n    return arguments.length > 1 ? this.each((value == null ? $f99b3adab0522f33$var$propertyRemove : typeof value === \"function\" ? $f99b3adab0522f33$var$propertyFunction : $f99b3adab0522f33$var$propertyConstant)(name, value)) : this.node()[name];\n}\n\n\nfunction $d06e661034a45406$var$classArray(string) {\n    return string.trim().split(/^|\\s+/);\n}\nfunction $d06e661034a45406$var$classList(node) {\n    return node.classList || new $d06e661034a45406$var$ClassList(node);\n}\nfunction $d06e661034a45406$var$ClassList(node) {\n    this._node = node;\n    this._names = $d06e661034a45406$var$classArray(node.getAttribute(\"class\") || \"\");\n}\n$d06e661034a45406$var$ClassList.prototype = {\n    add: function(name) {\n        var i = this._names.indexOf(name);\n        if (i < 0) {\n            this._names.push(name);\n            this._node.setAttribute(\"class\", this._names.join(\" \"));\n        }\n    },\n    remove: function(name) {\n        var i = this._names.indexOf(name);\n        if (i >= 0) {\n            this._names.splice(i, 1);\n            this._node.setAttribute(\"class\", this._names.join(\" \"));\n        }\n    },\n    contains: function(name) {\n        return this._names.indexOf(name) >= 0;\n    }\n};\nfunction $d06e661034a45406$var$classedAdd(node, names) {\n    var list = $d06e661034a45406$var$classList(node), i = -1, n = names.length;\n    while(++i < n)list.add(names[i]);\n}\nfunction $d06e661034a45406$var$classedRemove(node, names) {\n    var list = $d06e661034a45406$var$classList(node), i = -1, n = names.length;\n    while(++i < n)list.remove(names[i]);\n}\nfunction $d06e661034a45406$var$classedTrue(names) {\n    return function() {\n        $d06e661034a45406$var$classedAdd(this, names);\n    };\n}\nfunction $d06e661034a45406$var$classedFalse(names) {\n    return function() {\n        $d06e661034a45406$var$classedRemove(this, names);\n    };\n}\nfunction $d06e661034a45406$var$classedFunction(names, value) {\n    return function() {\n        (value.apply(this, arguments) ? $d06e661034a45406$var$classedAdd : $d06e661034a45406$var$classedRemove)(this, names);\n    };\n}\nfunction $d06e661034a45406$export$2e2bcd8739ae039(name, value) {\n    var names = $d06e661034a45406$var$classArray(name + \"\");\n    if (arguments.length < 2) {\n        var list = $d06e661034a45406$var$classList(this.node()), i = -1, n = names.length;\n        while(++i < n)if (!list.contains(names[i])) return false;\n        return true;\n    }\n    return this.each((typeof value === \"function\" ? $d06e661034a45406$var$classedFunction : value ? $d06e661034a45406$var$classedTrue : $d06e661034a45406$var$classedFalse)(names, value));\n}\n\n\nfunction $039cad3e6b62ef93$var$textRemove() {\n    this.textContent = \"\";\n}\nfunction $039cad3e6b62ef93$var$textConstant(value) {\n    return function() {\n        this.textContent = value;\n    };\n}\nfunction $039cad3e6b62ef93$var$textFunction(value) {\n    return function() {\n        var v = value.apply(this, arguments);\n        this.textContent = v == null ? \"\" : v;\n    };\n}\nfunction $039cad3e6b62ef93$export$2e2bcd8739ae039(value) {\n    return arguments.length ? this.each(value == null ? $039cad3e6b62ef93$var$textRemove : (typeof value === \"function\" ? $039cad3e6b62ef93$var$textFunction : $039cad3e6b62ef93$var$textConstant)(value)) : this.node().textContent;\n}\n\n\nfunction $c8e884507bcbc0d6$var$htmlRemove() {\n    this.innerHTML = \"\";\n}\nfunction $c8e884507bcbc0d6$var$htmlConstant(value) {\n    return function() {\n        this.innerHTML = value;\n    };\n}\nfunction $c8e884507bcbc0d6$var$htmlFunction(value) {\n    return function() {\n        var v = value.apply(this, arguments);\n        this.innerHTML = v == null ? \"\" : v;\n    };\n}\nfunction $c8e884507bcbc0d6$export$2e2bcd8739ae039(value) {\n    return arguments.length ? this.each(value == null ? $c8e884507bcbc0d6$var$htmlRemove : (typeof value === \"function\" ? $c8e884507bcbc0d6$var$htmlFunction : $c8e884507bcbc0d6$var$htmlConstant)(value)) : this.node().innerHTML;\n}\n\n\nfunction $d32582798f21257c$var$raise() {\n    if (this.nextSibling) this.parentNode.appendChild(this);\n}\nfunction $d32582798f21257c$export$2e2bcd8739ae039() {\n    return this.each($d32582798f21257c$var$raise);\n}\n\n\nfunction $81fa89a3cf707281$var$lower() {\n    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\nfunction $81fa89a3cf707281$export$2e2bcd8739ae039() {\n    return this.each($81fa89a3cf707281$var$lower);\n}\n\n\n\n\nfunction $9eff7b5d7c009c96$var$creatorInherit(name) {\n    return function() {\n        var document = this.ownerDocument, uri = this.namespaceURI;\n        return uri === (0, $a95bc3014beac1d3$export$201a3f7520ccc326) && document.documentElement.namespaceURI === (0, $a95bc3014beac1d3$export$201a3f7520ccc326) ? document.createElement(name) : document.createElementNS(uri, name);\n    };\n}\nfunction $9eff7b5d7c009c96$var$creatorFixed(fullname) {\n    return function() {\n        return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n    };\n}\nfunction $9eff7b5d7c009c96$export$2e2bcd8739ae039(name) {\n    var fullname = (0, $58b58edfe5dae49c$export$2e2bcd8739ae039)(name);\n    return (fullname.local ? $9eff7b5d7c009c96$var$creatorFixed : $9eff7b5d7c009c96$var$creatorInherit)(fullname);\n}\n\n\nfunction $e7e5728b38923688$export$2e2bcd8739ae039(name) {\n    var create = typeof name === \"function\" ? name : (0, $9eff7b5d7c009c96$export$2e2bcd8739ae039)(name);\n    return this.select(function() {\n        return this.appendChild(create.apply(this, arguments));\n    });\n}\n\n\n\n\nfunction $92828970e51f2858$var$constantNull() {\n    return null;\n}\nfunction $92828970e51f2858$export$2e2bcd8739ae039(name, before) {\n    var create = typeof name === \"function\" ? name : (0, $9eff7b5d7c009c96$export$2e2bcd8739ae039)(name), select = before == null ? $92828970e51f2858$var$constantNull : typeof before === \"function\" ? before : (0, $a696f7efe74d657f$export$2e2bcd8739ae039)(before);\n    return this.select(function() {\n        return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n    });\n}\n\n\nfunction $3fba60665c09da9b$var$remove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n}\nfunction $3fba60665c09da9b$export$2e2bcd8739ae039() {\n    return this.each($3fba60665c09da9b$var$remove);\n}\n\n\nfunction $f8ba4680beaf3292$var$selection_cloneShallow() {\n    var clone = this.cloneNode(false), parent = this.parentNode;\n    return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\nfunction $f8ba4680beaf3292$var$selection_cloneDeep() {\n    var clone = this.cloneNode(true), parent = this.parentNode;\n    return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\nfunction $f8ba4680beaf3292$export$2e2bcd8739ae039(deep) {\n    return this.select(deep ? $f8ba4680beaf3292$var$selection_cloneDeep : $f8ba4680beaf3292$var$selection_cloneShallow);\n}\n\n\nfunction $d5e7be624eaf3e5d$export$2e2bcd8739ae039(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.node().__data__;\n}\n\n\nfunction $f620cfb2b91d85e5$var$contextListener(listener) {\n    return function(event) {\n        listener.call(this, event, this.__data__);\n    };\n}\nfunction $f620cfb2b91d85e5$var$parseTypenames(typenames) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n        var name = \"\", i = t.indexOf(\".\");\n        if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n        return {\n            type: t,\n            name: name\n        };\n    });\n}\nfunction $f620cfb2b91d85e5$var$onRemove(typename) {\n    return function() {\n        var on = this.__on;\n        if (!on) return;\n        for(var j = 0, i = -1, m = on.length, o; j < m; ++j)if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) this.removeEventListener(o.type, o.listener, o.options);\n        else on[++i] = o;\n        if (++i) on.length = i;\n        else delete this.__on;\n    };\n}\nfunction $f620cfb2b91d85e5$var$onAdd(typename, value, options) {\n    return function() {\n        var on = this.__on, o, listener = $f620cfb2b91d85e5$var$contextListener(value);\n        if (on) {\n            for(var j = 0, m = on.length; j < m; ++j)if ((o = on[j]).type === typename.type && o.name === typename.name) {\n                this.removeEventListener(o.type, o.listener, o.options);\n                this.addEventListener(o.type, o.listener = listener, o.options = options);\n                o.value = value;\n                return;\n            }\n        }\n        this.addEventListener(typename.type, listener, options);\n        o = {\n            type: typename.type,\n            name: typename.name,\n            value: value,\n            listener: listener,\n            options: options\n        };\n        if (!on) this.__on = [\n            o\n        ];\n        else on.push(o);\n    };\n}\nfunction $f620cfb2b91d85e5$export$2e2bcd8739ae039(typename, value, options) {\n    var typenames = $f620cfb2b91d85e5$var$parseTypenames(typename + \"\"), i, n = typenames.length, t;\n    if (arguments.length < 2) {\n        var on = this.node().__on;\n        if (on) for(var j = 0, m = on.length, o; j < m; ++j)for(i = 0, o = on[j]; i < n; ++i){\n            if ((t = typenames[i]).type === o.type && t.name === o.name) return o.value;\n        }\n        return;\n    }\n    on = value ? $f620cfb2b91d85e5$var$onAdd : $f620cfb2b91d85e5$var$onRemove;\n    for(i = 0; i < n; ++i)this.each(on(typenames[i], value, options));\n    return this;\n}\n\n\n\nfunction $049280ac271fdabe$var$dispatchEvent(node, type, params) {\n    var window = (0, $a802501d7f7ae391$export$2e2bcd8739ae039)(node), event = window.CustomEvent;\n    if (typeof event === \"function\") event = new event(type, params);\n    else {\n        event = window.document.createEvent(\"Event\");\n        if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n        else event.initEvent(type, false, false);\n    }\n    node.dispatchEvent(event);\n}\nfunction $049280ac271fdabe$var$dispatchConstant(type, params) {\n    return function() {\n        return $049280ac271fdabe$var$dispatchEvent(this, type, params);\n    };\n}\nfunction $049280ac271fdabe$var$dispatchFunction(type, params) {\n    return function() {\n        return $049280ac271fdabe$var$dispatchEvent(this, type, params.apply(this, arguments));\n    };\n}\nfunction $049280ac271fdabe$export$2e2bcd8739ae039(type, params) {\n    return this.each((typeof params === \"function\" ? $049280ac271fdabe$var$dispatchFunction : $049280ac271fdabe$var$dispatchConstant)(type, params));\n}\n\n\nfunction* $c0c33d07b05cd299$export$2e2bcd8739ae039() {\n    for(var groups = this._groups, j = 0, m = groups.length; j < m; ++j){\n        for(var group = groups[j], i = 0, n = group.length, node; i < n; ++i)if (node = group[i]) yield node;\n    }\n}\n\n\nvar $3fa3bddc94b4f8a8$export$e8e78c978b129247 = [\n    null\n];\nfunction $3fa3bddc94b4f8a8$export$52baac22726c72bf(groups, parents) {\n    this._groups = groups;\n    this._parents = parents;\n}\nfunction $3fa3bddc94b4f8a8$var$selection() {\n    return new $3fa3bddc94b4f8a8$export$52baac22726c72bf([\n        [\n            document.documentElement\n        ]\n    ], $3fa3bddc94b4f8a8$export$e8e78c978b129247);\n}\nfunction $3fa3bddc94b4f8a8$var$selection_selection() {\n    return this;\n}\n$3fa3bddc94b4f8a8$export$52baac22726c72bf.prototype = $3fa3bddc94b4f8a8$var$selection.prototype = {\n    constructor: $3fa3bddc94b4f8a8$export$52baac22726c72bf,\n    select: (0, $fe3e8a5771c356f3$export$2e2bcd8739ae039),\n    selectAll: (0, $c3afa9f57c3c6584$export$2e2bcd8739ae039),\n    selectChild: (0, $b34141b01ced0a61$export$2e2bcd8739ae039),\n    selectChildren: (0, $437727374f9902ec$export$2e2bcd8739ae039),\n    filter: (0, $417eb06912872de0$export$2e2bcd8739ae039),\n    data: (0, $052a9a1821040aa9$export$2e2bcd8739ae039),\n    enter: (0, $b2f4aac14f806d3c$export$2e2bcd8739ae039),\n    exit: (0, $0e815177caeed21b$export$2e2bcd8739ae039),\n    join: (0, $63f586900c2b4b42$export$2e2bcd8739ae039),\n    merge: (0, $7a412a9de8021db3$export$2e2bcd8739ae039),\n    selection: $3fa3bddc94b4f8a8$var$selection_selection,\n    order: (0, $e17552b51cfac160$export$2e2bcd8739ae039),\n    sort: (0, $6d597722efeda79a$export$2e2bcd8739ae039),\n    call: (0, $ae070bcd7d1235fe$export$2e2bcd8739ae039),\n    nodes: (0, $c6e4ab7976218275$export$2e2bcd8739ae039),\n    node: (0, $055d135910c13cd5$export$2e2bcd8739ae039),\n    size: (0, $f897b6f378fcb9fc$export$2e2bcd8739ae039),\n    empty: (0, $889880c4b5f21a22$export$2e2bcd8739ae039),\n    each: (0, $b879b1474342de48$export$2e2bcd8739ae039),\n    attr: (0, $d206eec3d2c8e9d1$export$2e2bcd8739ae039),\n    style: (0, $df9d8f43b4be6d4b$export$2e2bcd8739ae039),\n    property: (0, $f99b3adab0522f33$export$2e2bcd8739ae039),\n    classed: (0, $d06e661034a45406$export$2e2bcd8739ae039),\n    text: (0, $039cad3e6b62ef93$export$2e2bcd8739ae039),\n    html: (0, $c8e884507bcbc0d6$export$2e2bcd8739ae039),\n    raise: (0, $d32582798f21257c$export$2e2bcd8739ae039),\n    lower: (0, $81fa89a3cf707281$export$2e2bcd8739ae039),\n    append: (0, $e7e5728b38923688$export$2e2bcd8739ae039),\n    insert: (0, $92828970e51f2858$export$2e2bcd8739ae039),\n    remove: (0, $3fba60665c09da9b$export$2e2bcd8739ae039),\n    clone: (0, $f8ba4680beaf3292$export$2e2bcd8739ae039),\n    datum: (0, $d5e7be624eaf3e5d$export$2e2bcd8739ae039),\n    on: (0, $f620cfb2b91d85e5$export$2e2bcd8739ae039),\n    dispatch: (0, $049280ac271fdabe$export$2e2bcd8739ae039),\n    [Symbol.iterator]: (0, $c0c33d07b05cd299$export$2e2bcd8739ae039)\n};\nvar $3fa3bddc94b4f8a8$export$2e2bcd8739ae039 = $3fa3bddc94b4f8a8$var$selection;\n\n\nfunction $4506c173c1ba6b79$export$2e2bcd8739ae039(selector) {\n    return typeof selector === \"string\" ? new (0, $3fa3bddc94b4f8a8$export$52baac22726c72bf)([\n        [\n            document.querySelector(selector)\n        ]\n    ], [\n        document.documentElement\n    ]) : new (0, $3fa3bddc94b4f8a8$export$52baac22726c72bf)([\n        [\n            selector\n        ]\n    ], (0, $3fa3bddc94b4f8a8$export$e8e78c978b129247));\n}\n\n\n\nvar $f22df01f36f3bbc5$var$noop = {\n    value: ()=>{}\n};\nfunction $f22df01f36f3bbc5$var$dispatch() {\n    for(var i = 0, n = arguments.length, _ = {}, t; i < n; ++i){\n        if (!(t = arguments[i] + \"\") || t in _ || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n        _[t] = [];\n    }\n    return new $f22df01f36f3bbc5$var$Dispatch(_);\n}\nfunction $f22df01f36f3bbc5$var$Dispatch(_) {\n    this._ = _;\n}\nfunction $f22df01f36f3bbc5$var$parseTypenames(typenames, types) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n        var name = \"\", i = t.indexOf(\".\");\n        if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n        if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n        return {\n            type: t,\n            name: name\n        };\n    });\n}\n$f22df01f36f3bbc5$var$Dispatch.prototype = $f22df01f36f3bbc5$var$dispatch.prototype = {\n    constructor: $f22df01f36f3bbc5$var$Dispatch,\n    on: function(typename, callback) {\n        var _ = this._, T = $f22df01f36f3bbc5$var$parseTypenames(typename + \"\", _), t, i = -1, n = T.length;\n        // If no callback was specified, return the callback of the given type and name.\n        if (arguments.length < 2) {\n            while(++i < n)if ((t = (typename = T[i]).type) && (t = $f22df01f36f3bbc5$var$get(_[t], typename.name))) return t;\n            return;\n        }\n        // If a type was specified, set the callback for the given type and name.\n        // Otherwise, if a null callback was specified, remove callbacks of the given name.\n        if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n        while(++i < n){\n            if (t = (typename = T[i]).type) _[t] = $f22df01f36f3bbc5$var$set(_[t], typename.name, callback);\n            else if (callback == null) for(t in _)_[t] = $f22df01f36f3bbc5$var$set(_[t], typename.name, null);\n        }\n        return this;\n    },\n    copy: function() {\n        var copy = {}, _ = this._;\n        for(var t in _)copy[t] = _[t].slice();\n        return new $f22df01f36f3bbc5$var$Dispatch(copy);\n    },\n    call: function(type, that) {\n        if ((n = arguments.length - 2) > 0) for(var args = new Array(n), i = 0, n, t; i < n; ++i)args[i] = arguments[i + 2];\n        if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n        for(t = this._[type], i = 0, n = t.length; i < n; ++i)t[i].value.apply(that, args);\n    },\n    apply: function(type, that, args) {\n        if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n        for(var t = this._[type], i = 0, n = t.length; i < n; ++i)t[i].value.apply(that, args);\n    }\n};\nfunction $f22df01f36f3bbc5$var$get(type, name) {\n    for(var i = 0, n = type.length, c; i < n; ++i){\n        if ((c = type[i]).name === name) return c.value;\n    }\n}\nfunction $f22df01f36f3bbc5$var$set(type, name, callback) {\n    for(var i = 0, n = type.length; i < n; ++i)if (type[i].name === name) {\n        type[i] = $f22df01f36f3bbc5$var$noop, type = type.slice(0, i).concat(type.slice(i + 1));\n        break;\n    }\n    if (callback != null) type.push({\n        name: name,\n        value: callback\n    });\n    return type;\n}\nvar $f22df01f36f3bbc5$export$2e2bcd8739ae039 = $f22df01f36f3bbc5$var$dispatch;\n\n\nvar $0830f34b180fabe6$var$frame = 0, $0830f34b180fabe6$var$timeout = 0, $0830f34b180fabe6$var$interval = 0, $0830f34b180fabe6$var$pokeDelay = 1000, $0830f34b180fabe6$var$taskHead, $0830f34b180fabe6$var$taskTail, $0830f34b180fabe6$var$clockLast = 0, $0830f34b180fabe6$var$clockNow = 0, $0830f34b180fabe6$var$clockSkew = 0, $0830f34b180fabe6$var$clock = typeof performance === \"object\" && performance.now ? performance : Date, $0830f34b180fabe6$var$setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) {\n    setTimeout(f, 17);\n};\nfunction $0830f34b180fabe6$export$461939dd4422153() {\n    return $0830f34b180fabe6$var$clockNow || ($0830f34b180fabe6$var$setFrame($0830f34b180fabe6$var$clearNow), $0830f34b180fabe6$var$clockNow = $0830f34b180fabe6$var$clock.now() + $0830f34b180fabe6$var$clockSkew);\n}\nfunction $0830f34b180fabe6$var$clearNow() {\n    $0830f34b180fabe6$var$clockNow = 0;\n}\nfunction $0830f34b180fabe6$export$c57e9b2d8b9e4de() {\n    this._call = this._time = this._next = null;\n}\n$0830f34b180fabe6$export$c57e9b2d8b9e4de.prototype = $0830f34b180fabe6$export$9dc4ecf953986f04.prototype = {\n    constructor: $0830f34b180fabe6$export$c57e9b2d8b9e4de,\n    restart: function(callback, delay, time) {\n        if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n        time = (time == null ? $0830f34b180fabe6$export$461939dd4422153() : +time) + (delay == null ? 0 : +delay);\n        if (!this._next && $0830f34b180fabe6$var$taskTail !== this) {\n            if ($0830f34b180fabe6$var$taskTail) $0830f34b180fabe6$var$taskTail._next = this;\n            else $0830f34b180fabe6$var$taskHead = this;\n            $0830f34b180fabe6$var$taskTail = this;\n        }\n        this._call = callback;\n        this._time = time;\n        $0830f34b180fabe6$var$sleep();\n    },\n    stop: function() {\n        if (this._call) {\n            this._call = null;\n            this._time = Infinity;\n            $0830f34b180fabe6$var$sleep();\n        }\n    }\n};\nfunction $0830f34b180fabe6$export$9dc4ecf953986f04(callback, delay, time) {\n    var t = new $0830f34b180fabe6$export$c57e9b2d8b9e4de;\n    t.restart(callback, delay, time);\n    return t;\n}\nfunction $0830f34b180fabe6$export$d60154c1d7f3990e() {\n    $0830f34b180fabe6$export$461939dd4422153(); // Get the current time, if not already set.\n    ++$0830f34b180fabe6$var$frame; // Pretend we’ve set an alarm, if we haven’t already.\n    var t = $0830f34b180fabe6$var$taskHead, e;\n    while(t){\n        if ((e = $0830f34b180fabe6$var$clockNow - t._time) >= 0) t._call.call(undefined, e);\n        t = t._next;\n    }\n    --$0830f34b180fabe6$var$frame;\n}\nfunction $0830f34b180fabe6$var$wake() {\n    $0830f34b180fabe6$var$clockNow = ($0830f34b180fabe6$var$clockLast = $0830f34b180fabe6$var$clock.now()) + $0830f34b180fabe6$var$clockSkew;\n    $0830f34b180fabe6$var$frame = $0830f34b180fabe6$var$timeout = 0;\n    try {\n        $0830f34b180fabe6$export$d60154c1d7f3990e();\n    } finally{\n        $0830f34b180fabe6$var$frame = 0;\n        $0830f34b180fabe6$var$nap();\n        $0830f34b180fabe6$var$clockNow = 0;\n    }\n}\nfunction $0830f34b180fabe6$var$poke() {\n    var now = $0830f34b180fabe6$var$clock.now(), delay = now - $0830f34b180fabe6$var$clockLast;\n    if (delay > $0830f34b180fabe6$var$pokeDelay) $0830f34b180fabe6$var$clockSkew -= delay, $0830f34b180fabe6$var$clockLast = now;\n}\nfunction $0830f34b180fabe6$var$nap() {\n    var t0, t1 = $0830f34b180fabe6$var$taskHead, t2, time = Infinity;\n    while(t1)if (t1._call) {\n        if (time > t1._time) time = t1._time;\n        t0 = t1, t1 = t1._next;\n    } else {\n        t2 = t1._next, t1._next = null;\n        t1 = t0 ? t0._next = t2 : $0830f34b180fabe6$var$taskHead = t2;\n    }\n    $0830f34b180fabe6$var$taskTail = t0;\n    $0830f34b180fabe6$var$sleep(time);\n}\nfunction $0830f34b180fabe6$var$sleep(time) {\n    if ($0830f34b180fabe6$var$frame) return; // Soonest alarm already set, or will be.\n    if ($0830f34b180fabe6$var$timeout) $0830f34b180fabe6$var$timeout = clearTimeout($0830f34b180fabe6$var$timeout);\n    var delay = time - $0830f34b180fabe6$var$clockNow; // Strictly less than if we recomputed clockNow.\n    if (delay > 24) {\n        if (time < Infinity) $0830f34b180fabe6$var$timeout = setTimeout($0830f34b180fabe6$var$wake, time - $0830f34b180fabe6$var$clock.now() - $0830f34b180fabe6$var$clockSkew);\n        if ($0830f34b180fabe6$var$interval) $0830f34b180fabe6$var$interval = clearInterval($0830f34b180fabe6$var$interval);\n    } else {\n        if (!$0830f34b180fabe6$var$interval) $0830f34b180fabe6$var$clockLast = $0830f34b180fabe6$var$clock.now(), $0830f34b180fabe6$var$interval = setInterval($0830f34b180fabe6$var$poke, $0830f34b180fabe6$var$pokeDelay);\n        $0830f34b180fabe6$var$frame = 1, $0830f34b180fabe6$var$setFrame($0830f34b180fabe6$var$wake);\n    }\n}\n\n\nfunction $761d5cee6e823ef5$export$2e2bcd8739ae039(callback, delay, time) {\n    var t = new (0, $0830f34b180fabe6$export$c57e9b2d8b9e4de);\n    delay = delay == null ? 0 : +delay;\n    t.restart((elapsed)=>{\n        t.stop();\n        callback(elapsed + delay);\n    }, delay, time);\n    return t;\n}\n\n\nvar $b5673d202c1a718d$var$emptyOn = (0, $f22df01f36f3bbc5$export$2e2bcd8739ae039)(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar $b5673d202c1a718d$var$emptyTween = [];\nvar $b5673d202c1a718d$export$ff39ebd4bb12b718 = 0;\nvar $b5673d202c1a718d$export$584530fe98d14a84 = 1;\nvar $b5673d202c1a718d$export$a5d151aee16efd42 = 2;\nvar $b5673d202c1a718d$export$fb935ab5849a0db9 = 3;\nvar $b5673d202c1a718d$export$1573e22b087389af = 4;\nvar $b5673d202c1a718d$export$a2e792214ded83b2 = 5;\nvar $b5673d202c1a718d$export$9d38167254403955 = 6;\nfunction $b5673d202c1a718d$export$2e2bcd8739ae039(node, name, id, index, group, timing) {\n    var schedules = node.__transition;\n    if (!schedules) node.__transition = {};\n    else if (id in schedules) return;\n    $b5673d202c1a718d$var$create(node, id, {\n        name: name,\n        index: index,\n        group: group,\n        on: $b5673d202c1a718d$var$emptyOn,\n        tween: $b5673d202c1a718d$var$emptyTween,\n        time: timing.time,\n        delay: timing.delay,\n        duration: timing.duration,\n        ease: timing.ease,\n        timer: null,\n        state: $b5673d202c1a718d$export$ff39ebd4bb12b718\n    });\n}\nfunction $b5673d202c1a718d$export$2cd8252107eb640b(node, id) {\n    var schedule = $b5673d202c1a718d$export$3988ae62b71be9a3(node, id);\n    if (schedule.state > $b5673d202c1a718d$export$ff39ebd4bb12b718) throw new Error(\"too late; already scheduled\");\n    return schedule;\n}\nfunction $b5673d202c1a718d$export$adaa4cf7ef1b65be(node, id) {\n    var schedule = $b5673d202c1a718d$export$3988ae62b71be9a3(node, id);\n    if (schedule.state > $b5673d202c1a718d$export$fb935ab5849a0db9) throw new Error(\"too late; already running\");\n    return schedule;\n}\nfunction $b5673d202c1a718d$export$3988ae62b71be9a3(node, id) {\n    var schedule = node.__transition;\n    if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n    return schedule;\n}\nfunction $b5673d202c1a718d$var$create(node, id, self) {\n    var schedules = node.__transition, tween;\n    // Initialize the self timer when the transition is created.\n    // Note the actual delay is not known until the first callback!\n    schedules[id] = self;\n    self.timer = (0, $0830f34b180fabe6$export$9dc4ecf953986f04)(schedule, 0, self.time);\n    function schedule(elapsed) {\n        self.state = $b5673d202c1a718d$export$584530fe98d14a84;\n        self.timer.restart(start, self.delay, self.time);\n        // If the elapsed delay is less than our first sleep, start immediately.\n        if (self.delay <= elapsed) start(elapsed - self.delay);\n    }\n    function start(elapsed) {\n        var i, j, n, o;\n        // If the state is not SCHEDULED, then we previously errored on start.\n        if (self.state !== $b5673d202c1a718d$export$584530fe98d14a84) return stop();\n        for(i in schedules){\n            o = schedules[i];\n            if (o.name !== self.name) continue;\n            // While this element already has a starting transition during this frame,\n            // defer starting an interrupting transition until that transition has a\n            // chance to tick (and possibly end); see d3/d3-transition#54!\n            if (o.state === $b5673d202c1a718d$export$fb935ab5849a0db9) return (0, $761d5cee6e823ef5$export$2e2bcd8739ae039)(start);\n            // Interrupt the active transition, if any.\n            if (o.state === $b5673d202c1a718d$export$1573e22b087389af) {\n                o.state = $b5673d202c1a718d$export$9d38167254403955;\n                o.timer.stop();\n                o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n                delete schedules[i];\n            } else if (+i < id) {\n                o.state = $b5673d202c1a718d$export$9d38167254403955;\n                o.timer.stop();\n                o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n                delete schedules[i];\n            }\n        }\n        // Defer the first tick to end of the current frame; see d3/d3#1576.\n        // Note the transition may be canceled after start and before the first tick!\n        // Note this must be scheduled before the start event; see d3/d3-transition#16!\n        // Assuming this is successful, subsequent callbacks go straight to tick.\n        (0, $761d5cee6e823ef5$export$2e2bcd8739ae039)(function() {\n            if (self.state === $b5673d202c1a718d$export$fb935ab5849a0db9) {\n                self.state = $b5673d202c1a718d$export$1573e22b087389af;\n                self.timer.restart(tick, self.delay, self.time);\n                tick(elapsed);\n            }\n        });\n        // Dispatch the start event.\n        // Note this must be done before the tween are initialized.\n        self.state = $b5673d202c1a718d$export$a5d151aee16efd42;\n        self.on.call(\"start\", node, node.__data__, self.index, self.group);\n        if (self.state !== $b5673d202c1a718d$export$a5d151aee16efd42) return; // interrupted\n        self.state = $b5673d202c1a718d$export$fb935ab5849a0db9;\n        // Initialize the tween, deleting null tween.\n        tween = new Array(n = self.tween.length);\n        for(i = 0, j = -1; i < n; ++i)if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) tween[++j] = o;\n        tween.length = j + 1;\n    }\n    function tick(elapsed) {\n        var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = $b5673d202c1a718d$export$a2e792214ded83b2, 1), i = -1, n = tween.length;\n        while(++i < n)tween[i].call(node, t);\n        // Dispatch the end event.\n        if (self.state === $b5673d202c1a718d$export$a2e792214ded83b2) {\n            self.on.call(\"end\", node, node.__data__, self.index, self.group);\n            stop();\n        }\n    }\n    function stop() {\n        self.state = $b5673d202c1a718d$export$9d38167254403955;\n        self.timer.stop();\n        delete schedules[id];\n        for(var i in schedules)return; // eslint-disable-line no-unused-vars\n        delete node.__transition;\n    }\n}\n\n\nfunction $a9f60c0c7972321a$export$2e2bcd8739ae039(node, name) {\n    var schedules = node.__transition, schedule, active, empty = true, i;\n    if (!schedules) return;\n    name = name == null ? null : name + \"\";\n    for(i in schedules){\n        if ((schedule = schedules[i]).name !== name) {\n            empty = false;\n            continue;\n        }\n        active = schedule.state > (0, $b5673d202c1a718d$export$a5d151aee16efd42) && schedule.state < (0, $b5673d202c1a718d$export$a2e792214ded83b2);\n        schedule.state = (0, $b5673d202c1a718d$export$9d38167254403955);\n        schedule.timer.stop();\n        schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n        delete schedules[i];\n    }\n    if (empty) delete node.__transition;\n}\n\n\nfunction $1edbe92636db4b14$export$2e2bcd8739ae039(name) {\n    return this.each(function() {\n        (0, $a9f60c0c7972321a$export$2e2bcd8739ae039)(this, name);\n    });\n}\n\n\n\n\nvar $5e622cc4ee5dcd58$var$degrees = 180 / Math.PI;\nvar $5e622cc4ee5dcd58$export$f0954fd7d5368655 = {\n    translateX: 0,\n    translateY: 0,\n    rotate: 0,\n    skewX: 0,\n    scaleX: 1,\n    scaleY: 1\n};\nfunction $5e622cc4ee5dcd58$export$2e2bcd8739ae039(a, b, c, d, e, f) {\n    var scaleX, scaleY, skewX;\n    if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n    if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n    if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n    return {\n        translateX: e,\n        translateY: f,\n        rotate: Math.atan2(b, a) * $5e622cc4ee5dcd58$var$degrees,\n        skewX: Math.atan(skewX) * $5e622cc4ee5dcd58$var$degrees,\n        scaleX: scaleX,\n        scaleY: scaleY\n    };\n}\n\n\nvar $2336aa7b25388556$var$svgNode;\nfunction $2336aa7b25388556$export$59ad369bf4938177(value) {\n    const m = new (typeof DOMMatrix === \"function\" ? DOMMatrix : WebKitCSSMatrix)(value + \"\");\n    return m.isIdentity ? (0, $5e622cc4ee5dcd58$export$f0954fd7d5368655) : (0, $5e622cc4ee5dcd58$export$2e2bcd8739ae039)(m.a, m.b, m.c, m.d, m.e, m.f);\n}\nfunction $2336aa7b25388556$export$f9ef43f9a1d89a18(value) {\n    if (value == null) return 0, $5e622cc4ee5dcd58$export$f0954fd7d5368655;\n    if (!$2336aa7b25388556$var$svgNode) $2336aa7b25388556$var$svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    $2336aa7b25388556$var$svgNode.setAttribute(\"transform\", value);\n    if (!(value = $2336aa7b25388556$var$svgNode.transform.baseVal.consolidate())) return 0, $5e622cc4ee5dcd58$export$f0954fd7d5368655;\n    value = value.matrix;\n    return (0, $5e622cc4ee5dcd58$export$2e2bcd8739ae039)(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\n\nfunction $58d4bff51a6cd97b$var$interpolateTransform(parse, pxComma, pxParen, degParen) {\n    function pop(s) {\n        return s.length ? s.pop() + \" \" : \"\";\n    }\n    function translate(xa, ya, xb, yb, s, q) {\n        if (xa !== xb || ya !== yb) {\n            var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n            q.push({\n                i: i - 4,\n                x: (0, $4a087d8646486986$export$2e2bcd8739ae039)(xa, xb)\n            }, {\n                i: i - 2,\n                x: (0, $4a087d8646486986$export$2e2bcd8739ae039)(ya, yb)\n            });\n        } else if (xb || yb) s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n    function rotate(a, b, s, q) {\n        if (a !== b) {\n            if (a - b > 180) b += 360;\n            else if (b - a > 180) a += 360; // shortest path\n            q.push({\n                i: s.push(pop(s) + \"rotate(\", null, degParen) - 2,\n                x: (0, $4a087d8646486986$export$2e2bcd8739ae039)(a, b)\n            });\n        } else if (b) s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n    function skewX(a, b, s, q) {\n        if (a !== b) q.push({\n            i: s.push(pop(s) + \"skewX(\", null, degParen) - 2,\n            x: (0, $4a087d8646486986$export$2e2bcd8739ae039)(a, b)\n        });\n        else if (b) s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n    function scale(xa, ya, xb, yb, s, q) {\n        if (xa !== xb || ya !== yb) {\n            var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n            q.push({\n                i: i - 4,\n                x: (0, $4a087d8646486986$export$2e2bcd8739ae039)(xa, xb)\n            }, {\n                i: i - 2,\n                x: (0, $4a087d8646486986$export$2e2bcd8739ae039)(ya, yb)\n            });\n        } else if (xb !== 1 || yb !== 1) s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n    return function(a, b) {\n        var s = [], q = []; // number interpolators\n        a = parse(a), b = parse(b);\n        translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n        rotate(a.rotate, b.rotate, s, q);\n        skewX(a.skewX, b.skewX, s, q);\n        scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n        a = b = null; // gc\n        return function(t) {\n            var i = -1, n = q.length, o;\n            while(++i < n)s[(o = q[i]).i] = o.x(t);\n            return s.join(\"\");\n        };\n    };\n}\nvar $58d4bff51a6cd97b$export$56bec7123bb3589a = $58d4bff51a6cd97b$var$interpolateTransform((0, $2336aa7b25388556$export$59ad369bf4938177), \"px, \", \"px)\", \"deg)\");\nvar $58d4bff51a6cd97b$export$da8cba906d64c082 = $58d4bff51a6cd97b$var$interpolateTransform((0, $2336aa7b25388556$export$f9ef43f9a1d89a18), \", \", \")\", \")\");\n\n\n\n\nfunction $2b846766134b1951$var$tweenRemove(id, name) {\n    var tween0, tween1;\n    return function() {\n        var schedule = (0, $b5673d202c1a718d$export$adaa4cf7ef1b65be)(this, id), tween = schedule.tween;\n        // If this node shared tween with the previous node,\n        // just assign the updated shared tween and we’re done!\n        // Otherwise, copy-on-write.\n        if (tween !== tween0) {\n            tween1 = tween0 = tween;\n            for(var i = 0, n = tween1.length; i < n; ++i)if (tween1[i].name === name) {\n                tween1 = tween1.slice();\n                tween1.splice(i, 1);\n                break;\n            }\n        }\n        schedule.tween = tween1;\n    };\n}\nfunction $2b846766134b1951$var$tweenFunction(id, name, value) {\n    var tween0, tween1;\n    if (typeof value !== \"function\") throw new Error;\n    return function() {\n        var schedule = (0, $b5673d202c1a718d$export$adaa4cf7ef1b65be)(this, id), tween = schedule.tween;\n        // If this node shared tween with the previous node,\n        // just assign the updated shared tween and we’re done!\n        // Otherwise, copy-on-write.\n        if (tween !== tween0) {\n            tween1 = (tween0 = tween).slice();\n            for(var t = {\n                name: name,\n                value: value\n            }, i = 0, n = tween1.length; i < n; ++i)if (tween1[i].name === name) {\n                tween1[i] = t;\n                break;\n            }\n            if (i === n) tween1.push(t);\n        }\n        schedule.tween = tween1;\n    };\n}\nfunction $2b846766134b1951$export$2e2bcd8739ae039(name, value) {\n    var id = this._id;\n    name += \"\";\n    if (arguments.length < 2) {\n        var tween = (0, $b5673d202c1a718d$export$3988ae62b71be9a3)(this.node(), id).tween;\n        for(var i = 0, n = tween.length, t; i < n; ++i){\n            if ((t = tween[i]).name === name) return t.value;\n        }\n        return null;\n    }\n    return this.each((value == null ? $2b846766134b1951$var$tweenRemove : $2b846766134b1951$var$tweenFunction)(id, name, value));\n}\nfunction $2b846766134b1951$export$f78ce6ab10405d82(transition, name, value) {\n    var id = transition._id;\n    transition.each(function() {\n        var schedule = (0, $b5673d202c1a718d$export$adaa4cf7ef1b65be)(this, id);\n        (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n    });\n    return function(node) {\n        return (0, $b5673d202c1a718d$export$3988ae62b71be9a3)(node, id).value[name];\n    };\n}\n\n\n\n\nfunction $1d03f40d2ee03a56$export$2e2bcd8739ae039(a, b) {\n    var c;\n    return (typeof b === \"number\" ? (0, $4a087d8646486986$export$2e2bcd8739ae039) : b instanceof (0, $6b954386a0255d00$export$2e2bcd8739ae039) ? (0, $c99ed0dd240dae7d$export$2e2bcd8739ae039) : (c = (0, $6b954386a0255d00$export$2e2bcd8739ae039)(b)) ? (b = c, $c99ed0dd240dae7d$export$2e2bcd8739ae039) : (0, $256699786eb44963$export$2e2bcd8739ae039))(a, b);\n}\n\n\nfunction $fa11014bc225ccbd$var$attrRemove(name) {\n    return function() {\n        this.removeAttribute(name);\n    };\n}\nfunction $fa11014bc225ccbd$var$attrRemoveNS(fullname) {\n    return function() {\n        this.removeAttributeNS(fullname.space, fullname.local);\n    };\n}\nfunction $fa11014bc225ccbd$var$attrConstant(name, interpolate, value1) {\n    var string00, string1 = value1 + \"\", interpolate0;\n    return function() {\n        var string0 = this.getAttribute(name);\n        return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);\n    };\n}\nfunction $fa11014bc225ccbd$var$attrConstantNS(fullname, interpolate, value1) {\n    var string00, string1 = value1 + \"\", interpolate0;\n    return function() {\n        var string0 = this.getAttributeNS(fullname.space, fullname.local);\n        return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);\n    };\n}\nfunction $fa11014bc225ccbd$var$attrFunction(name, interpolate, value) {\n    var string00, string10, interpolate0;\n    return function() {\n        var string0, value1 = value(this), string1;\n        if (value1 == null) return void this.removeAttribute(name);\n        string0 = this.getAttribute(name);\n        string1 = value1 + \"\";\n        return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n    };\n}\nfunction $fa11014bc225ccbd$var$attrFunctionNS(fullname, interpolate, value) {\n    var string00, string10, interpolate0;\n    return function() {\n        var string0, value1 = value(this), string1;\n        if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n        string0 = this.getAttributeNS(fullname.space, fullname.local);\n        string1 = value1 + \"\";\n        return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n    };\n}\nfunction $fa11014bc225ccbd$export$2e2bcd8739ae039(name, value) {\n    var fullname = (0, $58b58edfe5dae49c$export$2e2bcd8739ae039)(name), i = fullname === \"transform\" ? (0, $58d4bff51a6cd97b$export$da8cba906d64c082) : (0, $1d03f40d2ee03a56$export$2e2bcd8739ae039);\n    return this.attrTween(name, typeof value === \"function\" ? (fullname.local ? $fa11014bc225ccbd$var$attrFunctionNS : $fa11014bc225ccbd$var$attrFunction)(fullname, i, (0, $2b846766134b1951$export$f78ce6ab10405d82)(this, \"attr.\" + name, value)) : value == null ? (fullname.local ? $fa11014bc225ccbd$var$attrRemoveNS : $fa11014bc225ccbd$var$attrRemove)(fullname) : (fullname.local ? $fa11014bc225ccbd$var$attrConstantNS : $fa11014bc225ccbd$var$attrConstant)(fullname, i, value));\n}\n\n\n\nfunction $89c852aaf0ffbd98$var$attrInterpolate(name, i) {\n    return function(t) {\n        this.setAttribute(name, i.call(this, t));\n    };\n}\nfunction $89c852aaf0ffbd98$var$attrInterpolateNS(fullname, i) {\n    return function(t) {\n        this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n    };\n}\nfunction $89c852aaf0ffbd98$var$attrTweenNS(fullname, value) {\n    var t0, i0;\n    function tween() {\n        var i = value.apply(this, arguments);\n        if (i !== i0) t0 = (i0 = i) && $89c852aaf0ffbd98$var$attrInterpolateNS(fullname, i);\n        return t0;\n    }\n    tween._value = value;\n    return tween;\n}\nfunction $89c852aaf0ffbd98$var$attrTween(name, value) {\n    var t0, i0;\n    function tween() {\n        var i = value.apply(this, arguments);\n        if (i !== i0) t0 = (i0 = i) && $89c852aaf0ffbd98$var$attrInterpolate(name, i);\n        return t0;\n    }\n    tween._value = value;\n    return tween;\n}\nfunction $89c852aaf0ffbd98$export$2e2bcd8739ae039(name, value) {\n    var key = \"attr.\" + name;\n    if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n    if (value == null) return this.tween(key, null);\n    if (typeof value !== \"function\") throw new Error;\n    var fullname = (0, $58b58edfe5dae49c$export$2e2bcd8739ae039)(name);\n    return this.tween(key, (fullname.local ? $89c852aaf0ffbd98$var$attrTweenNS : $89c852aaf0ffbd98$var$attrTween)(fullname, value));\n}\n\n\n\nfunction $998317f5aa574ea5$var$delayFunction(id, value) {\n    return function() {\n        (0, $b5673d202c1a718d$export$2cd8252107eb640b)(this, id).delay = +value.apply(this, arguments);\n    };\n}\nfunction $998317f5aa574ea5$var$delayConstant(id, value) {\n    return value = +value, function() {\n        (0, $b5673d202c1a718d$export$2cd8252107eb640b)(this, id).delay = value;\n    };\n}\nfunction $998317f5aa574ea5$export$2e2bcd8739ae039(value) {\n    var id = this._id;\n    return arguments.length ? this.each((typeof value === \"function\" ? $998317f5aa574ea5$var$delayFunction : $998317f5aa574ea5$var$delayConstant)(id, value)) : (0, $b5673d202c1a718d$export$3988ae62b71be9a3)(this.node(), id).delay;\n}\n\n\n\nfunction $fb064aa40c04a3a9$var$durationFunction(id, value) {\n    return function() {\n        (0, $b5673d202c1a718d$export$adaa4cf7ef1b65be)(this, id).duration = +value.apply(this, arguments);\n    };\n}\nfunction $fb064aa40c04a3a9$var$durationConstant(id, value) {\n    return value = +value, function() {\n        (0, $b5673d202c1a718d$export$adaa4cf7ef1b65be)(this, id).duration = value;\n    };\n}\nfunction $fb064aa40c04a3a9$export$2e2bcd8739ae039(value) {\n    var id = this._id;\n    return arguments.length ? this.each((typeof value === \"function\" ? $fb064aa40c04a3a9$var$durationFunction : $fb064aa40c04a3a9$var$durationConstant)(id, value)) : (0, $b5673d202c1a718d$export$3988ae62b71be9a3)(this.node(), id).duration;\n}\n\n\n\nfunction $3b84501e3f09c967$var$easeConstant(id, value) {\n    if (typeof value !== \"function\") throw new Error;\n    return function() {\n        (0, $b5673d202c1a718d$export$adaa4cf7ef1b65be)(this, id).ease = value;\n    };\n}\nfunction $3b84501e3f09c967$export$2e2bcd8739ae039(value) {\n    var id = this._id;\n    return arguments.length ? this.each($3b84501e3f09c967$var$easeConstant(id, value)) : (0, $b5673d202c1a718d$export$3988ae62b71be9a3)(this.node(), id).ease;\n}\n\n\n\nfunction $5d52f5c2bc33bebb$var$easeVarying(id, value) {\n    return function() {\n        var v = value.apply(this, arguments);\n        if (typeof v !== \"function\") throw new Error;\n        (0, $b5673d202c1a718d$export$adaa4cf7ef1b65be)(this, id).ease = v;\n    };\n}\nfunction $5d52f5c2bc33bebb$export$2e2bcd8739ae039(value) {\n    if (typeof value !== \"function\") throw new Error;\n    return this.each($5d52f5c2bc33bebb$var$easeVarying(this._id, value));\n}\n\n\n\n\nfunction $be9cef0700338389$export$2e2bcd8739ae039(match) {\n    if (typeof match !== \"function\") match = (0, $9217c1f6bb2d2b85$export$2e2bcd8739ae039)(match);\n    for(var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j){\n        for(var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i)if ((node = group[i]) && match.call(node, node.__data__, i, group)) subgroup.push(node);\n    }\n    return new (0, $f4875d2c4bb511a9$export$be58926105124dd4)(subgroups, this._parents, this._name, this._id);\n}\n\n\n\nfunction $612e64afad319e12$export$2e2bcd8739ae039(transition) {\n    if (transition._id !== this._id) throw new Error;\n    for(var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j){\n        for(var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i)if (node = group0[i] || group1[i]) merge[i] = node;\n    }\n    for(; j < m0; ++j)merges[j] = groups0[j];\n    return new (0, $f4875d2c4bb511a9$export$be58926105124dd4)(merges, this._parents, this._name, this._id);\n}\n\n\n\nfunction $43adaf0311e82f05$var$start(name) {\n    return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n        var i = t.indexOf(\".\");\n        if (i >= 0) t = t.slice(0, i);\n        return !t || t === \"start\";\n    });\n}\nfunction $43adaf0311e82f05$var$onFunction(id, name, listener) {\n    var on0, on1, sit = $43adaf0311e82f05$var$start(name) ? (0, $b5673d202c1a718d$export$2cd8252107eb640b) : (0, $b5673d202c1a718d$export$adaa4cf7ef1b65be);\n    return function() {\n        var schedule = sit(this, id), on = schedule.on;\n        // If this node shared a dispatch with the previous node,\n        // just assign the updated shared dispatch and we’re done!\n        // Otherwise, copy-on-write.\n        if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n        schedule.on = on1;\n    };\n}\nfunction $43adaf0311e82f05$export$2e2bcd8739ae039(name, listener) {\n    var id = this._id;\n    return arguments.length < 2 ? (0, $b5673d202c1a718d$export$3988ae62b71be9a3)(this.node(), id).on.on(name) : this.each($43adaf0311e82f05$var$onFunction(id, name, listener));\n}\n\n\nfunction $d081c5c9ee67d011$var$removeFunction(id) {\n    return function() {\n        var parent = this.parentNode;\n        for(var i in this.__transition)if (+i !== id) return;\n        if (parent) parent.removeChild(this);\n    };\n}\nfunction $d081c5c9ee67d011$export$2e2bcd8739ae039() {\n    return this.on(\"end.remove\", $d081c5c9ee67d011$var$removeFunction(this._id));\n}\n\n\n\n\n\nfunction $33c939ab69fb50d4$export$2e2bcd8739ae039(select) {\n    var name = this._name, id = this._id;\n    if (typeof select !== \"function\") select = (0, $a696f7efe74d657f$export$2e2bcd8739ae039)(select);\n    for(var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j){\n        for(var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i)if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n            if (\"__data__\" in node) subnode.__data__ = node.__data__;\n            subgroup[i] = subnode;\n            (0, $b5673d202c1a718d$export$2e2bcd8739ae039)(subgroup[i], name, id, i, subgroup, (0, $b5673d202c1a718d$export$3988ae62b71be9a3)(node, id));\n        }\n    }\n    return new (0, $f4875d2c4bb511a9$export$be58926105124dd4)(subgroups, this._parents, name, id);\n}\n\n\n\n\n\nfunction $5accf6381f758c01$export$2e2bcd8739ae039(select) {\n    var name = this._name, id = this._id;\n    if (typeof select !== \"function\") select = (0, $a251e86126c3c196$export$2e2bcd8739ae039)(select);\n    for(var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j){\n        for(var group = groups[j], n = group.length, node, i = 0; i < n; ++i)if (node = group[i]) {\n            for(var children = select.call(node, node.__data__, i, group), child, inherit = (0, $b5673d202c1a718d$export$3988ae62b71be9a3)(node, id), k = 0, l = children.length; k < l; ++k)if (child = children[k]) (0, $b5673d202c1a718d$export$2e2bcd8739ae039)(child, name, id, k, children, inherit);\n            subgroups.push(children);\n            parents.push(node);\n        }\n    }\n    return new (0, $f4875d2c4bb511a9$export$be58926105124dd4)(subgroups, parents, name, id);\n}\n\n\n\nvar $7a60ab3f6361005a$var$Selection = (0, $3fa3bddc94b4f8a8$export$2e2bcd8739ae039).prototype.constructor;\nfunction $7a60ab3f6361005a$export$2e2bcd8739ae039() {\n    return new $7a60ab3f6361005a$var$Selection(this._groups, this._parents);\n}\n\n\n\n\n\n\n\nfunction $406987af83016736$var$styleNull(name, interpolate) {\n    var string00, string10, interpolate0;\n    return function() {\n        var string0 = (0, $df9d8f43b4be6d4b$export$5e3cec964f0b5efd)(this, name), string1 = (this.style.removeProperty(name), (0, $df9d8f43b4be6d4b$export$5e3cec964f0b5efd)(this, name));\n        return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);\n    };\n}\nfunction $406987af83016736$var$styleRemove(name) {\n    return function() {\n        this.style.removeProperty(name);\n    };\n}\nfunction $406987af83016736$var$styleConstant(name, interpolate, value1) {\n    var string00, string1 = value1 + \"\", interpolate0;\n    return function() {\n        var string0 = (0, $df9d8f43b4be6d4b$export$5e3cec964f0b5efd)(this, name);\n        return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);\n    };\n}\nfunction $406987af83016736$var$styleFunction(name, interpolate, value) {\n    var string00, string10, interpolate0;\n    return function() {\n        var string0 = (0, $df9d8f43b4be6d4b$export$5e3cec964f0b5efd)(this, name), value1 = value(this), string1 = value1 + \"\";\n        if (value1 == null) string1 = value1 = (this.style.removeProperty(name), (0, $df9d8f43b4be6d4b$export$5e3cec964f0b5efd)(this, name));\n        return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n    };\n}\nfunction $406987af83016736$var$styleMaybeRemove(id, name) {\n    var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n    return function() {\n        var schedule = (0, $b5673d202c1a718d$export$adaa4cf7ef1b65be)(this, id), on = schedule.on, listener = schedule.value[key] == null ? remove || (remove = $406987af83016736$var$styleRemove(name)) : undefined;\n        // If this node shared a dispatch with the previous node,\n        // just assign the updated shared dispatch and we’re done!\n        // Otherwise, copy-on-write.\n        if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n        schedule.on = on1;\n    };\n}\nfunction $406987af83016736$export$2e2bcd8739ae039(name, value, priority) {\n    var i = (name += \"\") === \"transform\" ? (0, $58d4bff51a6cd97b$export$56bec7123bb3589a) : (0, $1d03f40d2ee03a56$export$2e2bcd8739ae039);\n    return value == null ? this.styleTween(name, $406987af83016736$var$styleNull(name, i)).on(\"end.style.\" + name, $406987af83016736$var$styleRemove(name)) : typeof value === \"function\" ? this.styleTween(name, $406987af83016736$var$styleFunction(name, i, (0, $2b846766134b1951$export$f78ce6ab10405d82)(this, \"style.\" + name, value))).each($406987af83016736$var$styleMaybeRemove(this._id, name)) : this.styleTween(name, $406987af83016736$var$styleConstant(name, i, value), priority).on(\"end.style.\" + name, null);\n}\n\n\nfunction $084d18b0ed660f1f$var$styleInterpolate(name, i, priority) {\n    return function(t) {\n        this.style.setProperty(name, i.call(this, t), priority);\n    };\n}\nfunction $084d18b0ed660f1f$var$styleTween(name, value, priority) {\n    var t, i0;\n    function tween() {\n        var i = value.apply(this, arguments);\n        if (i !== i0) t = (i0 = i) && $084d18b0ed660f1f$var$styleInterpolate(name, i, priority);\n        return t;\n    }\n    tween._value = value;\n    return tween;\n}\nfunction $084d18b0ed660f1f$export$2e2bcd8739ae039(name, value, priority) {\n    var key = \"style.\" + (name += \"\");\n    if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n    if (value == null) return this.tween(key, null);\n    if (typeof value !== \"function\") throw new Error;\n    return this.tween(key, $084d18b0ed660f1f$var$styleTween(name, value, priority == null ? \"\" : priority));\n}\n\n\n\nfunction $77d3177f82afb684$var$textConstant(value) {\n    return function() {\n        this.textContent = value;\n    };\n}\nfunction $77d3177f82afb684$var$textFunction(value) {\n    return function() {\n        var value1 = value(this);\n        this.textContent = value1 == null ? \"\" : value1;\n    };\n}\nfunction $77d3177f82afb684$export$2e2bcd8739ae039(value) {\n    return this.tween(\"text\", typeof value === \"function\" ? $77d3177f82afb684$var$textFunction((0, $2b846766134b1951$export$f78ce6ab10405d82)(this, \"text\", value)) : $77d3177f82afb684$var$textConstant(value == null ? \"\" : value + \"\"));\n}\n\n\nfunction $2281728614db71a0$var$textInterpolate(i) {\n    return function(t) {\n        this.textContent = i.call(this, t);\n    };\n}\nfunction $2281728614db71a0$var$textTween(value) {\n    var t0, i0;\n    function tween() {\n        var i = value.apply(this, arguments);\n        if (i !== i0) t0 = (i0 = i) && $2281728614db71a0$var$textInterpolate(i);\n        return t0;\n    }\n    tween._value = value;\n    return tween;\n}\nfunction $2281728614db71a0$export$2e2bcd8739ae039(value) {\n    var key = \"text\";\n    if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n    if (value == null) return this.tween(key, null);\n    if (typeof value !== \"function\") throw new Error;\n    return this.tween(key, $2281728614db71a0$var$textTween(value));\n}\n\n\n\n\nfunction $5075f917ce7577c6$export$2e2bcd8739ae039() {\n    var name = this._name, id0 = this._id, id1 = (0, $f4875d2c4bb511a9$export$9ffd10a3fbdc175b)();\n    for(var groups = this._groups, m = groups.length, j = 0; j < m; ++j){\n        for(var group = groups[j], n = group.length, node, i = 0; i < n; ++i)if (node = group[i]) {\n            var inherit = (0, $b5673d202c1a718d$export$3988ae62b71be9a3)(node, id0);\n            (0, $b5673d202c1a718d$export$2e2bcd8739ae039)(node, name, id1, i, group, {\n                time: inherit.time + inherit.delay + inherit.duration,\n                delay: 0,\n                duration: inherit.duration,\n                ease: inherit.ease\n            });\n        }\n    }\n    return new (0, $f4875d2c4bb511a9$export$be58926105124dd4)(groups, this._parents, name, id1);\n}\n\n\n\n\nfunction $3a3e51e88d3fd2e7$export$2e2bcd8739ae039() {\n    var on0, on1, that = this, id = that._id, size = that.size();\n    return new Promise(function(resolve, reject) {\n        var cancel = {\n            value: reject\n        }, end = {\n            value: function() {\n                if (--size === 0) resolve();\n            }\n        };\n        that.each(function() {\n            var schedule = (0, $b5673d202c1a718d$export$adaa4cf7ef1b65be)(this, id), on = schedule.on;\n            // If this node shared a dispatch with the previous node,\n            // just assign the updated shared dispatch and we’re done!\n            // Otherwise, copy-on-write.\n            if (on !== on0) {\n                on1 = (on0 = on).copy();\n                on1._.cancel.push(cancel);\n                on1._.interrupt.push(cancel);\n                on1._.end.push(end);\n            }\n            schedule.on = on1;\n        });\n        // The selection was empty, resolve end immediately\n        if (size === 0) resolve();\n    });\n}\n\n\nvar $f4875d2c4bb511a9$var$id = 0;\nfunction $f4875d2c4bb511a9$export$be58926105124dd4(groups, parents, name, id) {\n    this._groups = groups;\n    this._parents = parents;\n    this._name = name;\n    this._id = id;\n}\nfunction $f4875d2c4bb511a9$export$2e2bcd8739ae039(name) {\n    return (0, $3fa3bddc94b4f8a8$export$2e2bcd8739ae039)().transition(name);\n}\nfunction $f4875d2c4bb511a9$export$9ffd10a3fbdc175b() {\n    return ++$f4875d2c4bb511a9$var$id;\n}\nvar $f4875d2c4bb511a9$var$selection_prototype = (0, $3fa3bddc94b4f8a8$export$2e2bcd8739ae039).prototype;\n$f4875d2c4bb511a9$export$be58926105124dd4.prototype = $f4875d2c4bb511a9$export$2e2bcd8739ae039.prototype = {\n    constructor: $f4875d2c4bb511a9$export$be58926105124dd4,\n    select: (0, $33c939ab69fb50d4$export$2e2bcd8739ae039),\n    selectAll: (0, $5accf6381f758c01$export$2e2bcd8739ae039),\n    selectChild: $f4875d2c4bb511a9$var$selection_prototype.selectChild,\n    selectChildren: $f4875d2c4bb511a9$var$selection_prototype.selectChildren,\n    filter: (0, $be9cef0700338389$export$2e2bcd8739ae039),\n    merge: (0, $612e64afad319e12$export$2e2bcd8739ae039),\n    selection: (0, $7a60ab3f6361005a$export$2e2bcd8739ae039),\n    transition: (0, $5075f917ce7577c6$export$2e2bcd8739ae039),\n    call: $f4875d2c4bb511a9$var$selection_prototype.call,\n    nodes: $f4875d2c4bb511a9$var$selection_prototype.nodes,\n    node: $f4875d2c4bb511a9$var$selection_prototype.node,\n    size: $f4875d2c4bb511a9$var$selection_prototype.size,\n    empty: $f4875d2c4bb511a9$var$selection_prototype.empty,\n    each: $f4875d2c4bb511a9$var$selection_prototype.each,\n    on: (0, $43adaf0311e82f05$export$2e2bcd8739ae039),\n    attr: (0, $fa11014bc225ccbd$export$2e2bcd8739ae039),\n    attrTween: (0, $89c852aaf0ffbd98$export$2e2bcd8739ae039),\n    style: (0, $406987af83016736$export$2e2bcd8739ae039),\n    styleTween: (0, $084d18b0ed660f1f$export$2e2bcd8739ae039),\n    text: (0, $77d3177f82afb684$export$2e2bcd8739ae039),\n    textTween: (0, $2281728614db71a0$export$2e2bcd8739ae039),\n    remove: (0, $d081c5c9ee67d011$export$2e2bcd8739ae039),\n    tween: (0, $2b846766134b1951$export$2e2bcd8739ae039),\n    delay: (0, $998317f5aa574ea5$export$2e2bcd8739ae039),\n    duration: (0, $fb064aa40c04a3a9$export$2e2bcd8739ae039),\n    ease: (0, $3b84501e3f09c967$export$2e2bcd8739ae039),\n    easeVarying: (0, $5d52f5c2bc33bebb$export$2e2bcd8739ae039),\n    end: (0, $3a3e51e88d3fd2e7$export$2e2bcd8739ae039),\n    [Symbol.iterator]: $f4875d2c4bb511a9$var$selection_prototype[Symbol.iterator]\n};\n\n\n\nfunction $9b730ba464200928$export$b1a09cb1b71f86aa(t) {\n    return t * t * t;\n}\nfunction $9b730ba464200928$export$68d528839c701b6(t) {\n    return --t * t * t + 1;\n}\nfunction $9b730ba464200928$export$89238d3bc79d3ada(t) {\n    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\n\n\nvar $091a2eb19c9bc49f$var$defaultTiming = {\n    time: null,\n    delay: 0,\n    duration: 250,\n    ease: (0, $9b730ba464200928$export$89238d3bc79d3ada)\n};\nfunction $091a2eb19c9bc49f$var$inherit(node, id) {\n    var timing;\n    while(!(timing = node.__transition) || !(timing = timing[id])){\n        if (!(node = node.parentNode)) throw new Error(`transition ${id} not found`);\n    }\n    return timing;\n}\nfunction $091a2eb19c9bc49f$export$2e2bcd8739ae039(name) {\n    var id, timing;\n    if (name instanceof (0, $f4875d2c4bb511a9$export$be58926105124dd4)) id = name._id, name = name._name;\n    else id = (0, $f4875d2c4bb511a9$export$9ffd10a3fbdc175b)(), (timing = $091a2eb19c9bc49f$var$defaultTiming).time = (0, $0830f34b180fabe6$export$461939dd4422153)(), name = name == null ? null : name + \"\";\n    for(var groups = this._groups, m = groups.length, j = 0; j < m; ++j){\n        for(var group = groups[j], n = group.length, node, i = 0; i < n; ++i)if (node = group[i]) (0, $b5673d202c1a718d$export$2e2bcd8739ae039)(node, name, id, i, group, timing || $091a2eb19c9bc49f$var$inherit(node, id));\n    }\n    return new (0, $f4875d2c4bb511a9$export$be58926105124dd4)(groups, this._parents, name, id);\n}\n\n\n(0, $3fa3bddc94b4f8a8$export$2e2bcd8739ae039).prototype.interrupt = (0, $1edbe92636db4b14$export$2e2bcd8739ae039);\n(0, $3fa3bddc94b4f8a8$export$2e2bcd8739ae039).prototype.transition = (0, $091a2eb19c9bc49f$export$2e2bcd8739ae039);\n\n\n\n\n\n\n\nfunction $3435b4ae8be5b7c0$export$5118fc7a1e64441b(t) {\n    return t * t;\n}\nfunction $3435b4ae8be5b7c0$export$5be5f5e804d0b60c(t) {\n    return t * (2 - t);\n}\nfunction $3435b4ae8be5b7c0$export$d6ded66933892ed3(t) {\n    return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\n\nvar $f9d4992238192526$exports = {};\n(function(global, factory) {\n    $f9d4992238192526$exports = factory();\n})($f9d4992238192526$exports, function() {\n    \"use strict\";\n    var isTypedArray = function(x) {\n        return x instanceof Uint8Array || x instanceof Uint16Array || x instanceof Uint32Array || x instanceof Int8Array || x instanceof Int16Array || x instanceof Int32Array || x instanceof Float32Array || x instanceof Float64Array || x instanceof Uint8ClampedArray;\n    };\n    var extend = function(base, opts) {\n        var keys = Object.keys(opts);\n        for(var i = 0; i < keys.length; ++i)base[keys[i]] = opts[keys[i]];\n        return base;\n    };\n    // Error checking and parameter validation.\n    //\n    // Statements for the form `check.someProcedure(...)` get removed by\n    // a browserify transform for optimized/minified bundles.\n    //\n    /* globals atob */ var endl = \"\\n\";\n    // only used for extracting shader names.  if atob not present, then errors\n    // will be slightly crappier\n    function decodeB64(str) {\n        if (typeof atob !== \"undefined\") return atob(str);\n        return \"base64:\" + str;\n    }\n    function raise(message) {\n        var error = new Error(\"(regl) \" + message);\n        console.error(error);\n        throw error;\n    }\n    function check(pred, message) {\n        if (!pred) raise(message);\n    }\n    function encolon(message) {\n        if (message) return \": \" + message;\n        return \"\";\n    }\n    function checkParameter(param, possibilities, message) {\n        if (!(param in possibilities)) raise(\"unknown parameter (\" + param + \")\" + encolon(message) + \". possible values: \" + Object.keys(possibilities).join());\n    }\n    function checkIsTypedArray(data, message) {\n        if (!isTypedArray(data)) raise(\"invalid parameter type\" + encolon(message) + \". must be a typed array\");\n    }\n    function standardTypeEh(value, type) {\n        switch(type){\n            case \"number\":\n                return typeof value === \"number\";\n            case \"object\":\n                return typeof value === \"object\";\n            case \"string\":\n                return typeof value === \"string\";\n            case \"boolean\":\n                return typeof value === \"boolean\";\n            case \"function\":\n                return typeof value === \"function\";\n            case \"undefined\":\n                return typeof value === \"undefined\";\n            case \"symbol\":\n                return typeof value === \"symbol\";\n        }\n    }\n    function checkTypeOf(value, type, message) {\n        if (!standardTypeEh(value, type)) raise(\"invalid parameter type\" + encolon(message) + \". expected \" + type + \", got \" + typeof value);\n    }\n    function checkNonNegativeInt(value, message) {\n        if (!(value >= 0 && (value | 0) === value)) raise(\"invalid parameter type, (\" + value + \")\" + encolon(message) + \". must be a nonnegative integer\");\n    }\n    function checkOneOf(value, list, message) {\n        if (list.indexOf(value) < 0) raise(\"invalid value\" + encolon(message) + \". must be one of: \" + list);\n    }\n    var constructorKeys = [\n        \"gl\",\n        \"canvas\",\n        \"container\",\n        \"attributes\",\n        \"pixelRatio\",\n        \"extensions\",\n        \"optionalExtensions\",\n        \"profile\",\n        \"onDone\"\n    ];\n    function checkConstructor(obj) {\n        Object.keys(obj).forEach(function(key) {\n            if (constructorKeys.indexOf(key) < 0) raise('invalid regl constructor argument \"' + key + '\". must be one of ' + constructorKeys);\n        });\n    }\n    function leftPad(str, n) {\n        str = str + \"\";\n        while(str.length < n)str = \" \" + str;\n        return str;\n    }\n    function ShaderFile() {\n        this.name = \"unknown\";\n        this.lines = [];\n        this.index = {};\n        this.hasErrors = false;\n    }\n    function ShaderLine(number, line) {\n        this.number = number;\n        this.line = line;\n        this.errors = [];\n    }\n    function ShaderError(fileNumber, lineNumber, message) {\n        this.file = fileNumber;\n        this.line = lineNumber;\n        this.message = message;\n    }\n    function guessCommand() {\n        var error = new Error();\n        var stack = (error.stack || error).toString();\n        var pat = /compileProcedure.*\\n\\s*at.*\\((.*)\\)/.exec(stack);\n        if (pat) return pat[1];\n        var pat2 = /compileProcedure.*\\n\\s*at\\s+(.*)(\\n|$)/.exec(stack);\n        if (pat2) return pat2[1];\n        return \"unknown\";\n    }\n    function guessCallSite() {\n        var error = new Error();\n        var stack = (error.stack || error).toString();\n        var pat = /at REGLCommand.*\\n\\s+at.*\\((.*)\\)/.exec(stack);\n        if (pat) return pat[1];\n        var pat2 = /at REGLCommand.*\\n\\s+at\\s+(.*)\\n/.exec(stack);\n        if (pat2) return pat2[1];\n        return \"unknown\";\n    }\n    function parseSource(source, command) {\n        var lines = source.split(\"\\n\");\n        var lineNumber = 1;\n        var fileNumber = 0;\n        var files = {\n            unknown: new ShaderFile(),\n            0: new ShaderFile()\n        };\n        files.unknown.name = files[0].name = command || guessCommand();\n        files.unknown.lines.push(new ShaderLine(0, \"\"));\n        for(var i = 0; i < lines.length; ++i){\n            var line = lines[i];\n            var parts = /^\\s*#\\s*(\\w+)\\s+(.+)\\s*$/.exec(line);\n            if (parts) switch(parts[1]){\n                case \"line\":\n                    var lineNumberInfo = /(\\d+)(\\s+\\d+)?/.exec(parts[2]);\n                    if (lineNumberInfo) {\n                        lineNumber = lineNumberInfo[1] | 0;\n                        if (lineNumberInfo[2]) {\n                            fileNumber = lineNumberInfo[2] | 0;\n                            if (!(fileNumber in files)) files[fileNumber] = new ShaderFile();\n                        }\n                    }\n                    break;\n                case \"define\":\n                    var nameInfo = /SHADER_NAME(_B64)?\\s+(.*)$/.exec(parts[2]);\n                    if (nameInfo) files[fileNumber].name = nameInfo[1] ? decodeB64(nameInfo[2]) : nameInfo[2];\n                    break;\n            }\n            files[fileNumber].lines.push(new ShaderLine(lineNumber++, line));\n        }\n        Object.keys(files).forEach(function(fileNumber) {\n            var file = files[fileNumber];\n            file.lines.forEach(function(line) {\n                file.index[line.number] = line;\n            });\n        });\n        return files;\n    }\n    function parseErrorLog(errLog) {\n        var result = [];\n        errLog.split(\"\\n\").forEach(function(errMsg) {\n            if (errMsg.length < 5) return;\n            var parts = /^ERROR:\\s+(\\d+):(\\d+):\\s*(.*)$/.exec(errMsg);\n            if (parts) result.push(new ShaderError(parts[1] | 0, parts[2] | 0, parts[3].trim()));\n            else if (errMsg.length > 0) result.push(new ShaderError(\"unknown\", 0, errMsg));\n        });\n        return result;\n    }\n    function annotateFiles(files, errors) {\n        errors.forEach(function(error) {\n            var file = files[error.file];\n            if (file) {\n                var line = file.index[error.line];\n                if (line) {\n                    line.errors.push(error);\n                    file.hasErrors = true;\n                    return;\n                }\n            }\n            files.unknown.hasErrors = true;\n            files.unknown.lines[0].errors.push(error);\n        });\n    }\n    function checkShaderError(gl, shader, source, type, command) {\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            var errLog = gl.getShaderInfoLog(shader);\n            var typeName = type === gl.FRAGMENT_SHADER ? \"fragment\" : \"vertex\";\n            checkCommandType(source, \"string\", typeName + \" shader source must be a string\", command);\n            var files = parseSource(source, command);\n            var errors = parseErrorLog(errLog);\n            annotateFiles(files, errors);\n            Object.keys(files).forEach(function(fileNumber) {\n                var file = files[fileNumber];\n                if (!file.hasErrors) return;\n                var strings = [\n                    \"\"\n                ];\n                var styles = [\n                    \"\"\n                ];\n                function push(str, style) {\n                    strings.push(str);\n                    styles.push(style || \"\");\n                }\n                push(\"file number \" + fileNumber + \": \" + file.name + \"\\n\", \"color:red;text-decoration:underline;font-weight:bold\");\n                file.lines.forEach(function(line) {\n                    if (line.errors.length > 0) {\n                        push(leftPad(line.number, 4) + \"|  \", \"background-color:yellow; font-weight:bold\");\n                        push(line.line + endl, \"color:red; background-color:yellow; font-weight:bold\");\n                        // try to guess token\n                        var offset = 0;\n                        line.errors.forEach(function(error) {\n                            var message = error.message;\n                            var token = /^\\s*'(.*)'\\s*:\\s*(.*)$/.exec(message);\n                            if (token) {\n                                var tokenPat = token[1];\n                                message = token[2];\n                                switch(tokenPat){\n                                    case \"assign\":\n                                        tokenPat = \"=\";\n                                        break;\n                                }\n                                offset = Math.max(line.line.indexOf(tokenPat, offset), 0);\n                            } else offset = 0;\n                            push(leftPad(\"| \", 6));\n                            push(leftPad(\"^^^\", offset + 3) + endl, \"font-weight:bold\");\n                            push(leftPad(\"| \", 6));\n                            push(message + endl, \"font-weight:bold\");\n                        });\n                        push(leftPad(\"| \", 6) + endl);\n                    } else {\n                        push(leftPad(line.number, 4) + \"|  \");\n                        push(line.line + endl, \"color:red\");\n                    }\n                });\n                if (typeof document !== \"undefined\" && !window.chrome) {\n                    styles[0] = strings.join(\"%c\");\n                    console.log.apply(console, styles);\n                } else console.log(strings.join(\"\"));\n            });\n            check.raise(\"Error compiling \" + typeName + \" shader, \" + files[0].name);\n        }\n    }\n    function checkLinkError(gl, program, fragShader, vertShader, command) {\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            var errLog = gl.getProgramInfoLog(program);\n            var fragParse = parseSource(fragShader, command);\n            var vertParse = parseSource(vertShader, command);\n            var header = 'Error linking program with vertex shader, \"' + vertParse[0].name + '\", and fragment shader \"' + fragParse[0].name + '\"';\n            if (typeof document !== \"undefined\") console.log(\"%c\" + header + endl + \"%c\" + errLog, \"color:red;text-decoration:underline;font-weight:bold\", \"color:red\");\n            else console.log(header + endl + errLog);\n            check.raise(header);\n        }\n    }\n    function saveCommandRef(object) {\n        object._commandRef = guessCommand();\n    }\n    function saveDrawCommandInfo(opts, uniforms, attributes, stringStore) {\n        saveCommandRef(opts);\n        function id(str) {\n            if (str) return stringStore.id(str);\n            return 0;\n        }\n        opts._fragId = id(opts.static.frag);\n        opts._vertId = id(opts.static.vert);\n        function addProps(dict, set) {\n            Object.keys(set).forEach(function(u) {\n                dict[stringStore.id(u)] = true;\n            });\n        }\n        var uniformSet = opts._uniformSet = {};\n        addProps(uniformSet, uniforms.static);\n        addProps(uniformSet, uniforms.dynamic);\n        var attributeSet = opts._attributeSet = {};\n        addProps(attributeSet, attributes.static);\n        addProps(attributeSet, attributes.dynamic);\n        opts._hasCount = \"count\" in opts.static || \"count\" in opts.dynamic || \"elements\" in opts.static || \"elements\" in opts.dynamic;\n    }\n    function commandRaise(message, command) {\n        var callSite = guessCallSite();\n        raise(message + \" in command \" + (command || guessCommand()) + (callSite === \"unknown\" ? \"\" : \" called from \" + callSite));\n    }\n    function checkCommand(pred, message, command) {\n        if (!pred) commandRaise(message, command || guessCommand());\n    }\n    function checkParameterCommand(param, possibilities, message, command) {\n        if (!(param in possibilities)) commandRaise(\"unknown parameter (\" + param + \")\" + encolon(message) + \". possible values: \" + Object.keys(possibilities).join(), command || guessCommand());\n    }\n    function checkCommandType(value, type, message, command) {\n        if (!standardTypeEh(value, type)) commandRaise(\"invalid parameter type\" + encolon(message) + \". expected \" + type + \", got \" + typeof value, command || guessCommand());\n    }\n    function checkOptional(block) {\n        block();\n    }\n    function checkFramebufferFormat(attachment, texFormats, rbFormats) {\n        if (attachment.texture) checkOneOf(attachment.texture._texture.internalformat, texFormats, \"unsupported texture format for attachment\");\n        else checkOneOf(attachment.renderbuffer._renderbuffer.format, rbFormats, \"unsupported renderbuffer format for attachment\");\n    }\n    var GL_CLAMP_TO_EDGE = 0x812F;\n    var GL_NEAREST = 0x2600;\n    var GL_NEAREST_MIPMAP_NEAREST = 0x2700;\n    var GL_LINEAR_MIPMAP_NEAREST = 0x2701;\n    var GL_NEAREST_MIPMAP_LINEAR = 0x2702;\n    var GL_LINEAR_MIPMAP_LINEAR = 0x2703;\n    var GL_BYTE = 5120;\n    var GL_UNSIGNED_BYTE = 5121;\n    var GL_SHORT = 5122;\n    var GL_UNSIGNED_SHORT = 5123;\n    var GL_INT = 5124;\n    var GL_UNSIGNED_INT = 5125;\n    var GL_FLOAT = 5126;\n    var GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033;\n    var GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034;\n    var GL_UNSIGNED_SHORT_5_6_5 = 0x8363;\n    var GL_UNSIGNED_INT_24_8_WEBGL = 0x84FA;\n    var GL_HALF_FLOAT_OES = 0x8D61;\n    var TYPE_SIZE = {};\n    TYPE_SIZE[GL_BYTE] = TYPE_SIZE[GL_UNSIGNED_BYTE] = 1;\n    TYPE_SIZE[GL_SHORT] = TYPE_SIZE[GL_UNSIGNED_SHORT] = TYPE_SIZE[GL_HALF_FLOAT_OES] = TYPE_SIZE[GL_UNSIGNED_SHORT_5_6_5] = TYPE_SIZE[GL_UNSIGNED_SHORT_4_4_4_4] = TYPE_SIZE[GL_UNSIGNED_SHORT_5_5_5_1] = 2;\n    TYPE_SIZE[GL_INT] = TYPE_SIZE[GL_UNSIGNED_INT] = TYPE_SIZE[GL_FLOAT] = TYPE_SIZE[GL_UNSIGNED_INT_24_8_WEBGL] = 4;\n    function pixelSize(type, channels) {\n        if (type === GL_UNSIGNED_SHORT_5_5_5_1 || type === GL_UNSIGNED_SHORT_4_4_4_4 || type === GL_UNSIGNED_SHORT_5_6_5) return 2;\n        else if (type === GL_UNSIGNED_INT_24_8_WEBGL) return 4;\n        else return TYPE_SIZE[type] * channels;\n    }\n    function isPow2(v) {\n        return !(v & v - 1) && !!v;\n    }\n    function checkTexture2D(info, mipData, limits) {\n        var i;\n        var w = mipData.width;\n        var h = mipData.height;\n        var c = mipData.channels;\n        // Check texture shape\n        check(w > 0 && w <= limits.maxTextureSize && h > 0 && h <= limits.maxTextureSize, \"invalid texture shape\");\n        // check wrap mode\n        if (info.wrapS !== GL_CLAMP_TO_EDGE || info.wrapT !== GL_CLAMP_TO_EDGE) check(isPow2(w) && isPow2(h), \"incompatible wrap mode for texture, both width and height must be power of 2\");\n        if (mipData.mipmask === 1) {\n            if (w !== 1 && h !== 1) check(info.minFilter !== GL_NEAREST_MIPMAP_NEAREST && info.minFilter !== GL_NEAREST_MIPMAP_LINEAR && info.minFilter !== GL_LINEAR_MIPMAP_NEAREST && info.minFilter !== GL_LINEAR_MIPMAP_LINEAR, \"min filter requires mipmap\");\n        } else {\n            // texture must be power of 2\n            check(isPow2(w) && isPow2(h), \"texture must be a square power of 2 to support mipmapping\");\n            check(mipData.mipmask === (w << 1) - 1, \"missing or incomplete mipmap data\");\n        }\n        if (mipData.type === GL_FLOAT) {\n            if (limits.extensions.indexOf(\"oes_texture_float_linear\") < 0) check(info.minFilter === GL_NEAREST && info.magFilter === GL_NEAREST, \"filter not supported, must enable oes_texture_float_linear\");\n            check(!info.genMipmaps, \"mipmap generation not supported with float textures\");\n        }\n        // check image complete\n        var mipimages = mipData.images;\n        for(i = 0; i < 16; ++i){\n            if (mipimages[i]) {\n                var mw = w >> i;\n                var mh = h >> i;\n                check(mipData.mipmask & 1 << i, \"missing mipmap data\");\n                var img = mipimages[i];\n                check(img.width === mw && img.height === mh, \"invalid shape for mip images\");\n                check(img.format === mipData.format && img.internalformat === mipData.internalformat && img.type === mipData.type, \"incompatible type for mip image\");\n                if (img.compressed) ;\n                else if (img.data) {\n                    // check(img.data.byteLength === mw * mh *\n                    // Math.max(pixelSize(img.type, c), img.unpackAlignment),\n                    var rowSize = Math.ceil(pixelSize(img.type, c) * mw / img.unpackAlignment) * img.unpackAlignment;\n                    check(img.data.byteLength === rowSize * mh, \"invalid data for image, buffer size is inconsistent with image format\");\n                } else if (img.element) ;\n                else img.copy;\n            } else if (!info.genMipmaps) check((mipData.mipmask & 1 << i) === 0, \"extra mipmap data\");\n        }\n        if (mipData.compressed) check(!info.genMipmaps, \"mipmap generation for compressed images not supported\");\n    }\n    function checkTextureCube(texture, info, faces, limits) {\n        var w = texture.width;\n        var h = texture.height;\n        var c = texture.channels;\n        // Check texture shape\n        check(w > 0 && w <= limits.maxTextureSize && h > 0 && h <= limits.maxTextureSize, \"invalid texture shape\");\n        check(w === h, \"cube map must be square\");\n        check(info.wrapS === GL_CLAMP_TO_EDGE && info.wrapT === GL_CLAMP_TO_EDGE, \"wrap mode not supported by cube map\");\n        for(var i = 0; i < faces.length; ++i){\n            var face = faces[i];\n            check(face.width === w && face.height === h, \"inconsistent cube map face shape\");\n            if (info.genMipmaps) {\n                check(!face.compressed, \"can not generate mipmap for compressed textures\");\n                check(face.mipmask === 1, \"can not specify mipmaps and generate mipmaps\");\n            }\n            var mipmaps = face.images;\n            for(var j = 0; j < 16; ++j){\n                var img = mipmaps[j];\n                if (img) {\n                    var mw = w >> j;\n                    var mh = h >> j;\n                    check(face.mipmask & 1 << j, \"missing mipmap data\");\n                    check(img.width === mw && img.height === mh, \"invalid shape for mip images\");\n                    check(img.format === texture.format && img.internalformat === texture.internalformat && img.type === texture.type, \"incompatible type for mip image\");\n                    if (img.compressed) ;\n                    else if (img.data) check(img.data.byteLength === mw * mh * Math.max(pixelSize(img.type, c), img.unpackAlignment), \"invalid data for image, buffer size is inconsistent with image format\");\n                    else if (img.element) ;\n                    else img.copy;\n                }\n            }\n        }\n    }\n    var check$1 = extend(check, {\n        optional: checkOptional,\n        raise: raise,\n        commandRaise: commandRaise,\n        command: checkCommand,\n        parameter: checkParameter,\n        commandParameter: checkParameterCommand,\n        constructor: checkConstructor,\n        type: checkTypeOf,\n        commandType: checkCommandType,\n        isTypedArray: checkIsTypedArray,\n        nni: checkNonNegativeInt,\n        oneOf: checkOneOf,\n        shaderError: checkShaderError,\n        linkError: checkLinkError,\n        callSite: guessCallSite,\n        saveCommandRef: saveCommandRef,\n        saveDrawInfo: saveDrawCommandInfo,\n        framebufferFormat: checkFramebufferFormat,\n        guessCommand: guessCommand,\n        texture2D: checkTexture2D,\n        textureCube: checkTextureCube\n    });\n    var VARIABLE_COUNTER = 0;\n    var DYN_FUNC = 0;\n    var DYN_CONSTANT = 5;\n    var DYN_ARRAY = 6;\n    function DynamicVariable(type, data) {\n        this.id = VARIABLE_COUNTER++;\n        this.type = type;\n        this.data = data;\n    }\n    function escapeStr(str) {\n        return str.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, '\\\\\"');\n    }\n    function splitParts(str) {\n        if (str.length === 0) return [];\n        var firstChar = str.charAt(0);\n        var lastChar = str.charAt(str.length - 1);\n        if (str.length > 1 && firstChar === lastChar && (firstChar === '\"' || firstChar === \"'\")) return [\n            '\"' + escapeStr(str.substr(1, str.length - 2)) + '\"'\n        ];\n        var parts = /\\[(false|true|null|\\d+|'[^']*'|\"[^\"]*\")\\]/.exec(str);\n        if (parts) return splitParts(str.substr(0, parts.index)).concat(splitParts(parts[1])).concat(splitParts(str.substr(parts.index + parts[0].length)));\n        var subparts = str.split(\".\");\n        if (subparts.length === 1) return [\n            '\"' + escapeStr(str) + '\"'\n        ];\n        var result = [];\n        for(var i = 0; i < subparts.length; ++i)result = result.concat(splitParts(subparts[i]));\n        return result;\n    }\n    function toAccessorString(str) {\n        return \"[\" + splitParts(str).join(\"][\") + \"]\";\n    }\n    function defineDynamic(type, data) {\n        return new DynamicVariable(type, toAccessorString(data + \"\"));\n    }\n    function isDynamic(x) {\n        return typeof x === \"function\" && !x._reglType || x instanceof DynamicVariable;\n    }\n    function unbox(x, path) {\n        if (typeof x === \"function\") return new DynamicVariable(DYN_FUNC, x);\n        else if (typeof x === \"number\" || typeof x === \"boolean\") return new DynamicVariable(DYN_CONSTANT, x);\n        else if (Array.isArray(x)) return new DynamicVariable(DYN_ARRAY, x.map(function(y, i) {\n            return unbox(y, path + \"[\" + i + \"]\");\n        }));\n        else if (x instanceof DynamicVariable) return x;\n        check$1(false, \"invalid option type in uniform \" + path);\n    }\n    var dynamic = {\n        DynamicVariable: DynamicVariable,\n        define: defineDynamic,\n        isDynamic: isDynamic,\n        unbox: unbox,\n        accessor: toAccessorString\n    };\n    /* globals requestAnimationFrame, cancelAnimationFrame */ var raf = {\n        next: typeof requestAnimationFrame === \"function\" ? function(cb) {\n            return requestAnimationFrame(cb);\n        } : function(cb) {\n            return setTimeout(cb, 16);\n        },\n        cancel: typeof cancelAnimationFrame === \"function\" ? function(raf) {\n            return cancelAnimationFrame(raf);\n        } : clearTimeout\n    };\n    /* globals performance */ var clock = typeof performance !== \"undefined\" && performance.now ? function() {\n        return performance.now();\n    } : function() {\n        return +new Date();\n    };\n    function createStringStore() {\n        var stringIds = {\n            \"\": 0\n        };\n        var stringValues = [\n            \"\"\n        ];\n        return {\n            id: function(str) {\n                var result = stringIds[str];\n                if (result) return result;\n                result = stringIds[str] = stringValues.length;\n                stringValues.push(str);\n                return result;\n            },\n            str: function(id) {\n                return stringValues[id];\n            }\n        };\n    }\n    // Context and canvas creation helper functions\n    function createCanvas(element, onDone, pixelRatio) {\n        var canvas = document.createElement(\"canvas\");\n        extend(canvas.style, {\n            border: 0,\n            margin: 0,\n            padding: 0,\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\"\n        });\n        element.appendChild(canvas);\n        if (element === document.body) {\n            canvas.style.position = \"absolute\";\n            extend(element.style, {\n                margin: 0,\n                padding: 0\n            });\n        }\n        function resize() {\n            var w = window.innerWidth;\n            var h = window.innerHeight;\n            if (element !== document.body) {\n                var bounds = canvas.getBoundingClientRect();\n                w = bounds.right - bounds.left;\n                h = bounds.bottom - bounds.top;\n            }\n            canvas.width = pixelRatio * w;\n            canvas.height = pixelRatio * h;\n        }\n        var resizeObserver;\n        if (element !== document.body && typeof ResizeObserver === \"function\") {\n            // ignore 'ResizeObserver' is not defined\n            // eslint-disable-next-line\n            resizeObserver = new ResizeObserver(function() {\n                // setTimeout to avoid flicker\n                setTimeout(resize);\n            });\n            resizeObserver.observe(element);\n        } else window.addEventListener(\"resize\", resize, false);\n        function onDestroy() {\n            if (resizeObserver) resizeObserver.disconnect();\n            else window.removeEventListener(\"resize\", resize);\n            element.removeChild(canvas);\n        }\n        resize();\n        return {\n            canvas: canvas,\n            onDestroy: onDestroy\n        };\n    }\n    function createContext(canvas, contextAttributes) {\n        function get(name) {\n            try {\n                return canvas.getContext(name, contextAttributes);\n            } catch (e) {\n                return null;\n            }\n        }\n        return get(\"webgl\") || get(\"experimental-webgl\") || get(\"webgl-experimental\");\n    }\n    function isHTMLElement(obj) {\n        return typeof obj.nodeName === \"string\" && typeof obj.appendChild === \"function\" && typeof obj.getBoundingClientRect === \"function\";\n    }\n    function isWebGLContext(obj) {\n        return typeof obj.drawArrays === \"function\" || typeof obj.drawElements === \"function\";\n    }\n    function parseExtensions(input) {\n        if (typeof input === \"string\") return input.split();\n        check$1(Array.isArray(input), \"invalid extension array\");\n        return input;\n    }\n    function getElement(desc) {\n        if (typeof desc === \"string\") {\n            check$1(typeof document !== \"undefined\", \"not supported outside of DOM\");\n            return document.querySelector(desc);\n        }\n        return desc;\n    }\n    function parseArgs(args_) {\n        var args = args_ || {};\n        var element, container, canvas, gl;\n        var contextAttributes = {};\n        var extensions = [];\n        var optionalExtensions = [];\n        var pixelRatio = typeof window === \"undefined\" ? 1 : window.devicePixelRatio;\n        var profile = false;\n        var onDone = function(err) {\n            if (err) check$1.raise(err);\n        };\n        var onDestroy = function() {};\n        if (typeof args === \"string\") {\n            check$1(typeof document !== \"undefined\", \"selector queries only supported in DOM enviroments\");\n            element = document.querySelector(args);\n            check$1(element, \"invalid query string for element\");\n        } else if (typeof args === \"object\") {\n            if (isHTMLElement(args)) element = args;\n            else if (isWebGLContext(args)) {\n                gl = args;\n                canvas = gl.canvas;\n            } else {\n                check$1.constructor(args);\n                if (\"gl\" in args) gl = args.gl;\n                else if (\"canvas\" in args) canvas = getElement(args.canvas);\n                else if (\"container\" in args) container = getElement(args.container);\n                if (\"attributes\" in args) {\n                    contextAttributes = args.attributes;\n                    check$1.type(contextAttributes, \"object\", \"invalid context attributes\");\n                }\n                if (\"extensions\" in args) extensions = parseExtensions(args.extensions);\n                if (\"optionalExtensions\" in args) optionalExtensions = parseExtensions(args.optionalExtensions);\n                if (\"onDone\" in args) {\n                    check$1.type(args.onDone, \"function\", \"invalid or missing onDone callback\");\n                    onDone = args.onDone;\n                }\n                if (\"profile\" in args) profile = !!args.profile;\n                if (\"pixelRatio\" in args) {\n                    pixelRatio = +args.pixelRatio;\n                    check$1(pixelRatio > 0, \"invalid pixel ratio\");\n                }\n            }\n        } else check$1.raise(\"invalid arguments to regl\");\n        if (element) {\n            if (element.nodeName.toLowerCase() === \"canvas\") canvas = element;\n            else container = element;\n        }\n        if (!gl) {\n            if (!canvas) {\n                check$1(typeof document !== \"undefined\", \"must manually specify webgl context outside of DOM environments\");\n                var result = createCanvas(container || document.body, onDone, pixelRatio);\n                if (!result) return null;\n                canvas = result.canvas;\n                onDestroy = result.onDestroy;\n            }\n            // workaround for chromium bug, premultiplied alpha value is platform dependent\n            if (contextAttributes.premultipliedAlpha === undefined) contextAttributes.premultipliedAlpha = true;\n            gl = createContext(canvas, contextAttributes);\n        }\n        if (!gl) {\n            onDestroy();\n            onDone(\"webgl not supported, try upgrading your browser or graphics drivers http://get.webgl.org\");\n            return null;\n        }\n        return {\n            gl: gl,\n            canvas: canvas,\n            container: container,\n            extensions: extensions,\n            optionalExtensions: optionalExtensions,\n            pixelRatio: pixelRatio,\n            profile: profile,\n            onDone: onDone,\n            onDestroy: onDestroy\n        };\n    }\n    function createExtensionCache(gl, config) {\n        var extensions = {};\n        function tryLoadExtension(name_) {\n            check$1.type(name_, \"string\", \"extension name must be string\");\n            var name = name_.toLowerCase();\n            var ext;\n            try {\n                ext = extensions[name] = gl.getExtension(name);\n            } catch (e) {}\n            return !!ext;\n        }\n        for(var i = 0; i < config.extensions.length; ++i){\n            var name = config.extensions[i];\n            if (!tryLoadExtension(name)) {\n                config.onDestroy();\n                config.onDone('\"' + name + '\" extension is not supported by the current WebGL context, try upgrading your system or a different browser');\n                return null;\n            }\n        }\n        config.optionalExtensions.forEach(tryLoadExtension);\n        return {\n            extensions: extensions,\n            restore: function() {\n                Object.keys(extensions).forEach(function(name) {\n                    if (extensions[name] && !tryLoadExtension(name)) throw new Error(\"(regl): error restoring extension \" + name);\n                });\n            }\n        };\n    }\n    function loop(n, f) {\n        var result = Array(n);\n        for(var i = 0; i < n; ++i)result[i] = f(i);\n        return result;\n    }\n    var GL_BYTE$1 = 5120;\n    var GL_UNSIGNED_BYTE$2 = 5121;\n    var GL_SHORT$1 = 5122;\n    var GL_UNSIGNED_SHORT$1 = 5123;\n    var GL_INT$1 = 5124;\n    var GL_UNSIGNED_INT$1 = 5125;\n    var GL_FLOAT$2 = 5126;\n    function nextPow16(v) {\n        for(var i = 16; i <= 268435456; i *= 16){\n            if (v <= i) return i;\n        }\n        return 0;\n    }\n    function log2(v) {\n        var r, shift;\n        r = (v > 0xFFFF) << 4;\n        v >>>= r;\n        shift = (v > 0xFF) << 3;\n        v >>>= shift;\n        r |= shift;\n        shift = (v > 0xF) << 2;\n        v >>>= shift;\n        r |= shift;\n        shift = (v > 0x3) << 1;\n        v >>>= shift;\n        r |= shift;\n        return r | v >> 1;\n    }\n    function createPool() {\n        var bufferPool = loop(8, function() {\n            return [];\n        });\n        function alloc(n) {\n            var sz = nextPow16(n);\n            var bin = bufferPool[log2(sz) >> 2];\n            if (bin.length > 0) return bin.pop();\n            return new ArrayBuffer(sz);\n        }\n        function free(buf) {\n            bufferPool[log2(buf.byteLength) >> 2].push(buf);\n        }\n        function allocType(type, n) {\n            var result = null;\n            switch(type){\n                case GL_BYTE$1:\n                    result = new Int8Array(alloc(n), 0, n);\n                    break;\n                case GL_UNSIGNED_BYTE$2:\n                    result = new Uint8Array(alloc(n), 0, n);\n                    break;\n                case GL_SHORT$1:\n                    result = new Int16Array(alloc(2 * n), 0, n);\n                    break;\n                case GL_UNSIGNED_SHORT$1:\n                    result = new Uint16Array(alloc(2 * n), 0, n);\n                    break;\n                case GL_INT$1:\n                    result = new Int32Array(alloc(4 * n), 0, n);\n                    break;\n                case GL_UNSIGNED_INT$1:\n                    result = new Uint32Array(alloc(4 * n), 0, n);\n                    break;\n                case GL_FLOAT$2:\n                    result = new Float32Array(alloc(4 * n), 0, n);\n                    break;\n                default:\n                    return null;\n            }\n            if (result.length !== n) return result.subarray(0, n);\n            return result;\n        }\n        function freeType(array) {\n            free(array.buffer);\n        }\n        return {\n            alloc: alloc,\n            free: free,\n            allocType: allocType,\n            freeType: freeType\n        };\n    }\n    var pool = createPool();\n    // zero pool for initial zero data\n    pool.zero = createPool();\n    var GL_SUBPIXEL_BITS = 0x0D50;\n    var GL_RED_BITS = 0x0D52;\n    var GL_GREEN_BITS = 0x0D53;\n    var GL_BLUE_BITS = 0x0D54;\n    var GL_ALPHA_BITS = 0x0D55;\n    var GL_DEPTH_BITS = 0x0D56;\n    var GL_STENCIL_BITS = 0x0D57;\n    var GL_ALIASED_POINT_SIZE_RANGE = 0x846D;\n    var GL_ALIASED_LINE_WIDTH_RANGE = 0x846E;\n    var GL_MAX_TEXTURE_SIZE = 0x0D33;\n    var GL_MAX_VIEWPORT_DIMS = 0x0D3A;\n    var GL_MAX_VERTEX_ATTRIBS = 0x8869;\n    var GL_MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;\n    var GL_MAX_VARYING_VECTORS = 0x8DFC;\n    var GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;\n    var GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;\n    var GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872;\n    var GL_MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;\n    var GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;\n    var GL_MAX_RENDERBUFFER_SIZE = 0x84E8;\n    var GL_VENDOR = 0x1F00;\n    var GL_RENDERER = 0x1F01;\n    var GL_VERSION = 0x1F02;\n    var GL_SHADING_LANGUAGE_VERSION = 0x8B8C;\n    var GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;\n    var GL_MAX_COLOR_ATTACHMENTS_WEBGL = 0x8CDF;\n    var GL_MAX_DRAW_BUFFERS_WEBGL = 0x8824;\n    var GL_TEXTURE_2D = 0x0DE1;\n    var GL_TEXTURE_CUBE_MAP = 0x8513;\n    var GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;\n    var GL_TEXTURE0 = 0x84C0;\n    var GL_RGBA = 0x1908;\n    var GL_FLOAT$1 = 0x1406;\n    var GL_UNSIGNED_BYTE$1 = 0x1401;\n    var GL_FRAMEBUFFER = 0x8D40;\n    var GL_FRAMEBUFFER_COMPLETE = 0x8CD5;\n    var GL_COLOR_ATTACHMENT0 = 0x8CE0;\n    var GL_COLOR_BUFFER_BIT$1 = 0x4000;\n    var wrapLimits = function(gl, extensions) {\n        var maxAnisotropic = 1;\n        if (extensions.ext_texture_filter_anisotropic) maxAnisotropic = gl.getParameter(GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n        var maxDrawbuffers = 1;\n        var maxColorAttachments = 1;\n        if (extensions.webgl_draw_buffers) {\n            maxDrawbuffers = gl.getParameter(GL_MAX_DRAW_BUFFERS_WEBGL);\n            maxColorAttachments = gl.getParameter(GL_MAX_COLOR_ATTACHMENTS_WEBGL);\n        }\n        // detect if reading float textures is available (Safari doesn't support)\n        var readFloat = !!extensions.oes_texture_float;\n        if (readFloat) {\n            var readFloatTexture = gl.createTexture();\n            gl.bindTexture(GL_TEXTURE_2D, readFloatTexture);\n            gl.texImage2D(GL_TEXTURE_2D, 0, GL_RGBA, 1, 1, 0, GL_RGBA, GL_FLOAT$1, null);\n            var fbo = gl.createFramebuffer();\n            gl.bindFramebuffer(GL_FRAMEBUFFER, fbo);\n            gl.framebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, readFloatTexture, 0);\n            gl.bindTexture(GL_TEXTURE_2D, null);\n            if (gl.checkFramebufferStatus(GL_FRAMEBUFFER) !== GL_FRAMEBUFFER_COMPLETE) readFloat = false;\n            else {\n                gl.viewport(0, 0, 1, 1);\n                gl.clearColor(1.0, 0.0, 0.0, 1.0);\n                gl.clear(GL_COLOR_BUFFER_BIT$1);\n                var pixels = pool.allocType(GL_FLOAT$1, 4);\n                gl.readPixels(0, 0, 1, 1, GL_RGBA, GL_FLOAT$1, pixels);\n                if (gl.getError()) readFloat = false;\n                else {\n                    gl.deleteFramebuffer(fbo);\n                    gl.deleteTexture(readFloatTexture);\n                    readFloat = pixels[0] === 1.0;\n                }\n                pool.freeType(pixels);\n            }\n        }\n        // detect non power of two cube textures support (IE doesn't support)\n        var isIE = typeof navigator !== \"undefined\" && (/MSIE/.test(navigator.userAgent) || /Trident\\//.test(navigator.appVersion) || /Edge/.test(navigator.userAgent));\n        var npotTextureCube = true;\n        if (!isIE) {\n            var cubeTexture = gl.createTexture();\n            var data = pool.allocType(GL_UNSIGNED_BYTE$1, 36);\n            gl.activeTexture(GL_TEXTURE0);\n            gl.bindTexture(GL_TEXTURE_CUBE_MAP, cubeTexture);\n            gl.texImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X, 0, GL_RGBA, 3, 3, 0, GL_RGBA, GL_UNSIGNED_BYTE$1, data);\n            pool.freeType(data);\n            gl.bindTexture(GL_TEXTURE_CUBE_MAP, null);\n            gl.deleteTexture(cubeTexture);\n            npotTextureCube = !gl.getError();\n        }\n        return {\n            // drawing buffer bit depth\n            colorBits: [\n                gl.getParameter(GL_RED_BITS),\n                gl.getParameter(GL_GREEN_BITS),\n                gl.getParameter(GL_BLUE_BITS),\n                gl.getParameter(GL_ALPHA_BITS)\n            ],\n            depthBits: gl.getParameter(GL_DEPTH_BITS),\n            stencilBits: gl.getParameter(GL_STENCIL_BITS),\n            subpixelBits: gl.getParameter(GL_SUBPIXEL_BITS),\n            // supported extensions\n            extensions: Object.keys(extensions).filter(function(ext) {\n                return !!extensions[ext];\n            }),\n            // max aniso samples\n            maxAnisotropic: maxAnisotropic,\n            // max draw buffers\n            maxDrawbuffers: maxDrawbuffers,\n            maxColorAttachments: maxColorAttachments,\n            // point and line size ranges\n            pointSizeDims: gl.getParameter(GL_ALIASED_POINT_SIZE_RANGE),\n            lineWidthDims: gl.getParameter(GL_ALIASED_LINE_WIDTH_RANGE),\n            maxViewportDims: gl.getParameter(GL_MAX_VIEWPORT_DIMS),\n            maxCombinedTextureUnits: gl.getParameter(GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS),\n            maxCubeMapSize: gl.getParameter(GL_MAX_CUBE_MAP_TEXTURE_SIZE),\n            maxRenderbufferSize: gl.getParameter(GL_MAX_RENDERBUFFER_SIZE),\n            maxTextureUnits: gl.getParameter(GL_MAX_TEXTURE_IMAGE_UNITS),\n            maxTextureSize: gl.getParameter(GL_MAX_TEXTURE_SIZE),\n            maxAttributes: gl.getParameter(GL_MAX_VERTEX_ATTRIBS),\n            maxVertexUniforms: gl.getParameter(GL_MAX_VERTEX_UNIFORM_VECTORS),\n            maxVertexTextureUnits: gl.getParameter(GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS),\n            maxVaryingVectors: gl.getParameter(GL_MAX_VARYING_VECTORS),\n            maxFragmentUniforms: gl.getParameter(GL_MAX_FRAGMENT_UNIFORM_VECTORS),\n            // vendor info\n            glsl: gl.getParameter(GL_SHADING_LANGUAGE_VERSION),\n            renderer: gl.getParameter(GL_RENDERER),\n            vendor: gl.getParameter(GL_VENDOR),\n            version: gl.getParameter(GL_VERSION),\n            // quirks\n            readFloat: readFloat,\n            npotTextureCube: npotTextureCube\n        };\n    };\n    function isNDArrayLike(obj) {\n        return !!obj && typeof obj === \"object\" && Array.isArray(obj.shape) && Array.isArray(obj.stride) && typeof obj.offset === \"number\" && obj.shape.length === obj.stride.length && (Array.isArray(obj.data) || isTypedArray(obj.data));\n    }\n    var values = function(obj) {\n        return Object.keys(obj).map(function(key) {\n            return obj[key];\n        });\n    };\n    var flattenUtils = {\n        shape: arrayShape$1,\n        flatten: flattenArray\n    };\n    function flatten1D(array, nx, out) {\n        for(var i = 0; i < nx; ++i)out[i] = array[i];\n    }\n    function flatten2D(array, nx, ny, out) {\n        var ptr = 0;\n        for(var i = 0; i < nx; ++i){\n            var row = array[i];\n            for(var j = 0; j < ny; ++j)out[ptr++] = row[j];\n        }\n    }\n    function flatten3D(array, nx, ny, nz, out, ptr_) {\n        var ptr = ptr_;\n        for(var i = 0; i < nx; ++i){\n            var row = array[i];\n            for(var j = 0; j < ny; ++j){\n                var col = row[j];\n                for(var k = 0; k < nz; ++k)out[ptr++] = col[k];\n            }\n        }\n    }\n    function flattenRec(array, shape, level, out, ptr) {\n        var stride = 1;\n        for(var i = level + 1; i < shape.length; ++i)stride *= shape[i];\n        var n = shape[level];\n        if (shape.length - level === 4) {\n            var nx = shape[level + 1];\n            var ny = shape[level + 2];\n            var nz = shape[level + 3];\n            for(i = 0; i < n; ++i){\n                flatten3D(array[i], nx, ny, nz, out, ptr);\n                ptr += stride;\n            }\n        } else for(i = 0; i < n; ++i){\n            flattenRec(array[i], shape, level + 1, out, ptr);\n            ptr += stride;\n        }\n    }\n    function flattenArray(array, shape, type, out_) {\n        var sz = 1;\n        if (shape.length) for(var i = 0; i < shape.length; ++i)sz *= shape[i];\n        else sz = 0;\n        var out = out_ || pool.allocType(type, sz);\n        switch(shape.length){\n            case 0:\n                break;\n            case 1:\n                flatten1D(array, shape[0], out);\n                break;\n            case 2:\n                flatten2D(array, shape[0], shape[1], out);\n                break;\n            case 3:\n                flatten3D(array, shape[0], shape[1], shape[2], out, 0);\n                break;\n            default:\n                flattenRec(array, shape, 0, out, 0);\n        }\n        return out;\n    }\n    function arrayShape$1(array_) {\n        var shape = [];\n        for(var array = array_; array.length; array = array[0])shape.push(array.length);\n        return shape;\n    }\n    var arrayTypes = {\n        \"[object Int8Array]\": 5120,\n        \"[object Int16Array]\": 5122,\n        \"[object Int32Array]\": 5124,\n        \"[object Uint8Array]\": 5121,\n        \"[object Uint8ClampedArray]\": 5121,\n        \"[object Uint16Array]\": 5123,\n        \"[object Uint32Array]\": 5125,\n        \"[object Float32Array]\": 5126,\n        \"[object Float64Array]\": 5121,\n        \"[object ArrayBuffer]\": 5121\n    };\n    var int8 = 5120;\n    var int16 = 5122;\n    var int32 = 5124;\n    var uint8 = 5121;\n    var uint16 = 5123;\n    var uint32 = 5125;\n    var float = 5126;\n    var float32 = 5126;\n    var glTypes = {\n        int8: int8,\n        int16: int16,\n        int32: int32,\n        uint8: uint8,\n        uint16: uint16,\n        uint32: uint32,\n        float: float,\n        float32: float32\n    };\n    var dynamic$1 = 35048;\n    var stream = 35040;\n    var usageTypes = {\n        dynamic: dynamic$1,\n        stream: stream,\n        \"static\": 35044\n    };\n    var arrayFlatten = flattenUtils.flatten;\n    var arrayShape = flattenUtils.shape;\n    var GL_STATIC_DRAW = 0x88E4;\n    var GL_STREAM_DRAW = 0x88E0;\n    var GL_UNSIGNED_BYTE$3 = 5121;\n    var GL_FLOAT$3 = 5126;\n    var DTYPES_SIZES = [];\n    DTYPES_SIZES[5120] = 1 // int8\n    ;\n    DTYPES_SIZES[5122] = 2 // int16\n    ;\n    DTYPES_SIZES[5124] = 4 // int32\n    ;\n    DTYPES_SIZES[5121] = 1 // uint8\n    ;\n    DTYPES_SIZES[5123] = 2 // uint16\n    ;\n    DTYPES_SIZES[5125] = 4 // uint32\n    ;\n    DTYPES_SIZES[5126] = 4 // float32\n    ;\n    function typedArrayCode(data) {\n        return arrayTypes[Object.prototype.toString.call(data)] | 0;\n    }\n    function copyArray(out, inp) {\n        for(var i = 0; i < inp.length; ++i)out[i] = inp[i];\n    }\n    function transpose(result, data, shapeX, shapeY, strideX, strideY, offset) {\n        var ptr = 0;\n        for(var i = 0; i < shapeX; ++i)for(var j = 0; j < shapeY; ++j)result[ptr++] = data[strideX * i + strideY * j + offset];\n    }\n    function wrapBufferState(gl, stats, config, destroyBuffer) {\n        var bufferCount = 0;\n        var bufferSet = {};\n        function REGLBuffer(type) {\n            this.id = bufferCount++;\n            this.buffer = gl.createBuffer();\n            this.type = type;\n            this.usage = GL_STATIC_DRAW;\n            this.byteLength = 0;\n            this.dimension = 1;\n            this.dtype = GL_UNSIGNED_BYTE$3;\n            this.persistentData = null;\n            if (config.profile) this.stats = {\n                size: 0\n            };\n        }\n        REGLBuffer.prototype.bind = function() {\n            gl.bindBuffer(this.type, this.buffer);\n        };\n        REGLBuffer.prototype.destroy = function() {\n            destroy(this);\n        };\n        var streamPool = [];\n        function createStream(type, data) {\n            var buffer = streamPool.pop();\n            if (!buffer) buffer = new REGLBuffer(type);\n            buffer.bind();\n            initBufferFromData(buffer, data, GL_STREAM_DRAW, 0, 1, false);\n            return buffer;\n        }\n        function destroyStream(stream$$1) {\n            streamPool.push(stream$$1);\n        }\n        function initBufferFromTypedArray(buffer, data, usage) {\n            buffer.byteLength = data.byteLength;\n            gl.bufferData(buffer.type, data, usage);\n        }\n        function initBufferFromData(buffer, data, usage, dtype, dimension, persist) {\n            var shape;\n            buffer.usage = usage;\n            if (Array.isArray(data)) {\n                buffer.dtype = dtype || GL_FLOAT$3;\n                if (data.length > 0) {\n                    var flatData;\n                    if (Array.isArray(data[0])) {\n                        shape = arrayShape(data);\n                        var dim = 1;\n                        for(var i = 1; i < shape.length; ++i)dim *= shape[i];\n                        buffer.dimension = dim;\n                        flatData = arrayFlatten(data, shape, buffer.dtype);\n                        initBufferFromTypedArray(buffer, flatData, usage);\n                        if (persist) buffer.persistentData = flatData;\n                        else pool.freeType(flatData);\n                    } else if (typeof data[0] === \"number\") {\n                        buffer.dimension = dimension;\n                        var typedData = pool.allocType(buffer.dtype, data.length);\n                        copyArray(typedData, data);\n                        initBufferFromTypedArray(buffer, typedData, usage);\n                        if (persist) buffer.persistentData = typedData;\n                        else pool.freeType(typedData);\n                    } else if (isTypedArray(data[0])) {\n                        buffer.dimension = data[0].length;\n                        buffer.dtype = dtype || typedArrayCode(data[0]) || GL_FLOAT$3;\n                        flatData = arrayFlatten(data, [\n                            data.length,\n                            data[0].length\n                        ], buffer.dtype);\n                        initBufferFromTypedArray(buffer, flatData, usage);\n                        if (persist) buffer.persistentData = flatData;\n                        else pool.freeType(flatData);\n                    } else check$1.raise(\"invalid buffer data\");\n                }\n            } else if (isTypedArray(data)) {\n                buffer.dtype = dtype || typedArrayCode(data);\n                buffer.dimension = dimension;\n                initBufferFromTypedArray(buffer, data, usage);\n                if (persist) buffer.persistentData = new Uint8Array(new Uint8Array(data.buffer));\n            } else if (isNDArrayLike(data)) {\n                shape = data.shape;\n                var stride = data.stride;\n                var offset = data.offset;\n                var shapeX = 0;\n                var shapeY = 0;\n                var strideX = 0;\n                var strideY = 0;\n                if (shape.length === 1) {\n                    shapeX = shape[0];\n                    shapeY = 1;\n                    strideX = stride[0];\n                    strideY = 0;\n                } else if (shape.length === 2) {\n                    shapeX = shape[0];\n                    shapeY = shape[1];\n                    strideX = stride[0];\n                    strideY = stride[1];\n                } else check$1.raise(\"invalid shape\");\n                buffer.dtype = dtype || typedArrayCode(data.data) || GL_FLOAT$3;\n                buffer.dimension = shapeY;\n                var transposeData = pool.allocType(buffer.dtype, shapeX * shapeY);\n                transpose(transposeData, data.data, shapeX, shapeY, strideX, strideY, offset);\n                initBufferFromTypedArray(buffer, transposeData, usage);\n                if (persist) buffer.persistentData = transposeData;\n                else pool.freeType(transposeData);\n            } else if (data instanceof ArrayBuffer) {\n                buffer.dtype = GL_UNSIGNED_BYTE$3;\n                buffer.dimension = dimension;\n                initBufferFromTypedArray(buffer, data, usage);\n                if (persist) buffer.persistentData = new Uint8Array(new Uint8Array(data));\n            } else check$1.raise(\"invalid buffer data\");\n        }\n        function destroy(buffer) {\n            stats.bufferCount--;\n            // remove attribute link\n            destroyBuffer(buffer);\n            var handle = buffer.buffer;\n            check$1(handle, \"buffer must not be deleted already\");\n            gl.deleteBuffer(handle);\n            buffer.buffer = null;\n            delete bufferSet[buffer.id];\n        }\n        function createBuffer(options, type, deferInit, persistent) {\n            stats.bufferCount++;\n            var buffer = new REGLBuffer(type);\n            bufferSet[buffer.id] = buffer;\n            function reglBuffer(options) {\n                var usage = GL_STATIC_DRAW;\n                var data = null;\n                var byteLength = 0;\n                var dtype = 0;\n                var dimension = 1;\n                if (Array.isArray(options) || isTypedArray(options) || isNDArrayLike(options) || options instanceof ArrayBuffer) data = options;\n                else if (typeof options === \"number\") byteLength = options | 0;\n                else if (options) {\n                    check$1.type(options, \"object\", \"buffer arguments must be an object, a number or an array\");\n                    if (\"data\" in options) {\n                        check$1(data === null || Array.isArray(data) || isTypedArray(data) || isNDArrayLike(data), \"invalid data for buffer\");\n                        data = options.data;\n                    }\n                    if (\"usage\" in options) {\n                        check$1.parameter(options.usage, usageTypes, \"invalid buffer usage\");\n                        usage = usageTypes[options.usage];\n                    }\n                    if (\"type\" in options) {\n                        check$1.parameter(options.type, glTypes, \"invalid buffer type\");\n                        dtype = glTypes[options.type];\n                    }\n                    if (\"dimension\" in options) {\n                        check$1.type(options.dimension, \"number\", \"invalid dimension\");\n                        dimension = options.dimension | 0;\n                    }\n                    if (\"length\" in options) {\n                        check$1.nni(byteLength, \"buffer length must be a nonnegative integer\");\n                        byteLength = options.length | 0;\n                    }\n                }\n                buffer.bind();\n                if (!data) {\n                    // #475\n                    if (byteLength) gl.bufferData(buffer.type, byteLength, usage);\n                    buffer.dtype = dtype || GL_UNSIGNED_BYTE$3;\n                    buffer.usage = usage;\n                    buffer.dimension = dimension;\n                    buffer.byteLength = byteLength;\n                } else initBufferFromData(buffer, data, usage, dtype, dimension, persistent);\n                if (config.profile) buffer.stats.size = buffer.byteLength * DTYPES_SIZES[buffer.dtype];\n                return reglBuffer;\n            }\n            function setSubData(data, offset) {\n                check$1(offset + data.byteLength <= buffer.byteLength, \"invalid buffer subdata call, buffer is too small.  Can't write data of size \" + data.byteLength + \" starting from offset \" + offset + \" to a buffer of size \" + buffer.byteLength);\n                gl.bufferSubData(buffer.type, offset, data);\n            }\n            function subdata(data, offset_) {\n                var offset = (offset_ || 0) | 0;\n                var shape;\n                buffer.bind();\n                if (isTypedArray(data) || data instanceof ArrayBuffer) setSubData(data, offset);\n                else if (Array.isArray(data)) {\n                    if (data.length > 0) {\n                        if (typeof data[0] === \"number\") {\n                            var converted = pool.allocType(buffer.dtype, data.length);\n                            copyArray(converted, data);\n                            setSubData(converted, offset);\n                            pool.freeType(converted);\n                        } else if (Array.isArray(data[0]) || isTypedArray(data[0])) {\n                            shape = arrayShape(data);\n                            var flatData = arrayFlatten(data, shape, buffer.dtype);\n                            setSubData(flatData, offset);\n                            pool.freeType(flatData);\n                        } else check$1.raise(\"invalid buffer data\");\n                    }\n                } else if (isNDArrayLike(data)) {\n                    shape = data.shape;\n                    var stride = data.stride;\n                    var shapeX = 0;\n                    var shapeY = 0;\n                    var strideX = 0;\n                    var strideY = 0;\n                    if (shape.length === 1) {\n                        shapeX = shape[0];\n                        shapeY = 1;\n                        strideX = stride[0];\n                        strideY = 0;\n                    } else if (shape.length === 2) {\n                        shapeX = shape[0];\n                        shapeY = shape[1];\n                        strideX = stride[0];\n                        strideY = stride[1];\n                    } else check$1.raise(\"invalid shape\");\n                    var dtype = Array.isArray(data.data) ? buffer.dtype : typedArrayCode(data.data);\n                    var transposeData = pool.allocType(dtype, shapeX * shapeY);\n                    transpose(transposeData, data.data, shapeX, shapeY, strideX, strideY, data.offset);\n                    setSubData(transposeData, offset);\n                    pool.freeType(transposeData);\n                } else check$1.raise(\"invalid data for buffer subdata\");\n                return reglBuffer;\n            }\n            if (!deferInit) reglBuffer(options);\n            reglBuffer._reglType = \"buffer\";\n            reglBuffer._buffer = buffer;\n            reglBuffer.subdata = subdata;\n            if (config.profile) reglBuffer.stats = buffer.stats;\n            reglBuffer.destroy = function() {\n                destroy(buffer);\n            };\n            return reglBuffer;\n        }\n        function restoreBuffers() {\n            values(bufferSet).forEach(function(buffer) {\n                buffer.buffer = gl.createBuffer();\n                gl.bindBuffer(buffer.type, buffer.buffer);\n                gl.bufferData(buffer.type, buffer.persistentData || buffer.byteLength, buffer.usage);\n            });\n        }\n        if (config.profile) stats.getTotalBufferSize = function() {\n            var total = 0;\n            // TODO: Right now, the streams are not part of the total count.\n            Object.keys(bufferSet).forEach(function(key) {\n                total += bufferSet[key].stats.size;\n            });\n            return total;\n        };\n        return {\n            create: createBuffer,\n            createStream: createStream,\n            destroyStream: destroyStream,\n            clear: function() {\n                values(bufferSet).forEach(destroy);\n                streamPool.forEach(destroy);\n            },\n            getBuffer: function(wrapper) {\n                if (wrapper && wrapper._buffer instanceof REGLBuffer) return wrapper._buffer;\n                return null;\n            },\n            restore: restoreBuffers,\n            _initBuffer: initBufferFromData\n        };\n    }\n    var points = 0;\n    var point = 0;\n    var lines = 1;\n    var line = 1;\n    var triangles = 4;\n    var triangle = 4;\n    var primTypes = {\n        points: points,\n        point: point,\n        lines: lines,\n        line: line,\n        triangles: triangles,\n        triangle: triangle,\n        \"line loop\": 2,\n        \"line strip\": 3,\n        \"triangle strip\": 5,\n        \"triangle fan\": 6\n    };\n    var GL_POINTS = 0;\n    var GL_LINES = 1;\n    var GL_TRIANGLES = 4;\n    var GL_BYTE$2 = 5120;\n    var GL_UNSIGNED_BYTE$4 = 5121;\n    var GL_SHORT$2 = 5122;\n    var GL_UNSIGNED_SHORT$2 = 5123;\n    var GL_INT$2 = 5124;\n    var GL_UNSIGNED_INT$2 = 5125;\n    var GL_ELEMENT_ARRAY_BUFFER = 34963;\n    var GL_STREAM_DRAW$1 = 0x88E0;\n    var GL_STATIC_DRAW$1 = 0x88E4;\n    function wrapElementsState(gl, extensions, bufferState, stats) {\n        var elementSet = {};\n        var elementCount = 0;\n        var elementTypes = {\n            \"uint8\": GL_UNSIGNED_BYTE$4,\n            \"uint16\": GL_UNSIGNED_SHORT$2\n        };\n        if (extensions.oes_element_index_uint) elementTypes.uint32 = GL_UNSIGNED_INT$2;\n        function REGLElementBuffer(buffer) {\n            this.id = elementCount++;\n            elementSet[this.id] = this;\n            this.buffer = buffer;\n            this.primType = GL_TRIANGLES;\n            this.vertCount = 0;\n            this.type = 0;\n        }\n        REGLElementBuffer.prototype.bind = function() {\n            this.buffer.bind();\n        };\n        var bufferPool = [];\n        function createElementStream(data) {\n            var result = bufferPool.pop();\n            if (!result) result = new REGLElementBuffer(bufferState.create(null, GL_ELEMENT_ARRAY_BUFFER, true, false)._buffer);\n            initElements(result, data, GL_STREAM_DRAW$1, -1, -1, 0, 0);\n            return result;\n        }\n        function destroyElementStream(elements) {\n            bufferPool.push(elements);\n        }\n        function initElements(elements, data, usage, prim, count, byteLength, type) {\n            elements.buffer.bind();\n            var dtype;\n            if (data) {\n                var predictedType = type;\n                if (!type && (!isTypedArray(data) || isNDArrayLike(data) && !isTypedArray(data.data))) predictedType = extensions.oes_element_index_uint ? GL_UNSIGNED_INT$2 : GL_UNSIGNED_SHORT$2;\n                bufferState._initBuffer(elements.buffer, data, usage, predictedType, 3);\n            } else {\n                gl.bufferData(GL_ELEMENT_ARRAY_BUFFER, byteLength, usage);\n                elements.buffer.dtype = dtype || GL_UNSIGNED_BYTE$4;\n                elements.buffer.usage = usage;\n                elements.buffer.dimension = 3;\n                elements.buffer.byteLength = byteLength;\n            }\n            dtype = type;\n            if (!type) {\n                switch(elements.buffer.dtype){\n                    case GL_UNSIGNED_BYTE$4:\n                    case GL_BYTE$2:\n                        dtype = GL_UNSIGNED_BYTE$4;\n                        break;\n                    case GL_UNSIGNED_SHORT$2:\n                    case GL_SHORT$2:\n                        dtype = GL_UNSIGNED_SHORT$2;\n                        break;\n                    case GL_UNSIGNED_INT$2:\n                    case GL_INT$2:\n                        dtype = GL_UNSIGNED_INT$2;\n                        break;\n                    default:\n                        check$1.raise(\"unsupported type for element array\");\n                }\n                elements.buffer.dtype = dtype;\n            }\n            elements.type = dtype;\n            // Check oes_element_index_uint extension\n            check$1(dtype !== GL_UNSIGNED_INT$2 || !!extensions.oes_element_index_uint, \"32 bit element buffers not supported, enable oes_element_index_uint first\");\n            // try to guess default primitive type and arguments\n            var vertCount = count;\n            if (vertCount < 0) {\n                vertCount = elements.buffer.byteLength;\n                if (dtype === GL_UNSIGNED_SHORT$2) vertCount >>= 1;\n                else if (dtype === GL_UNSIGNED_INT$2) vertCount >>= 2;\n            }\n            elements.vertCount = vertCount;\n            // try to guess primitive type from cell dimension\n            var primType = prim;\n            if (prim < 0) {\n                primType = GL_TRIANGLES;\n                var dimension = elements.buffer.dimension;\n                if (dimension === 1) primType = GL_POINTS;\n                if (dimension === 2) primType = GL_LINES;\n                if (dimension === 3) primType = GL_TRIANGLES;\n            }\n            elements.primType = primType;\n        }\n        function destroyElements(elements) {\n            stats.elementsCount--;\n            check$1(elements.buffer !== null, \"must not double destroy elements\");\n            delete elementSet[elements.id];\n            elements.buffer.destroy();\n            elements.buffer = null;\n        }\n        function createElements(options, persistent) {\n            var buffer = bufferState.create(null, GL_ELEMENT_ARRAY_BUFFER, true);\n            var elements = new REGLElementBuffer(buffer._buffer);\n            stats.elementsCount++;\n            function reglElements(options) {\n                if (!options) {\n                    buffer();\n                    elements.primType = GL_TRIANGLES;\n                    elements.vertCount = 0;\n                    elements.type = GL_UNSIGNED_BYTE$4;\n                } else if (typeof options === \"number\") {\n                    buffer(options);\n                    elements.primType = GL_TRIANGLES;\n                    elements.vertCount = options | 0;\n                    elements.type = GL_UNSIGNED_BYTE$4;\n                } else {\n                    var data = null;\n                    var usage = GL_STATIC_DRAW$1;\n                    var primType = -1;\n                    var vertCount = -1;\n                    var byteLength = 0;\n                    var dtype = 0;\n                    if (Array.isArray(options) || isTypedArray(options) || isNDArrayLike(options)) data = options;\n                    else {\n                        check$1.type(options, \"object\", \"invalid arguments for elements\");\n                        if (\"data\" in options) {\n                            data = options.data;\n                            check$1(Array.isArray(data) || isTypedArray(data) || isNDArrayLike(data), \"invalid data for element buffer\");\n                        }\n                        if (\"usage\" in options) {\n                            check$1.parameter(options.usage, usageTypes, \"invalid element buffer usage\");\n                            usage = usageTypes[options.usage];\n                        }\n                        if (\"primitive\" in options) {\n                            check$1.parameter(options.primitive, primTypes, \"invalid element buffer primitive\");\n                            primType = primTypes[options.primitive];\n                        }\n                        if (\"count\" in options) {\n                            check$1(typeof options.count === \"number\" && options.count >= 0, \"invalid vertex count for elements\");\n                            vertCount = options.count | 0;\n                        }\n                        if (\"type\" in options) {\n                            check$1.parameter(options.type, elementTypes, \"invalid buffer type\");\n                            dtype = elementTypes[options.type];\n                        }\n                        if (\"length\" in options) byteLength = options.length | 0;\n                        else {\n                            byteLength = vertCount;\n                            if (dtype === GL_UNSIGNED_SHORT$2 || dtype === GL_SHORT$2) byteLength *= 2;\n                            else if (dtype === GL_UNSIGNED_INT$2 || dtype === GL_INT$2) byteLength *= 4;\n                        }\n                    }\n                    initElements(elements, data, usage, primType, vertCount, byteLength, dtype);\n                }\n                return reglElements;\n            }\n            reglElements(options);\n            reglElements._reglType = \"elements\";\n            reglElements._elements = elements;\n            reglElements.subdata = function(data, offset) {\n                buffer.subdata(data, offset);\n                return reglElements;\n            };\n            reglElements.destroy = function() {\n                destroyElements(elements);\n            };\n            return reglElements;\n        }\n        return {\n            create: createElements,\n            createStream: createElementStream,\n            destroyStream: destroyElementStream,\n            getElements: function(elements) {\n                if (typeof elements === \"function\" && elements._elements instanceof REGLElementBuffer) return elements._elements;\n                return null;\n            },\n            clear: function() {\n                values(elementSet).forEach(destroyElements);\n            }\n        };\n    }\n    var FLOAT = new Float32Array(1);\n    var INT = new Uint32Array(FLOAT.buffer);\n    var GL_UNSIGNED_SHORT$4 = 5123;\n    function convertToHalfFloat(array) {\n        var ushorts = pool.allocType(GL_UNSIGNED_SHORT$4, array.length);\n        for(var i = 0; i < array.length; ++i){\n            if (isNaN(array[i])) ushorts[i] = 0xffff;\n            else if (array[i] === Infinity) ushorts[i] = 0x7c00;\n            else if (array[i] === -Infinity) ushorts[i] = 0xfc00;\n            else {\n                FLOAT[0] = array[i];\n                var x = INT[0];\n                var sgn = x >>> 31 << 15;\n                var exp = (x << 1 >>> 24) - 127;\n                var frac = x >> 13 & 1023;\n                if (exp < -24) // round non-representable denormals to 0\n                ushorts[i] = sgn;\n                else if (exp < -14) {\n                    // handle denormals\n                    var s = -14 - exp;\n                    ushorts[i] = sgn + (frac + 1024 >> s);\n                } else if (exp > 15) // round overflow to +/- Infinity\n                ushorts[i] = sgn + 0x7c00;\n                else // otherwise convert directly\n                ushorts[i] = sgn + (exp + 15 << 10) + frac;\n            }\n        }\n        return ushorts;\n    }\n    function isArrayLike(s) {\n        return Array.isArray(s) || isTypedArray(s);\n    }\n    var isPow2$1 = function(v) {\n        return !(v & v - 1) && !!v;\n    };\n    var GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3;\n    var GL_TEXTURE_2D$1 = 0x0DE1;\n    var GL_TEXTURE_CUBE_MAP$1 = 0x8513;\n    var GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 = 0x8515;\n    var GL_RGBA$1 = 0x1908;\n    var GL_ALPHA = 0x1906;\n    var GL_RGB = 0x1907;\n    var GL_LUMINANCE = 0x1909;\n    var GL_LUMINANCE_ALPHA = 0x190A;\n    var GL_RGBA4 = 0x8056;\n    var GL_RGB5_A1 = 0x8057;\n    var GL_RGB565 = 0x8D62;\n    var GL_UNSIGNED_SHORT_4_4_4_4$1 = 0x8033;\n    var GL_UNSIGNED_SHORT_5_5_5_1$1 = 0x8034;\n    var GL_UNSIGNED_SHORT_5_6_5$1 = 0x8363;\n    var GL_UNSIGNED_INT_24_8_WEBGL$1 = 0x84FA;\n    var GL_DEPTH_COMPONENT = 0x1902;\n    var GL_DEPTH_STENCIL = 0x84F9;\n    var GL_SRGB_EXT = 0x8C40;\n    var GL_SRGB_ALPHA_EXT = 0x8C42;\n    var GL_HALF_FLOAT_OES$1 = 0x8D61;\n    var GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;\n    var GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;\n    var GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;\n    var GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;\n    var GL_COMPRESSED_RGB_ATC_WEBGL = 0x8C92;\n    var GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL = 0x8C93;\n    var GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL = 0x87EE;\n    var GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8C00;\n    var GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8C01;\n    var GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8C02;\n    var GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8C03;\n    var GL_COMPRESSED_RGB_ETC1_WEBGL = 0x8D64;\n    var GL_UNSIGNED_BYTE$5 = 0x1401;\n    var GL_UNSIGNED_SHORT$3 = 0x1403;\n    var GL_UNSIGNED_INT$3 = 0x1405;\n    var GL_FLOAT$4 = 0x1406;\n    var GL_TEXTURE_WRAP_S = 0x2802;\n    var GL_TEXTURE_WRAP_T = 0x2803;\n    var GL_REPEAT = 0x2901;\n    var GL_CLAMP_TO_EDGE$1 = 0x812F;\n    var GL_MIRRORED_REPEAT = 0x8370;\n    var GL_TEXTURE_MAG_FILTER = 0x2800;\n    var GL_TEXTURE_MIN_FILTER = 0x2801;\n    var GL_NEAREST$1 = 0x2600;\n    var GL_LINEAR = 0x2601;\n    var GL_NEAREST_MIPMAP_NEAREST$1 = 0x2700;\n    var GL_LINEAR_MIPMAP_NEAREST$1 = 0x2701;\n    var GL_NEAREST_MIPMAP_LINEAR$1 = 0x2702;\n    var GL_LINEAR_MIPMAP_LINEAR$1 = 0x2703;\n    var GL_GENERATE_MIPMAP_HINT = 0x8192;\n    var GL_DONT_CARE = 0x1100;\n    var GL_FASTEST = 0x1101;\n    var GL_NICEST = 0x1102;\n    var GL_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE;\n    var GL_UNPACK_ALIGNMENT = 0x0CF5;\n    var GL_UNPACK_FLIP_Y_WEBGL = 0x9240;\n    var GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;\n    var GL_UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\n    var GL_BROWSER_DEFAULT_WEBGL = 0x9244;\n    var GL_TEXTURE0$1 = 0x84C0;\n    var MIPMAP_FILTERS = [\n        GL_NEAREST_MIPMAP_NEAREST$1,\n        GL_NEAREST_MIPMAP_LINEAR$1,\n        GL_LINEAR_MIPMAP_NEAREST$1,\n        GL_LINEAR_MIPMAP_LINEAR$1\n    ];\n    var CHANNELS_FORMAT = [\n        0,\n        GL_LUMINANCE,\n        GL_LUMINANCE_ALPHA,\n        GL_RGB,\n        GL_RGBA$1\n    ];\n    var FORMAT_CHANNELS = {};\n    FORMAT_CHANNELS[GL_LUMINANCE] = FORMAT_CHANNELS[GL_ALPHA] = FORMAT_CHANNELS[GL_DEPTH_COMPONENT] = 1;\n    FORMAT_CHANNELS[GL_DEPTH_STENCIL] = FORMAT_CHANNELS[GL_LUMINANCE_ALPHA] = 2;\n    FORMAT_CHANNELS[GL_RGB] = FORMAT_CHANNELS[GL_SRGB_EXT] = 3;\n    FORMAT_CHANNELS[GL_RGBA$1] = FORMAT_CHANNELS[GL_SRGB_ALPHA_EXT] = 4;\n    function objectName(str) {\n        return \"[object \" + str + \"]\";\n    }\n    var CANVAS_CLASS = objectName(\"HTMLCanvasElement\");\n    var OFFSCREENCANVAS_CLASS = objectName(\"OffscreenCanvas\");\n    var CONTEXT2D_CLASS = objectName(\"CanvasRenderingContext2D\");\n    var BITMAP_CLASS = objectName(\"ImageBitmap\");\n    var IMAGE_CLASS = objectName(\"HTMLImageElement\");\n    var VIDEO_CLASS = objectName(\"HTMLVideoElement\");\n    var PIXEL_CLASSES = Object.keys(arrayTypes).concat([\n        CANVAS_CLASS,\n        OFFSCREENCANVAS_CLASS,\n        CONTEXT2D_CLASS,\n        BITMAP_CLASS,\n        IMAGE_CLASS,\n        VIDEO_CLASS\n    ]);\n    // for every texture type, store\n    // the size in bytes.\n    var TYPE_SIZES = [];\n    TYPE_SIZES[GL_UNSIGNED_BYTE$5] = 1;\n    TYPE_SIZES[GL_FLOAT$4] = 4;\n    TYPE_SIZES[GL_HALF_FLOAT_OES$1] = 2;\n    TYPE_SIZES[GL_UNSIGNED_SHORT$3] = 2;\n    TYPE_SIZES[GL_UNSIGNED_INT$3] = 4;\n    var FORMAT_SIZES_SPECIAL = [];\n    FORMAT_SIZES_SPECIAL[GL_RGBA4] = 2;\n    FORMAT_SIZES_SPECIAL[GL_RGB5_A1] = 2;\n    FORMAT_SIZES_SPECIAL[GL_RGB565] = 2;\n    FORMAT_SIZES_SPECIAL[GL_DEPTH_STENCIL] = 4;\n    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_S3TC_DXT1_EXT] = 0.5;\n    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT1_EXT] = 0.5;\n    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT3_EXT] = 1;\n    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT5_EXT] = 1;\n    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_ATC_WEBGL] = 0.5;\n    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL] = 1;\n    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL] = 1;\n    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG] = 0.5;\n    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG] = 0.25;\n    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG] = 0.5;\n    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG] = 0.25;\n    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_ETC1_WEBGL] = 0.5;\n    function isNumericArray(arr) {\n        return Array.isArray(arr) && (arr.length === 0 || typeof arr[0] === \"number\");\n    }\n    function isRectArray(arr) {\n        if (!Array.isArray(arr)) return false;\n        var width = arr.length;\n        if (width === 0 || !isArrayLike(arr[0])) return false;\n        return true;\n    }\n    function classString(x) {\n        return Object.prototype.toString.call(x);\n    }\n    function isCanvasElement(object) {\n        return classString(object) === CANVAS_CLASS;\n    }\n    function isOffscreenCanvas(object) {\n        return classString(object) === OFFSCREENCANVAS_CLASS;\n    }\n    function isContext2D(object) {\n        return classString(object) === CONTEXT2D_CLASS;\n    }\n    function isBitmap(object) {\n        return classString(object) === BITMAP_CLASS;\n    }\n    function isImageElement(object) {\n        return classString(object) === IMAGE_CLASS;\n    }\n    function isVideoElement(object) {\n        return classString(object) === VIDEO_CLASS;\n    }\n    function isPixelData(object) {\n        if (!object) return false;\n        var className = classString(object);\n        if (PIXEL_CLASSES.indexOf(className) >= 0) return true;\n        return isNumericArray(object) || isRectArray(object) || isNDArrayLike(object);\n    }\n    function typedArrayCode$1(data) {\n        return arrayTypes[Object.prototype.toString.call(data)] | 0;\n    }\n    function convertData(result, data) {\n        var n = data.length;\n        switch(result.type){\n            case GL_UNSIGNED_BYTE$5:\n            case GL_UNSIGNED_SHORT$3:\n            case GL_UNSIGNED_INT$3:\n            case GL_FLOAT$4:\n                var converted = pool.allocType(result.type, n);\n                converted.set(data);\n                result.data = converted;\n                break;\n            case GL_HALF_FLOAT_OES$1:\n                result.data = convertToHalfFloat(data);\n                break;\n            default:\n                check$1.raise(\"unsupported texture type, must specify a typed array\");\n        }\n    }\n    function preConvert(image, n) {\n        return pool.allocType(image.type === GL_HALF_FLOAT_OES$1 ? GL_FLOAT$4 : image.type, n);\n    }\n    function postConvert(image, data) {\n        if (image.type === GL_HALF_FLOAT_OES$1) {\n            image.data = convertToHalfFloat(data);\n            pool.freeType(data);\n        } else image.data = data;\n    }\n    function transposeData(image, array, strideX, strideY, strideC, offset) {\n        var w = image.width;\n        var h = image.height;\n        var c = image.channels;\n        var n = w * h * c;\n        var data = preConvert(image, n);\n        var p = 0;\n        for(var i = 0; i < h; ++i){\n            for(var j = 0; j < w; ++j)for(var k = 0; k < c; ++k)data[p++] = array[strideX * j + strideY * i + strideC * k + offset];\n        }\n        postConvert(image, data);\n    }\n    function getTextureSize(format, type, width, height, isMipmap, isCube) {\n        var s;\n        if (typeof FORMAT_SIZES_SPECIAL[format] !== \"undefined\") // we have a special array for dealing with weird color formats such as RGB5A1\n        s = FORMAT_SIZES_SPECIAL[format];\n        else s = FORMAT_CHANNELS[format] * TYPE_SIZES[type];\n        if (isCube) s *= 6;\n        if (isMipmap) {\n            // compute the total size of all the mipmaps.\n            var total = 0;\n            var w = width;\n            while(w >= 1){\n                // we can only use mipmaps on a square image,\n                // so we can simply use the width and ignore the height:\n                total += s * w * w;\n                w /= 2;\n            }\n            return total;\n        } else return s * width * height;\n    }\n    function createTextureSet(gl, extensions, limits, reglPoll, contextState, stats, config) {\n        // -------------------------------------------------------\n        // Initialize constants and parameter tables here\n        // -------------------------------------------------------\n        var mipmapHint = {\n            \"don't care\": GL_DONT_CARE,\n            \"dont care\": GL_DONT_CARE,\n            \"nice\": GL_NICEST,\n            \"fast\": GL_FASTEST\n        };\n        var wrapModes = {\n            \"repeat\": GL_REPEAT,\n            \"clamp\": GL_CLAMP_TO_EDGE$1,\n            \"mirror\": GL_MIRRORED_REPEAT\n        };\n        var magFilters = {\n            \"nearest\": GL_NEAREST$1,\n            \"linear\": GL_LINEAR\n        };\n        var minFilters = extend({\n            \"mipmap\": GL_LINEAR_MIPMAP_LINEAR$1,\n            \"nearest mipmap nearest\": GL_NEAREST_MIPMAP_NEAREST$1,\n            \"linear mipmap nearest\": GL_LINEAR_MIPMAP_NEAREST$1,\n            \"nearest mipmap linear\": GL_NEAREST_MIPMAP_LINEAR$1,\n            \"linear mipmap linear\": GL_LINEAR_MIPMAP_LINEAR$1\n        }, magFilters);\n        var colorSpace = {\n            \"none\": 0,\n            \"browser\": GL_BROWSER_DEFAULT_WEBGL\n        };\n        var textureTypes = {\n            \"uint8\": GL_UNSIGNED_BYTE$5,\n            \"rgba4\": GL_UNSIGNED_SHORT_4_4_4_4$1,\n            \"rgb565\": GL_UNSIGNED_SHORT_5_6_5$1,\n            \"rgb5 a1\": GL_UNSIGNED_SHORT_5_5_5_1$1\n        };\n        var textureFormats = {\n            \"alpha\": GL_ALPHA,\n            \"luminance\": GL_LUMINANCE,\n            \"luminance alpha\": GL_LUMINANCE_ALPHA,\n            \"rgb\": GL_RGB,\n            \"rgba\": GL_RGBA$1,\n            \"rgba4\": GL_RGBA4,\n            \"rgb5 a1\": GL_RGB5_A1,\n            \"rgb565\": GL_RGB565\n        };\n        var compressedTextureFormats = {};\n        if (extensions.ext_srgb) {\n            textureFormats.srgb = GL_SRGB_EXT;\n            textureFormats.srgba = GL_SRGB_ALPHA_EXT;\n        }\n        if (extensions.oes_texture_float) textureTypes.float32 = textureTypes.float = GL_FLOAT$4;\n        if (extensions.oes_texture_half_float) textureTypes[\"float16\"] = textureTypes[\"half float\"] = GL_HALF_FLOAT_OES$1;\n        if (extensions.webgl_depth_texture) {\n            extend(textureFormats, {\n                \"depth\": GL_DEPTH_COMPONENT,\n                \"depth stencil\": GL_DEPTH_STENCIL\n            });\n            extend(textureTypes, {\n                \"uint16\": GL_UNSIGNED_SHORT$3,\n                \"uint32\": GL_UNSIGNED_INT$3,\n                \"depth stencil\": GL_UNSIGNED_INT_24_8_WEBGL$1\n            });\n        }\n        if (extensions.webgl_compressed_texture_s3tc) extend(compressedTextureFormats, {\n            \"rgb s3tc dxt1\": GL_COMPRESSED_RGB_S3TC_DXT1_EXT,\n            \"rgba s3tc dxt1\": GL_COMPRESSED_RGBA_S3TC_DXT1_EXT,\n            \"rgba s3tc dxt3\": GL_COMPRESSED_RGBA_S3TC_DXT3_EXT,\n            \"rgba s3tc dxt5\": GL_COMPRESSED_RGBA_S3TC_DXT5_EXT\n        });\n        if (extensions.webgl_compressed_texture_atc) extend(compressedTextureFormats, {\n            \"rgb atc\": GL_COMPRESSED_RGB_ATC_WEBGL,\n            \"rgba atc explicit alpha\": GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL,\n            \"rgba atc interpolated alpha\": GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL\n        });\n        if (extensions.webgl_compressed_texture_pvrtc) extend(compressedTextureFormats, {\n            \"rgb pvrtc 4bppv1\": GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG,\n            \"rgb pvrtc 2bppv1\": GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG,\n            \"rgba pvrtc 4bppv1\": GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,\n            \"rgba pvrtc 2bppv1\": GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG\n        });\n        if (extensions.webgl_compressed_texture_etc1) compressedTextureFormats[\"rgb etc1\"] = GL_COMPRESSED_RGB_ETC1_WEBGL;\n        // Copy over all texture formats\n        var supportedCompressedFormats = Array.prototype.slice.call(gl.getParameter(GL_COMPRESSED_TEXTURE_FORMATS));\n        Object.keys(compressedTextureFormats).forEach(function(name) {\n            var format = compressedTextureFormats[name];\n            if (supportedCompressedFormats.indexOf(format) >= 0) textureFormats[name] = format;\n        });\n        var supportedFormats = Object.keys(textureFormats);\n        limits.textureFormats = supportedFormats;\n        // associate with every format string its\n        // corresponding GL-value.\n        var textureFormatsInvert = [];\n        Object.keys(textureFormats).forEach(function(key) {\n            var val = textureFormats[key];\n            textureFormatsInvert[val] = key;\n        });\n        // associate with every type string its\n        // corresponding GL-value.\n        var textureTypesInvert = [];\n        Object.keys(textureTypes).forEach(function(key) {\n            var val = textureTypes[key];\n            textureTypesInvert[val] = key;\n        });\n        var magFiltersInvert = [];\n        Object.keys(magFilters).forEach(function(key) {\n            var val = magFilters[key];\n            magFiltersInvert[val] = key;\n        });\n        var minFiltersInvert = [];\n        Object.keys(minFilters).forEach(function(key) {\n            var val = minFilters[key];\n            minFiltersInvert[val] = key;\n        });\n        var wrapModesInvert = [];\n        Object.keys(wrapModes).forEach(function(key) {\n            var val = wrapModes[key];\n            wrapModesInvert[val] = key;\n        });\n        // colorFormats[] gives the format (channels) associated to an\n        // internalformat\n        var colorFormats = supportedFormats.reduce(function(color, key) {\n            var glenum = textureFormats[key];\n            if (glenum === GL_LUMINANCE || glenum === GL_ALPHA || glenum === GL_LUMINANCE || glenum === GL_LUMINANCE_ALPHA || glenum === GL_DEPTH_COMPONENT || glenum === GL_DEPTH_STENCIL || extensions.ext_srgb && (glenum === GL_SRGB_EXT || glenum === GL_SRGB_ALPHA_EXT)) color[glenum] = glenum;\n            else if (glenum === GL_RGB5_A1 || key.indexOf(\"rgba\") >= 0) color[glenum] = GL_RGBA$1;\n            else color[glenum] = GL_RGB;\n            return color;\n        }, {});\n        function TexFlags() {\n            // format info\n            this.internalformat = GL_RGBA$1;\n            this.format = GL_RGBA$1;\n            this.type = GL_UNSIGNED_BYTE$5;\n            this.compressed = false;\n            // pixel storage\n            this.premultiplyAlpha = false;\n            this.flipY = false;\n            this.unpackAlignment = 1;\n            this.colorSpace = GL_BROWSER_DEFAULT_WEBGL;\n            // shape info\n            this.width = 0;\n            this.height = 0;\n            this.channels = 0;\n        }\n        function copyFlags(result, other) {\n            result.internalformat = other.internalformat;\n            result.format = other.format;\n            result.type = other.type;\n            result.compressed = other.compressed;\n            result.premultiplyAlpha = other.premultiplyAlpha;\n            result.flipY = other.flipY;\n            result.unpackAlignment = other.unpackAlignment;\n            result.colorSpace = other.colorSpace;\n            result.width = other.width;\n            result.height = other.height;\n            result.channels = other.channels;\n        }\n        function parseFlags(flags, options) {\n            if (typeof options !== \"object\" || !options) return;\n            if (\"premultiplyAlpha\" in options) {\n                check$1.type(options.premultiplyAlpha, \"boolean\", \"invalid premultiplyAlpha\");\n                flags.premultiplyAlpha = options.premultiplyAlpha;\n            }\n            if (\"flipY\" in options) {\n                check$1.type(options.flipY, \"boolean\", \"invalid texture flip\");\n                flags.flipY = options.flipY;\n            }\n            if (\"alignment\" in options) {\n                check$1.oneOf(options.alignment, [\n                    1,\n                    2,\n                    4,\n                    8\n                ], \"invalid texture unpack alignment\");\n                flags.unpackAlignment = options.alignment;\n            }\n            if (\"colorSpace\" in options) {\n                check$1.parameter(options.colorSpace, colorSpace, \"invalid colorSpace\");\n                flags.colorSpace = colorSpace[options.colorSpace];\n            }\n            if (\"type\" in options) {\n                var type = options.type;\n                check$1(extensions.oes_texture_float || !(type === \"float\" || type === \"float32\"), \"you must enable the OES_texture_float extension in order to use floating point textures.\");\n                check$1(extensions.oes_texture_half_float || !(type === \"half float\" || type === \"float16\"), \"you must enable the OES_texture_half_float extension in order to use 16-bit floating point textures.\");\n                check$1(extensions.webgl_depth_texture || !(type === \"uint16\" || type === \"uint32\" || type === \"depth stencil\"), \"you must enable the WEBGL_depth_texture extension in order to use depth/stencil textures.\");\n                check$1.parameter(type, textureTypes, \"invalid texture type\");\n                flags.type = textureTypes[type];\n            }\n            var w = flags.width;\n            var h = flags.height;\n            var c = flags.channels;\n            var hasChannels = false;\n            if (\"shape\" in options) {\n                check$1(Array.isArray(options.shape) && options.shape.length >= 2, \"shape must be an array\");\n                w = options.shape[0];\n                h = options.shape[1];\n                if (options.shape.length === 3) {\n                    c = options.shape[2];\n                    check$1(c > 0 && c <= 4, \"invalid number of channels\");\n                    hasChannels = true;\n                }\n                check$1(w >= 0 && w <= limits.maxTextureSize, \"invalid width\");\n                check$1(h >= 0 && h <= limits.maxTextureSize, \"invalid height\");\n            } else {\n                if (\"radius\" in options) {\n                    w = h = options.radius;\n                    check$1(w >= 0 && w <= limits.maxTextureSize, \"invalid radius\");\n                }\n                if (\"width\" in options) {\n                    w = options.width;\n                    check$1(w >= 0 && w <= limits.maxTextureSize, \"invalid width\");\n                }\n                if (\"height\" in options) {\n                    h = options.height;\n                    check$1(h >= 0 && h <= limits.maxTextureSize, \"invalid height\");\n                }\n                if (\"channels\" in options) {\n                    c = options.channels;\n                    check$1(c > 0 && c <= 4, \"invalid number of channels\");\n                    hasChannels = true;\n                }\n            }\n            flags.width = w | 0;\n            flags.height = h | 0;\n            flags.channels = c | 0;\n            var hasFormat = false;\n            if (\"format\" in options) {\n                var formatStr = options.format;\n                check$1(extensions.webgl_depth_texture || !(formatStr === \"depth\" || formatStr === \"depth stencil\"), \"you must enable the WEBGL_depth_texture extension in order to use depth/stencil textures.\");\n                check$1.parameter(formatStr, textureFormats, \"invalid texture format\");\n                var internalformat = flags.internalformat = textureFormats[formatStr];\n                flags.format = colorFormats[internalformat];\n                if (formatStr in textureTypes) {\n                    if (!(\"type\" in options)) flags.type = textureTypes[formatStr];\n                }\n                if (formatStr in compressedTextureFormats) flags.compressed = true;\n                hasFormat = true;\n            }\n            // Reconcile channels and format\n            if (!hasChannels && hasFormat) flags.channels = FORMAT_CHANNELS[flags.format];\n            else if (hasChannels && !hasFormat) {\n                if (flags.channels !== CHANNELS_FORMAT[flags.format]) flags.format = flags.internalformat = CHANNELS_FORMAT[flags.channels];\n            } else if (hasFormat && hasChannels) check$1(flags.channels === FORMAT_CHANNELS[flags.format], \"number of channels inconsistent with specified format\");\n        }\n        function setFlags(flags) {\n            gl.pixelStorei(GL_UNPACK_FLIP_Y_WEBGL, flags.flipY);\n            gl.pixelStorei(GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL, flags.premultiplyAlpha);\n            gl.pixelStorei(GL_UNPACK_COLORSPACE_CONVERSION_WEBGL, flags.colorSpace);\n            gl.pixelStorei(GL_UNPACK_ALIGNMENT, flags.unpackAlignment);\n        }\n        // -------------------------------------------------------\n        // Tex image data\n        // -------------------------------------------------------\n        function TexImage() {\n            TexFlags.call(this);\n            this.xOffset = 0;\n            this.yOffset = 0;\n            // data\n            this.data = null;\n            this.needsFree = false;\n            // html element\n            this.element = null;\n            // copyTexImage info\n            this.needsCopy = false;\n        }\n        function parseImage(image, options) {\n            var data = null;\n            if (isPixelData(options)) data = options;\n            else if (options) {\n                check$1.type(options, \"object\", \"invalid pixel data type\");\n                parseFlags(image, options);\n                if (\"x\" in options) image.xOffset = options.x | 0;\n                if (\"y\" in options) image.yOffset = options.y | 0;\n                if (isPixelData(options.data)) data = options.data;\n            }\n            check$1(!image.compressed || data instanceof Uint8Array, \"compressed texture data must be stored in a uint8array\");\n            if (options.copy) {\n                check$1(!data, \"can not specify copy and data field for the same texture\");\n                var viewW = contextState.viewportWidth;\n                var viewH = contextState.viewportHeight;\n                image.width = image.width || viewW - image.xOffset;\n                image.height = image.height || viewH - image.yOffset;\n                image.needsCopy = true;\n                check$1(image.xOffset >= 0 && image.xOffset < viewW && image.yOffset >= 0 && image.yOffset < viewH && image.width > 0 && image.width <= viewW && image.height > 0 && image.height <= viewH, \"copy texture read out of bounds\");\n            } else if (!data) {\n                image.width = image.width || 1;\n                image.height = image.height || 1;\n                image.channels = image.channels || 4;\n            } else if (isTypedArray(data)) {\n                image.channels = image.channels || 4;\n                image.data = data;\n                if (!(\"type\" in options) && image.type === GL_UNSIGNED_BYTE$5) image.type = typedArrayCode$1(data);\n            } else if (isNumericArray(data)) {\n                image.channels = image.channels || 4;\n                convertData(image, data);\n                image.alignment = 1;\n                image.needsFree = true;\n            } else if (isNDArrayLike(data)) {\n                var array = data.data;\n                if (!Array.isArray(array) && image.type === GL_UNSIGNED_BYTE$5) image.type = typedArrayCode$1(array);\n                var shape = data.shape;\n                var stride = data.stride;\n                var shapeX, shapeY, shapeC, strideX, strideY, strideC;\n                if (shape.length === 3) {\n                    shapeC = shape[2];\n                    strideC = stride[2];\n                } else {\n                    check$1(shape.length === 2, \"invalid ndarray pixel data, must be 2 or 3D\");\n                    shapeC = 1;\n                    strideC = 1;\n                }\n                shapeX = shape[0];\n                shapeY = shape[1];\n                strideX = stride[0];\n                strideY = stride[1];\n                image.alignment = 1;\n                image.width = shapeX;\n                image.height = shapeY;\n                image.channels = shapeC;\n                image.format = image.internalformat = CHANNELS_FORMAT[shapeC];\n                image.needsFree = true;\n                transposeData(image, array, strideX, strideY, strideC, data.offset);\n            } else if (isCanvasElement(data) || isOffscreenCanvas(data) || isContext2D(data)) {\n                if (isCanvasElement(data) || isOffscreenCanvas(data)) image.element = data;\n                else image.element = data.canvas;\n                image.width = image.element.width;\n                image.height = image.element.height;\n                image.channels = 4;\n            } else if (isBitmap(data)) {\n                image.element = data;\n                image.width = data.width;\n                image.height = data.height;\n                image.channels = 4;\n            } else if (isImageElement(data)) {\n                image.element = data;\n                image.width = data.naturalWidth;\n                image.height = data.naturalHeight;\n                image.channels = 4;\n            } else if (isVideoElement(data)) {\n                image.element = data;\n                image.width = data.videoWidth;\n                image.height = data.videoHeight;\n                image.channels = 4;\n            } else if (isRectArray(data)) {\n                var w = image.width || data[0].length;\n                var h = image.height || data.length;\n                var c = image.channels;\n                if (isArrayLike(data[0][0])) c = c || data[0][0].length;\n                else c = c || 1;\n                var arrayShape = flattenUtils.shape(data);\n                var n = 1;\n                for(var dd = 0; dd < arrayShape.length; ++dd)n *= arrayShape[dd];\n                var allocData = preConvert(image, n);\n                flattenUtils.flatten(data, arrayShape, \"\", allocData);\n                postConvert(image, allocData);\n                image.alignment = 1;\n                image.width = w;\n                image.height = h;\n                image.channels = c;\n                image.format = image.internalformat = CHANNELS_FORMAT[c];\n                image.needsFree = true;\n            }\n            if (image.type === GL_FLOAT$4) check$1(limits.extensions.indexOf(\"oes_texture_float\") >= 0, \"oes_texture_float extension not enabled\");\n            else if (image.type === GL_HALF_FLOAT_OES$1) check$1(limits.extensions.indexOf(\"oes_texture_half_float\") >= 0, \"oes_texture_half_float extension not enabled\");\n        // do compressed texture  validation here.\n        }\n        function setImage(info, target, miplevel) {\n            var element = info.element;\n            var data = info.data;\n            var internalformat = info.internalformat;\n            var format = info.format;\n            var type = info.type;\n            var width = info.width;\n            var height = info.height;\n            setFlags(info);\n            if (element) gl.texImage2D(target, miplevel, format, format, type, element);\n            else if (info.compressed) gl.compressedTexImage2D(target, miplevel, internalformat, width, height, 0, data);\n            else if (info.needsCopy) {\n                reglPoll();\n                gl.copyTexImage2D(target, miplevel, format, info.xOffset, info.yOffset, width, height, 0);\n            } else gl.texImage2D(target, miplevel, format, width, height, 0, format, type, data || null);\n        }\n        function setSubImage(info, target, x, y, miplevel) {\n            var element = info.element;\n            var data = info.data;\n            var internalformat = info.internalformat;\n            var format = info.format;\n            var type = info.type;\n            var width = info.width;\n            var height = info.height;\n            setFlags(info);\n            if (element) gl.texSubImage2D(target, miplevel, x, y, format, type, element);\n            else if (info.compressed) gl.compressedTexSubImage2D(target, miplevel, x, y, internalformat, width, height, data);\n            else if (info.needsCopy) {\n                reglPoll();\n                gl.copyTexSubImage2D(target, miplevel, x, y, info.xOffset, info.yOffset, width, height);\n            } else gl.texSubImage2D(target, miplevel, x, y, width, height, format, type, data);\n        }\n        // texImage pool\n        var imagePool = [];\n        function allocImage() {\n            return imagePool.pop() || new TexImage();\n        }\n        function freeImage(image) {\n            if (image.needsFree) pool.freeType(image.data);\n            TexImage.call(image);\n            imagePool.push(image);\n        }\n        // -------------------------------------------------------\n        // Mip map\n        // -------------------------------------------------------\n        function MipMap() {\n            TexFlags.call(this);\n            this.genMipmaps = false;\n            this.mipmapHint = GL_DONT_CARE;\n            this.mipmask = 0;\n            this.images = Array(16);\n        }\n        function parseMipMapFromShape(mipmap, width, height) {\n            var img = mipmap.images[0] = allocImage();\n            mipmap.mipmask = 1;\n            img.width = mipmap.width = width;\n            img.height = mipmap.height = height;\n            img.channels = mipmap.channels = 4;\n        }\n        function parseMipMapFromObject(mipmap, options) {\n            var imgData = null;\n            if (isPixelData(options)) {\n                imgData = mipmap.images[0] = allocImage();\n                copyFlags(imgData, mipmap);\n                parseImage(imgData, options);\n                mipmap.mipmask = 1;\n            } else {\n                parseFlags(mipmap, options);\n                if (Array.isArray(options.mipmap)) {\n                    var mipData = options.mipmap;\n                    for(var i = 0; i < mipData.length; ++i){\n                        imgData = mipmap.images[i] = allocImage();\n                        copyFlags(imgData, mipmap);\n                        imgData.width >>= i;\n                        imgData.height >>= i;\n                        parseImage(imgData, mipData[i]);\n                        mipmap.mipmask |= 1 << i;\n                    }\n                } else {\n                    imgData = mipmap.images[0] = allocImage();\n                    copyFlags(imgData, mipmap);\n                    parseImage(imgData, options);\n                    mipmap.mipmask = 1;\n                }\n            }\n            copyFlags(mipmap, mipmap.images[0]);\n            // For textures of the compressed format WEBGL_compressed_texture_s3tc\n            // we must have that\n            //\n            // \"When level equals zero width and height must be a multiple of 4.\n            // When level is greater than 0 width and height must be 0, 1, 2 or a multiple of 4. \"\n            //\n            // but we do not yet support having multiple mipmap levels for compressed textures,\n            // so we only test for level zero.\n            if (mipmap.compressed && (mipmap.internalformat === GL_COMPRESSED_RGB_S3TC_DXT1_EXT || mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT1_EXT || mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT3_EXT || mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT5_EXT)) check$1(mipmap.width % 4 === 0 && mipmap.height % 4 === 0, \"for compressed texture formats, mipmap level 0 must have width and height that are a multiple of 4\");\n        }\n        function setMipMap(mipmap, target) {\n            var images = mipmap.images;\n            for(var i = 0; i < images.length; ++i){\n                if (!images[i]) return;\n                setImage(images[i], target, i);\n            }\n        }\n        var mipPool = [];\n        function allocMipMap() {\n            var result = mipPool.pop() || new MipMap();\n            TexFlags.call(result);\n            result.mipmask = 0;\n            for(var i = 0; i < 16; ++i)result.images[i] = null;\n            return result;\n        }\n        function freeMipMap(mipmap) {\n            var images = mipmap.images;\n            for(var i = 0; i < images.length; ++i){\n                if (images[i]) freeImage(images[i]);\n                images[i] = null;\n            }\n            mipPool.push(mipmap);\n        }\n        // -------------------------------------------------------\n        // Tex info\n        // -------------------------------------------------------\n        function TexInfo() {\n            this.minFilter = GL_NEAREST$1;\n            this.magFilter = GL_NEAREST$1;\n            this.wrapS = GL_CLAMP_TO_EDGE$1;\n            this.wrapT = GL_CLAMP_TO_EDGE$1;\n            this.anisotropic = 1;\n            this.genMipmaps = false;\n            this.mipmapHint = GL_DONT_CARE;\n        }\n        function parseTexInfo(info, options) {\n            if (\"min\" in options) {\n                var minFilter = options.min;\n                check$1.parameter(minFilter, minFilters);\n                info.minFilter = minFilters[minFilter];\n                if (MIPMAP_FILTERS.indexOf(info.minFilter) >= 0 && !(\"faces\" in options)) info.genMipmaps = true;\n            }\n            if (\"mag\" in options) {\n                var magFilter = options.mag;\n                check$1.parameter(magFilter, magFilters);\n                info.magFilter = magFilters[magFilter];\n            }\n            var wrapS = info.wrapS;\n            var wrapT = info.wrapT;\n            if (\"wrap\" in options) {\n                var wrap = options.wrap;\n                if (typeof wrap === \"string\") {\n                    check$1.parameter(wrap, wrapModes);\n                    wrapS = wrapT = wrapModes[wrap];\n                } else if (Array.isArray(wrap)) {\n                    check$1.parameter(wrap[0], wrapModes);\n                    check$1.parameter(wrap[1], wrapModes);\n                    wrapS = wrapModes[wrap[0]];\n                    wrapT = wrapModes[wrap[1]];\n                }\n            } else {\n                if (\"wrapS\" in options) {\n                    var optWrapS = options.wrapS;\n                    check$1.parameter(optWrapS, wrapModes);\n                    wrapS = wrapModes[optWrapS];\n                }\n                if (\"wrapT\" in options) {\n                    var optWrapT = options.wrapT;\n                    check$1.parameter(optWrapT, wrapModes);\n                    wrapT = wrapModes[optWrapT];\n                }\n            }\n            info.wrapS = wrapS;\n            info.wrapT = wrapT;\n            if (\"anisotropic\" in options) {\n                var anisotropic = options.anisotropic;\n                check$1(typeof anisotropic === \"number\" && anisotropic >= 1 && anisotropic <= limits.maxAnisotropic, \"aniso samples must be between 1 and \");\n                info.anisotropic = options.anisotropic;\n            }\n            if (\"mipmap\" in options) {\n                var hasMipMap = false;\n                switch(typeof options.mipmap){\n                    case \"string\":\n                        check$1.parameter(options.mipmap, mipmapHint, \"invalid mipmap hint\");\n                        info.mipmapHint = mipmapHint[options.mipmap];\n                        info.genMipmaps = true;\n                        hasMipMap = true;\n                        break;\n                    case \"boolean\":\n                        hasMipMap = info.genMipmaps = options.mipmap;\n                        break;\n                    case \"object\":\n                        check$1(Array.isArray(options.mipmap), \"invalid mipmap type\");\n                        info.genMipmaps = false;\n                        hasMipMap = true;\n                        break;\n                    default:\n                        check$1.raise(\"invalid mipmap type\");\n                }\n                if (hasMipMap && !(\"min\" in options)) info.minFilter = GL_NEAREST_MIPMAP_NEAREST$1;\n            }\n        }\n        function setTexInfo(info, target) {\n            gl.texParameteri(target, GL_TEXTURE_MIN_FILTER, info.minFilter);\n            gl.texParameteri(target, GL_TEXTURE_MAG_FILTER, info.magFilter);\n            gl.texParameteri(target, GL_TEXTURE_WRAP_S, info.wrapS);\n            gl.texParameteri(target, GL_TEXTURE_WRAP_T, info.wrapT);\n            if (extensions.ext_texture_filter_anisotropic) gl.texParameteri(target, GL_TEXTURE_MAX_ANISOTROPY_EXT, info.anisotropic);\n            if (info.genMipmaps) {\n                gl.hint(GL_GENERATE_MIPMAP_HINT, info.mipmapHint);\n                gl.generateMipmap(target);\n            }\n        }\n        // -------------------------------------------------------\n        // Full texture object\n        // -------------------------------------------------------\n        var textureCount = 0;\n        var textureSet = {};\n        var numTexUnits = limits.maxTextureUnits;\n        var textureUnits = Array(numTexUnits).map(function() {\n            return null;\n        });\n        function REGLTexture(target) {\n            TexFlags.call(this);\n            this.mipmask = 0;\n            this.internalformat = GL_RGBA$1;\n            this.id = textureCount++;\n            this.refCount = 1;\n            this.target = target;\n            this.texture = gl.createTexture();\n            this.unit = -1;\n            this.bindCount = 0;\n            this.texInfo = new TexInfo();\n            if (config.profile) this.stats = {\n                size: 0\n            };\n        }\n        function tempBind(texture) {\n            gl.activeTexture(GL_TEXTURE0$1);\n            gl.bindTexture(texture.target, texture.texture);\n        }\n        function tempRestore() {\n            var prev = textureUnits[0];\n            if (prev) gl.bindTexture(prev.target, prev.texture);\n            else gl.bindTexture(GL_TEXTURE_2D$1, null);\n        }\n        function destroy(texture) {\n            var handle = texture.texture;\n            check$1(handle, \"must not double destroy texture\");\n            var unit = texture.unit;\n            var target = texture.target;\n            if (unit >= 0) {\n                gl.activeTexture(GL_TEXTURE0$1 + unit);\n                gl.bindTexture(target, null);\n                textureUnits[unit] = null;\n            }\n            gl.deleteTexture(handle);\n            texture.texture = null;\n            texture.params = null;\n            texture.pixels = null;\n            texture.refCount = 0;\n            delete textureSet[texture.id];\n            stats.textureCount--;\n        }\n        extend(REGLTexture.prototype, {\n            bind: function() {\n                var texture = this;\n                texture.bindCount += 1;\n                var unit = texture.unit;\n                if (unit < 0) {\n                    for(var i = 0; i < numTexUnits; ++i){\n                        var other = textureUnits[i];\n                        if (other) {\n                            if (other.bindCount > 0) continue;\n                            other.unit = -1;\n                        }\n                        textureUnits[i] = texture;\n                        unit = i;\n                        break;\n                    }\n                    if (unit >= numTexUnits) check$1.raise(\"insufficient number of texture units\");\n                    if (config.profile && stats.maxTextureUnits < unit + 1) stats.maxTextureUnits = unit + 1 // +1, since the units are zero-based\n                    ;\n                    texture.unit = unit;\n                    gl.activeTexture(GL_TEXTURE0$1 + unit);\n                    gl.bindTexture(texture.target, texture.texture);\n                }\n                return unit;\n            },\n            unbind: function() {\n                this.bindCount -= 1;\n            },\n            decRef: function() {\n                if (--this.refCount <= 0) destroy(this);\n            }\n        });\n        function createTexture2D(a, b) {\n            var texture = new REGLTexture(GL_TEXTURE_2D$1);\n            textureSet[texture.id] = texture;\n            stats.textureCount++;\n            function reglTexture2D(a, b) {\n                var texInfo = texture.texInfo;\n                TexInfo.call(texInfo);\n                var mipData = allocMipMap();\n                if (typeof a === \"number\") {\n                    if (typeof b === \"number\") parseMipMapFromShape(mipData, a | 0, b | 0);\n                    else parseMipMapFromShape(mipData, a | 0, a | 0);\n                } else if (a) {\n                    check$1.type(a, \"object\", \"invalid arguments to regl.texture\");\n                    parseTexInfo(texInfo, a);\n                    parseMipMapFromObject(mipData, a);\n                } else // empty textures get assigned a default shape of 1x1\n                parseMipMapFromShape(mipData, 1, 1);\n                if (texInfo.genMipmaps) mipData.mipmask = (mipData.width << 1) - 1;\n                texture.mipmask = mipData.mipmask;\n                copyFlags(texture, mipData);\n                check$1.texture2D(texInfo, mipData, limits);\n                texture.internalformat = mipData.internalformat;\n                reglTexture2D.width = mipData.width;\n                reglTexture2D.height = mipData.height;\n                tempBind(texture);\n                setMipMap(mipData, GL_TEXTURE_2D$1);\n                setTexInfo(texInfo, GL_TEXTURE_2D$1);\n                tempRestore();\n                freeMipMap(mipData);\n                if (config.profile) texture.stats.size = getTextureSize(texture.internalformat, texture.type, mipData.width, mipData.height, texInfo.genMipmaps, false);\n                reglTexture2D.format = textureFormatsInvert[texture.internalformat];\n                reglTexture2D.type = textureTypesInvert[texture.type];\n                reglTexture2D.mag = magFiltersInvert[texInfo.magFilter];\n                reglTexture2D.min = minFiltersInvert[texInfo.minFilter];\n                reglTexture2D.wrapS = wrapModesInvert[texInfo.wrapS];\n                reglTexture2D.wrapT = wrapModesInvert[texInfo.wrapT];\n                return reglTexture2D;\n            }\n            function subimage(image, x_, y_, level_) {\n                check$1(!!image, \"must specify image data\");\n                var x = x_ | 0;\n                var y = y_ | 0;\n                var level = level_ | 0;\n                var imageData = allocImage();\n                copyFlags(imageData, texture);\n                imageData.width = 0;\n                imageData.height = 0;\n                parseImage(imageData, image);\n                imageData.width = imageData.width || (texture.width >> level) - x;\n                imageData.height = imageData.height || (texture.height >> level) - y;\n                check$1(texture.type === imageData.type && texture.format === imageData.format && texture.internalformat === imageData.internalformat, \"incompatible format for texture.subimage\");\n                check$1(x >= 0 && y >= 0 && x + imageData.width <= texture.width && y + imageData.height <= texture.height, \"texture.subimage write out of bounds\");\n                check$1(texture.mipmask & 1 << level, \"missing mipmap data\");\n                check$1(imageData.data || imageData.element || imageData.needsCopy, \"missing image data\");\n                tempBind(texture);\n                setSubImage(imageData, GL_TEXTURE_2D$1, x, y, level);\n                tempRestore();\n                freeImage(imageData);\n                return reglTexture2D;\n            }\n            function resize(w_, h_) {\n                var w = w_ | 0;\n                var h = h_ | 0 || w;\n                if (w === texture.width && h === texture.height) return reglTexture2D;\n                reglTexture2D.width = texture.width = w;\n                reglTexture2D.height = texture.height = h;\n                tempBind(texture);\n                for(var i = 0; texture.mipmask >> i; ++i){\n                    var _w = w >> i;\n                    var _h = h >> i;\n                    if (!_w || !_h) break;\n                    gl.texImage2D(GL_TEXTURE_2D$1, i, texture.format, _w, _h, 0, texture.format, texture.type, null);\n                }\n                tempRestore();\n                // also, recompute the texture size.\n                if (config.profile) texture.stats.size = getTextureSize(texture.internalformat, texture.type, w, h, false, false);\n                return reglTexture2D;\n            }\n            reglTexture2D(a, b);\n            reglTexture2D.subimage = subimage;\n            reglTexture2D.resize = resize;\n            reglTexture2D._reglType = \"texture2d\";\n            reglTexture2D._texture = texture;\n            if (config.profile) reglTexture2D.stats = texture.stats;\n            reglTexture2D.destroy = function() {\n                texture.decRef();\n            };\n            return reglTexture2D;\n        }\n        function createTextureCube(a0, a1, a2, a3, a4, a5) {\n            var texture = new REGLTexture(GL_TEXTURE_CUBE_MAP$1);\n            textureSet[texture.id] = texture;\n            stats.cubeCount++;\n            var faces = new Array(6);\n            function reglTextureCube(a0, a1, a2, a3, a4, a5) {\n                var i;\n                var texInfo = texture.texInfo;\n                TexInfo.call(texInfo);\n                for(i = 0; i < 6; ++i)faces[i] = allocMipMap();\n                if (typeof a0 === \"number\" || !a0) {\n                    var s = a0 | 0 || 1;\n                    for(i = 0; i < 6; ++i)parseMipMapFromShape(faces[i], s, s);\n                } else if (typeof a0 === \"object\") {\n                    if (a1) {\n                        parseMipMapFromObject(faces[0], a0);\n                        parseMipMapFromObject(faces[1], a1);\n                        parseMipMapFromObject(faces[2], a2);\n                        parseMipMapFromObject(faces[3], a3);\n                        parseMipMapFromObject(faces[4], a4);\n                        parseMipMapFromObject(faces[5], a5);\n                    } else {\n                        parseTexInfo(texInfo, a0);\n                        parseFlags(texture, a0);\n                        if (\"faces\" in a0) {\n                            var faceInput = a0.faces;\n                            check$1(Array.isArray(faceInput) && faceInput.length === 6, \"cube faces must be a length 6 array\");\n                            for(i = 0; i < 6; ++i){\n                                check$1(typeof faceInput[i] === \"object\" && !!faceInput[i], \"invalid input for cube map face\");\n                                copyFlags(faces[i], texture);\n                                parseMipMapFromObject(faces[i], faceInput[i]);\n                            }\n                        } else for(i = 0; i < 6; ++i)parseMipMapFromObject(faces[i], a0);\n                    }\n                } else check$1.raise(\"invalid arguments to cube map\");\n                copyFlags(texture, faces[0]);\n                check$1.optional(function() {\n                    if (!limits.npotTextureCube) check$1(isPow2$1(texture.width) && isPow2$1(texture.height), \"your browser does not support non power or two texture dimensions\");\n                });\n                if (texInfo.genMipmaps) texture.mipmask = (faces[0].width << 1) - 1;\n                else texture.mipmask = faces[0].mipmask;\n                check$1.textureCube(texture, texInfo, faces, limits);\n                texture.internalformat = faces[0].internalformat;\n                reglTextureCube.width = faces[0].width;\n                reglTextureCube.height = faces[0].height;\n                tempBind(texture);\n                for(i = 0; i < 6; ++i)setMipMap(faces[i], GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + i);\n                setTexInfo(texInfo, GL_TEXTURE_CUBE_MAP$1);\n                tempRestore();\n                if (config.profile) texture.stats.size = getTextureSize(texture.internalformat, texture.type, reglTextureCube.width, reglTextureCube.height, texInfo.genMipmaps, true);\n                reglTextureCube.format = textureFormatsInvert[texture.internalformat];\n                reglTextureCube.type = textureTypesInvert[texture.type];\n                reglTextureCube.mag = magFiltersInvert[texInfo.magFilter];\n                reglTextureCube.min = minFiltersInvert[texInfo.minFilter];\n                reglTextureCube.wrapS = wrapModesInvert[texInfo.wrapS];\n                reglTextureCube.wrapT = wrapModesInvert[texInfo.wrapT];\n                for(i = 0; i < 6; ++i)freeMipMap(faces[i]);\n                return reglTextureCube;\n            }\n            function subimage(face, image, x_, y_, level_) {\n                check$1(!!image, \"must specify image data\");\n                check$1(typeof face === \"number\" && face === (face | 0) && face >= 0 && face < 6, \"invalid face\");\n                var x = x_ | 0;\n                var y = y_ | 0;\n                var level = level_ | 0;\n                var imageData = allocImage();\n                copyFlags(imageData, texture);\n                imageData.width = 0;\n                imageData.height = 0;\n                parseImage(imageData, image);\n                imageData.width = imageData.width || (texture.width >> level) - x;\n                imageData.height = imageData.height || (texture.height >> level) - y;\n                check$1(texture.type === imageData.type && texture.format === imageData.format && texture.internalformat === imageData.internalformat, \"incompatible format for texture.subimage\");\n                check$1(x >= 0 && y >= 0 && x + imageData.width <= texture.width && y + imageData.height <= texture.height, \"texture.subimage write out of bounds\");\n                check$1(texture.mipmask & 1 << level, \"missing mipmap data\");\n                check$1(imageData.data || imageData.element || imageData.needsCopy, \"missing image data\");\n                tempBind(texture);\n                setSubImage(imageData, GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + face, x, y, level);\n                tempRestore();\n                freeImage(imageData);\n                return reglTextureCube;\n            }\n            function resize(radius_) {\n                var radius = radius_ | 0;\n                if (radius === texture.width) return;\n                reglTextureCube.width = texture.width = radius;\n                reglTextureCube.height = texture.height = radius;\n                tempBind(texture);\n                for(var i = 0; i < 6; ++i)for(var j = 0; texture.mipmask >> j; ++j)gl.texImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + i, j, texture.format, radius >> j, radius >> j, 0, texture.format, texture.type, null);\n                tempRestore();\n                if (config.profile) texture.stats.size = getTextureSize(texture.internalformat, texture.type, reglTextureCube.width, reglTextureCube.height, false, true);\n                return reglTextureCube;\n            }\n            reglTextureCube(a0, a1, a2, a3, a4, a5);\n            reglTextureCube.subimage = subimage;\n            reglTextureCube.resize = resize;\n            reglTextureCube._reglType = \"textureCube\";\n            reglTextureCube._texture = texture;\n            if (config.profile) reglTextureCube.stats = texture.stats;\n            reglTextureCube.destroy = function() {\n                texture.decRef();\n            };\n            return reglTextureCube;\n        }\n        // Called when regl is destroyed\n        function destroyTextures() {\n            for(var i = 0; i < numTexUnits; ++i){\n                gl.activeTexture(GL_TEXTURE0$1 + i);\n                gl.bindTexture(GL_TEXTURE_2D$1, null);\n                textureUnits[i] = null;\n            }\n            values(textureSet).forEach(destroy);\n            stats.cubeCount = 0;\n            stats.textureCount = 0;\n        }\n        if (config.profile) stats.getTotalTextureSize = function() {\n            var total = 0;\n            Object.keys(textureSet).forEach(function(key) {\n                total += textureSet[key].stats.size;\n            });\n            return total;\n        };\n        function restoreTextures() {\n            for(var i = 0; i < numTexUnits; ++i){\n                var tex = textureUnits[i];\n                if (tex) {\n                    tex.bindCount = 0;\n                    tex.unit = -1;\n                    textureUnits[i] = null;\n                }\n            }\n            values(textureSet).forEach(function(texture) {\n                texture.texture = gl.createTexture();\n                gl.bindTexture(texture.target, texture.texture);\n                for(var i = 0; i < 32; ++i){\n                    if ((texture.mipmask & 1 << i) === 0) continue;\n                    if (texture.target === GL_TEXTURE_2D$1) gl.texImage2D(GL_TEXTURE_2D$1, i, texture.internalformat, texture.width >> i, texture.height >> i, 0, texture.internalformat, texture.type, null);\n                    else for(var j = 0; j < 6; ++j)gl.texImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + j, i, texture.internalformat, texture.width >> i, texture.height >> i, 0, texture.internalformat, texture.type, null);\n                }\n                setTexInfo(texture.texInfo, texture.target);\n            });\n        }\n        function refreshTextures() {\n            for(var i = 0; i < numTexUnits; ++i){\n                var tex = textureUnits[i];\n                if (tex) {\n                    tex.bindCount = 0;\n                    tex.unit = -1;\n                    textureUnits[i] = null;\n                }\n                gl.activeTexture(GL_TEXTURE0$1 + i);\n                gl.bindTexture(GL_TEXTURE_2D$1, null);\n                gl.bindTexture(GL_TEXTURE_CUBE_MAP$1, null);\n            }\n        }\n        return {\n            create2D: createTexture2D,\n            createCube: createTextureCube,\n            clear: destroyTextures,\n            getTexture: function(wrapper) {\n                return null;\n            },\n            restore: restoreTextures,\n            refresh: refreshTextures\n        };\n    }\n    var GL_RENDERBUFFER = 0x8D41;\n    var GL_RGBA4$1 = 0x8056;\n    var GL_RGB5_A1$1 = 0x8057;\n    var GL_RGB565$1 = 0x8D62;\n    var GL_DEPTH_COMPONENT16 = 0x81A5;\n    var GL_STENCIL_INDEX8 = 0x8D48;\n    var GL_DEPTH_STENCIL$1 = 0x84F9;\n    var GL_SRGB8_ALPHA8_EXT = 0x8C43;\n    var GL_RGBA32F_EXT = 0x8814;\n    var GL_RGBA16F_EXT = 0x881A;\n    var GL_RGB16F_EXT = 0x881B;\n    var FORMAT_SIZES = [];\n    FORMAT_SIZES[GL_RGBA4$1] = 2;\n    FORMAT_SIZES[GL_RGB5_A1$1] = 2;\n    FORMAT_SIZES[GL_RGB565$1] = 2;\n    FORMAT_SIZES[GL_DEPTH_COMPONENT16] = 2;\n    FORMAT_SIZES[GL_STENCIL_INDEX8] = 1;\n    FORMAT_SIZES[GL_DEPTH_STENCIL$1] = 4;\n    FORMAT_SIZES[GL_SRGB8_ALPHA8_EXT] = 4;\n    FORMAT_SIZES[GL_RGBA32F_EXT] = 16;\n    FORMAT_SIZES[GL_RGBA16F_EXT] = 8;\n    FORMAT_SIZES[GL_RGB16F_EXT] = 6;\n    function getRenderbufferSize(format, width, height) {\n        return FORMAT_SIZES[format] * width * height;\n    }\n    var wrapRenderbuffers = function(gl, extensions, limits, stats, config) {\n        var formatTypes = {\n            \"rgba4\": GL_RGBA4$1,\n            \"rgb565\": GL_RGB565$1,\n            \"rgb5 a1\": GL_RGB5_A1$1,\n            \"depth\": GL_DEPTH_COMPONENT16,\n            \"stencil\": GL_STENCIL_INDEX8,\n            \"depth stencil\": GL_DEPTH_STENCIL$1\n        };\n        if (extensions.ext_srgb) formatTypes[\"srgba\"] = GL_SRGB8_ALPHA8_EXT;\n        if (extensions.ext_color_buffer_half_float) {\n            formatTypes[\"rgba16f\"] = GL_RGBA16F_EXT;\n            formatTypes[\"rgb16f\"] = GL_RGB16F_EXT;\n        }\n        if (extensions.webgl_color_buffer_float) formatTypes[\"rgba32f\"] = GL_RGBA32F_EXT;\n        var formatTypesInvert = [];\n        Object.keys(formatTypes).forEach(function(key) {\n            var val = formatTypes[key];\n            formatTypesInvert[val] = key;\n        });\n        var renderbufferCount = 0;\n        var renderbufferSet = {};\n        function REGLRenderbuffer(renderbuffer) {\n            this.id = renderbufferCount++;\n            this.refCount = 1;\n            this.renderbuffer = renderbuffer;\n            this.format = GL_RGBA4$1;\n            this.width = 0;\n            this.height = 0;\n            if (config.profile) this.stats = {\n                size: 0\n            };\n        }\n        REGLRenderbuffer.prototype.decRef = function() {\n            if (--this.refCount <= 0) destroy(this);\n        };\n        function destroy(rb) {\n            var handle = rb.renderbuffer;\n            check$1(handle, \"must not double destroy renderbuffer\");\n            gl.bindRenderbuffer(GL_RENDERBUFFER, null);\n            gl.deleteRenderbuffer(handle);\n            rb.renderbuffer = null;\n            rb.refCount = 0;\n            delete renderbufferSet[rb.id];\n            stats.renderbufferCount--;\n        }\n        function createRenderbuffer(a, b) {\n            var renderbuffer = new REGLRenderbuffer(gl.createRenderbuffer());\n            renderbufferSet[renderbuffer.id] = renderbuffer;\n            stats.renderbufferCount++;\n            function reglRenderbuffer(a, b) {\n                var w = 0;\n                var h = 0;\n                var format = GL_RGBA4$1;\n                if (typeof a === \"object\" && a) {\n                    var options = a;\n                    if (\"shape\" in options) {\n                        var shape = options.shape;\n                        check$1(Array.isArray(shape) && shape.length >= 2, \"invalid renderbuffer shape\");\n                        w = shape[0] | 0;\n                        h = shape[1] | 0;\n                    } else {\n                        if (\"radius\" in options) w = h = options.radius | 0;\n                        if (\"width\" in options) w = options.width | 0;\n                        if (\"height\" in options) h = options.height | 0;\n                    }\n                    if (\"format\" in options) {\n                        check$1.parameter(options.format, formatTypes, \"invalid renderbuffer format\");\n                        format = formatTypes[options.format];\n                    }\n                } else if (typeof a === \"number\") {\n                    w = a | 0;\n                    if (typeof b === \"number\") h = b | 0;\n                    else h = w;\n                } else if (!a) w = h = 1;\n                else check$1.raise(\"invalid arguments to renderbuffer constructor\");\n                // check shape\n                check$1(w > 0 && h > 0 && w <= limits.maxRenderbufferSize && h <= limits.maxRenderbufferSize, \"invalid renderbuffer size\");\n                if (w === renderbuffer.width && h === renderbuffer.height && format === renderbuffer.format) return;\n                reglRenderbuffer.width = renderbuffer.width = w;\n                reglRenderbuffer.height = renderbuffer.height = h;\n                renderbuffer.format = format;\n                gl.bindRenderbuffer(GL_RENDERBUFFER, renderbuffer.renderbuffer);\n                gl.renderbufferStorage(GL_RENDERBUFFER, format, w, h);\n                check$1(gl.getError() === 0, \"invalid render buffer format\");\n                if (config.profile) renderbuffer.stats.size = getRenderbufferSize(renderbuffer.format, renderbuffer.width, renderbuffer.height);\n                reglRenderbuffer.format = formatTypesInvert[renderbuffer.format];\n                return reglRenderbuffer;\n            }\n            function resize(w_, h_) {\n                var w = w_ | 0;\n                var h = h_ | 0 || w;\n                if (w === renderbuffer.width && h === renderbuffer.height) return reglRenderbuffer;\n                // check shape\n                check$1(w > 0 && h > 0 && w <= limits.maxRenderbufferSize && h <= limits.maxRenderbufferSize, \"invalid renderbuffer size\");\n                reglRenderbuffer.width = renderbuffer.width = w;\n                reglRenderbuffer.height = renderbuffer.height = h;\n                gl.bindRenderbuffer(GL_RENDERBUFFER, renderbuffer.renderbuffer);\n                gl.renderbufferStorage(GL_RENDERBUFFER, renderbuffer.format, w, h);\n                check$1(gl.getError() === 0, \"invalid render buffer format\");\n                // also, recompute size.\n                if (config.profile) renderbuffer.stats.size = getRenderbufferSize(renderbuffer.format, renderbuffer.width, renderbuffer.height);\n                return reglRenderbuffer;\n            }\n            reglRenderbuffer(a, b);\n            reglRenderbuffer.resize = resize;\n            reglRenderbuffer._reglType = \"renderbuffer\";\n            reglRenderbuffer._renderbuffer = renderbuffer;\n            if (config.profile) reglRenderbuffer.stats = renderbuffer.stats;\n            reglRenderbuffer.destroy = function() {\n                renderbuffer.decRef();\n            };\n            return reglRenderbuffer;\n        }\n        if (config.profile) stats.getTotalRenderbufferSize = function() {\n            var total = 0;\n            Object.keys(renderbufferSet).forEach(function(key) {\n                total += renderbufferSet[key].stats.size;\n            });\n            return total;\n        };\n        function restoreRenderbuffers() {\n            values(renderbufferSet).forEach(function(rb) {\n                rb.renderbuffer = gl.createRenderbuffer();\n                gl.bindRenderbuffer(GL_RENDERBUFFER, rb.renderbuffer);\n                gl.renderbufferStorage(GL_RENDERBUFFER, rb.format, rb.width, rb.height);\n            });\n            gl.bindRenderbuffer(GL_RENDERBUFFER, null);\n        }\n        return {\n            create: createRenderbuffer,\n            clear: function() {\n                values(renderbufferSet).forEach(destroy);\n            },\n            restore: restoreRenderbuffers\n        };\n    };\n    // We store these constants so that the minifier can inline them\n    var GL_FRAMEBUFFER$1 = 0x8D40;\n    var GL_RENDERBUFFER$1 = 0x8D41;\n    var GL_TEXTURE_2D$2 = 0x0DE1;\n    var GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 = 0x8515;\n    var GL_COLOR_ATTACHMENT0$1 = 0x8CE0;\n    var GL_DEPTH_ATTACHMENT = 0x8D00;\n    var GL_STENCIL_ATTACHMENT = 0x8D20;\n    var GL_DEPTH_STENCIL_ATTACHMENT = 0x821A;\n    var GL_FRAMEBUFFER_COMPLETE$1 = 0x8CD5;\n    var GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;\n    var GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;\n    var GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9;\n    var GL_FRAMEBUFFER_UNSUPPORTED = 0x8CDD;\n    var GL_HALF_FLOAT_OES$2 = 0x8D61;\n    var GL_UNSIGNED_BYTE$6 = 0x1401;\n    var GL_FLOAT$5 = 0x1406;\n    var GL_RGB$1 = 0x1907;\n    var GL_RGBA$2 = 0x1908;\n    var GL_DEPTH_COMPONENT$1 = 0x1902;\n    var colorTextureFormatEnums = [\n        GL_RGB$1,\n        GL_RGBA$2\n    ];\n    // for every texture format, store\n    // the number of channels\n    var textureFormatChannels = [];\n    textureFormatChannels[GL_RGBA$2] = 4;\n    textureFormatChannels[GL_RGB$1] = 3;\n    // for every texture type, store\n    // the size in bytes.\n    var textureTypeSizes = [];\n    textureTypeSizes[GL_UNSIGNED_BYTE$6] = 1;\n    textureTypeSizes[GL_FLOAT$5] = 4;\n    textureTypeSizes[GL_HALF_FLOAT_OES$2] = 2;\n    var GL_RGBA4$2 = 0x8056;\n    var GL_RGB5_A1$2 = 0x8057;\n    var GL_RGB565$2 = 0x8D62;\n    var GL_DEPTH_COMPONENT16$1 = 0x81A5;\n    var GL_STENCIL_INDEX8$1 = 0x8D48;\n    var GL_DEPTH_STENCIL$2 = 0x84F9;\n    var GL_SRGB8_ALPHA8_EXT$1 = 0x8C43;\n    var GL_RGBA32F_EXT$1 = 0x8814;\n    var GL_RGBA16F_EXT$1 = 0x881A;\n    var GL_RGB16F_EXT$1 = 0x881B;\n    var colorRenderbufferFormatEnums = [\n        GL_RGBA4$2,\n        GL_RGB5_A1$2,\n        GL_RGB565$2,\n        GL_SRGB8_ALPHA8_EXT$1,\n        GL_RGBA16F_EXT$1,\n        GL_RGB16F_EXT$1,\n        GL_RGBA32F_EXT$1\n    ];\n    var statusCode = {};\n    statusCode[GL_FRAMEBUFFER_COMPLETE$1] = \"complete\";\n    statusCode[GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT] = \"incomplete attachment\";\n    statusCode[GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS] = \"incomplete dimensions\";\n    statusCode[GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT] = \"incomplete, missing attachment\";\n    statusCode[GL_FRAMEBUFFER_UNSUPPORTED] = \"unsupported\";\n    function wrapFBOState(gl, extensions, limits, textureState, renderbufferState, stats) {\n        var framebufferState = {\n            cur: null,\n            next: null,\n            dirty: false,\n            setFBO: null\n        };\n        var colorTextureFormats = [\n            \"rgba\"\n        ];\n        var colorRenderbufferFormats = [\n            \"rgba4\",\n            \"rgb565\",\n            \"rgb5 a1\"\n        ];\n        if (extensions.ext_srgb) colorRenderbufferFormats.push(\"srgba\");\n        if (extensions.ext_color_buffer_half_float) colorRenderbufferFormats.push(\"rgba16f\", \"rgb16f\");\n        if (extensions.webgl_color_buffer_float) colorRenderbufferFormats.push(\"rgba32f\");\n        var colorTypes = [\n            \"uint8\"\n        ];\n        if (extensions.oes_texture_half_float) colorTypes.push(\"half float\", \"float16\");\n        if (extensions.oes_texture_float) colorTypes.push(\"float\", \"float32\");\n        function FramebufferAttachment(target, texture, renderbuffer) {\n            this.target = target;\n            this.texture = texture;\n            this.renderbuffer = renderbuffer;\n            var w = 0;\n            var h = 0;\n            if (texture) {\n                w = texture.width;\n                h = texture.height;\n            } else if (renderbuffer) {\n                w = renderbuffer.width;\n                h = renderbuffer.height;\n            }\n            this.width = w;\n            this.height = h;\n        }\n        function decRef(attachment) {\n            if (attachment) {\n                if (attachment.texture) attachment.texture._texture.decRef();\n                if (attachment.renderbuffer) attachment.renderbuffer._renderbuffer.decRef();\n            }\n        }\n        function incRefAndCheckShape(attachment, width, height) {\n            if (!attachment) return;\n            if (attachment.texture) {\n                var texture = attachment.texture._texture;\n                var tw = Math.max(1, texture.width);\n                var th = Math.max(1, texture.height);\n                check$1(tw === width && th === height, \"inconsistent width/height for supplied texture\");\n                texture.refCount += 1;\n            } else {\n                var renderbuffer = attachment.renderbuffer._renderbuffer;\n                check$1(renderbuffer.width === width && renderbuffer.height === height, \"inconsistent width/height for renderbuffer\");\n                renderbuffer.refCount += 1;\n            }\n        }\n        function attach(location, attachment) {\n            if (attachment) {\n                if (attachment.texture) gl.framebufferTexture2D(GL_FRAMEBUFFER$1, location, attachment.target, attachment.texture._texture.texture, 0);\n                else gl.framebufferRenderbuffer(GL_FRAMEBUFFER$1, location, GL_RENDERBUFFER$1, attachment.renderbuffer._renderbuffer.renderbuffer);\n            }\n        }\n        function parseAttachment(attachment) {\n            var target = GL_TEXTURE_2D$2;\n            var texture = null;\n            var renderbuffer = null;\n            var data = attachment;\n            if (typeof attachment === \"object\") {\n                data = attachment.data;\n                if (\"target\" in attachment) target = attachment.target | 0;\n            }\n            check$1.type(data, \"function\", \"invalid attachment data\");\n            var type = data._reglType;\n            if (type === \"texture2d\") {\n                texture = data;\n                check$1(target === GL_TEXTURE_2D$2);\n            } else if (type === \"textureCube\") {\n                texture = data;\n                check$1(target >= GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 && target < GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 + 6, \"invalid cube map target\");\n            } else if (type === \"renderbuffer\") {\n                renderbuffer = data;\n                target = GL_RENDERBUFFER$1;\n            } else check$1.raise(\"invalid regl object for attachment\");\n            return new FramebufferAttachment(target, texture, renderbuffer);\n        }\n        function allocAttachment(width, height, isTexture, format, type) {\n            if (isTexture) {\n                var texture = textureState.create2D({\n                    width: width,\n                    height: height,\n                    format: format,\n                    type: type\n                });\n                texture._texture.refCount = 0;\n                return new FramebufferAttachment(GL_TEXTURE_2D$2, texture, null);\n            } else {\n                var rb = renderbufferState.create({\n                    width: width,\n                    height: height,\n                    format: format\n                });\n                rb._renderbuffer.refCount = 0;\n                return new FramebufferAttachment(GL_RENDERBUFFER$1, null, rb);\n            }\n        }\n        function unwrapAttachment(attachment) {\n            return attachment && (attachment.texture || attachment.renderbuffer);\n        }\n        function resizeAttachment(attachment, w, h) {\n            if (attachment) {\n                if (attachment.texture) attachment.texture.resize(w, h);\n                else if (attachment.renderbuffer) attachment.renderbuffer.resize(w, h);\n                attachment.width = w;\n                attachment.height = h;\n            }\n        }\n        var framebufferCount = 0;\n        var framebufferSet = {};\n        function REGLFramebuffer() {\n            this.id = framebufferCount++;\n            framebufferSet[this.id] = this;\n            this.framebuffer = gl.createFramebuffer();\n            this.width = 0;\n            this.height = 0;\n            this.colorAttachments = [];\n            this.depthAttachment = null;\n            this.stencilAttachment = null;\n            this.depthStencilAttachment = null;\n        }\n        function decFBORefs(framebuffer) {\n            framebuffer.colorAttachments.forEach(decRef);\n            decRef(framebuffer.depthAttachment);\n            decRef(framebuffer.stencilAttachment);\n            decRef(framebuffer.depthStencilAttachment);\n        }\n        function destroy(framebuffer) {\n            var handle = framebuffer.framebuffer;\n            check$1(handle, \"must not double destroy framebuffer\");\n            gl.deleteFramebuffer(handle);\n            framebuffer.framebuffer = null;\n            stats.framebufferCount--;\n            delete framebufferSet[framebuffer.id];\n        }\n        function updateFramebuffer(framebuffer) {\n            var i;\n            gl.bindFramebuffer(GL_FRAMEBUFFER$1, framebuffer.framebuffer);\n            var colorAttachments = framebuffer.colorAttachments;\n            for(i = 0; i < colorAttachments.length; ++i)attach(GL_COLOR_ATTACHMENT0$1 + i, colorAttachments[i]);\n            for(i = colorAttachments.length; i < limits.maxColorAttachments; ++i)gl.framebufferTexture2D(GL_FRAMEBUFFER$1, GL_COLOR_ATTACHMENT0$1 + i, GL_TEXTURE_2D$2, null, 0);\n            gl.framebufferTexture2D(GL_FRAMEBUFFER$1, GL_DEPTH_STENCIL_ATTACHMENT, GL_TEXTURE_2D$2, null, 0);\n            gl.framebufferTexture2D(GL_FRAMEBUFFER$1, GL_DEPTH_ATTACHMENT, GL_TEXTURE_2D$2, null, 0);\n            gl.framebufferTexture2D(GL_FRAMEBUFFER$1, GL_STENCIL_ATTACHMENT, GL_TEXTURE_2D$2, null, 0);\n            attach(GL_DEPTH_ATTACHMENT, framebuffer.depthAttachment);\n            attach(GL_STENCIL_ATTACHMENT, framebuffer.stencilAttachment);\n            attach(GL_DEPTH_STENCIL_ATTACHMENT, framebuffer.depthStencilAttachment);\n            // Check status code\n            var status = gl.checkFramebufferStatus(GL_FRAMEBUFFER$1);\n            if (!gl.isContextLost() && status !== GL_FRAMEBUFFER_COMPLETE$1) check$1.raise(\"framebuffer configuration not supported, status = \" + statusCode[status]);\n            gl.bindFramebuffer(GL_FRAMEBUFFER$1, framebufferState.next ? framebufferState.next.framebuffer : null);\n            framebufferState.cur = framebufferState.next;\n            // FIXME: Clear error code here.  This is a work around for a bug in\n            // headless-gl\n            gl.getError();\n        }\n        function createFBO(a0, a1) {\n            var framebuffer = new REGLFramebuffer();\n            stats.framebufferCount++;\n            function reglFramebuffer(a, b) {\n                var i;\n                check$1(framebufferState.next !== framebuffer, \"can not update framebuffer which is currently in use\");\n                var width = 0;\n                var height = 0;\n                var needsDepth = true;\n                var needsStencil = true;\n                var colorBuffer = null;\n                var colorTexture = true;\n                var colorFormat = \"rgba\";\n                var colorType = \"uint8\";\n                var colorCount = 1;\n                var depthBuffer = null;\n                var stencilBuffer = null;\n                var depthStencilBuffer = null;\n                var depthStencilTexture = false;\n                if (typeof a === \"number\") {\n                    width = a | 0;\n                    height = b | 0 || width;\n                } else if (!a) width = height = 1;\n                else {\n                    check$1.type(a, \"object\", \"invalid arguments for framebuffer\");\n                    var options = a;\n                    if (\"shape\" in options) {\n                        var shape = options.shape;\n                        check$1(Array.isArray(shape) && shape.length >= 2, \"invalid shape for framebuffer\");\n                        width = shape[0];\n                        height = shape[1];\n                    } else {\n                        if (\"radius\" in options) width = height = options.radius;\n                        if (\"width\" in options) width = options.width;\n                        if (\"height\" in options) height = options.height;\n                    }\n                    if (\"color\" in options || \"colors\" in options) {\n                        colorBuffer = options.color || options.colors;\n                        if (Array.isArray(colorBuffer)) check$1(colorBuffer.length === 1 || extensions.webgl_draw_buffers, \"multiple render targets not supported\");\n                    }\n                    if (!colorBuffer) {\n                        if (\"colorCount\" in options) {\n                            colorCount = options.colorCount | 0;\n                            check$1(colorCount > 0, \"invalid color buffer count\");\n                        }\n                        if (\"colorTexture\" in options) {\n                            colorTexture = !!options.colorTexture;\n                            colorFormat = \"rgba4\";\n                        }\n                        if (\"colorType\" in options) {\n                            colorType = options.colorType;\n                            if (!colorTexture) {\n                                if (colorType === \"half float\" || colorType === \"float16\") {\n                                    check$1(extensions.ext_color_buffer_half_float, \"you must enable EXT_color_buffer_half_float to use 16-bit render buffers\");\n                                    colorFormat = \"rgba16f\";\n                                } else if (colorType === \"float\" || colorType === \"float32\") {\n                                    check$1(extensions.webgl_color_buffer_float, \"you must enable WEBGL_color_buffer_float in order to use 32-bit floating point renderbuffers\");\n                                    colorFormat = \"rgba32f\";\n                                }\n                            } else {\n                                check$1(extensions.oes_texture_float || !(colorType === \"float\" || colorType === \"float32\"), \"you must enable OES_texture_float in order to use floating point framebuffer objects\");\n                                check$1(extensions.oes_texture_half_float || !(colorType === \"half float\" || colorType === \"float16\"), \"you must enable OES_texture_half_float in order to use 16-bit floating point framebuffer objects\");\n                            }\n                            check$1.oneOf(colorType, colorTypes, \"invalid color type\");\n                        }\n                        if (\"colorFormat\" in options) {\n                            colorFormat = options.colorFormat;\n                            if (colorTextureFormats.indexOf(colorFormat) >= 0) colorTexture = true;\n                            else if (colorRenderbufferFormats.indexOf(colorFormat) >= 0) colorTexture = false;\n                            else check$1.optional(function() {\n                                if (colorTexture) check$1.oneOf(options.colorFormat, colorTextureFormats, \"invalid color format for texture\");\n                                else check$1.oneOf(options.colorFormat, colorRenderbufferFormats, \"invalid color format for renderbuffer\");\n                            });\n                        }\n                    }\n                    if (\"depthTexture\" in options || \"depthStencilTexture\" in options) {\n                        depthStencilTexture = !!(options.depthTexture || options.depthStencilTexture);\n                        check$1(!depthStencilTexture || extensions.webgl_depth_texture, \"webgl_depth_texture extension not supported\");\n                    }\n                    if (\"depth\" in options) {\n                        if (typeof options.depth === \"boolean\") needsDepth = options.depth;\n                        else {\n                            depthBuffer = options.depth;\n                            needsStencil = false;\n                        }\n                    }\n                    if (\"stencil\" in options) {\n                        if (typeof options.stencil === \"boolean\") needsStencil = options.stencil;\n                        else {\n                            stencilBuffer = options.stencil;\n                            needsDepth = false;\n                        }\n                    }\n                    if (\"depthStencil\" in options) {\n                        if (typeof options.depthStencil === \"boolean\") needsDepth = needsStencil = options.depthStencil;\n                        else {\n                            depthStencilBuffer = options.depthStencil;\n                            needsDepth = false;\n                            needsStencil = false;\n                        }\n                    }\n                }\n                // parse attachments\n                var colorAttachments = null;\n                var depthAttachment = null;\n                var stencilAttachment = null;\n                var depthStencilAttachment = null;\n                // Set up color attachments\n                if (Array.isArray(colorBuffer)) colorAttachments = colorBuffer.map(parseAttachment);\n                else if (colorBuffer) colorAttachments = [\n                    parseAttachment(colorBuffer)\n                ];\n                else {\n                    colorAttachments = new Array(colorCount);\n                    for(i = 0; i < colorCount; ++i)colorAttachments[i] = allocAttachment(width, height, colorTexture, colorFormat, colorType);\n                }\n                check$1(extensions.webgl_draw_buffers || colorAttachments.length <= 1, \"you must enable the WEBGL_draw_buffers extension in order to use multiple color buffers.\");\n                check$1(colorAttachments.length <= limits.maxColorAttachments, \"too many color attachments, not supported\");\n                width = width || colorAttachments[0].width;\n                height = height || colorAttachments[0].height;\n                if (depthBuffer) depthAttachment = parseAttachment(depthBuffer);\n                else if (needsDepth && !needsStencil) depthAttachment = allocAttachment(width, height, depthStencilTexture, \"depth\", \"uint32\");\n                if (stencilBuffer) stencilAttachment = parseAttachment(stencilBuffer);\n                else if (needsStencil && !needsDepth) stencilAttachment = allocAttachment(width, height, false, \"stencil\", \"uint8\");\n                if (depthStencilBuffer) depthStencilAttachment = parseAttachment(depthStencilBuffer);\n                else if (!depthBuffer && !stencilBuffer && needsStencil && needsDepth) depthStencilAttachment = allocAttachment(width, height, depthStencilTexture, \"depth stencil\", \"depth stencil\");\n                check$1(!!depthBuffer + !!stencilBuffer + !!depthStencilBuffer <= 1, \"invalid framebuffer configuration, can specify exactly one depth/stencil attachment\");\n                var commonColorAttachmentSize = null;\n                for(i = 0; i < colorAttachments.length; ++i){\n                    incRefAndCheckShape(colorAttachments[i], width, height);\n                    check$1(!colorAttachments[i] || colorAttachments[i].texture && colorTextureFormatEnums.indexOf(colorAttachments[i].texture._texture.format) >= 0 || colorAttachments[i].renderbuffer && colorRenderbufferFormatEnums.indexOf(colorAttachments[i].renderbuffer._renderbuffer.format) >= 0, \"framebuffer color attachment \" + i + \" is invalid\");\n                    if (colorAttachments[i] && colorAttachments[i].texture) {\n                        var colorAttachmentSize = textureFormatChannels[colorAttachments[i].texture._texture.format] * textureTypeSizes[colorAttachments[i].texture._texture.type];\n                        if (commonColorAttachmentSize === null) commonColorAttachmentSize = colorAttachmentSize;\n                        else // We need to make sure that all color attachments have the same number of bitplanes\n                        // (that is, the same numer of bits per pixel)\n                        // This is required by the GLES2.0 standard. See the beginning of Chapter 4 in that document.\n                        check$1(commonColorAttachmentSize === colorAttachmentSize, \"all color attachments much have the same number of bits per pixel.\");\n                    }\n                }\n                incRefAndCheckShape(depthAttachment, width, height);\n                check$1(!depthAttachment || depthAttachment.texture && depthAttachment.texture._texture.format === GL_DEPTH_COMPONENT$1 || depthAttachment.renderbuffer && depthAttachment.renderbuffer._renderbuffer.format === GL_DEPTH_COMPONENT16$1, \"invalid depth attachment for framebuffer object\");\n                incRefAndCheckShape(stencilAttachment, width, height);\n                check$1(!stencilAttachment || stencilAttachment.renderbuffer && stencilAttachment.renderbuffer._renderbuffer.format === GL_STENCIL_INDEX8$1, \"invalid stencil attachment for framebuffer object\");\n                incRefAndCheckShape(depthStencilAttachment, width, height);\n                check$1(!depthStencilAttachment || depthStencilAttachment.texture && depthStencilAttachment.texture._texture.format === GL_DEPTH_STENCIL$2 || depthStencilAttachment.renderbuffer && depthStencilAttachment.renderbuffer._renderbuffer.format === GL_DEPTH_STENCIL$2, \"invalid depth-stencil attachment for framebuffer object\");\n                // decrement references\n                decFBORefs(framebuffer);\n                framebuffer.width = width;\n                framebuffer.height = height;\n                framebuffer.colorAttachments = colorAttachments;\n                framebuffer.depthAttachment = depthAttachment;\n                framebuffer.stencilAttachment = stencilAttachment;\n                framebuffer.depthStencilAttachment = depthStencilAttachment;\n                reglFramebuffer.color = colorAttachments.map(unwrapAttachment);\n                reglFramebuffer.depth = unwrapAttachment(depthAttachment);\n                reglFramebuffer.stencil = unwrapAttachment(stencilAttachment);\n                reglFramebuffer.depthStencil = unwrapAttachment(depthStencilAttachment);\n                reglFramebuffer.width = framebuffer.width;\n                reglFramebuffer.height = framebuffer.height;\n                updateFramebuffer(framebuffer);\n                return reglFramebuffer;\n            }\n            function resize(w_, h_) {\n                check$1(framebufferState.next !== framebuffer, \"can not resize a framebuffer which is currently in use\");\n                var w = Math.max(w_ | 0, 1);\n                var h = Math.max(h_ | 0 || w, 1);\n                if (w === framebuffer.width && h === framebuffer.height) return reglFramebuffer;\n                // resize all buffers\n                var colorAttachments = framebuffer.colorAttachments;\n                for(var i = 0; i < colorAttachments.length; ++i)resizeAttachment(colorAttachments[i], w, h);\n                resizeAttachment(framebuffer.depthAttachment, w, h);\n                resizeAttachment(framebuffer.stencilAttachment, w, h);\n                resizeAttachment(framebuffer.depthStencilAttachment, w, h);\n                framebuffer.width = reglFramebuffer.width = w;\n                framebuffer.height = reglFramebuffer.height = h;\n                updateFramebuffer(framebuffer);\n                return reglFramebuffer;\n            }\n            reglFramebuffer(a0, a1);\n            return extend(reglFramebuffer, {\n                resize: resize,\n                _reglType: \"framebuffer\",\n                _framebuffer: framebuffer,\n                destroy: function() {\n                    destroy(framebuffer);\n                    decFBORefs(framebuffer);\n                },\n                use: function(block) {\n                    framebufferState.setFBO({\n                        framebuffer: reglFramebuffer\n                    }, block);\n                }\n            });\n        }\n        function createCubeFBO(options) {\n            var faces = Array(6);\n            function reglFramebufferCube(a) {\n                var i;\n                check$1(faces.indexOf(framebufferState.next) < 0, \"can not update framebuffer which is currently in use\");\n                var params = {\n                    color: null\n                };\n                var radius = 0;\n                var colorBuffer = null;\n                var colorFormat = \"rgba\";\n                var colorType = \"uint8\";\n                var colorCount = 1;\n                if (typeof a === \"number\") radius = a | 0;\n                else if (!a) radius = 1;\n                else {\n                    check$1.type(a, \"object\", \"invalid arguments for framebuffer\");\n                    var options = a;\n                    if (\"shape\" in options) {\n                        var shape = options.shape;\n                        check$1(Array.isArray(shape) && shape.length >= 2, \"invalid shape for framebuffer\");\n                        check$1(shape[0] === shape[1], \"cube framebuffer must be square\");\n                        radius = shape[0];\n                    } else {\n                        if (\"radius\" in options) radius = options.radius | 0;\n                        if (\"width\" in options) {\n                            radius = options.width | 0;\n                            if (\"height\" in options) check$1(options.height === radius, \"must be square\");\n                        } else if (\"height\" in options) radius = options.height | 0;\n                    }\n                    if (\"color\" in options || \"colors\" in options) {\n                        colorBuffer = options.color || options.colors;\n                        if (Array.isArray(colorBuffer)) check$1(colorBuffer.length === 1 || extensions.webgl_draw_buffers, \"multiple render targets not supported\");\n                    }\n                    if (!colorBuffer) {\n                        if (\"colorCount\" in options) {\n                            colorCount = options.colorCount | 0;\n                            check$1(colorCount > 0, \"invalid color buffer count\");\n                        }\n                        if (\"colorType\" in options) {\n                            check$1.oneOf(options.colorType, colorTypes, \"invalid color type\");\n                            colorType = options.colorType;\n                        }\n                        if (\"colorFormat\" in options) {\n                            colorFormat = options.colorFormat;\n                            check$1.oneOf(options.colorFormat, colorTextureFormats, \"invalid color format for texture\");\n                        }\n                    }\n                    if (\"depth\" in options) params.depth = options.depth;\n                    if (\"stencil\" in options) params.stencil = options.stencil;\n                    if (\"depthStencil\" in options) params.depthStencil = options.depthStencil;\n                }\n                var colorCubes;\n                if (colorBuffer) {\n                    if (Array.isArray(colorBuffer)) {\n                        colorCubes = [];\n                        for(i = 0; i < colorBuffer.length; ++i)colorCubes[i] = colorBuffer[i];\n                    } else colorCubes = [\n                        colorBuffer\n                    ];\n                } else {\n                    colorCubes = Array(colorCount);\n                    var cubeMapParams = {\n                        radius: radius,\n                        format: colorFormat,\n                        type: colorType\n                    };\n                    for(i = 0; i < colorCount; ++i)colorCubes[i] = textureState.createCube(cubeMapParams);\n                }\n                // Check color cubes\n                params.color = Array(colorCubes.length);\n                for(i = 0; i < colorCubes.length; ++i){\n                    var cube = colorCubes[i];\n                    check$1(typeof cube === \"function\" && cube._reglType === \"textureCube\", \"invalid cube map\");\n                    radius = radius || cube.width;\n                    check$1(cube.width === radius && cube.height === radius, \"invalid cube map shape\");\n                    params.color[i] = {\n                        target: GL_TEXTURE_CUBE_MAP_POSITIVE_X$2,\n                        data: colorCubes[i]\n                    };\n                }\n                for(i = 0; i < 6; ++i){\n                    for(var j = 0; j < colorCubes.length; ++j)params.color[j].target = GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 + i;\n                    // reuse depth-stencil attachments across all cube maps\n                    if (i > 0) {\n                        params.depth = faces[0].depth;\n                        params.stencil = faces[0].stencil;\n                        params.depthStencil = faces[0].depthStencil;\n                    }\n                    if (faces[i]) faces[i](params);\n                    else faces[i] = createFBO(params);\n                }\n                return extend(reglFramebufferCube, {\n                    width: radius,\n                    height: radius,\n                    color: colorCubes\n                });\n            }\n            function resize(radius_) {\n                var i;\n                var radius = radius_ | 0;\n                check$1(radius > 0 && radius <= limits.maxCubeMapSize, \"invalid radius for cube fbo\");\n                if (radius === reglFramebufferCube.width) return reglFramebufferCube;\n                var colors = reglFramebufferCube.color;\n                for(i = 0; i < colors.length; ++i)colors[i].resize(radius);\n                for(i = 0; i < 6; ++i)faces[i].resize(radius);\n                reglFramebufferCube.width = reglFramebufferCube.height = radius;\n                return reglFramebufferCube;\n            }\n            reglFramebufferCube(options);\n            return extend(reglFramebufferCube, {\n                faces: faces,\n                resize: resize,\n                _reglType: \"framebufferCube\",\n                destroy: function() {\n                    faces.forEach(function(f) {\n                        f.destroy();\n                    });\n                }\n            });\n        }\n        function restoreFramebuffers() {\n            framebufferState.cur = null;\n            framebufferState.next = null;\n            framebufferState.dirty = true;\n            values(framebufferSet).forEach(function(fb) {\n                fb.framebuffer = gl.createFramebuffer();\n                updateFramebuffer(fb);\n            });\n        }\n        return extend(framebufferState, {\n            getFramebuffer: function(object) {\n                if (typeof object === \"function\" && object._reglType === \"framebuffer\") {\n                    var fbo = object._framebuffer;\n                    if (fbo instanceof REGLFramebuffer) return fbo;\n                }\n                return null;\n            },\n            create: createFBO,\n            createCube: createCubeFBO,\n            clear: function() {\n                values(framebufferSet).forEach(destroy);\n            },\n            restore: restoreFramebuffers\n        });\n    }\n    var GL_FLOAT$6 = 5126;\n    var GL_ARRAY_BUFFER$1 = 34962;\n    var GL_ELEMENT_ARRAY_BUFFER$1 = 34963;\n    var VAO_OPTIONS = [\n        \"attributes\",\n        \"elements\",\n        \"offset\",\n        \"count\",\n        \"primitive\",\n        \"instances\"\n    ];\n    function AttributeRecord() {\n        this.state = 0;\n        this.x = 0.0;\n        this.y = 0.0;\n        this.z = 0.0;\n        this.w = 0.0;\n        this.buffer = null;\n        this.size = 0;\n        this.normalized = false;\n        this.type = GL_FLOAT$6;\n        this.offset = 0;\n        this.stride = 0;\n        this.divisor = 0;\n    }\n    function wrapAttributeState(gl, extensions, limits, stats, bufferState, elementState, drawState) {\n        var NUM_ATTRIBUTES = limits.maxAttributes;\n        var attributeBindings = new Array(NUM_ATTRIBUTES);\n        for(var i = 0; i < NUM_ATTRIBUTES; ++i)attributeBindings[i] = new AttributeRecord();\n        var vaoCount = 0;\n        var vaoSet = {};\n        var state = {\n            Record: AttributeRecord,\n            scope: {},\n            state: attributeBindings,\n            currentVAO: null,\n            targetVAO: null,\n            restore: extVAO() ? restoreVAO : function() {},\n            createVAO: createVAO,\n            getVAO: getVAO,\n            destroyBuffer: destroyBuffer,\n            setVAO: extVAO() ? setVAOEXT : setVAOEmulated,\n            clear: extVAO() ? destroyVAOEXT : function() {}\n        };\n        function destroyBuffer(buffer) {\n            for(var i = 0; i < attributeBindings.length; ++i){\n                var record = attributeBindings[i];\n                if (record.buffer === buffer) {\n                    gl.disableVertexAttribArray(i);\n                    record.buffer = null;\n                }\n            }\n        }\n        function extVAO() {\n            return extensions.oes_vertex_array_object;\n        }\n        function extInstanced() {\n            return extensions.angle_instanced_arrays;\n        }\n        function getVAO(vao) {\n            if (typeof vao === \"function\" && vao._vao) return vao._vao;\n            return null;\n        }\n        function setVAOEXT(vao) {\n            if (vao === state.currentVAO) return;\n            var ext = extVAO();\n            if (vao) ext.bindVertexArrayOES(vao.vao);\n            else ext.bindVertexArrayOES(null);\n            state.currentVAO = vao;\n        }\n        function setVAOEmulated(vao) {\n            if (vao === state.currentVAO) return;\n            if (vao) vao.bindAttrs();\n            else {\n                var exti = extInstanced();\n                for(var i = 0; i < attributeBindings.length; ++i){\n                    var binding = attributeBindings[i];\n                    if (binding.buffer) {\n                        gl.enableVertexAttribArray(i);\n                        binding.buffer.bind();\n                        gl.vertexAttribPointer(i, binding.size, binding.type, binding.normalized, binding.stride, binding.offfset);\n                        if (exti && binding.divisor) exti.vertexAttribDivisorANGLE(i, binding.divisor);\n                    } else {\n                        gl.disableVertexAttribArray(i);\n                        gl.vertexAttrib4f(i, binding.x, binding.y, binding.z, binding.w);\n                    }\n                }\n                if (drawState.elements) gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, drawState.elements.buffer.buffer);\n                else gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, null);\n            }\n            state.currentVAO = vao;\n        }\n        function destroyVAOEXT() {\n            values(vaoSet).forEach(function(vao) {\n                vao.destroy();\n            });\n        }\n        function REGLVAO() {\n            this.id = ++vaoCount;\n            this.attributes = [];\n            this.elements = null;\n            this.ownsElements = false;\n            this.count = 0;\n            this.offset = 0;\n            this.instances = -1;\n            this.primitive = 4;\n            var extension = extVAO();\n            if (extension) this.vao = extension.createVertexArrayOES();\n            else this.vao = null;\n            vaoSet[this.id] = this;\n            this.buffers = [];\n        }\n        REGLVAO.prototype.bindAttrs = function() {\n            var exti = extInstanced();\n            var attributes = this.attributes;\n            for(var i = 0; i < attributes.length; ++i){\n                var attr = attributes[i];\n                if (attr.buffer) {\n                    gl.enableVertexAttribArray(i);\n                    gl.bindBuffer(GL_ARRAY_BUFFER$1, attr.buffer.buffer);\n                    gl.vertexAttribPointer(i, attr.size, attr.type, attr.normalized, attr.stride, attr.offset);\n                    if (exti && attr.divisor) exti.vertexAttribDivisorANGLE(i, attr.divisor);\n                } else {\n                    gl.disableVertexAttribArray(i);\n                    gl.vertexAttrib4f(i, attr.x, attr.y, attr.z, attr.w);\n                }\n            }\n            for(var j = attributes.length; j < NUM_ATTRIBUTES; ++j)gl.disableVertexAttribArray(j);\n            var elements = elementState.getElements(this.elements);\n            if (elements) gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, elements.buffer.buffer);\n            else gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, null);\n        };\n        REGLVAO.prototype.refresh = function() {\n            var ext = extVAO();\n            if (ext) {\n                ext.bindVertexArrayOES(this.vao);\n                this.bindAttrs();\n                state.currentVAO = null;\n                ext.bindVertexArrayOES(null);\n            }\n        };\n        REGLVAO.prototype.destroy = function() {\n            if (this.vao) {\n                var extension = extVAO();\n                if (this === state.currentVAO) {\n                    state.currentVAO = null;\n                    extension.bindVertexArrayOES(null);\n                }\n                extension.deleteVertexArrayOES(this.vao);\n                this.vao = null;\n            }\n            if (this.ownsElements) {\n                this.elements.destroy();\n                this.elements = null;\n                this.ownsElements = false;\n            }\n            if (vaoSet[this.id]) {\n                delete vaoSet[this.id];\n                stats.vaoCount -= 1;\n            }\n        };\n        function restoreVAO() {\n            var ext = extVAO();\n            if (ext) values(vaoSet).forEach(function(vao) {\n                vao.refresh();\n            });\n        }\n        function createVAO(_attr) {\n            var vao = new REGLVAO();\n            stats.vaoCount += 1;\n            function updateVAO(options) {\n                var attributes;\n                if (Array.isArray(options)) {\n                    attributes = options;\n                    if (vao.elements && vao.ownsElements) vao.elements.destroy();\n                    vao.elements = null;\n                    vao.ownsElements = false;\n                    vao.offset = 0;\n                    vao.count = 0;\n                    vao.instances = -1;\n                    vao.primitive = 4;\n                } else {\n                    check$1(typeof options === \"object\", \"invalid arguments for create vao\");\n                    check$1(\"attributes\" in options, \"must specify attributes for vao\");\n                    if (options.elements) {\n                        var elements = options.elements;\n                        if (vao.ownsElements) {\n                            if (typeof elements === \"function\" && elements._reglType === \"elements\") {\n                                vao.elements.destroy();\n                                vao.ownsElements = false;\n                            } else {\n                                vao.elements(elements);\n                                vao.ownsElements = false;\n                            }\n                        } else if (elementState.getElements(options.elements)) {\n                            vao.elements = options.elements;\n                            vao.ownsElements = false;\n                        } else {\n                            vao.elements = elementState.create(options.elements);\n                            vao.ownsElements = true;\n                        }\n                    } else {\n                        vao.elements = null;\n                        vao.ownsElements = false;\n                    }\n                    attributes = options.attributes;\n                    // set default vao\n                    vao.offset = 0;\n                    vao.count = -1;\n                    vao.instances = -1;\n                    vao.primitive = 4;\n                    // copy element properties\n                    if (vao.elements) {\n                        vao.count = vao.elements._elements.vertCount;\n                        vao.primitive = vao.elements._elements.primType;\n                    }\n                    if (\"offset\" in options) vao.offset = options.offset | 0;\n                    if (\"count\" in options) vao.count = options.count | 0;\n                    if (\"instances\" in options) vao.instances = options.instances | 0;\n                    if (\"primitive\" in options) {\n                        check$1(options.primitive in primTypes, \"bad primitive type: \" + options.primitive);\n                        vao.primitive = primTypes[options.primitive];\n                    }\n                    check$1.optional(()=>{\n                        var keys = Object.keys(options);\n                        for(var i = 0; i < keys.length; ++i)check$1(VAO_OPTIONS.indexOf(keys[i]) >= 0, 'invalid option for vao: \"' + keys[i] + '\" valid options are ' + VAO_OPTIONS);\n                    });\n                    check$1(Array.isArray(attributes), \"attributes must be an array\");\n                }\n                check$1(attributes.length < NUM_ATTRIBUTES, \"too many attributes\");\n                check$1(attributes.length > 0, \"must specify at least one attribute\");\n                var bufUpdated = {};\n                var nattributes = vao.attributes;\n                nattributes.length = attributes.length;\n                for(var i = 0; i < attributes.length; ++i){\n                    var spec = attributes[i];\n                    var rec = nattributes[i] = new AttributeRecord();\n                    var data = spec.data || spec;\n                    if (Array.isArray(data) || isTypedArray(data) || isNDArrayLike(data)) {\n                        var buf;\n                        if (vao.buffers[i]) {\n                            buf = vao.buffers[i];\n                            if (isTypedArray(data) && buf._buffer.byteLength >= data.byteLength) buf.subdata(data);\n                            else {\n                                buf.destroy();\n                                vao.buffers[i] = null;\n                            }\n                        }\n                        if (!vao.buffers[i]) buf = vao.buffers[i] = bufferState.create(spec, GL_ARRAY_BUFFER$1, false, true);\n                        rec.buffer = bufferState.getBuffer(buf);\n                        rec.size = rec.buffer.dimension | 0;\n                        rec.normalized = false;\n                        rec.type = rec.buffer.dtype;\n                        rec.offset = 0;\n                        rec.stride = 0;\n                        rec.divisor = 0;\n                        rec.state = 1;\n                        bufUpdated[i] = 1;\n                    } else if (bufferState.getBuffer(spec)) {\n                        rec.buffer = bufferState.getBuffer(spec);\n                        rec.size = rec.buffer.dimension | 0;\n                        rec.normalized = false;\n                        rec.type = rec.buffer.dtype;\n                        rec.offset = 0;\n                        rec.stride = 0;\n                        rec.divisor = 0;\n                        rec.state = 1;\n                    } else if (bufferState.getBuffer(spec.buffer)) {\n                        rec.buffer = bufferState.getBuffer(spec.buffer);\n                        rec.size = (+spec.size || rec.buffer.dimension) | 0;\n                        rec.normalized = !!spec.normalized || false;\n                        if (\"type\" in spec) {\n                            check$1.parameter(spec.type, glTypes, \"invalid buffer type\");\n                            rec.type = glTypes[spec.type];\n                        } else rec.type = rec.buffer.dtype;\n                        rec.offset = (spec.offset || 0) | 0;\n                        rec.stride = (spec.stride || 0) | 0;\n                        rec.divisor = (spec.divisor || 0) | 0;\n                        rec.state = 1;\n                        check$1(rec.size >= 1 && rec.size <= 4, \"size must be between 1 and 4\");\n                        check$1(rec.offset >= 0, \"invalid offset\");\n                        check$1(rec.stride >= 0 && rec.stride <= 255, \"stride must be between 0 and 255\");\n                        check$1(rec.divisor >= 0, \"divisor must be positive\");\n                        check$1(!rec.divisor || !!extensions.angle_instanced_arrays, \"ANGLE_instanced_arrays must be enabled to use divisor\");\n                    } else if (\"x\" in spec) {\n                        check$1(i > 0, \"first attribute must not be a constant\");\n                        rec.x = +spec.x || 0;\n                        rec.y = +spec.y || 0;\n                        rec.z = +spec.z || 0;\n                        rec.w = +spec.w || 0;\n                        rec.state = 2;\n                    } else check$1(false, \"invalid attribute spec for location \" + i);\n                }\n                // retire unused buffers\n                for(var j = 0; j < vao.buffers.length; ++j)if (!bufUpdated[j] && vao.buffers[j]) {\n                    vao.buffers[j].destroy();\n                    vao.buffers[j] = null;\n                }\n                vao.refresh();\n                return updateVAO;\n            }\n            updateVAO.destroy = function() {\n                for(var j = 0; j < vao.buffers.length; ++j)if (vao.buffers[j]) vao.buffers[j].destroy();\n                vao.buffers.length = 0;\n                if (vao.ownsElements) {\n                    vao.elements.destroy();\n                    vao.elements = null;\n                    vao.ownsElements = false;\n                }\n                vao.destroy();\n            };\n            updateVAO._vao = vao;\n            updateVAO._reglType = \"vao\";\n            return updateVAO(_attr);\n        }\n        return state;\n    }\n    var GL_FRAGMENT_SHADER = 35632;\n    var GL_VERTEX_SHADER = 35633;\n    var GL_ACTIVE_UNIFORMS = 0x8B86;\n    var GL_ACTIVE_ATTRIBUTES = 0x8B89;\n    function wrapShaderState(gl, stringStore, stats, config) {\n        // ===================================================\n        // glsl compilation and linking\n        // ===================================================\n        var fragShaders = {};\n        var vertShaders = {};\n        function ActiveInfo(name, id, location, info) {\n            this.name = name;\n            this.id = id;\n            this.location = location;\n            this.info = info;\n        }\n        function insertActiveInfo(list, info) {\n            for(var i = 0; i < list.length; ++i)if (list[i].id === info.id) {\n                list[i].location = info.location;\n                return;\n            }\n            list.push(info);\n        }\n        function getShader(type, id, command) {\n            var cache = type === GL_FRAGMENT_SHADER ? fragShaders : vertShaders;\n            var shader = cache[id];\n            if (!shader) {\n                var source = stringStore.str(id);\n                shader = gl.createShader(type);\n                gl.shaderSource(shader, source);\n                gl.compileShader(shader);\n                check$1.shaderError(gl, shader, source, type, command);\n                cache[id] = shader;\n            }\n            return shader;\n        }\n        // ===================================================\n        // program linking\n        // ===================================================\n        var programCache = {};\n        var programList = [];\n        var PROGRAM_COUNTER = 0;\n        function REGLProgram(fragId, vertId) {\n            this.id = PROGRAM_COUNTER++;\n            this.fragId = fragId;\n            this.vertId = vertId;\n            this.program = null;\n            this.uniforms = [];\n            this.attributes = [];\n            this.refCount = 1;\n            if (config.profile) this.stats = {\n                uniformsCount: 0,\n                attributesCount: 0\n            };\n        }\n        function linkProgram(desc, command, attributeLocations) {\n            var i, info;\n            // -------------------------------\n            // compile & link\n            // -------------------------------\n            var fragShader = getShader(GL_FRAGMENT_SHADER, desc.fragId);\n            var vertShader = getShader(GL_VERTEX_SHADER, desc.vertId);\n            var program = desc.program = gl.createProgram();\n            gl.attachShader(program, fragShader);\n            gl.attachShader(program, vertShader);\n            if (attributeLocations) for(i = 0; i < attributeLocations.length; ++i){\n                var binding = attributeLocations[i];\n                gl.bindAttribLocation(program, binding[0], binding[1]);\n            }\n            gl.linkProgram(program);\n            check$1.linkError(gl, program, stringStore.str(desc.fragId), stringStore.str(desc.vertId), command);\n            // -------------------------------\n            // grab uniforms\n            // -------------------------------\n            var numUniforms = gl.getProgramParameter(program, GL_ACTIVE_UNIFORMS);\n            if (config.profile) desc.stats.uniformsCount = numUniforms;\n            var uniforms = desc.uniforms;\n            for(i = 0; i < numUniforms; ++i){\n                info = gl.getActiveUniform(program, i);\n                if (info) {\n                    if (info.size > 1) for(var j = 0; j < info.size; ++j){\n                        var name = info.name.replace(\"[0]\", \"[\" + j + \"]\");\n                        insertActiveInfo(uniforms, new ActiveInfo(name, stringStore.id(name), gl.getUniformLocation(program, name), info));\n                    }\n                    var uniName = info.name;\n                    if (info.size > 1) uniName = uniName.replace(\"[0]\", \"\");\n                    insertActiveInfo(uniforms, new ActiveInfo(uniName, stringStore.id(uniName), gl.getUniformLocation(program, uniName), info));\n                }\n            }\n            // -------------------------------\n            // grab attributes\n            // -------------------------------\n            var numAttributes = gl.getProgramParameter(program, GL_ACTIVE_ATTRIBUTES);\n            if (config.profile) desc.stats.attributesCount = numAttributes;\n            var attributes = desc.attributes;\n            for(i = 0; i < numAttributes; ++i){\n                info = gl.getActiveAttrib(program, i);\n                if (info) insertActiveInfo(attributes, new ActiveInfo(info.name, stringStore.id(info.name), gl.getAttribLocation(program, info.name), info));\n            }\n        }\n        if (config.profile) {\n            stats.getMaxUniformsCount = function() {\n                var m = 0;\n                programList.forEach(function(desc) {\n                    if (desc.stats.uniformsCount > m) m = desc.stats.uniformsCount;\n                });\n                return m;\n            };\n            stats.getMaxAttributesCount = function() {\n                var m = 0;\n                programList.forEach(function(desc) {\n                    if (desc.stats.attributesCount > m) m = desc.stats.attributesCount;\n                });\n                return m;\n            };\n        }\n        function restoreShaders() {\n            fragShaders = {};\n            vertShaders = {};\n            for(var i = 0; i < programList.length; ++i)linkProgram(programList[i], null, programList[i].attributes.map(function(info) {\n                return [\n                    info.location,\n                    info.name\n                ];\n            }));\n        }\n        return {\n            clear: function() {\n                var deleteShader = gl.deleteShader.bind(gl);\n                values(fragShaders).forEach(deleteShader);\n                fragShaders = {};\n                values(vertShaders).forEach(deleteShader);\n                vertShaders = {};\n                programList.forEach(function(desc) {\n                    gl.deleteProgram(desc.program);\n                });\n                programList.length = 0;\n                programCache = {};\n                stats.shaderCount = 0;\n            },\n            program: function(vertId, fragId, command, attribLocations) {\n                check$1.command(vertId >= 0, \"missing vertex shader\", command);\n                check$1.command(fragId >= 0, \"missing fragment shader\", command);\n                var cache = programCache[fragId];\n                if (!cache) cache = programCache[fragId] = {};\n                var prevProgram = cache[vertId];\n                if (prevProgram) {\n                    prevProgram.refCount++;\n                    if (!attribLocations) return prevProgram;\n                }\n                var program = new REGLProgram(fragId, vertId);\n                stats.shaderCount++;\n                linkProgram(program, command, attribLocations);\n                if (!prevProgram) cache[vertId] = program;\n                programList.push(program);\n                return extend(program, {\n                    destroy: function() {\n                        program.refCount--;\n                        if (program.refCount <= 0) {\n                            gl.deleteProgram(program.program);\n                            var idx = programList.indexOf(program);\n                            programList.splice(idx, 1);\n                            stats.shaderCount--;\n                        }\n                        // no program is linked to this vert anymore\n                        if (cache[program.vertId].refCount <= 0) {\n                            gl.deleteShader(vertShaders[program.vertId]);\n                            delete vertShaders[program.vertId];\n                            delete programCache[program.fragId][program.vertId];\n                        }\n                        // no program is linked to this frag anymore\n                        if (!Object.keys(programCache[program.fragId]).length) {\n                            gl.deleteShader(fragShaders[program.fragId]);\n                            delete fragShaders[program.fragId];\n                            delete programCache[program.fragId];\n                        }\n                    }\n                });\n            },\n            restore: restoreShaders,\n            shader: getShader,\n            frag: -1,\n            vert: -1\n        };\n    }\n    var GL_RGBA$3 = 6408;\n    var GL_UNSIGNED_BYTE$7 = 5121;\n    var GL_PACK_ALIGNMENT = 0x0D05;\n    var GL_FLOAT$7 = 0x1406 // 5126\n    ;\n    function wrapReadPixels(gl, framebufferState, reglPoll, context, glAttributes, extensions, limits) {\n        function readPixelsImpl(input) {\n            var type;\n            if (framebufferState.next === null) {\n                check$1(glAttributes.preserveDrawingBuffer, 'you must create a webgl context with \"preserveDrawingBuffer\":true in order to read pixels from the drawing buffer');\n                type = GL_UNSIGNED_BYTE$7;\n            } else {\n                check$1(framebufferState.next.colorAttachments[0].texture !== null, \"You cannot read from a renderbuffer\");\n                type = framebufferState.next.colorAttachments[0].texture._texture.type;\n                check$1.optional(function() {\n                    if (extensions.oes_texture_float) {\n                        check$1(type === GL_UNSIGNED_BYTE$7 || type === GL_FLOAT$7, \"Reading from a framebuffer is only allowed for the types 'uint8' and 'float'\");\n                        if (type === GL_FLOAT$7) check$1(limits.readFloat, \"Reading 'float' values is not permitted in your browser. For a fallback, please see: https://www.npmjs.com/package/glsl-read-float\");\n                    } else check$1(type === GL_UNSIGNED_BYTE$7, \"Reading from a framebuffer is only allowed for the type 'uint8'\");\n                });\n            }\n            var x = 0;\n            var y = 0;\n            var width = context.framebufferWidth;\n            var height = context.framebufferHeight;\n            var data = null;\n            if (isTypedArray(input)) data = input;\n            else if (input) {\n                check$1.type(input, \"object\", \"invalid arguments to regl.read()\");\n                x = input.x | 0;\n                y = input.y | 0;\n                check$1(x >= 0 && x < context.framebufferWidth, \"invalid x offset for regl.read\");\n                check$1(y >= 0 && y < context.framebufferHeight, \"invalid y offset for regl.read\");\n                width = (input.width || context.framebufferWidth - x) | 0;\n                height = (input.height || context.framebufferHeight - y) | 0;\n                data = input.data || null;\n            }\n            // sanity check input.data\n            if (data) {\n                if (type === GL_UNSIGNED_BYTE$7) check$1(data instanceof Uint8Array, \"buffer must be 'Uint8Array' when reading from a framebuffer of type 'uint8'\");\n                else if (type === GL_FLOAT$7) check$1(data instanceof Float32Array, \"buffer must be 'Float32Array' when reading from a framebuffer of type 'float'\");\n            }\n            check$1(width > 0 && width + x <= context.framebufferWidth, \"invalid width for read pixels\");\n            check$1(height > 0 && height + y <= context.framebufferHeight, \"invalid height for read pixels\");\n            // Update WebGL state\n            reglPoll();\n            // Compute size\n            var size = width * height * 4;\n            // Allocate data\n            if (!data) {\n                if (type === GL_UNSIGNED_BYTE$7) data = new Uint8Array(size);\n                else if (type === GL_FLOAT$7) data = data || new Float32Array(size);\n            }\n            // Type check\n            check$1.isTypedArray(data, \"data buffer for regl.read() must be a typedarray\");\n            check$1(data.byteLength >= size, \"data buffer for regl.read() too small\");\n            // Run read pixels\n            gl.pixelStorei(GL_PACK_ALIGNMENT, 4);\n            gl.readPixels(x, y, width, height, GL_RGBA$3, type, data);\n            return data;\n        }\n        function readPixelsFBO(options) {\n            var result;\n            framebufferState.setFBO({\n                framebuffer: options.framebuffer\n            }, function() {\n                result = readPixelsImpl(options);\n            });\n            return result;\n        }\n        function readPixels(options) {\n            if (!options || !(\"framebuffer\" in options)) return readPixelsImpl(options);\n            else return readPixelsFBO(options);\n        }\n        return readPixels;\n    }\n    function slice(x) {\n        return Array.prototype.slice.call(x);\n    }\n    function join(x) {\n        return slice(x).join(\"\");\n    }\n    function createEnvironment() {\n        // Unique variable id counter\n        var varCounter = 0;\n        // Linked values are passed from this scope into the generated code block\n        // Calling link() passes a value into the generated scope and returns\n        // the variable name which it is bound to\n        var linkedNames = [];\n        var linkedValues = [];\n        function link(value) {\n            for(var i = 0; i < linkedValues.length; ++i){\n                if (linkedValues[i] === value) return linkedNames[i];\n            }\n            var name = \"g\" + varCounter++;\n            linkedNames.push(name);\n            linkedValues.push(value);\n            return name;\n        }\n        // create a code block\n        function block() {\n            var code = [];\n            function push() {\n                code.push.apply(code, slice(arguments));\n            }\n            var vars = [];\n            function def() {\n                var name = \"v\" + varCounter++;\n                vars.push(name);\n                if (arguments.length > 0) {\n                    code.push(name, \"=\");\n                    code.push.apply(code, slice(arguments));\n                    code.push(\";\");\n                }\n                return name;\n            }\n            return extend(push, {\n                def: def,\n                toString: function() {\n                    return join([\n                        vars.length > 0 ? \"var \" + vars.join(\",\") + \";\" : \"\",\n                        join(code)\n                    ]);\n                }\n            });\n        }\n        function scope() {\n            var entry = block();\n            var exit = block();\n            var entryToString = entry.toString;\n            var exitToString = exit.toString;\n            function save(object, prop) {\n                exit(object, prop, \"=\", entry.def(object, prop), \";\");\n            }\n            return extend(function() {\n                entry.apply(entry, slice(arguments));\n            }, {\n                def: entry.def,\n                entry: entry,\n                exit: exit,\n                save: save,\n                set: function(object, prop, value) {\n                    save(object, prop);\n                    entry(object, prop, \"=\", value, \";\");\n                },\n                toString: function() {\n                    return entryToString() + exitToString();\n                }\n            });\n        }\n        function conditional() {\n            var pred = join(arguments);\n            var thenBlock = scope();\n            var elseBlock = scope();\n            var thenToString = thenBlock.toString;\n            var elseToString = elseBlock.toString;\n            return extend(thenBlock, {\n                then: function() {\n                    thenBlock.apply(thenBlock, slice(arguments));\n                    return this;\n                },\n                else: function() {\n                    elseBlock.apply(elseBlock, slice(arguments));\n                    return this;\n                },\n                toString: function() {\n                    var elseClause = elseToString();\n                    if (elseClause) elseClause = \"else{\" + elseClause + \"}\";\n                    return join([\n                        \"if(\",\n                        pred,\n                        \"){\",\n                        thenToString(),\n                        \"}\",\n                        elseClause\n                    ]);\n                }\n            });\n        }\n        // procedure list\n        var globalBlock = block();\n        var procedures = {};\n        function proc(name, count) {\n            var args = [];\n            function arg() {\n                var name = \"a\" + args.length;\n                args.push(name);\n                return name;\n            }\n            count = count || 0;\n            for(var i = 0; i < count; ++i)arg();\n            var body = scope();\n            var bodyToString = body.toString;\n            var result = procedures[name] = extend(body, {\n                arg: arg,\n                toString: function() {\n                    return join([\n                        \"function(\",\n                        args.join(),\n                        \"){\",\n                        bodyToString(),\n                        \"}\"\n                    ]);\n                }\n            });\n            return result;\n        }\n        function compile() {\n            var code = [\n                '\"use strict\";',\n                globalBlock,\n                \"return {\"\n            ];\n            Object.keys(procedures).forEach(function(name) {\n                code.push('\"', name, '\":', procedures[name].toString(), \",\");\n            });\n            code.push(\"}\");\n            var src = join(code).replace(/;/g, \";\\n\").replace(/}/g, \"}\\n\").replace(/{/g, \"{\\n\");\n            var proc = Function.apply(null, linkedNames.concat(src));\n            return proc.apply(null, linkedValues);\n        }\n        return {\n            global: globalBlock,\n            link: link,\n            block: block,\n            proc: proc,\n            scope: scope,\n            cond: conditional,\n            compile: compile\n        };\n    }\n    // \"cute\" names for vector components\n    var CUTE_COMPONENTS = \"xyzw\".split(\"\");\n    var GL_UNSIGNED_BYTE$8 = 5121;\n    var ATTRIB_STATE_POINTER = 1;\n    var ATTRIB_STATE_CONSTANT = 2;\n    var DYN_FUNC$1 = 0;\n    var DYN_PROP$1 = 1;\n    var DYN_CONTEXT$1 = 2;\n    var DYN_STATE$1 = 3;\n    var DYN_THUNK = 4;\n    var DYN_CONSTANT$1 = 5;\n    var DYN_ARRAY$1 = 6;\n    var S_DITHER = \"dither\";\n    var S_BLEND_ENABLE = \"blend.enable\";\n    var S_BLEND_COLOR = \"blend.color\";\n    var S_BLEND_EQUATION = \"blend.equation\";\n    var S_BLEND_FUNC = \"blend.func\";\n    var S_DEPTH_ENABLE = \"depth.enable\";\n    var S_DEPTH_FUNC = \"depth.func\";\n    var S_DEPTH_RANGE = \"depth.range\";\n    var S_DEPTH_MASK = \"depth.mask\";\n    var S_COLOR_MASK = \"colorMask\";\n    var S_CULL_ENABLE = \"cull.enable\";\n    var S_CULL_FACE = \"cull.face\";\n    var S_FRONT_FACE = \"frontFace\";\n    var S_LINE_WIDTH = \"lineWidth\";\n    var S_POLYGON_OFFSET_ENABLE = \"polygonOffset.enable\";\n    var S_POLYGON_OFFSET_OFFSET = \"polygonOffset.offset\";\n    var S_SAMPLE_ALPHA = \"sample.alpha\";\n    var S_SAMPLE_ENABLE = \"sample.enable\";\n    var S_SAMPLE_COVERAGE = \"sample.coverage\";\n    var S_STENCIL_ENABLE = \"stencil.enable\";\n    var S_STENCIL_MASK = \"stencil.mask\";\n    var S_STENCIL_FUNC = \"stencil.func\";\n    var S_STENCIL_OPFRONT = \"stencil.opFront\";\n    var S_STENCIL_OPBACK = \"stencil.opBack\";\n    var S_SCISSOR_ENABLE = \"scissor.enable\";\n    var S_SCISSOR_BOX = \"scissor.box\";\n    var S_VIEWPORT = \"viewport\";\n    var S_PROFILE = \"profile\";\n    var S_FRAMEBUFFER = \"framebuffer\";\n    var S_VERT = \"vert\";\n    var S_FRAG = \"frag\";\n    var S_ELEMENTS = \"elements\";\n    var S_PRIMITIVE = \"primitive\";\n    var S_COUNT = \"count\";\n    var S_OFFSET = \"offset\";\n    var S_INSTANCES = \"instances\";\n    var S_VAO = \"vao\";\n    var SUFFIX_WIDTH = \"Width\";\n    var SUFFIX_HEIGHT = \"Height\";\n    var S_FRAMEBUFFER_WIDTH = S_FRAMEBUFFER + SUFFIX_WIDTH;\n    var S_FRAMEBUFFER_HEIGHT = S_FRAMEBUFFER + SUFFIX_HEIGHT;\n    var S_VIEWPORT_WIDTH = S_VIEWPORT + SUFFIX_WIDTH;\n    var S_VIEWPORT_HEIGHT = S_VIEWPORT + SUFFIX_HEIGHT;\n    var S_DRAWINGBUFFER = \"drawingBuffer\";\n    var S_DRAWINGBUFFER_WIDTH = S_DRAWINGBUFFER + SUFFIX_WIDTH;\n    var S_DRAWINGBUFFER_HEIGHT = S_DRAWINGBUFFER + SUFFIX_HEIGHT;\n    var NESTED_OPTIONS = [\n        S_BLEND_FUNC,\n        S_BLEND_EQUATION,\n        S_STENCIL_FUNC,\n        S_STENCIL_OPFRONT,\n        S_STENCIL_OPBACK,\n        S_SAMPLE_COVERAGE,\n        S_VIEWPORT,\n        S_SCISSOR_BOX,\n        S_POLYGON_OFFSET_OFFSET\n    ];\n    var GL_ARRAY_BUFFER$2 = 34962;\n    var GL_ELEMENT_ARRAY_BUFFER$2 = 34963;\n    var GL_FRAGMENT_SHADER$1 = 35632;\n    var GL_VERTEX_SHADER$1 = 35633;\n    var GL_TEXTURE_2D$3 = 0x0DE1;\n    var GL_TEXTURE_CUBE_MAP$2 = 0x8513;\n    var GL_CULL_FACE = 0x0B44;\n    var GL_BLEND = 0x0BE2;\n    var GL_DITHER = 0x0BD0;\n    var GL_STENCIL_TEST = 0x0B90;\n    var GL_DEPTH_TEST = 0x0B71;\n    var GL_SCISSOR_TEST = 0x0C11;\n    var GL_POLYGON_OFFSET_FILL = 0x8037;\n    var GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E;\n    var GL_SAMPLE_COVERAGE = 0x80A0;\n    var GL_FLOAT$8 = 5126;\n    var GL_FLOAT_VEC2 = 35664;\n    var GL_FLOAT_VEC3 = 35665;\n    var GL_FLOAT_VEC4 = 35666;\n    var GL_INT$3 = 5124;\n    var GL_INT_VEC2 = 35667;\n    var GL_INT_VEC3 = 35668;\n    var GL_INT_VEC4 = 35669;\n    var GL_BOOL = 35670;\n    var GL_BOOL_VEC2 = 35671;\n    var GL_BOOL_VEC3 = 35672;\n    var GL_BOOL_VEC4 = 35673;\n    var GL_FLOAT_MAT2 = 35674;\n    var GL_FLOAT_MAT3 = 35675;\n    var GL_FLOAT_MAT4 = 35676;\n    var GL_SAMPLER_2D = 35678;\n    var GL_SAMPLER_CUBE = 35680;\n    var GL_TRIANGLES$1 = 4;\n    var GL_FRONT = 1028;\n    var GL_BACK = 1029;\n    var GL_CW = 0x0900;\n    var GL_CCW = 0x0901;\n    var GL_MIN_EXT = 0x8007;\n    var GL_MAX_EXT = 0x8008;\n    var GL_ALWAYS = 519;\n    var GL_KEEP = 7680;\n    var GL_ZERO = 0;\n    var GL_ONE = 1;\n    var GL_FUNC_ADD = 0x8006;\n    var GL_LESS = 513;\n    var GL_FRAMEBUFFER$2 = 0x8D40;\n    var GL_COLOR_ATTACHMENT0$2 = 0x8CE0;\n    var blendFuncs = {\n        \"0\": 0,\n        \"1\": 1,\n        \"zero\": 0,\n        \"one\": 1,\n        \"src color\": 768,\n        \"one minus src color\": 769,\n        \"src alpha\": 770,\n        \"one minus src alpha\": 771,\n        \"dst color\": 774,\n        \"one minus dst color\": 775,\n        \"dst alpha\": 772,\n        \"one minus dst alpha\": 773,\n        \"constant color\": 32769,\n        \"one minus constant color\": 32770,\n        \"constant alpha\": 32771,\n        \"one minus constant alpha\": 32772,\n        \"src alpha saturate\": 776\n    };\n    // There are invalid values for srcRGB and dstRGB. See:\n    // https://www.khronos.org/registry/webgl/specs/1.0/#6.13\n    // https://github.com/KhronosGroup/WebGL/blob/0d3201f5f7ec3c0060bc1f04077461541f1987b9/conformance-suites/1.0.3/conformance/misc/webgl-specific.html#L56\n    var invalidBlendCombinations = [\n        \"constant color, constant alpha\",\n        \"one minus constant color, constant alpha\",\n        \"constant color, one minus constant alpha\",\n        \"one minus constant color, one minus constant alpha\",\n        \"constant alpha, constant color\",\n        \"constant alpha, one minus constant color\",\n        \"one minus constant alpha, constant color\",\n        \"one minus constant alpha, one minus constant color\"\n    ];\n    var compareFuncs = {\n        \"never\": 512,\n        \"less\": 513,\n        \"<\": 513,\n        \"equal\": 514,\n        \"=\": 514,\n        \"==\": 514,\n        \"===\": 514,\n        \"lequal\": 515,\n        \"<=\": 515,\n        \"greater\": 516,\n        \">\": 516,\n        \"notequal\": 517,\n        \"!=\": 517,\n        \"!==\": 517,\n        \"gequal\": 518,\n        \">=\": 518,\n        \"always\": 519\n    };\n    var stencilOps = {\n        \"0\": 0,\n        \"zero\": 0,\n        \"keep\": 7680,\n        \"replace\": 7681,\n        \"increment\": 7682,\n        \"decrement\": 7683,\n        \"increment wrap\": 34055,\n        \"decrement wrap\": 34056,\n        \"invert\": 5386\n    };\n    var shaderType = {\n        \"frag\": GL_FRAGMENT_SHADER$1,\n        \"vert\": GL_VERTEX_SHADER$1\n    };\n    var orientationType = {\n        \"cw\": GL_CW,\n        \"ccw\": GL_CCW\n    };\n    function isBufferArgs(x) {\n        return Array.isArray(x) || isTypedArray(x) || isNDArrayLike(x);\n    }\n    // Make sure viewport is processed first\n    function sortState(state) {\n        return state.sort(function(a, b) {\n            if (a === S_VIEWPORT) return -1;\n            else if (b === S_VIEWPORT) return 1;\n            return a < b ? -1 : 1;\n        });\n    }\n    function Declaration(thisDep, contextDep, propDep, append) {\n        this.thisDep = thisDep;\n        this.contextDep = contextDep;\n        this.propDep = propDep;\n        this.append = append;\n    }\n    function isStatic(decl) {\n        return decl && !(decl.thisDep || decl.contextDep || decl.propDep);\n    }\n    function createStaticDecl(append) {\n        return new Declaration(false, false, false, append);\n    }\n    function createDynamicDecl(dyn, append) {\n        var type = dyn.type;\n        if (type === DYN_FUNC$1) {\n            var numArgs = dyn.data.length;\n            return new Declaration(true, numArgs >= 1, numArgs >= 2, append);\n        } else if (type === DYN_THUNK) {\n            var data = dyn.data;\n            return new Declaration(data.thisDep, data.contextDep, data.propDep, append);\n        } else if (type === DYN_CONSTANT$1) return new Declaration(false, false, false, append);\n        else if (type === DYN_ARRAY$1) {\n            var thisDep = false;\n            var contextDep = false;\n            var propDep = false;\n            for(var i = 0; i < dyn.data.length; ++i){\n                var subDyn = dyn.data[i];\n                if (subDyn.type === DYN_PROP$1) propDep = true;\n                else if (subDyn.type === DYN_CONTEXT$1) contextDep = true;\n                else if (subDyn.type === DYN_STATE$1) thisDep = true;\n                else if (subDyn.type === DYN_FUNC$1) {\n                    thisDep = true;\n                    var subArgs = subDyn.data;\n                    if (subArgs >= 1) contextDep = true;\n                    if (subArgs >= 2) propDep = true;\n                } else if (subDyn.type === DYN_THUNK) {\n                    thisDep = thisDep || subDyn.data.thisDep;\n                    contextDep = contextDep || subDyn.data.contextDep;\n                    propDep = propDep || subDyn.data.propDep;\n                }\n            }\n            return new Declaration(thisDep, contextDep, propDep, append);\n        } else return new Declaration(type === DYN_STATE$1, type === DYN_CONTEXT$1, type === DYN_PROP$1, append);\n    }\n    var SCOPE_DECL = new Declaration(false, false, false, function() {});\n    function reglCore(gl, stringStore, extensions, limits, bufferState, elementState, textureState, framebufferState, uniformState, attributeState, shaderState, drawState, contextState, timer, config) {\n        var AttributeRecord = attributeState.Record;\n        var blendEquations = {\n            \"add\": 32774,\n            \"subtract\": 32778,\n            \"reverse subtract\": 32779\n        };\n        if (extensions.ext_blend_minmax) {\n            blendEquations.min = GL_MIN_EXT;\n            blendEquations.max = GL_MAX_EXT;\n        }\n        var extInstancing = extensions.angle_instanced_arrays;\n        var extDrawBuffers = extensions.webgl_draw_buffers;\n        var extVertexArrays = extensions.oes_vertex_array_object;\n        // ===================================================\n        // ===================================================\n        // WEBGL STATE\n        // ===================================================\n        // ===================================================\n        var currentState = {\n            dirty: true,\n            profile: config.profile\n        };\n        var nextState = {};\n        var GL_STATE_NAMES = [];\n        var GL_FLAGS = {};\n        var GL_VARIABLES = {};\n        function propName(name) {\n            return name.replace(\".\", \"_\");\n        }\n        function stateFlag(sname, cap, init) {\n            var name = propName(sname);\n            GL_STATE_NAMES.push(sname);\n            nextState[name] = currentState[name] = !!init;\n            GL_FLAGS[name] = cap;\n        }\n        function stateVariable(sname, func, init) {\n            var name = propName(sname);\n            GL_STATE_NAMES.push(sname);\n            if (Array.isArray(init)) {\n                currentState[name] = init.slice();\n                nextState[name] = init.slice();\n            } else currentState[name] = nextState[name] = init;\n            GL_VARIABLES[name] = func;\n        }\n        // Dithering\n        stateFlag(S_DITHER, GL_DITHER);\n        // Blending\n        stateFlag(S_BLEND_ENABLE, GL_BLEND);\n        stateVariable(S_BLEND_COLOR, \"blendColor\", [\n            0,\n            0,\n            0,\n            0\n        ]);\n        stateVariable(S_BLEND_EQUATION, \"blendEquationSeparate\", [\n            GL_FUNC_ADD,\n            GL_FUNC_ADD\n        ]);\n        stateVariable(S_BLEND_FUNC, \"blendFuncSeparate\", [\n            GL_ONE,\n            GL_ZERO,\n            GL_ONE,\n            GL_ZERO\n        ]);\n        // Depth\n        stateFlag(S_DEPTH_ENABLE, GL_DEPTH_TEST, true);\n        stateVariable(S_DEPTH_FUNC, \"depthFunc\", GL_LESS);\n        stateVariable(S_DEPTH_RANGE, \"depthRange\", [\n            0,\n            1\n        ]);\n        stateVariable(S_DEPTH_MASK, \"depthMask\", true);\n        // Color mask\n        stateVariable(S_COLOR_MASK, S_COLOR_MASK, [\n            true,\n            true,\n            true,\n            true\n        ]);\n        // Face culling\n        stateFlag(S_CULL_ENABLE, GL_CULL_FACE);\n        stateVariable(S_CULL_FACE, \"cullFace\", GL_BACK);\n        // Front face orientation\n        stateVariable(S_FRONT_FACE, S_FRONT_FACE, GL_CCW);\n        // Line width\n        stateVariable(S_LINE_WIDTH, S_LINE_WIDTH, 1);\n        // Polygon offset\n        stateFlag(S_POLYGON_OFFSET_ENABLE, GL_POLYGON_OFFSET_FILL);\n        stateVariable(S_POLYGON_OFFSET_OFFSET, \"polygonOffset\", [\n            0,\n            0\n        ]);\n        // Sample coverage\n        stateFlag(S_SAMPLE_ALPHA, GL_SAMPLE_ALPHA_TO_COVERAGE);\n        stateFlag(S_SAMPLE_ENABLE, GL_SAMPLE_COVERAGE);\n        stateVariable(S_SAMPLE_COVERAGE, \"sampleCoverage\", [\n            1,\n            false\n        ]);\n        // Stencil\n        stateFlag(S_STENCIL_ENABLE, GL_STENCIL_TEST);\n        stateVariable(S_STENCIL_MASK, \"stencilMask\", -1);\n        stateVariable(S_STENCIL_FUNC, \"stencilFunc\", [\n            GL_ALWAYS,\n            0,\n            -1\n        ]);\n        stateVariable(S_STENCIL_OPFRONT, \"stencilOpSeparate\", [\n            GL_FRONT,\n            GL_KEEP,\n            GL_KEEP,\n            GL_KEEP\n        ]);\n        stateVariable(S_STENCIL_OPBACK, \"stencilOpSeparate\", [\n            GL_BACK,\n            GL_KEEP,\n            GL_KEEP,\n            GL_KEEP\n        ]);\n        // Scissor\n        stateFlag(S_SCISSOR_ENABLE, GL_SCISSOR_TEST);\n        stateVariable(S_SCISSOR_BOX, \"scissor\", [\n            0,\n            0,\n            gl.drawingBufferWidth,\n            gl.drawingBufferHeight\n        ]);\n        // Viewport\n        stateVariable(S_VIEWPORT, S_VIEWPORT, [\n            0,\n            0,\n            gl.drawingBufferWidth,\n            gl.drawingBufferHeight\n        ]);\n        // ===================================================\n        // ===================================================\n        // ENVIRONMENT\n        // ===================================================\n        // ===================================================\n        var sharedState = {\n            gl: gl,\n            context: contextState,\n            strings: stringStore,\n            next: nextState,\n            current: currentState,\n            draw: drawState,\n            elements: elementState,\n            buffer: bufferState,\n            shader: shaderState,\n            attributes: attributeState.state,\n            vao: attributeState,\n            uniforms: uniformState,\n            framebuffer: framebufferState,\n            extensions: extensions,\n            timer: timer,\n            isBufferArgs: isBufferArgs\n        };\n        var sharedConstants = {\n            primTypes: primTypes,\n            compareFuncs: compareFuncs,\n            blendFuncs: blendFuncs,\n            blendEquations: blendEquations,\n            stencilOps: stencilOps,\n            glTypes: glTypes,\n            orientationType: orientationType\n        };\n        check$1.optional(function() {\n            sharedState.isArrayLike = isArrayLike;\n        });\n        if (extDrawBuffers) {\n            sharedConstants.backBuffer = [\n                GL_BACK\n            ];\n            sharedConstants.drawBuffer = loop(limits.maxDrawbuffers, function(i) {\n                if (i === 0) return [\n                    0\n                ];\n                return loop(i, function(j) {\n                    return GL_COLOR_ATTACHMENT0$2 + j;\n                });\n            });\n        }\n        var drawCallCounter = 0;\n        function createREGLEnvironment() {\n            var env = createEnvironment();\n            var link = env.link;\n            var global = env.global;\n            env.id = drawCallCounter++;\n            env.batchId = \"0\";\n            // link shared state\n            var SHARED = link(sharedState);\n            var shared = env.shared = {\n                props: \"a0\"\n            };\n            Object.keys(sharedState).forEach(function(prop) {\n                shared[prop] = global.def(SHARED, \".\", prop);\n            });\n            // Inject runtime assertion stuff for debug builds\n            check$1.optional(function() {\n                env.CHECK = link(check$1);\n                env.commandStr = check$1.guessCommand();\n                env.command = link(env.commandStr);\n                env.assert = function(block, pred, message) {\n                    block(\"if(!(\", pred, \"))\", this.CHECK, \".commandRaise(\", link(message), \",\", this.command, \");\");\n                };\n                sharedConstants.invalidBlendCombinations = invalidBlendCombinations;\n            });\n            // Copy GL state variables over\n            var nextVars = env.next = {};\n            var currentVars = env.current = {};\n            Object.keys(GL_VARIABLES).forEach(function(variable) {\n                if (Array.isArray(currentState[variable])) {\n                    nextVars[variable] = global.def(shared.next, \".\", variable);\n                    currentVars[variable] = global.def(shared.current, \".\", variable);\n                }\n            });\n            // Initialize shared constants\n            var constants = env.constants = {};\n            Object.keys(sharedConstants).forEach(function(name) {\n                constants[name] = global.def(JSON.stringify(sharedConstants[name]));\n            });\n            // Helper function for calling a block\n            env.invoke = function(block, x) {\n                switch(x.type){\n                    case DYN_FUNC$1:\n                        var argList = [\n                            \"this\",\n                            shared.context,\n                            shared.props,\n                            env.batchId\n                        ];\n                        return block.def(link(x.data), \".call(\", argList.slice(0, Math.max(x.data.length + 1, 4)), \")\");\n                    case DYN_PROP$1:\n                        return block.def(shared.props, x.data);\n                    case DYN_CONTEXT$1:\n                        return block.def(shared.context, x.data);\n                    case DYN_STATE$1:\n                        return block.def(\"this\", x.data);\n                    case DYN_THUNK:\n                        x.data.append(env, block);\n                        return x.data.ref;\n                    case DYN_CONSTANT$1:\n                        return x.data.toString();\n                    case DYN_ARRAY$1:\n                        return x.data.map(function(y) {\n                            return env.invoke(block, y);\n                        });\n                }\n            };\n            env.attribCache = {};\n            var scopeAttribs = {};\n            env.scopeAttrib = function(name) {\n                var id = stringStore.id(name);\n                if (id in scopeAttribs) return scopeAttribs[id];\n                var binding = attributeState.scope[id];\n                if (!binding) binding = attributeState.scope[id] = new AttributeRecord();\n                var result = scopeAttribs[id] = link(binding);\n                return result;\n            };\n            return env;\n        }\n        // ===================================================\n        // ===================================================\n        // PARSING\n        // ===================================================\n        // ===================================================\n        function parseProfile(options) {\n            var staticOptions = options.static;\n            var dynamicOptions = options.dynamic;\n            var profileEnable;\n            if (S_PROFILE in staticOptions) {\n                var value = !!staticOptions[S_PROFILE];\n                profileEnable = createStaticDecl(function(env, scope) {\n                    return value;\n                });\n                profileEnable.enable = value;\n            } else if (S_PROFILE in dynamicOptions) {\n                var dyn = dynamicOptions[S_PROFILE];\n                profileEnable = createDynamicDecl(dyn, function(env, scope) {\n                    return env.invoke(scope, dyn);\n                });\n            }\n            return profileEnable;\n        }\n        function parseFramebuffer(options, env) {\n            var staticOptions = options.static;\n            var dynamicOptions = options.dynamic;\n            if (S_FRAMEBUFFER in staticOptions) {\n                var framebuffer = staticOptions[S_FRAMEBUFFER];\n                if (framebuffer) {\n                    framebuffer = framebufferState.getFramebuffer(framebuffer);\n                    check$1.command(framebuffer, \"invalid framebuffer object\");\n                    return createStaticDecl(function(env, block) {\n                        var FRAMEBUFFER = env.link(framebuffer);\n                        var shared = env.shared;\n                        block.set(shared.framebuffer, \".next\", FRAMEBUFFER);\n                        var CONTEXT = shared.context;\n                        block.set(CONTEXT, \".\" + S_FRAMEBUFFER_WIDTH, FRAMEBUFFER + \".width\");\n                        block.set(CONTEXT, \".\" + S_FRAMEBUFFER_HEIGHT, FRAMEBUFFER + \".height\");\n                        return FRAMEBUFFER;\n                    });\n                } else return createStaticDecl(function(env, scope) {\n                    var shared = env.shared;\n                    scope.set(shared.framebuffer, \".next\", \"null\");\n                    var CONTEXT = shared.context;\n                    scope.set(CONTEXT, \".\" + S_FRAMEBUFFER_WIDTH, CONTEXT + \".\" + S_DRAWINGBUFFER_WIDTH);\n                    scope.set(CONTEXT, \".\" + S_FRAMEBUFFER_HEIGHT, CONTEXT + \".\" + S_DRAWINGBUFFER_HEIGHT);\n                    return \"null\";\n                });\n            } else if (S_FRAMEBUFFER in dynamicOptions) {\n                var dyn = dynamicOptions[S_FRAMEBUFFER];\n                return createDynamicDecl(dyn, function(env, scope) {\n                    var FRAMEBUFFER_FUNC = env.invoke(scope, dyn);\n                    var shared = env.shared;\n                    var FRAMEBUFFER_STATE = shared.framebuffer;\n                    var FRAMEBUFFER = scope.def(FRAMEBUFFER_STATE, \".getFramebuffer(\", FRAMEBUFFER_FUNC, \")\");\n                    check$1.optional(function() {\n                        env.assert(scope, \"!\" + FRAMEBUFFER_FUNC + \"||\" + FRAMEBUFFER, \"invalid framebuffer object\");\n                    });\n                    scope.set(FRAMEBUFFER_STATE, \".next\", FRAMEBUFFER);\n                    var CONTEXT = shared.context;\n                    scope.set(CONTEXT, \".\" + S_FRAMEBUFFER_WIDTH, FRAMEBUFFER + \"?\" + FRAMEBUFFER + \".width:\" + CONTEXT + \".\" + S_DRAWINGBUFFER_WIDTH);\n                    scope.set(CONTEXT, \".\" + S_FRAMEBUFFER_HEIGHT, FRAMEBUFFER + \"?\" + FRAMEBUFFER + \".height:\" + CONTEXT + \".\" + S_DRAWINGBUFFER_HEIGHT);\n                    return FRAMEBUFFER;\n                });\n            } else return null;\n        }\n        function parseViewportScissor(options, framebuffer, env) {\n            var staticOptions = options.static;\n            var dynamicOptions = options.dynamic;\n            function parseBox(param) {\n                if (param in staticOptions) {\n                    var box = staticOptions[param];\n                    check$1.commandType(box, \"object\", \"invalid \" + param, env.commandStr);\n                    var isStatic = true;\n                    var x = box.x | 0;\n                    var y = box.y | 0;\n                    var w, h;\n                    if (\"width\" in box) {\n                        w = box.width | 0;\n                        check$1.command(w >= 0, \"invalid \" + param, env.commandStr);\n                    } else isStatic = false;\n                    if (\"height\" in box) {\n                        h = box.height | 0;\n                        check$1.command(h >= 0, \"invalid \" + param, env.commandStr);\n                    } else isStatic = false;\n                    return new Declaration(!isStatic && framebuffer && framebuffer.thisDep, !isStatic && framebuffer && framebuffer.contextDep, !isStatic && framebuffer && framebuffer.propDep, function(env, scope) {\n                        var CONTEXT = env.shared.context;\n                        var BOX_W = w;\n                        if (!(\"width\" in box)) BOX_W = scope.def(CONTEXT, \".\", S_FRAMEBUFFER_WIDTH, \"-\", x);\n                        var BOX_H = h;\n                        if (!(\"height\" in box)) BOX_H = scope.def(CONTEXT, \".\", S_FRAMEBUFFER_HEIGHT, \"-\", y);\n                        return [\n                            x,\n                            y,\n                            BOX_W,\n                            BOX_H\n                        ];\n                    });\n                } else if (param in dynamicOptions) {\n                    var dynBox = dynamicOptions[param];\n                    var result = createDynamicDecl(dynBox, function(env, scope) {\n                        var BOX = env.invoke(scope, dynBox);\n                        check$1.optional(function() {\n                            env.assert(scope, BOX + \"&&typeof \" + BOX + '===\"object\"', \"invalid \" + param);\n                        });\n                        var CONTEXT = env.shared.context;\n                        var BOX_X = scope.def(BOX, \".x|0\");\n                        var BOX_Y = scope.def(BOX, \".y|0\");\n                        var BOX_W = scope.def('\"width\" in ', BOX, \"?\", BOX, \".width|0:\", \"(\", CONTEXT, \".\", S_FRAMEBUFFER_WIDTH, \"-\", BOX_X, \")\");\n                        var BOX_H = scope.def('\"height\" in ', BOX, \"?\", BOX, \".height|0:\", \"(\", CONTEXT, \".\", S_FRAMEBUFFER_HEIGHT, \"-\", BOX_Y, \")\");\n                        check$1.optional(function() {\n                            env.assert(scope, BOX_W + \">=0&&\" + BOX_H + \">=0\", \"invalid \" + param);\n                        });\n                        return [\n                            BOX_X,\n                            BOX_Y,\n                            BOX_W,\n                            BOX_H\n                        ];\n                    });\n                    if (framebuffer) {\n                        result.thisDep = result.thisDep || framebuffer.thisDep;\n                        result.contextDep = result.contextDep || framebuffer.contextDep;\n                        result.propDep = result.propDep || framebuffer.propDep;\n                    }\n                    return result;\n                } else if (framebuffer) return new Declaration(framebuffer.thisDep, framebuffer.contextDep, framebuffer.propDep, function(env, scope) {\n                    var CONTEXT = env.shared.context;\n                    return [\n                        0,\n                        0,\n                        scope.def(CONTEXT, \".\", S_FRAMEBUFFER_WIDTH),\n                        scope.def(CONTEXT, \".\", S_FRAMEBUFFER_HEIGHT)\n                    ];\n                });\n                else return null;\n            }\n            var viewport = parseBox(S_VIEWPORT);\n            if (viewport) {\n                var prevViewport = viewport;\n                viewport = new Declaration(viewport.thisDep, viewport.contextDep, viewport.propDep, function(env, scope) {\n                    var VIEWPORT = prevViewport.append(env, scope);\n                    var CONTEXT = env.shared.context;\n                    scope.set(CONTEXT, \".\" + S_VIEWPORT_WIDTH, VIEWPORT[2]);\n                    scope.set(CONTEXT, \".\" + S_VIEWPORT_HEIGHT, VIEWPORT[3]);\n                    return VIEWPORT;\n                });\n            }\n            return {\n                viewport: viewport,\n                scissor_box: parseBox(S_SCISSOR_BOX)\n            };\n        }\n        function parseAttribLocations(options, attributes) {\n            var staticOptions = options.static;\n            var staticProgram = typeof staticOptions[S_FRAG] === \"string\" && typeof staticOptions[S_VERT] === \"string\";\n            if (staticProgram) {\n                if (Object.keys(attributes.dynamic).length > 0) return null;\n                var staticAttributes = attributes.static;\n                var sAttributes = Object.keys(staticAttributes);\n                if (sAttributes.length > 0 && typeof staticAttributes[sAttributes[0]] === \"number\") {\n                    var bindings = [];\n                    for(var i = 0; i < sAttributes.length; ++i){\n                        check$1(typeof staticAttributes[sAttributes[i]] === \"number\", \"must specify all vertex attribute locations when using vaos\");\n                        bindings.push([\n                            staticAttributes[sAttributes[i]] | 0,\n                            sAttributes[i]\n                        ]);\n                    }\n                    return bindings;\n                }\n            }\n            return null;\n        }\n        function parseProgram(options, env, attribLocations) {\n            var staticOptions = options.static;\n            var dynamicOptions = options.dynamic;\n            function parseShader(name) {\n                if (name in staticOptions) {\n                    var id = stringStore.id(staticOptions[name]);\n                    check$1.optional(function() {\n                        shaderState.shader(shaderType[name], id, check$1.guessCommand());\n                    });\n                    var result = createStaticDecl(function() {\n                        return id;\n                    });\n                    result.id = id;\n                    return result;\n                } else if (name in dynamicOptions) {\n                    var dyn = dynamicOptions[name];\n                    return createDynamicDecl(dyn, function(env, scope) {\n                        var str = env.invoke(scope, dyn);\n                        var id = scope.def(env.shared.strings, \".id(\", str, \")\");\n                        check$1.optional(function() {\n                            scope(env.shared.shader, \".shader(\", shaderType[name], \",\", id, \",\", env.command, \");\");\n                        });\n                        return id;\n                    });\n                }\n                return null;\n            }\n            var frag = parseShader(S_FRAG);\n            var vert = parseShader(S_VERT);\n            var program = null;\n            var progVar;\n            if (isStatic(frag) && isStatic(vert)) {\n                program = shaderState.program(vert.id, frag.id, null, attribLocations);\n                progVar = createStaticDecl(function(env, scope) {\n                    return env.link(program);\n                });\n            } else progVar = new Declaration(frag && frag.thisDep || vert && vert.thisDep, frag && frag.contextDep || vert && vert.contextDep, frag && frag.propDep || vert && vert.propDep, function(env, scope) {\n                var SHADER_STATE = env.shared.shader;\n                var fragId;\n                if (frag) fragId = frag.append(env, scope);\n                else fragId = scope.def(SHADER_STATE, \".\", S_FRAG);\n                var vertId;\n                if (vert) vertId = vert.append(env, scope);\n                else vertId = scope.def(SHADER_STATE, \".\", S_VERT);\n                var progDef = SHADER_STATE + \".program(\" + vertId + \",\" + fragId;\n                check$1.optional(function() {\n                    progDef += \",\" + env.command;\n                });\n                return scope.def(progDef + \")\");\n            });\n            return {\n                frag: frag,\n                vert: vert,\n                progVar: progVar,\n                program: program\n            };\n        }\n        function parseDraw(options, env) {\n            var staticOptions = options.static;\n            var dynamicOptions = options.dynamic;\n            // TODO: should use VAO to get default values for offset properties\n            // should move vao parse into here and out of the old stuff\n            var staticDraw = {};\n            var vaoActive = false;\n            function parseVAO() {\n                if (S_VAO in staticOptions) {\n                    var vao = staticOptions[S_VAO];\n                    if (vao !== null && attributeState.getVAO(vao) === null) vao = attributeState.createVAO(vao);\n                    vaoActive = true;\n                    staticDraw.vao = vao;\n                    return createStaticDecl(function(env) {\n                        var vaoRef = attributeState.getVAO(vao);\n                        if (vaoRef) return env.link(vaoRef);\n                        else return \"null\";\n                    });\n                } else if (S_VAO in dynamicOptions) {\n                    vaoActive = true;\n                    var dyn = dynamicOptions[S_VAO];\n                    return createDynamicDecl(dyn, function(env, scope) {\n                        var vaoRef = env.invoke(scope, dyn);\n                        return scope.def(env.shared.vao + \".getVAO(\" + vaoRef + \")\");\n                    });\n                }\n                return null;\n            }\n            var vao = parseVAO();\n            var elementsActive = false;\n            function parseElements() {\n                if (S_ELEMENTS in staticOptions) {\n                    var elements = staticOptions[S_ELEMENTS];\n                    staticDraw.elements = elements;\n                    if (isBufferArgs(elements)) {\n                        var e = staticDraw.elements = elementState.create(elements, true);\n                        elements = elementState.getElements(e);\n                        elementsActive = true;\n                    } else if (elements) {\n                        elements = elementState.getElements(elements);\n                        elementsActive = true;\n                        check$1.command(elements, \"invalid elements\", env.commandStr);\n                    }\n                    var result = createStaticDecl(function(env, scope) {\n                        if (elements) {\n                            var result = env.link(elements);\n                            env.ELEMENTS = result;\n                            return result;\n                        }\n                        env.ELEMENTS = null;\n                        return null;\n                    });\n                    result.value = elements;\n                    return result;\n                } else if (S_ELEMENTS in dynamicOptions) {\n                    elementsActive = true;\n                    var dyn = dynamicOptions[S_ELEMENTS];\n                    return createDynamicDecl(dyn, function(env, scope) {\n                        var shared = env.shared;\n                        var IS_BUFFER_ARGS = shared.isBufferArgs;\n                        var ELEMENT_STATE = shared.elements;\n                        var elementDefn = env.invoke(scope, dyn);\n                        var elements = scope.def(\"null\");\n                        var elementStream = scope.def(IS_BUFFER_ARGS, \"(\", elementDefn, \")\");\n                        var ifte = env.cond(elementStream).then(elements, \"=\", ELEMENT_STATE, \".createStream(\", elementDefn, \");\").else(elements, \"=\", ELEMENT_STATE, \".getElements(\", elementDefn, \");\");\n                        check$1.optional(function() {\n                            env.assert(ifte.else, \"!\" + elementDefn + \"||\" + elements, \"invalid elements\");\n                        });\n                        scope.entry(ifte);\n                        scope.exit(env.cond(elementStream).then(ELEMENT_STATE, \".destroyStream(\", elements, \");\"));\n                        env.ELEMENTS = elements;\n                        return elements;\n                    });\n                } else if (vaoActive) return new Declaration(vao.thisDep, vao.contextDep, vao.propDep, function(env, scope) {\n                    return scope.def(env.shared.vao + \".currentVAO?\" + env.shared.elements + \".getElements(\" + env.shared.vao + \".currentVAO.elements):null\");\n                });\n                return null;\n            }\n            var elements = parseElements();\n            function parsePrimitive() {\n                if (S_PRIMITIVE in staticOptions) {\n                    var primitive = staticOptions[S_PRIMITIVE];\n                    staticDraw.primitive = primitive;\n                    check$1.commandParameter(primitive, primTypes, \"invalid primitve\", env.commandStr);\n                    return createStaticDecl(function(env, scope) {\n                        return primTypes[primitive];\n                    });\n                } else if (S_PRIMITIVE in dynamicOptions) {\n                    var dynPrimitive = dynamicOptions[S_PRIMITIVE];\n                    return createDynamicDecl(dynPrimitive, function(env, scope) {\n                        var PRIM_TYPES = env.constants.primTypes;\n                        var prim = env.invoke(scope, dynPrimitive);\n                        check$1.optional(function() {\n                            env.assert(scope, prim + \" in \" + PRIM_TYPES, \"invalid primitive, must be one of \" + Object.keys(primTypes));\n                        });\n                        return scope.def(PRIM_TYPES, \"[\", prim, \"]\");\n                    });\n                } else if (elementsActive) {\n                    if (isStatic(elements)) {\n                        if (elements.value) return createStaticDecl(function(env, scope) {\n                            return scope.def(env.ELEMENTS, \".primType\");\n                        });\n                        else return createStaticDecl(function() {\n                            return GL_TRIANGLES$1;\n                        });\n                    } else return new Declaration(elements.thisDep, elements.contextDep, elements.propDep, function(env, scope) {\n                        var elements = env.ELEMENTS;\n                        return scope.def(elements, \"?\", elements, \".primType:\", GL_TRIANGLES$1);\n                    });\n                } else if (vaoActive) return new Declaration(vao.thisDep, vao.contextDep, vao.propDep, function(env, scope) {\n                    return scope.def(env.shared.vao + \".currentVAO?\" + env.shared.vao + \".currentVAO.primitive:\" + GL_TRIANGLES$1);\n                });\n                return null;\n            }\n            function parseParam(param, isOffset) {\n                if (param in staticOptions) {\n                    var value = staticOptions[param] | 0;\n                    if (isOffset) staticDraw.offset = value;\n                    else staticDraw.instances = value;\n                    check$1.command(!isOffset || value >= 0, \"invalid \" + param, env.commandStr);\n                    return createStaticDecl(function(env, scope) {\n                        if (isOffset) env.OFFSET = value;\n                        return value;\n                    });\n                } else if (param in dynamicOptions) {\n                    var dynValue = dynamicOptions[param];\n                    return createDynamicDecl(dynValue, function(env, scope) {\n                        var result = env.invoke(scope, dynValue);\n                        if (isOffset) {\n                            env.OFFSET = result;\n                            check$1.optional(function() {\n                                env.assert(scope, result + \">=0\", \"invalid \" + param);\n                            });\n                        }\n                        return result;\n                    });\n                } else if (isOffset) {\n                    if (elementsActive) return createStaticDecl(function(env, scope) {\n                        env.OFFSET = 0;\n                        return 0;\n                    });\n                    else if (vaoActive) return new Declaration(vao.thisDep, vao.contextDep, vao.propDep, function(env, scope) {\n                        return scope.def(env.shared.vao + \".currentVAO?\" + env.shared.vao + \".currentVAO.offset:0\");\n                    });\n                } else if (vaoActive) return new Declaration(vao.thisDep, vao.contextDep, vao.propDep, function(env, scope) {\n                    return scope.def(env.shared.vao + \".currentVAO?\" + env.shared.vao + \".currentVAO.instances:-1\");\n                });\n                return null;\n            }\n            var OFFSET = parseParam(S_OFFSET, true);\n            function parseVertCount() {\n                if (S_COUNT in staticOptions) {\n                    var count = staticOptions[S_COUNT] | 0;\n                    staticDraw.count = count;\n                    check$1.command(typeof count === \"number\" && count >= 0, \"invalid vertex count\", env.commandStr);\n                    return createStaticDecl(function() {\n                        return count;\n                    });\n                } else if (S_COUNT in dynamicOptions) {\n                    var dynCount = dynamicOptions[S_COUNT];\n                    return createDynamicDecl(dynCount, function(env, scope) {\n                        var result = env.invoke(scope, dynCount);\n                        check$1.optional(function() {\n                            env.assert(scope, \"typeof \" + result + '===\"number\"&&' + result + \">=0&&\" + result + \"===(\" + result + \"|0)\", \"invalid vertex count\");\n                        });\n                        return result;\n                    });\n                } else if (elementsActive) {\n                    if (isStatic(elements)) {\n                        if (elements) {\n                            if (OFFSET) return new Declaration(OFFSET.thisDep, OFFSET.contextDep, OFFSET.propDep, function(env, scope) {\n                                var result = scope.def(env.ELEMENTS, \".vertCount-\", env.OFFSET);\n                                check$1.optional(function() {\n                                    env.assert(scope, result + \">=0\", \"invalid vertex offset/element buffer too small\");\n                                });\n                                return result;\n                            });\n                            else return createStaticDecl(function(env, scope) {\n                                return scope.def(env.ELEMENTS, \".vertCount\");\n                            });\n                        } else {\n                            var result = createStaticDecl(function() {\n                                return -1;\n                            });\n                            check$1.optional(function() {\n                                result.MISSING = true;\n                            });\n                            return result;\n                        }\n                    } else {\n                        var variable = new Declaration(elements.thisDep || OFFSET.thisDep, elements.contextDep || OFFSET.contextDep, elements.propDep || OFFSET.propDep, function(env, scope) {\n                            var elements = env.ELEMENTS;\n                            if (env.OFFSET) return scope.def(elements, \"?\", elements, \".vertCount-\", env.OFFSET, \":-1\");\n                            return scope.def(elements, \"?\", elements, \".vertCount:-1\");\n                        });\n                        check$1.optional(function() {\n                            variable.DYNAMIC = true;\n                        });\n                        return variable;\n                    }\n                } else if (vaoActive) {\n                    var countVariable = new Declaration(vao.thisDep, vao.contextDep, vao.propDep, function(env, scope) {\n                        return scope.def(env.shared.vao, \".currentVAO?\", env.shared.vao, \".currentVAO.count:-1\");\n                    });\n                    return countVariable;\n                }\n                return null;\n            }\n            var primitive = parsePrimitive();\n            var count = parseVertCount();\n            var instances = parseParam(S_INSTANCES, false);\n            return {\n                elements: elements,\n                primitive: primitive,\n                count: count,\n                instances: instances,\n                offset: OFFSET,\n                vao: vao,\n                vaoActive: vaoActive,\n                elementsActive: elementsActive,\n                // static draw props\n                static: staticDraw\n            };\n        }\n        function parseGLState(options, env) {\n            var staticOptions = options.static;\n            var dynamicOptions = options.dynamic;\n            var STATE = {};\n            GL_STATE_NAMES.forEach(function(prop) {\n                var param = propName(prop);\n                function parseParam(parseStatic, parseDynamic) {\n                    if (prop in staticOptions) {\n                        var value = parseStatic(staticOptions[prop]);\n                        STATE[param] = createStaticDecl(function() {\n                            return value;\n                        });\n                    } else if (prop in dynamicOptions) {\n                        var dyn = dynamicOptions[prop];\n                        STATE[param] = createDynamicDecl(dyn, function(env, scope) {\n                            return parseDynamic(env, scope, env.invoke(scope, dyn));\n                        });\n                    }\n                }\n                switch(prop){\n                    case S_CULL_ENABLE:\n                    case S_BLEND_ENABLE:\n                    case S_DITHER:\n                    case S_STENCIL_ENABLE:\n                    case S_DEPTH_ENABLE:\n                    case S_SCISSOR_ENABLE:\n                    case S_POLYGON_OFFSET_ENABLE:\n                    case S_SAMPLE_ALPHA:\n                    case S_SAMPLE_ENABLE:\n                    case S_DEPTH_MASK:\n                        return parseParam(function(value) {\n                            check$1.commandType(value, \"boolean\", prop, env.commandStr);\n                            return value;\n                        }, function(env, scope, value) {\n                            check$1.optional(function() {\n                                env.assert(scope, \"typeof \" + value + '===\"boolean\"', \"invalid flag \" + prop, env.commandStr);\n                            });\n                            return value;\n                        });\n                    case S_DEPTH_FUNC:\n                        return parseParam(function(value) {\n                            check$1.commandParameter(value, compareFuncs, \"invalid \" + prop, env.commandStr);\n                            return compareFuncs[value];\n                        }, function(env, scope, value) {\n                            var COMPARE_FUNCS = env.constants.compareFuncs;\n                            check$1.optional(function() {\n                                env.assert(scope, value + \" in \" + COMPARE_FUNCS, \"invalid \" + prop + \", must be one of \" + Object.keys(compareFuncs));\n                            });\n                            return scope.def(COMPARE_FUNCS, \"[\", value, \"]\");\n                        });\n                    case S_DEPTH_RANGE:\n                        return parseParam(function(value) {\n                            check$1.command(isArrayLike(value) && value.length === 2 && typeof value[0] === \"number\" && typeof value[1] === \"number\" && value[0] <= value[1], \"depth range is 2d array\", env.commandStr);\n                            return value;\n                        }, function(env, scope, value) {\n                            check$1.optional(function() {\n                                env.assert(scope, env.shared.isArrayLike + \"(\" + value + \")&&\" + value + \".length===2&&\" + \"typeof \" + value + '[0]===\"number\"&&' + \"typeof \" + value + '[1]===\"number\"&&' + value + \"[0]<=\" + value + \"[1]\", \"depth range must be a 2d array\");\n                            });\n                            var Z_NEAR = scope.def(\"+\", value, \"[0]\");\n                            var Z_FAR = scope.def(\"+\", value, \"[1]\");\n                            return [\n                                Z_NEAR,\n                                Z_FAR\n                            ];\n                        });\n                    case S_BLEND_FUNC:\n                        return parseParam(function(value) {\n                            check$1.commandType(value, \"object\", \"blend.func\", env.commandStr);\n                            var srcRGB = \"srcRGB\" in value ? value.srcRGB : value.src;\n                            var srcAlpha = \"srcAlpha\" in value ? value.srcAlpha : value.src;\n                            var dstRGB = \"dstRGB\" in value ? value.dstRGB : value.dst;\n                            var dstAlpha = \"dstAlpha\" in value ? value.dstAlpha : value.dst;\n                            check$1.commandParameter(srcRGB, blendFuncs, param + \".srcRGB\", env.commandStr);\n                            check$1.commandParameter(srcAlpha, blendFuncs, param + \".srcAlpha\", env.commandStr);\n                            check$1.commandParameter(dstRGB, blendFuncs, param + \".dstRGB\", env.commandStr);\n                            check$1.commandParameter(dstAlpha, blendFuncs, param + \".dstAlpha\", env.commandStr);\n                            check$1.command(invalidBlendCombinations.indexOf(srcRGB + \", \" + dstRGB) === -1, \"unallowed blending combination (srcRGB, dstRGB) = (\" + srcRGB + \", \" + dstRGB + \")\", env.commandStr);\n                            return [\n                                blendFuncs[srcRGB],\n                                blendFuncs[dstRGB],\n                                blendFuncs[srcAlpha],\n                                blendFuncs[dstAlpha]\n                            ];\n                        }, function(env, scope, value) {\n                            var BLEND_FUNCS = env.constants.blendFuncs;\n                            check$1.optional(function() {\n                                env.assert(scope, value + \"&&typeof \" + value + '===\"object\"', \"invalid blend func, must be an object\");\n                            });\n                            function read(prefix, suffix) {\n                                var func = scope.def('\"', prefix, suffix, '\" in ', value, \"?\", value, \".\", prefix, suffix, \":\", value, \".\", prefix);\n                                check$1.optional(function() {\n                                    env.assert(scope, func + \" in \" + BLEND_FUNCS, \"invalid \" + prop + \".\" + prefix + suffix + \", must be one of \" + Object.keys(blendFuncs));\n                                });\n                                return func;\n                            }\n                            var srcRGB = read(\"src\", \"RGB\");\n                            var dstRGB = read(\"dst\", \"RGB\");\n                            check$1.optional(function() {\n                                var INVALID_BLEND_COMBINATIONS = env.constants.invalidBlendCombinations;\n                                env.assert(scope, INVALID_BLEND_COMBINATIONS + \".indexOf(\" + srcRGB + '+\", \"+' + dstRGB + \") === -1 \", \"unallowed blending combination for (srcRGB, dstRGB)\");\n                            });\n                            var SRC_RGB = scope.def(BLEND_FUNCS, \"[\", srcRGB, \"]\");\n                            var SRC_ALPHA = scope.def(BLEND_FUNCS, \"[\", read(\"src\", \"Alpha\"), \"]\");\n                            var DST_RGB = scope.def(BLEND_FUNCS, \"[\", dstRGB, \"]\");\n                            var DST_ALPHA = scope.def(BLEND_FUNCS, \"[\", read(\"dst\", \"Alpha\"), \"]\");\n                            return [\n                                SRC_RGB,\n                                DST_RGB,\n                                SRC_ALPHA,\n                                DST_ALPHA\n                            ];\n                        });\n                    case S_BLEND_EQUATION:\n                        return parseParam(function(value) {\n                            if (typeof value === \"string\") {\n                                check$1.commandParameter(value, blendEquations, \"invalid \" + prop, env.commandStr);\n                                return [\n                                    blendEquations[value],\n                                    blendEquations[value]\n                                ];\n                            } else if (typeof value === \"object\") {\n                                check$1.commandParameter(value.rgb, blendEquations, prop + \".rgb\", env.commandStr);\n                                check$1.commandParameter(value.alpha, blendEquations, prop + \".alpha\", env.commandStr);\n                                return [\n                                    blendEquations[value.rgb],\n                                    blendEquations[value.alpha]\n                                ];\n                            } else check$1.commandRaise(\"invalid blend.equation\", env.commandStr);\n                        }, function(env, scope, value) {\n                            var BLEND_EQUATIONS = env.constants.blendEquations;\n                            var RGB = scope.def();\n                            var ALPHA = scope.def();\n                            var ifte = env.cond(\"typeof \", value, '===\"string\"');\n                            check$1.optional(function() {\n                                function checkProp(block, name, value) {\n                                    env.assert(block, value + \" in \" + BLEND_EQUATIONS, \"invalid \" + name + \", must be one of \" + Object.keys(blendEquations));\n                                }\n                                checkProp(ifte.then, prop, value);\n                                env.assert(ifte.else, value + \"&&typeof \" + value + '===\"object\"', \"invalid \" + prop);\n                                checkProp(ifte.else, prop + \".rgb\", value + \".rgb\");\n                                checkProp(ifte.else, prop + \".alpha\", value + \".alpha\");\n                            });\n                            ifte.then(RGB, \"=\", ALPHA, \"=\", BLEND_EQUATIONS, \"[\", value, \"];\");\n                            ifte.else(RGB, \"=\", BLEND_EQUATIONS, \"[\", value, \".rgb];\", ALPHA, \"=\", BLEND_EQUATIONS, \"[\", value, \".alpha];\");\n                            scope(ifte);\n                            return [\n                                RGB,\n                                ALPHA\n                            ];\n                        });\n                    case S_BLEND_COLOR:\n                        return parseParam(function(value) {\n                            check$1.command(isArrayLike(value) && value.length === 4, \"blend.color must be a 4d array\", env.commandStr);\n                            return loop(4, function(i) {\n                                return +value[i];\n                            });\n                        }, function(env, scope, value) {\n                            check$1.optional(function() {\n                                env.assert(scope, env.shared.isArrayLike + \"(\" + value + \")&&\" + value + \".length===4\", \"blend.color must be a 4d array\");\n                            });\n                            return loop(4, function(i) {\n                                return scope.def(\"+\", value, \"[\", i, \"]\");\n                            });\n                        });\n                    case S_STENCIL_MASK:\n                        return parseParam(function(value) {\n                            check$1.commandType(value, \"number\", param, env.commandStr);\n                            return value | 0;\n                        }, function(env, scope, value) {\n                            check$1.optional(function() {\n                                env.assert(scope, \"typeof \" + value + '===\"number\"', \"invalid stencil.mask\");\n                            });\n                            return scope.def(value, \"|0\");\n                        });\n                    case S_STENCIL_FUNC:\n                        return parseParam(function(value) {\n                            check$1.commandType(value, \"object\", param, env.commandStr);\n                            var cmp = value.cmp || \"keep\";\n                            var ref = value.ref || 0;\n                            var mask = \"mask\" in value ? value.mask : -1;\n                            check$1.commandParameter(cmp, compareFuncs, prop + \".cmp\", env.commandStr);\n                            check$1.commandType(ref, \"number\", prop + \".ref\", env.commandStr);\n                            check$1.commandType(mask, \"number\", prop + \".mask\", env.commandStr);\n                            return [\n                                compareFuncs[cmp],\n                                ref,\n                                mask\n                            ];\n                        }, function(env, scope, value) {\n                            var COMPARE_FUNCS = env.constants.compareFuncs;\n                            check$1.optional(function() {\n                                function assert() {\n                                    env.assert(scope, Array.prototype.join.call(arguments, \"\"), \"invalid stencil.func\");\n                                }\n                                assert(value + \"&&typeof \", value, '===\"object\"');\n                                assert('!(\"cmp\" in ', value, \")||(\", value, \".cmp in \", COMPARE_FUNCS, \")\");\n                            });\n                            var cmp = scope.def('\"cmp\" in ', value, \"?\", COMPARE_FUNCS, \"[\", value, \".cmp]\", \":\", GL_KEEP);\n                            var ref = scope.def(value, \".ref|0\");\n                            var mask = scope.def('\"mask\" in ', value, \"?\", value, \".mask|0:-1\");\n                            return [\n                                cmp,\n                                ref,\n                                mask\n                            ];\n                        });\n                    case S_STENCIL_OPFRONT:\n                    case S_STENCIL_OPBACK:\n                        return parseParam(function(value) {\n                            check$1.commandType(value, \"object\", param, env.commandStr);\n                            var fail = value.fail || \"keep\";\n                            var zfail = value.zfail || \"keep\";\n                            var zpass = value.zpass || \"keep\";\n                            check$1.commandParameter(fail, stencilOps, prop + \".fail\", env.commandStr);\n                            check$1.commandParameter(zfail, stencilOps, prop + \".zfail\", env.commandStr);\n                            check$1.commandParameter(zpass, stencilOps, prop + \".zpass\", env.commandStr);\n                            return [\n                                prop === S_STENCIL_OPBACK ? GL_BACK : GL_FRONT,\n                                stencilOps[fail],\n                                stencilOps[zfail],\n                                stencilOps[zpass]\n                            ];\n                        }, function(env, scope, value) {\n                            var STENCIL_OPS = env.constants.stencilOps;\n                            check$1.optional(function() {\n                                env.assert(scope, value + \"&&typeof \" + value + '===\"object\"', \"invalid \" + prop);\n                            });\n                            function read(name) {\n                                check$1.optional(function() {\n                                    env.assert(scope, '!(\"' + name + '\" in ' + value + \")||\" + \"(\" + value + \".\" + name + \" in \" + STENCIL_OPS + \")\", \"invalid \" + prop + \".\" + name + \", must be one of \" + Object.keys(stencilOps));\n                                });\n                                return scope.def('\"', name, '\" in ', value, \"?\", STENCIL_OPS, \"[\", value, \".\", name, \"]:\", GL_KEEP);\n                            }\n                            return [\n                                prop === S_STENCIL_OPBACK ? GL_BACK : GL_FRONT,\n                                read(\"fail\"),\n                                read(\"zfail\"),\n                                read(\"zpass\")\n                            ];\n                        });\n                    case S_POLYGON_OFFSET_OFFSET:\n                        return parseParam(function(value) {\n                            check$1.commandType(value, \"object\", param, env.commandStr);\n                            var factor = value.factor | 0;\n                            var units = value.units | 0;\n                            check$1.commandType(factor, \"number\", param + \".factor\", env.commandStr);\n                            check$1.commandType(units, \"number\", param + \".units\", env.commandStr);\n                            return [\n                                factor,\n                                units\n                            ];\n                        }, function(env, scope, value) {\n                            check$1.optional(function() {\n                                env.assert(scope, value + \"&&typeof \" + value + '===\"object\"', \"invalid \" + prop);\n                            });\n                            var FACTOR = scope.def(value, \".factor|0\");\n                            var UNITS = scope.def(value, \".units|0\");\n                            return [\n                                FACTOR,\n                                UNITS\n                            ];\n                        });\n                    case S_CULL_FACE:\n                        return parseParam(function(value) {\n                            var face = 0;\n                            if (value === \"front\") face = GL_FRONT;\n                            else if (value === \"back\") face = GL_BACK;\n                            check$1.command(!!face, param, env.commandStr);\n                            return face;\n                        }, function(env, scope, value) {\n                            check$1.optional(function() {\n                                env.assert(scope, value + '===\"front\"||' + value + '===\"back\"', \"invalid cull.face\");\n                            });\n                            return scope.def(value, '===\"front\"?', GL_FRONT, \":\", GL_BACK);\n                        });\n                    case S_LINE_WIDTH:\n                        return parseParam(function(value) {\n                            check$1.command(typeof value === \"number\" && value >= limits.lineWidthDims[0] && value <= limits.lineWidthDims[1], \"invalid line width, must be a positive number between \" + limits.lineWidthDims[0] + \" and \" + limits.lineWidthDims[1], env.commandStr);\n                            return value;\n                        }, function(env, scope, value) {\n                            check$1.optional(function() {\n                                env.assert(scope, \"typeof \" + value + '===\"number\"&&' + value + \">=\" + limits.lineWidthDims[0] + \"&&\" + value + \"<=\" + limits.lineWidthDims[1], \"invalid line width\");\n                            });\n                            return value;\n                        });\n                    case S_FRONT_FACE:\n                        return parseParam(function(value) {\n                            check$1.commandParameter(value, orientationType, param, env.commandStr);\n                            return orientationType[value];\n                        }, function(env, scope, value) {\n                            check$1.optional(function() {\n                                env.assert(scope, value + '===\"cw\"||' + value + '===\"ccw\"', \"invalid frontFace, must be one of cw,ccw\");\n                            });\n                            return scope.def(value + '===\"cw\"?' + GL_CW + \":\" + GL_CCW);\n                        });\n                    case S_COLOR_MASK:\n                        return parseParam(function(value) {\n                            check$1.command(isArrayLike(value) && value.length === 4, \"color.mask must be length 4 array\", env.commandStr);\n                            return value.map(function(v) {\n                                return !!v;\n                            });\n                        }, function(env, scope, value) {\n                            check$1.optional(function() {\n                                env.assert(scope, env.shared.isArrayLike + \"(\" + value + \")&&\" + value + \".length===4\", \"invalid color.mask\");\n                            });\n                            return loop(4, function(i) {\n                                return \"!!\" + value + \"[\" + i + \"]\";\n                            });\n                        });\n                    case S_SAMPLE_COVERAGE:\n                        return parseParam(function(value) {\n                            check$1.command(typeof value === \"object\" && value, param, env.commandStr);\n                            var sampleValue = \"value\" in value ? value.value : 1;\n                            var sampleInvert = !!value.invert;\n                            check$1.command(typeof sampleValue === \"number\" && sampleValue >= 0 && sampleValue <= 1, \"sample.coverage.value must be a number between 0 and 1\", env.commandStr);\n                            return [\n                                sampleValue,\n                                sampleInvert\n                            ];\n                        }, function(env, scope, value) {\n                            check$1.optional(function() {\n                                env.assert(scope, value + \"&&typeof \" + value + '===\"object\"', \"invalid sample.coverage\");\n                            });\n                            var VALUE = scope.def('\"value\" in ', value, \"?+\", value, \".value:1\");\n                            var INVERT = scope.def(\"!!\", value, \".invert\");\n                            return [\n                                VALUE,\n                                INVERT\n                            ];\n                        });\n                }\n            });\n            return STATE;\n        }\n        function parseUniforms(uniforms, env) {\n            var staticUniforms = uniforms.static;\n            var dynamicUniforms = uniforms.dynamic;\n            var UNIFORMS = {};\n            Object.keys(staticUniforms).forEach(function(name) {\n                var value = staticUniforms[name];\n                var result;\n                if (typeof value === \"number\" || typeof value === \"boolean\") result = createStaticDecl(function() {\n                    return value;\n                });\n                else if (typeof value === \"function\") {\n                    var reglType = value._reglType;\n                    if (reglType === \"texture2d\" || reglType === \"textureCube\") result = createStaticDecl(function(env) {\n                        return env.link(value);\n                    });\n                    else if (reglType === \"framebuffer\" || reglType === \"framebufferCube\") {\n                        check$1.command(value.color.length > 0, 'missing color attachment for framebuffer sent to uniform \"' + name + '\"', env.commandStr);\n                        result = createStaticDecl(function(env) {\n                            return env.link(value.color[0]);\n                        });\n                    } else check$1.commandRaise('invalid data for uniform \"' + name + '\"', env.commandStr);\n                } else if (isArrayLike(value)) result = createStaticDecl(function(env) {\n                    var ITEM = env.global.def(\"[\", loop(value.length, function(i) {\n                        check$1.command(typeof value[i] === \"number\" || typeof value[i] === \"boolean\", \"invalid uniform \" + name, env.commandStr);\n                        return value[i];\n                    }), \"]\");\n                    return ITEM;\n                });\n                else check$1.commandRaise('invalid or missing data for uniform \"' + name + '\"', env.commandStr);\n                result.value = value;\n                UNIFORMS[name] = result;\n            });\n            Object.keys(dynamicUniforms).forEach(function(key) {\n                var dyn = dynamicUniforms[key];\n                UNIFORMS[key] = createDynamicDecl(dyn, function(env, scope) {\n                    return env.invoke(scope, dyn);\n                });\n            });\n            return UNIFORMS;\n        }\n        function parseAttributes(attributes, env) {\n            var staticAttributes = attributes.static;\n            var dynamicAttributes = attributes.dynamic;\n            var attributeDefs = {};\n            Object.keys(staticAttributes).forEach(function(attribute) {\n                var value = staticAttributes[attribute];\n                var id = stringStore.id(attribute);\n                var record = new AttributeRecord();\n                if (isBufferArgs(value)) {\n                    record.state = ATTRIB_STATE_POINTER;\n                    record.buffer = bufferState.getBuffer(bufferState.create(value, GL_ARRAY_BUFFER$2, false, true));\n                    record.type = 0;\n                } else {\n                    var buffer = bufferState.getBuffer(value);\n                    if (buffer) {\n                        record.state = ATTRIB_STATE_POINTER;\n                        record.buffer = buffer;\n                        record.type = 0;\n                    } else {\n                        check$1.command(typeof value === \"object\" && value, \"invalid data for attribute \" + attribute, env.commandStr);\n                        if (\"constant\" in value) {\n                            var constant = value.constant;\n                            record.buffer = \"null\";\n                            record.state = ATTRIB_STATE_CONSTANT;\n                            if (typeof constant === \"number\") record.x = constant;\n                            else {\n                                check$1.command(isArrayLike(constant) && constant.length > 0 && constant.length <= 4, \"invalid constant for attribute \" + attribute, env.commandStr);\n                                CUTE_COMPONENTS.forEach(function(c, i) {\n                                    if (i < constant.length) record[c] = constant[i];\n                                });\n                            }\n                        } else {\n                            if (isBufferArgs(value.buffer)) buffer = bufferState.getBuffer(bufferState.create(value.buffer, GL_ARRAY_BUFFER$2, false, true));\n                            else buffer = bufferState.getBuffer(value.buffer);\n                            check$1.command(!!buffer, 'missing buffer for attribute \"' + attribute + '\"', env.commandStr);\n                            var offset = value.offset | 0;\n                            check$1.command(offset >= 0, 'invalid offset for attribute \"' + attribute + '\"', env.commandStr);\n                            var stride = value.stride | 0;\n                            check$1.command(stride >= 0 && stride < 256, 'invalid stride for attribute \"' + attribute + '\", must be integer betweeen [0, 255]', env.commandStr);\n                            var size = value.size | 0;\n                            check$1.command(!(\"size\" in value) || size > 0 && size <= 4, 'invalid size for attribute \"' + attribute + '\", must be 1,2,3,4', env.commandStr);\n                            var normalized = !!value.normalized;\n                            var type = 0;\n                            if (\"type\" in value) {\n                                check$1.commandParameter(value.type, glTypes, \"invalid type for attribute \" + attribute, env.commandStr);\n                                type = glTypes[value.type];\n                            }\n                            var divisor = value.divisor | 0;\n                            check$1.optional(function() {\n                                if (\"divisor\" in value) {\n                                    check$1.command(divisor === 0 || extInstancing, 'cannot specify divisor for attribute \"' + attribute + '\", instancing not supported', env.commandStr);\n                                    check$1.command(divisor >= 0, 'invalid divisor for attribute \"' + attribute + '\"', env.commandStr);\n                                }\n                                var command = env.commandStr;\n                                var VALID_KEYS = [\n                                    \"buffer\",\n                                    \"offset\",\n                                    \"divisor\",\n                                    \"normalized\",\n                                    \"type\",\n                                    \"size\",\n                                    \"stride\"\n                                ];\n                                Object.keys(value).forEach(function(prop) {\n                                    check$1.command(VALID_KEYS.indexOf(prop) >= 0, 'unknown parameter \"' + prop + '\" for attribute pointer \"' + attribute + '\" (valid parameters are ' + VALID_KEYS + \")\", command);\n                                });\n                            });\n                            record.buffer = buffer;\n                            record.state = ATTRIB_STATE_POINTER;\n                            record.size = size;\n                            record.normalized = normalized;\n                            record.type = type || buffer.dtype;\n                            record.offset = offset;\n                            record.stride = stride;\n                            record.divisor = divisor;\n                        }\n                    }\n                }\n                attributeDefs[attribute] = createStaticDecl(function(env, scope) {\n                    var cache = env.attribCache;\n                    if (id in cache) return cache[id];\n                    var result = {\n                        isStream: false\n                    };\n                    Object.keys(record).forEach(function(key) {\n                        result[key] = record[key];\n                    });\n                    if (record.buffer) {\n                        result.buffer = env.link(record.buffer);\n                        result.type = result.type || result.buffer + \".dtype\";\n                    }\n                    cache[id] = result;\n                    return result;\n                });\n            });\n            Object.keys(dynamicAttributes).forEach(function(attribute) {\n                var dyn = dynamicAttributes[attribute];\n                function appendAttributeCode(env, block) {\n                    var VALUE = env.invoke(block, dyn);\n                    var shared = env.shared;\n                    var constants = env.constants;\n                    var IS_BUFFER_ARGS = shared.isBufferArgs;\n                    var BUFFER_STATE = shared.buffer;\n                    // Perform validation on attribute\n                    check$1.optional(function() {\n                        env.assert(block, VALUE + \"&&(typeof \" + VALUE + '===\"object\"||typeof ' + VALUE + '===\"function\")&&(' + IS_BUFFER_ARGS + \"(\" + VALUE + \")||\" + BUFFER_STATE + \".getBuffer(\" + VALUE + \")||\" + BUFFER_STATE + \".getBuffer(\" + VALUE + \".buffer)||\" + IS_BUFFER_ARGS + \"(\" + VALUE + \".buffer)||\" + '(\"constant\" in ' + VALUE + \"&&(typeof \" + VALUE + '.constant===\"number\"||' + shared.isArrayLike + \"(\" + VALUE + \".constant))))\", 'invalid dynamic attribute \"' + attribute + '\"');\n                    });\n                    // allocate names for result\n                    var result = {\n                        isStream: block.def(false)\n                    };\n                    var defaultRecord = new AttributeRecord();\n                    defaultRecord.state = ATTRIB_STATE_POINTER;\n                    Object.keys(defaultRecord).forEach(function(key) {\n                        result[key] = block.def(\"\" + defaultRecord[key]);\n                    });\n                    var BUFFER = result.buffer;\n                    var TYPE = result.type;\n                    block(\"if(\", IS_BUFFER_ARGS, \"(\", VALUE, \")){\", result.isStream, \"=true;\", BUFFER, \"=\", BUFFER_STATE, \".createStream(\", GL_ARRAY_BUFFER$2, \",\", VALUE, \");\", TYPE, \"=\", BUFFER, \".dtype;\", \"}else{\", BUFFER, \"=\", BUFFER_STATE, \".getBuffer(\", VALUE, \");\", \"if(\", BUFFER, \"){\", TYPE, \"=\", BUFFER, \".dtype;\", '}else if(\"constant\" in ', VALUE, \"){\", result.state, \"=\", ATTRIB_STATE_CONSTANT, \";\", \"if(typeof \" + VALUE + '.constant === \"number\"){', result[CUTE_COMPONENTS[0]], \"=\", VALUE, \".constant;\", CUTE_COMPONENTS.slice(1).map(function(n) {\n                        return result[n];\n                    }).join(\"=\"), \"=0;\", \"}else{\", CUTE_COMPONENTS.map(function(name, i) {\n                        return result[name] + \"=\" + VALUE + \".constant.length>\" + i + \"?\" + VALUE + \".constant[\" + i + \"]:0;\";\n                    }).join(\"\"), \"}}else{\", \"if(\", IS_BUFFER_ARGS, \"(\", VALUE, \".buffer)){\", BUFFER, \"=\", BUFFER_STATE, \".createStream(\", GL_ARRAY_BUFFER$2, \",\", VALUE, \".buffer);\", \"}else{\", BUFFER, \"=\", BUFFER_STATE, \".getBuffer(\", VALUE, \".buffer);\", \"}\", TYPE, '=\"type\" in ', VALUE, \"?\", constants.glTypes, \"[\", VALUE, \".type]:\", BUFFER, \".dtype;\", result.normalized, \"=!!\", VALUE, \".normalized;\");\n                    function emitReadRecord(name) {\n                        block(result[name], \"=\", VALUE, \".\", name, \"|0;\");\n                    }\n                    emitReadRecord(\"size\");\n                    emitReadRecord(\"offset\");\n                    emitReadRecord(\"stride\");\n                    emitReadRecord(\"divisor\");\n                    block(\"}}\");\n                    block.exit(\"if(\", result.isStream, \"){\", BUFFER_STATE, \".destroyStream(\", BUFFER, \");\", \"}\");\n                    return result;\n                }\n                attributeDefs[attribute] = createDynamicDecl(dyn, appendAttributeCode);\n            });\n            return attributeDefs;\n        }\n        function parseContext(context) {\n            var staticContext = context.static;\n            var dynamicContext = context.dynamic;\n            var result = {};\n            Object.keys(staticContext).forEach(function(name) {\n                var value = staticContext[name];\n                result[name] = createStaticDecl(function(env, scope) {\n                    if (typeof value === \"number\" || typeof value === \"boolean\") return \"\" + value;\n                    else return env.link(value);\n                });\n            });\n            Object.keys(dynamicContext).forEach(function(name) {\n                var dyn = dynamicContext[name];\n                result[name] = createDynamicDecl(dyn, function(env, scope) {\n                    return env.invoke(scope, dyn);\n                });\n            });\n            return result;\n        }\n        function parseArguments(options, attributes, uniforms, context, env) {\n            var staticOptions = options.static;\n            var dynamicOptions = options.dynamic;\n            check$1.optional(function() {\n                var KEY_NAMES = [\n                    S_FRAMEBUFFER,\n                    S_VERT,\n                    S_FRAG,\n                    S_ELEMENTS,\n                    S_PRIMITIVE,\n                    S_OFFSET,\n                    S_COUNT,\n                    S_INSTANCES,\n                    S_PROFILE,\n                    S_VAO\n                ].concat(GL_STATE_NAMES);\n                function checkKeys(dict) {\n                    Object.keys(dict).forEach(function(key) {\n                        check$1.command(KEY_NAMES.indexOf(key) >= 0, 'unknown parameter \"' + key + '\"', env.commandStr);\n                    });\n                }\n                checkKeys(staticOptions);\n                checkKeys(dynamicOptions);\n            });\n            var attribLocations = parseAttribLocations(options, attributes);\n            var framebuffer = parseFramebuffer(options, env);\n            var viewportAndScissor = parseViewportScissor(options, framebuffer, env);\n            var draw = parseDraw(options, env);\n            var state = parseGLState(options, env);\n            var shader = parseProgram(options, env, attribLocations);\n            function copyBox(name) {\n                var defn = viewportAndScissor[name];\n                if (defn) state[name] = defn;\n            }\n            copyBox(S_VIEWPORT);\n            copyBox(propName(S_SCISSOR_BOX));\n            var dirty = Object.keys(state).length > 0;\n            var result = {\n                framebuffer: framebuffer,\n                draw: draw,\n                shader: shader,\n                state: state,\n                dirty: dirty,\n                scopeVAO: null,\n                drawVAO: null,\n                useVAO: false,\n                attributes: {}\n            };\n            result.profile = parseProfile(options, env);\n            result.uniforms = parseUniforms(uniforms, env);\n            result.drawVAO = result.scopeVAO = draw.vao;\n            // special case: check if we can statically allocate a vertex array object for this program\n            if (!result.drawVAO && shader.program && !attribLocations && extensions.angle_instanced_arrays && draw.static.elements) {\n                var useVAO = true;\n                var staticBindings = shader.program.attributes.map(function(attr) {\n                    var binding = attributes.static[attr];\n                    useVAO = useVAO && !!binding;\n                    return binding;\n                });\n                if (useVAO && staticBindings.length > 0) {\n                    var vao = attributeState.getVAO(attributeState.createVAO({\n                        attributes: staticBindings,\n                        elements: draw.static.elements\n                    }));\n                    result.drawVAO = new Declaration(null, null, null, function(env, scope) {\n                        return env.link(vao);\n                    });\n                    result.useVAO = true;\n                }\n            }\n            if (attribLocations) result.useVAO = true;\n            else result.attributes = parseAttributes(attributes, env);\n            result.context = parseContext(context, env);\n            return result;\n        }\n        // ===================================================\n        // ===================================================\n        // COMMON UPDATE FUNCTIONS\n        // ===================================================\n        // ===================================================\n        function emitContext(env, scope, context) {\n            var shared = env.shared;\n            var CONTEXT = shared.context;\n            var contextEnter = env.scope();\n            Object.keys(context).forEach(function(name) {\n                scope.save(CONTEXT, \".\" + name);\n                var defn = context[name];\n                var value = defn.append(env, scope);\n                if (Array.isArray(value)) contextEnter(CONTEXT, \".\", name, \"=[\", value.join(), \"];\");\n                else contextEnter(CONTEXT, \".\", name, \"=\", value, \";\");\n            });\n            scope(contextEnter);\n        }\n        // ===================================================\n        // ===================================================\n        // COMMON DRAWING FUNCTIONS\n        // ===================================================\n        // ===================================================\n        function emitPollFramebuffer(env, scope, framebuffer, skipCheck) {\n            var shared = env.shared;\n            var GL = shared.gl;\n            var FRAMEBUFFER_STATE = shared.framebuffer;\n            var EXT_DRAW_BUFFERS;\n            if (extDrawBuffers) EXT_DRAW_BUFFERS = scope.def(shared.extensions, \".webgl_draw_buffers\");\n            var constants = env.constants;\n            var DRAW_BUFFERS = constants.drawBuffer;\n            var BACK_BUFFER = constants.backBuffer;\n            var NEXT;\n            if (framebuffer) NEXT = framebuffer.append(env, scope);\n            else NEXT = scope.def(FRAMEBUFFER_STATE, \".next\");\n            if (!skipCheck) scope(\"if(\", NEXT, \"!==\", FRAMEBUFFER_STATE, \".cur){\");\n            scope(\"if(\", NEXT, \"){\", GL, \".bindFramebuffer(\", GL_FRAMEBUFFER$2, \",\", NEXT, \".framebuffer);\");\n            if (extDrawBuffers) scope(EXT_DRAW_BUFFERS, \".drawBuffersWEBGL(\", DRAW_BUFFERS, \"[\", NEXT, \".colorAttachments.length]);\");\n            scope(\"}else{\", GL, \".bindFramebuffer(\", GL_FRAMEBUFFER$2, \",null);\");\n            if (extDrawBuffers) scope(EXT_DRAW_BUFFERS, \".drawBuffersWEBGL(\", BACK_BUFFER, \");\");\n            scope(\"}\", FRAMEBUFFER_STATE, \".cur=\", NEXT, \";\");\n            if (!skipCheck) scope(\"}\");\n        }\n        function emitPollState(env, scope, args) {\n            var shared = env.shared;\n            var GL = shared.gl;\n            var CURRENT_VARS = env.current;\n            var NEXT_VARS = env.next;\n            var CURRENT_STATE = shared.current;\n            var NEXT_STATE = shared.next;\n            var block = env.cond(CURRENT_STATE, \".dirty\");\n            GL_STATE_NAMES.forEach(function(prop) {\n                var param = propName(prop);\n                if (param in args.state) return;\n                var NEXT, CURRENT;\n                if (param in NEXT_VARS) {\n                    NEXT = NEXT_VARS[param];\n                    CURRENT = CURRENT_VARS[param];\n                    var parts = loop(currentState[param].length, function(i) {\n                        return block.def(NEXT, \"[\", i, \"]\");\n                    });\n                    block(env.cond(parts.map(function(p, i) {\n                        return p + \"!==\" + CURRENT + \"[\" + i + \"]\";\n                    }).join(\"||\")).then(GL, \".\", GL_VARIABLES[param], \"(\", parts, \");\", parts.map(function(p, i) {\n                        return CURRENT + \"[\" + i + \"]=\" + p;\n                    }).join(\";\"), \";\"));\n                } else {\n                    NEXT = block.def(NEXT_STATE, \".\", param);\n                    var ifte = env.cond(NEXT, \"!==\", CURRENT_STATE, \".\", param);\n                    block(ifte);\n                    if (param in GL_FLAGS) ifte(env.cond(NEXT).then(GL, \".enable(\", GL_FLAGS[param], \");\").else(GL, \".disable(\", GL_FLAGS[param], \");\"), CURRENT_STATE, \".\", param, \"=\", NEXT, \";\");\n                    else ifte(GL, \".\", GL_VARIABLES[param], \"(\", NEXT, \");\", CURRENT_STATE, \".\", param, \"=\", NEXT, \";\");\n                }\n            });\n            if (Object.keys(args.state).length === 0) block(CURRENT_STATE, \".dirty=false;\");\n            scope(block);\n        }\n        function emitSetOptions(env, scope, options, filter) {\n            var shared = env.shared;\n            var CURRENT_VARS = env.current;\n            var CURRENT_STATE = shared.current;\n            var GL = shared.gl;\n            sortState(Object.keys(options)).forEach(function(param) {\n                var defn = options[param];\n                if (filter && !filter(defn)) return;\n                var variable = defn.append(env, scope);\n                if (GL_FLAGS[param]) {\n                    var flag = GL_FLAGS[param];\n                    if (isStatic(defn)) {\n                        if (variable) scope(GL, \".enable(\", flag, \");\");\n                        else scope(GL, \".disable(\", flag, \");\");\n                    } else scope(env.cond(variable).then(GL, \".enable(\", flag, \");\").else(GL, \".disable(\", flag, \");\"));\n                    scope(CURRENT_STATE, \".\", param, \"=\", variable, \";\");\n                } else if (isArrayLike(variable)) {\n                    var CURRENT = CURRENT_VARS[param];\n                    scope(GL, \".\", GL_VARIABLES[param], \"(\", variable, \");\", variable.map(function(v, i) {\n                        return CURRENT + \"[\" + i + \"]=\" + v;\n                    }).join(\";\"), \";\");\n                } else scope(GL, \".\", GL_VARIABLES[param], \"(\", variable, \");\", CURRENT_STATE, \".\", param, \"=\", variable, \";\");\n            });\n        }\n        function injectExtensions(env, scope) {\n            if (extInstancing) env.instancing = scope.def(env.shared.extensions, \".angle_instanced_arrays\");\n        }\n        function emitProfile(env, scope, args, useScope, incrementCounter) {\n            var shared = env.shared;\n            var STATS = env.stats;\n            var CURRENT_STATE = shared.current;\n            var TIMER = shared.timer;\n            var profileArg = args.profile;\n            function perfCounter() {\n                if (typeof performance === \"undefined\") return \"Date.now()\";\n                else return \"performance.now()\";\n            }\n            var CPU_START, QUERY_COUNTER;\n            function emitProfileStart(block) {\n                CPU_START = scope.def();\n                block(CPU_START, \"=\", perfCounter(), \";\");\n                if (typeof incrementCounter === \"string\") block(STATS, \".count+=\", incrementCounter, \";\");\n                else block(STATS, \".count++;\");\n                if (timer) {\n                    if (useScope) {\n                        QUERY_COUNTER = scope.def();\n                        block(QUERY_COUNTER, \"=\", TIMER, \".getNumPendingQueries();\");\n                    } else block(TIMER, \".beginQuery(\", STATS, \");\");\n                }\n            }\n            function emitProfileEnd(block) {\n                block(STATS, \".cpuTime+=\", perfCounter(), \"-\", CPU_START, \";\");\n                if (timer) {\n                    if (useScope) block(TIMER, \".pushScopeStats(\", QUERY_COUNTER, \",\", TIMER, \".getNumPendingQueries(),\", STATS, \");\");\n                    else block(TIMER, \".endQuery();\");\n                }\n            }\n            function scopeProfile(value) {\n                var prev = scope.def(CURRENT_STATE, \".profile\");\n                scope(CURRENT_STATE, \".profile=\", value, \";\");\n                scope.exit(CURRENT_STATE, \".profile=\", prev, \";\");\n            }\n            var USE_PROFILE;\n            if (profileArg) {\n                if (isStatic(profileArg)) {\n                    if (profileArg.enable) {\n                        emitProfileStart(scope);\n                        emitProfileEnd(scope.exit);\n                        scopeProfile(\"true\");\n                    } else scopeProfile(\"false\");\n                    return;\n                }\n                USE_PROFILE = profileArg.append(env, scope);\n                scopeProfile(USE_PROFILE);\n            } else USE_PROFILE = scope.def(CURRENT_STATE, \".profile\");\n            var start = env.block();\n            emitProfileStart(start);\n            scope(\"if(\", USE_PROFILE, \"){\", start, \"}\");\n            var end = env.block();\n            emitProfileEnd(end);\n            scope.exit(\"if(\", USE_PROFILE, \"){\", end, \"}\");\n        }\n        function emitAttributes(env, scope, args, attributes, filter) {\n            var shared = env.shared;\n            function typeLength(x) {\n                switch(x){\n                    case GL_FLOAT_VEC2:\n                    case GL_INT_VEC2:\n                    case GL_BOOL_VEC2:\n                        return 2;\n                    case GL_FLOAT_VEC3:\n                    case GL_INT_VEC3:\n                    case GL_BOOL_VEC3:\n                        return 3;\n                    case GL_FLOAT_VEC4:\n                    case GL_INT_VEC4:\n                    case GL_BOOL_VEC4:\n                        return 4;\n                    default:\n                        return 1;\n                }\n            }\n            function emitBindAttribute(ATTRIBUTE, size, record) {\n                var GL = shared.gl;\n                var LOCATION = scope.def(ATTRIBUTE, \".location\");\n                var BINDING = scope.def(shared.attributes, \"[\", LOCATION, \"]\");\n                var STATE = record.state;\n                var BUFFER = record.buffer;\n                var CONST_COMPONENTS = [\n                    record.x,\n                    record.y,\n                    record.z,\n                    record.w\n                ];\n                var COMMON_KEYS = [\n                    \"buffer\",\n                    \"normalized\",\n                    \"offset\",\n                    \"stride\"\n                ];\n                function emitBuffer() {\n                    scope(\"if(!\", BINDING, \".buffer){\", GL, \".enableVertexAttribArray(\", LOCATION, \");}\");\n                    var TYPE = record.type;\n                    var SIZE;\n                    if (!record.size) SIZE = size;\n                    else SIZE = scope.def(record.size, \"||\", size);\n                    scope(\"if(\", BINDING, \".type!==\", TYPE, \"||\", BINDING, \".size!==\", SIZE, \"||\", COMMON_KEYS.map(function(key) {\n                        return BINDING + \".\" + key + \"!==\" + record[key];\n                    }).join(\"||\"), \"){\", GL, \".bindBuffer(\", GL_ARRAY_BUFFER$2, \",\", BUFFER, \".buffer);\", GL, \".vertexAttribPointer(\", [\n                        LOCATION,\n                        SIZE,\n                        TYPE,\n                        record.normalized,\n                        record.stride,\n                        record.offset\n                    ], \");\", BINDING, \".type=\", TYPE, \";\", BINDING, \".size=\", SIZE, \";\", COMMON_KEYS.map(function(key) {\n                        return BINDING + \".\" + key + \"=\" + record[key] + \";\";\n                    }).join(\"\"), \"}\");\n                    if (extInstancing) {\n                        var DIVISOR = record.divisor;\n                        scope(\"if(\", BINDING, \".divisor!==\", DIVISOR, \"){\", env.instancing, \".vertexAttribDivisorANGLE(\", [\n                            LOCATION,\n                            DIVISOR\n                        ], \");\", BINDING, \".divisor=\", DIVISOR, \";}\");\n                    }\n                }\n                function emitConstant() {\n                    scope(\"if(\", BINDING, \".buffer){\", GL, \".disableVertexAttribArray(\", LOCATION, \");\", BINDING, \".buffer=null;\", \"}if(\", CUTE_COMPONENTS.map(function(c, i) {\n                        return BINDING + \".\" + c + \"!==\" + CONST_COMPONENTS[i];\n                    }).join(\"||\"), \"){\", GL, \".vertexAttrib4f(\", LOCATION, \",\", CONST_COMPONENTS, \");\", CUTE_COMPONENTS.map(function(c, i) {\n                        return BINDING + \".\" + c + \"=\" + CONST_COMPONENTS[i] + \";\";\n                    }).join(\"\"), \"}\");\n                }\n                if (STATE === ATTRIB_STATE_POINTER) emitBuffer();\n                else if (STATE === ATTRIB_STATE_CONSTANT) emitConstant();\n                else {\n                    scope(\"if(\", STATE, \"===\", ATTRIB_STATE_POINTER, \"){\");\n                    emitBuffer();\n                    scope(\"}else{\");\n                    emitConstant();\n                    scope(\"}\");\n                }\n            }\n            attributes.forEach(function(attribute) {\n                var name = attribute.name;\n                var arg = args.attributes[name];\n                var record;\n                if (arg) {\n                    if (!filter(arg)) return;\n                    record = arg.append(env, scope);\n                } else {\n                    if (!filter(SCOPE_DECL)) return;\n                    var scopeAttrib = env.scopeAttrib(name);\n                    check$1.optional(function() {\n                        env.assert(scope, scopeAttrib + \".state\", \"missing attribute \" + name);\n                    });\n                    record = {};\n                    Object.keys(new AttributeRecord()).forEach(function(key) {\n                        record[key] = scope.def(scopeAttrib, \".\", key);\n                    });\n                }\n                emitBindAttribute(env.link(attribute), typeLength(attribute.info.type), record);\n            });\n        }\n        function emitUniforms(env, scope, args, uniforms, filter, isBatchInnerLoop) {\n            var shared = env.shared;\n            var GL = shared.gl;\n            var definedArrUniforms = {};\n            var infix;\n            for(var i = 0; i < uniforms.length; ++i){\n                var uniform = uniforms[i];\n                var name = uniform.name;\n                var type = uniform.info.type;\n                var size = uniform.info.size;\n                var arg = args.uniforms[name];\n                if (size > 1) {\n                    // either foo[n] or foos, avoid define both\n                    if (!arg) continue;\n                    var arrUniformName = name.replace(\"[0]\", \"\");\n                    if (definedArrUniforms[arrUniformName]) continue;\n                    definedArrUniforms[arrUniformName] = 1;\n                }\n                var UNIFORM = env.link(uniform);\n                var LOCATION = UNIFORM + \".location\";\n                var VALUE;\n                if (arg) {\n                    if (!filter(arg)) continue;\n                    if (isStatic(arg)) {\n                        var value = arg.value;\n                        check$1.command(value !== null && typeof value !== \"undefined\", 'missing uniform \"' + name + '\"', env.commandStr);\n                        if (type === GL_SAMPLER_2D || type === GL_SAMPLER_CUBE) {\n                            check$1.command(typeof value === \"function\" && (type === GL_SAMPLER_2D && (value._reglType === \"texture2d\" || value._reglType === \"framebuffer\") || type === GL_SAMPLER_CUBE && (value._reglType === \"textureCube\" || value._reglType === \"framebufferCube\")), \"invalid texture for uniform \" + name, env.commandStr);\n                            var TEX_VALUE = env.link(value._texture || value.color[0]._texture);\n                            scope(GL, \".uniform1i(\", LOCATION, \",\", TEX_VALUE + \".bind());\");\n                            scope.exit(TEX_VALUE, \".unbind();\");\n                        } else if (type === GL_FLOAT_MAT2 || type === GL_FLOAT_MAT3 || type === GL_FLOAT_MAT4) {\n                            check$1.optional(function() {\n                                check$1.command(isArrayLike(value), \"invalid matrix for uniform \" + name, env.commandStr);\n                                check$1.command(type === GL_FLOAT_MAT2 && value.length === 4 || type === GL_FLOAT_MAT3 && value.length === 9 || type === GL_FLOAT_MAT4 && value.length === 16, \"invalid length for matrix uniform \" + name, env.commandStr);\n                            });\n                            var MAT_VALUE = env.global.def(\"new Float32Array([\" + Array.prototype.slice.call(value) + \"])\");\n                            var dim = 2;\n                            if (type === GL_FLOAT_MAT3) dim = 3;\n                            else if (type === GL_FLOAT_MAT4) dim = 4;\n                            scope(GL, \".uniformMatrix\", dim, \"fv(\", LOCATION, \",false,\", MAT_VALUE, \");\");\n                        } else {\n                            switch(type){\n                                case GL_FLOAT$8:\n                                    if (size === 1) check$1.commandType(value, \"number\", \"uniform \" + name, env.commandStr);\n                                    else check$1.command(isArrayLike(value) && value.length === size, \"uniform \" + name, env.commandStr);\n                                    infix = \"1f\";\n                                    break;\n                                case GL_FLOAT_VEC2:\n                                    check$1.command(isArrayLike(value) && value.length && value.length % 2 === 0 && value.length <= size * 2, \"uniform \" + name, env.commandStr);\n                                    infix = \"2f\";\n                                    break;\n                                case GL_FLOAT_VEC3:\n                                    check$1.command(isArrayLike(value) && value.length && value.length % 3 === 0 && value.length <= size * 3, \"uniform \" + name, env.commandStr);\n                                    infix = \"3f\";\n                                    break;\n                                case GL_FLOAT_VEC4:\n                                    check$1.command(isArrayLike(value) && value.length && value.length % 4 === 0 && value.length <= size * 4, \"uniform \" + name, env.commandStr);\n                                    infix = \"4f\";\n                                    break;\n                                case GL_BOOL:\n                                    if (size === 1) check$1.commandType(value, \"boolean\", \"uniform \" + name, env.commandStr);\n                                    else check$1.command(isArrayLike(value) && value.length === size, \"uniform \" + name, env.commandStr);\n                                    infix = \"1i\";\n                                    break;\n                                case GL_INT$3:\n                                    if (size === 1) check$1.commandType(value, \"number\", \"uniform \" + name, env.commandStr);\n                                    else check$1.command(isArrayLike(value) && value.length === size, \"uniform \" + name, env.commandStr);\n                                    infix = \"1i\";\n                                    break;\n                                case GL_BOOL_VEC2:\n                                    check$1.command(isArrayLike(value) && value.length && value.length % 2 === 0 && value.length <= size * 2, \"uniform \" + name, env.commandStr);\n                                    infix = \"2i\";\n                                    break;\n                                case GL_INT_VEC2:\n                                    check$1.command(isArrayLike(value) && value.length && value.length % 2 === 0 && value.length <= size * 2, \"uniform \" + name, env.commandStr);\n                                    infix = \"2i\";\n                                    break;\n                                case GL_BOOL_VEC3:\n                                    check$1.command(isArrayLike(value) && value.length && value.length % 3 === 0 && value.length <= size * 3, \"uniform \" + name, env.commandStr);\n                                    infix = \"3i\";\n                                    break;\n                                case GL_INT_VEC3:\n                                    check$1.command(isArrayLike(value) && value.length && value.length % 3 === 0 && value.length <= size * 3, \"uniform \" + name, env.commandStr);\n                                    infix = \"3i\";\n                                    break;\n                                case GL_BOOL_VEC4:\n                                    check$1.command(isArrayLike(value) && value.length && value.length % 4 === 0 && value.length <= size * 4, \"uniform \" + name, env.commandStr);\n                                    infix = \"4i\";\n                                    break;\n                                case GL_INT_VEC4:\n                                    check$1.command(isArrayLike(value) && value.length && value.length % 4 === 0 && value.length <= size * 4, \"uniform \" + name, env.commandStr);\n                                    infix = \"4i\";\n                                    break;\n                            }\n                            if (size > 1) {\n                                infix += \"v\";\n                                value = env.global.def(\"[\" + Array.prototype.slice.call(value) + \"]\");\n                            } else value = isArrayLike(value) ? Array.prototype.slice.call(value) : value;\n                            scope(GL, \".uniform\", infix, \"(\", LOCATION, \",\", value, \");\");\n                        }\n                        continue;\n                    } else VALUE = arg.append(env, scope);\n                } else {\n                    if (!filter(SCOPE_DECL)) continue;\n                    VALUE = scope.def(shared.uniforms, \"[\", stringStore.id(name), \"]\");\n                }\n                if (type === GL_SAMPLER_2D) {\n                    check$1(!Array.isArray(VALUE), \"must specify a scalar prop for textures\");\n                    scope(\"if(\", VALUE, \"&&\", VALUE, '._reglType===\"framebuffer\"){', VALUE, \"=\", VALUE, \".color[0];\", \"}\");\n                } else if (type === GL_SAMPLER_CUBE) {\n                    check$1(!Array.isArray(VALUE), \"must specify a scalar prop for cube maps\");\n                    scope(\"if(\", VALUE, \"&&\", VALUE, '._reglType===\"framebufferCube\"){', VALUE, \"=\", VALUE, \".color[0];\", \"}\");\n                }\n                // perform type validation\n                check$1.optional(function() {\n                    function emitCheck(pred, message) {\n                        env.assert(scope, pred, 'bad data or missing for uniform \"' + name + '\".  ' + message);\n                    }\n                    function checkType(type, size) {\n                        if (size === 1) check$1(!Array.isArray(VALUE), \"must not specify an array type for uniform\");\n                        emitCheck(\"Array.isArray(\" + VALUE + \") && typeof \" + VALUE + '[0]===\" ' + type + '\"' + \" || typeof \" + VALUE + '===\"' + type + '\"', \"invalid type, expected \" + type);\n                    }\n                    function checkVector(n, type, size) {\n                        if (Array.isArray(VALUE)) check$1(VALUE.length && VALUE.length % n === 0 && VALUE.length <= n * size, \"must have length of \" + (size === 1 ? \"\" : \"n * \") + n);\n                        else emitCheck(shared.isArrayLike + \"(\" + VALUE + \")&&\" + VALUE + \".length && \" + VALUE + \".length % \" + n + \" === 0\" + \" && \" + VALUE + \".length<=\" + n * size, \"invalid vector, should have length of \" + (size === 1 ? \"\" : \"n * \") + n, env.commandStr);\n                    }\n                    function checkTexture(target) {\n                        check$1(!Array.isArray(VALUE), \"must not specify a value type\");\n                        emitCheck(\"typeof \" + VALUE + '===\"function\"&&' + VALUE + '._reglType===\"texture' + (target === GL_TEXTURE_2D$3 ? \"2d\" : \"Cube\") + '\"', \"invalid texture type\", env.commandStr);\n                    }\n                    switch(type){\n                        case GL_INT$3:\n                            checkType(\"number\", size);\n                            break;\n                        case GL_INT_VEC2:\n                            checkVector(2, \"number\", size);\n                            break;\n                        case GL_INT_VEC3:\n                            checkVector(3, \"number\", size);\n                            break;\n                        case GL_INT_VEC4:\n                            checkVector(4, \"number\", size);\n                            break;\n                        case GL_FLOAT$8:\n                            checkType(\"number\", size);\n                            break;\n                        case GL_FLOAT_VEC2:\n                            checkVector(2, \"number\", size);\n                            break;\n                        case GL_FLOAT_VEC3:\n                            checkVector(3, \"number\", size);\n                            break;\n                        case GL_FLOAT_VEC4:\n                            checkVector(4, \"number\", size);\n                            break;\n                        case GL_BOOL:\n                            checkType(\"boolean\", size);\n                            break;\n                        case GL_BOOL_VEC2:\n                            checkVector(2, \"boolean\", size);\n                            break;\n                        case GL_BOOL_VEC3:\n                            checkVector(3, \"boolean\", size);\n                            break;\n                        case GL_BOOL_VEC4:\n                            checkVector(4, \"boolean\", size);\n                            break;\n                        case GL_FLOAT_MAT2:\n                            checkVector(4, \"number\", size);\n                            break;\n                        case GL_FLOAT_MAT3:\n                            checkVector(9, \"number\", size);\n                            break;\n                        case GL_FLOAT_MAT4:\n                            checkVector(16, \"number\", size);\n                            break;\n                        case GL_SAMPLER_2D:\n                            checkTexture(GL_TEXTURE_2D$3);\n                            break;\n                        case GL_SAMPLER_CUBE:\n                            checkTexture(GL_TEXTURE_CUBE_MAP$2);\n                            break;\n                    }\n                });\n                var unroll = 1;\n                switch(type){\n                    case GL_SAMPLER_2D:\n                    case GL_SAMPLER_CUBE:\n                        var TEX = scope.def(VALUE, \"._texture\");\n                        scope(GL, \".uniform1i(\", LOCATION, \",\", TEX, \".bind());\");\n                        scope.exit(TEX, \".unbind();\");\n                        continue;\n                    case GL_INT$3:\n                    case GL_BOOL:\n                        infix = \"1i\";\n                        break;\n                    case GL_INT_VEC2:\n                    case GL_BOOL_VEC2:\n                        infix = \"2i\";\n                        unroll = 2;\n                        break;\n                    case GL_INT_VEC3:\n                    case GL_BOOL_VEC3:\n                        infix = \"3i\";\n                        unroll = 3;\n                        break;\n                    case GL_INT_VEC4:\n                    case GL_BOOL_VEC4:\n                        infix = \"4i\";\n                        unroll = 4;\n                        break;\n                    case GL_FLOAT$8:\n                        infix = \"1f\";\n                        break;\n                    case GL_FLOAT_VEC2:\n                        infix = \"2f\";\n                        unroll = 2;\n                        break;\n                    case GL_FLOAT_VEC3:\n                        infix = \"3f\";\n                        unroll = 3;\n                        break;\n                    case GL_FLOAT_VEC4:\n                        infix = \"4f\";\n                        unroll = 4;\n                        break;\n                    case GL_FLOAT_MAT2:\n                        infix = \"Matrix2fv\";\n                        break;\n                    case GL_FLOAT_MAT3:\n                        infix = \"Matrix3fv\";\n                        break;\n                    case GL_FLOAT_MAT4:\n                        infix = \"Matrix4fv\";\n                        break;\n                }\n                if (infix.indexOf(\"Matrix\") === -1 && size > 1) {\n                    infix += \"v\";\n                    unroll = 1;\n                }\n                if (infix.charAt(0) === \"M\") {\n                    scope(GL, \".uniform\", infix, \"(\", LOCATION, \",\");\n                    var matSize = Math.pow(type - GL_FLOAT_MAT2 + 2, 2);\n                    var STORAGE = env.global.def(\"new Float32Array(\", matSize, \")\");\n                    if (Array.isArray(VALUE)) scope(\"false,(\", loop(matSize, function(i) {\n                        return STORAGE + \"[\" + i + \"]=\" + VALUE[i];\n                    }), \",\", STORAGE, \")\");\n                    else scope(\"false,(Array.isArray(\", VALUE, \")||\", VALUE, \" instanceof Float32Array)?\", VALUE, \":(\", loop(matSize, function(i) {\n                        return STORAGE + \"[\" + i + \"]=\" + VALUE + \"[\" + i + \"]\";\n                    }), \",\", STORAGE, \")\");\n                    scope(\");\");\n                } else if (unroll > 1) {\n                    var prev = [];\n                    var cur = [];\n                    for(var j = 0; j < unroll; ++j){\n                        if (Array.isArray(VALUE)) cur.push(VALUE[j]);\n                        else cur.push(scope.def(VALUE + \"[\" + j + \"]\"));\n                        if (isBatchInnerLoop) prev.push(scope.def());\n                    }\n                    if (isBatchInnerLoop) scope(\"if(!\", env.batchId, \"||\", prev.map(function(p, i) {\n                        return p + \"!==\" + cur[i];\n                    }).join(\"||\"), \"){\", prev.map(function(p, i) {\n                        return p + \"=\" + cur[i] + \";\";\n                    }).join(\"\"));\n                    scope(GL, \".uniform\", infix, \"(\", LOCATION, \",\", cur.join(\",\"), \");\");\n                    if (isBatchInnerLoop) scope(\"}\");\n                } else {\n                    check$1(!Array.isArray(VALUE), \"uniform value must not be an array\");\n                    if (isBatchInnerLoop) {\n                        var prevS = scope.def();\n                        scope(\"if(!\", env.batchId, \"||\", prevS, \"!==\", VALUE, \"){\", prevS, \"=\", VALUE, \";\");\n                    }\n                    scope(GL, \".uniform\", infix, \"(\", LOCATION, \",\", VALUE, \");\");\n                    if (isBatchInnerLoop) scope(\"}\");\n                }\n            }\n        }\n        function emitDraw(env, outer, inner, args) {\n            var shared = env.shared;\n            var GL = shared.gl;\n            var DRAW_STATE = shared.draw;\n            var drawOptions = args.draw;\n            function emitElements() {\n                var defn = drawOptions.elements;\n                var ELEMENTS;\n                var scope = outer;\n                if (defn) {\n                    if (defn.contextDep && args.contextDynamic || defn.propDep) scope = inner;\n                    ELEMENTS = defn.append(env, scope);\n                    if (drawOptions.elementsActive) scope(\"if(\" + ELEMENTS + \")\" + GL + \".bindBuffer(\" + GL_ELEMENT_ARRAY_BUFFER$2 + \",\" + ELEMENTS + \".buffer.buffer);\");\n                } else {\n                    ELEMENTS = scope.def();\n                    scope(ELEMENTS, \"=\", DRAW_STATE, \".\", S_ELEMENTS, \";\", \"if(\", ELEMENTS, \"){\", GL, \".bindBuffer(\", GL_ELEMENT_ARRAY_BUFFER$2, \",\", ELEMENTS, \".buffer.buffer);}\", \"else if(\", shared.vao, \".currentVAO){\", ELEMENTS, \"=\", env.shared.elements + \".getElements(\" + shared.vao, \".currentVAO.elements);\", !extVertexArrays ? \"if(\" + ELEMENTS + \")\" + GL + \".bindBuffer(\" + GL_ELEMENT_ARRAY_BUFFER$2 + \",\" + ELEMENTS + \".buffer.buffer);\" : \"\", \"}\");\n                }\n                return ELEMENTS;\n            }\n            function emitCount() {\n                var defn = drawOptions.count;\n                var COUNT;\n                var scope = outer;\n                if (defn) {\n                    if (defn.contextDep && args.contextDynamic || defn.propDep) scope = inner;\n                    COUNT = defn.append(env, scope);\n                    check$1.optional(function() {\n                        if (defn.MISSING) env.assert(outer, \"false\", \"missing vertex count\");\n                        if (defn.DYNAMIC) env.assert(scope, COUNT + \">=0\", \"missing vertex count\");\n                    });\n                } else {\n                    COUNT = scope.def(DRAW_STATE, \".\", S_COUNT);\n                    check$1.optional(function() {\n                        env.assert(scope, COUNT + \">=0\", \"missing vertex count\");\n                    });\n                }\n                return COUNT;\n            }\n            var ELEMENTS = emitElements();\n            function emitValue(name) {\n                var defn = drawOptions[name];\n                if (defn) {\n                    if (defn.contextDep && args.contextDynamic || defn.propDep) return defn.append(env, inner);\n                    else return defn.append(env, outer);\n                } else return outer.def(DRAW_STATE, \".\", name);\n            }\n            var PRIMITIVE = emitValue(S_PRIMITIVE);\n            var OFFSET = emitValue(S_OFFSET);\n            var COUNT = emitCount();\n            if (typeof COUNT === \"number\") {\n                if (COUNT === 0) return;\n            } else {\n                inner(\"if(\", COUNT, \"){\");\n                inner.exit(\"}\");\n            }\n            var INSTANCES, EXT_INSTANCING;\n            if (extInstancing) {\n                INSTANCES = emitValue(S_INSTANCES);\n                EXT_INSTANCING = env.instancing;\n            }\n            var ELEMENT_TYPE = ELEMENTS + \".type\";\n            var elementsStatic = drawOptions.elements && isStatic(drawOptions.elements) && !drawOptions.vaoActive;\n            function emitInstancing() {\n                function drawElements() {\n                    inner(EXT_INSTANCING, \".drawElementsInstancedANGLE(\", [\n                        PRIMITIVE,\n                        COUNT,\n                        ELEMENT_TYPE,\n                        OFFSET + \"<<((\" + ELEMENT_TYPE + \"-\" + GL_UNSIGNED_BYTE$8 + \")>>1)\",\n                        INSTANCES\n                    ], \");\");\n                }\n                function drawArrays() {\n                    inner(EXT_INSTANCING, \".drawArraysInstancedANGLE(\", [\n                        PRIMITIVE,\n                        OFFSET,\n                        COUNT,\n                        INSTANCES\n                    ], \");\");\n                }\n                if (ELEMENTS && ELEMENTS !== \"null\") {\n                    if (!elementsStatic) {\n                        inner(\"if(\", ELEMENTS, \"){\");\n                        drawElements();\n                        inner(\"}else{\");\n                        drawArrays();\n                        inner(\"}\");\n                    } else drawElements();\n                } else drawArrays();\n            }\n            function emitRegular() {\n                function drawElements() {\n                    inner(GL + \".drawElements(\" + [\n                        PRIMITIVE,\n                        COUNT,\n                        ELEMENT_TYPE,\n                        OFFSET + \"<<((\" + ELEMENT_TYPE + \"-\" + GL_UNSIGNED_BYTE$8 + \")>>1)\"\n                    ] + \");\");\n                }\n                function drawArrays() {\n                    inner(GL + \".drawArrays(\" + [\n                        PRIMITIVE,\n                        OFFSET,\n                        COUNT\n                    ] + \");\");\n                }\n                if (ELEMENTS && ELEMENTS !== \"null\") {\n                    if (!elementsStatic) {\n                        inner(\"if(\", ELEMENTS, \"){\");\n                        drawElements();\n                        inner(\"}else{\");\n                        drawArrays();\n                        inner(\"}\");\n                    } else drawElements();\n                } else drawArrays();\n            }\n            if (extInstancing && (typeof INSTANCES !== \"number\" || INSTANCES >= 0)) {\n                if (typeof INSTANCES === \"string\") {\n                    inner(\"if(\", INSTANCES, \">0){\");\n                    emitInstancing();\n                    inner(\"}else if(\", INSTANCES, \"<0){\");\n                    emitRegular();\n                    inner(\"}\");\n                } else emitInstancing();\n            } else emitRegular();\n        }\n        function createBody(emitBody, parentEnv, args, program, count) {\n            var env = createREGLEnvironment();\n            var scope = env.proc(\"body\", count);\n            check$1.optional(function() {\n                env.commandStr = parentEnv.commandStr;\n                env.command = env.link(parentEnv.commandStr);\n            });\n            if (extInstancing) env.instancing = scope.def(env.shared.extensions, \".angle_instanced_arrays\");\n            emitBody(env, scope, args, program);\n            return env.compile().body;\n        }\n        // ===================================================\n        // ===================================================\n        // DRAW PROC\n        // ===================================================\n        // ===================================================\n        function emitDrawBody(env, draw, args, program) {\n            injectExtensions(env, draw);\n            if (args.useVAO) {\n                if (args.drawVAO) draw(env.shared.vao, \".setVAO(\", args.drawVAO.append(env, draw), \");\");\n                else draw(env.shared.vao, \".setVAO(\", env.shared.vao, \".targetVAO);\");\n            } else {\n                draw(env.shared.vao, \".setVAO(null);\");\n                emitAttributes(env, draw, args, program.attributes, function() {\n                    return true;\n                });\n            }\n            emitUniforms(env, draw, args, program.uniforms, function() {\n                return true;\n            }, false);\n            emitDraw(env, draw, draw, args);\n        }\n        function emitDrawProc(env, args) {\n            var draw = env.proc(\"draw\", 1);\n            injectExtensions(env, draw);\n            emitContext(env, draw, args.context);\n            emitPollFramebuffer(env, draw, args.framebuffer);\n            emitPollState(env, draw, args);\n            emitSetOptions(env, draw, args.state);\n            emitProfile(env, draw, args, false, true);\n            var program = args.shader.progVar.append(env, draw);\n            draw(env.shared.gl, \".useProgram(\", program, \".program);\");\n            if (args.shader.program) emitDrawBody(env, draw, args, args.shader.program);\n            else {\n                draw(env.shared.vao, \".setVAO(null);\");\n                var drawCache = env.global.def(\"{}\");\n                var PROG_ID = draw.def(program, \".id\");\n                var CACHED_PROC = draw.def(drawCache, \"[\", PROG_ID, \"]\");\n                draw(env.cond(CACHED_PROC).then(CACHED_PROC, \".call(this,a0);\").else(CACHED_PROC, \"=\", drawCache, \"[\", PROG_ID, \"]=\", env.link(function(program) {\n                    return createBody(emitDrawBody, env, args, program, 1);\n                }), \"(\", program, \");\", CACHED_PROC, \".call(this,a0);\"));\n            }\n            if (Object.keys(args.state).length > 0) draw(env.shared.current, \".dirty=true;\");\n            if (env.shared.vao) draw(env.shared.vao, \".setVAO(null);\");\n        }\n        // ===================================================\n        // ===================================================\n        // BATCH PROC\n        // ===================================================\n        // ===================================================\n        function emitBatchDynamicShaderBody(env, scope, args, program) {\n            env.batchId = \"a1\";\n            injectExtensions(env, scope);\n            function all() {\n                return true;\n            }\n            emitAttributes(env, scope, args, program.attributes, all);\n            emitUniforms(env, scope, args, program.uniforms, all, false);\n            emitDraw(env, scope, scope, args);\n        }\n        function emitBatchBody(env, scope, args, program) {\n            injectExtensions(env, scope);\n            var contextDynamic = args.contextDep;\n            var BATCH_ID = scope.def();\n            var PROP_LIST = \"a0\";\n            var NUM_PROPS = \"a1\";\n            var PROPS = scope.def();\n            env.shared.props = PROPS;\n            env.batchId = BATCH_ID;\n            var outer = env.scope();\n            var inner = env.scope();\n            scope(outer.entry, \"for(\", BATCH_ID, \"=0;\", BATCH_ID, \"<\", NUM_PROPS, \";++\", BATCH_ID, \"){\", PROPS, \"=\", PROP_LIST, \"[\", BATCH_ID, \"];\", inner, \"}\", outer.exit);\n            function isInnerDefn(defn) {\n                return defn.contextDep && contextDynamic || defn.propDep;\n            }\n            function isOuterDefn(defn) {\n                return !isInnerDefn(defn);\n            }\n            if (args.needsContext) emitContext(env, inner, args.context);\n            if (args.needsFramebuffer) emitPollFramebuffer(env, inner, args.framebuffer);\n            emitSetOptions(env, inner, args.state, isInnerDefn);\n            if (args.profile && isInnerDefn(args.profile)) emitProfile(env, inner, args, false, true);\n            if (!program) {\n                var progCache = env.global.def(\"{}\");\n                var PROGRAM = args.shader.progVar.append(env, inner);\n                var PROG_ID = inner.def(PROGRAM, \".id\");\n                var CACHED_PROC = inner.def(progCache, \"[\", PROG_ID, \"]\");\n                inner(env.shared.gl, \".useProgram(\", PROGRAM, \".program);\", \"if(!\", CACHED_PROC, \"){\", CACHED_PROC, \"=\", progCache, \"[\", PROG_ID, \"]=\", env.link(function(program) {\n                    return createBody(emitBatchDynamicShaderBody, env, args, program, 2);\n                }), \"(\", PROGRAM, \");}\", CACHED_PROC, \".call(this,a0[\", BATCH_ID, \"],\", BATCH_ID, \");\");\n            } else {\n                if (args.useVAO) {\n                    if (args.drawVAO) {\n                        if (isInnerDefn(args.drawVAO)) // vao is a prop\n                        inner(env.shared.vao, \".setVAO(\", args.drawVAO.append(env, inner), \");\");\n                        else // vao is invariant\n                        outer(env.shared.vao, \".setVAO(\", args.drawVAO.append(env, outer), \");\");\n                    } else // scoped vao binding\n                    outer(env.shared.vao, \".setVAO(\", env.shared.vao, \".targetVAO);\");\n                } else {\n                    outer(env.shared.vao, \".setVAO(null);\");\n                    emitAttributes(env, outer, args, program.attributes, isOuterDefn);\n                    emitAttributes(env, inner, args, program.attributes, isInnerDefn);\n                }\n                emitUniforms(env, outer, args, program.uniforms, isOuterDefn, false);\n                emitUniforms(env, inner, args, program.uniforms, isInnerDefn, true);\n                emitDraw(env, outer, inner, args);\n            }\n        }\n        function emitBatchProc(env, args) {\n            var batch = env.proc(\"batch\", 2);\n            env.batchId = \"0\";\n            injectExtensions(env, batch);\n            // Check if any context variables depend on props\n            var contextDynamic = false;\n            var needsContext = true;\n            Object.keys(args.context).forEach(function(name) {\n                contextDynamic = contextDynamic || args.context[name].propDep;\n            });\n            if (!contextDynamic) {\n                emitContext(env, batch, args.context);\n                needsContext = false;\n            }\n            // framebuffer state affects framebufferWidth/height context vars\n            var framebuffer = args.framebuffer;\n            var needsFramebuffer = false;\n            if (framebuffer) {\n                if (framebuffer.propDep) contextDynamic = needsFramebuffer = true;\n                else if (framebuffer.contextDep && contextDynamic) needsFramebuffer = true;\n                if (!needsFramebuffer) emitPollFramebuffer(env, batch, framebuffer);\n            } else emitPollFramebuffer(env, batch, null);\n            // viewport is weird because it can affect context vars\n            if (args.state.viewport && args.state.viewport.propDep) contextDynamic = true;\n            function isInnerDefn(defn) {\n                return defn.contextDep && contextDynamic || defn.propDep;\n            }\n            // set webgl options\n            emitPollState(env, batch, args);\n            emitSetOptions(env, batch, args.state, function(defn) {\n                return !isInnerDefn(defn);\n            });\n            if (!args.profile || !isInnerDefn(args.profile)) emitProfile(env, batch, args, false, \"a1\");\n            // Save these values to args so that the batch body routine can use them\n            args.contextDep = contextDynamic;\n            args.needsContext = needsContext;\n            args.needsFramebuffer = needsFramebuffer;\n            // determine if shader is dynamic\n            var progDefn = args.shader.progVar;\n            if (progDefn.contextDep && contextDynamic || progDefn.propDep) emitBatchBody(env, batch, args, null);\n            else {\n                var PROGRAM = progDefn.append(env, batch);\n                batch(env.shared.gl, \".useProgram(\", PROGRAM, \".program);\");\n                if (args.shader.program) emitBatchBody(env, batch, args, args.shader.program);\n                else {\n                    batch(env.shared.vao, \".setVAO(null);\");\n                    var batchCache = env.global.def(\"{}\");\n                    var PROG_ID = batch.def(PROGRAM, \".id\");\n                    var CACHED_PROC = batch.def(batchCache, \"[\", PROG_ID, \"]\");\n                    batch(env.cond(CACHED_PROC).then(CACHED_PROC, \".call(this,a0,a1);\").else(CACHED_PROC, \"=\", batchCache, \"[\", PROG_ID, \"]=\", env.link(function(program) {\n                        return createBody(emitBatchBody, env, args, program, 2);\n                    }), \"(\", PROGRAM, \");\", CACHED_PROC, \".call(this,a0,a1);\"));\n                }\n            }\n            if (Object.keys(args.state).length > 0) batch(env.shared.current, \".dirty=true;\");\n            if (env.shared.vao) batch(env.shared.vao, \".setVAO(null);\");\n        }\n        // ===================================================\n        // ===================================================\n        // SCOPE COMMAND\n        // ===================================================\n        // ===================================================\n        function emitScopeProc(env, args) {\n            var scope = env.proc(\"scope\", 3);\n            env.batchId = \"a2\";\n            var shared = env.shared;\n            var CURRENT_STATE = shared.current;\n            emitContext(env, scope, args.context);\n            if (args.framebuffer) args.framebuffer.append(env, scope);\n            sortState(Object.keys(args.state)).forEach(function(name) {\n                var defn = args.state[name];\n                var value = defn.append(env, scope);\n                if (isArrayLike(value)) value.forEach(function(v, i) {\n                    scope.set(env.next[name], \"[\" + i + \"]\", v);\n                });\n                else scope.set(shared.next, \".\" + name, value);\n            });\n            emitProfile(env, scope, args, true, true);\n            [\n                S_ELEMENTS,\n                S_OFFSET,\n                S_COUNT,\n                S_INSTANCES,\n                S_PRIMITIVE\n            ].forEach(function(opt) {\n                var variable = args.draw[opt];\n                if (!variable) return;\n                scope.set(shared.draw, \".\" + opt, \"\" + variable.append(env, scope));\n            });\n            Object.keys(args.uniforms).forEach(function(opt) {\n                var value = args.uniforms[opt].append(env, scope);\n                if (Array.isArray(value)) value = \"[\" + value.join() + \"]\";\n                scope.set(shared.uniforms, \"[\" + stringStore.id(opt) + \"]\", value);\n            });\n            Object.keys(args.attributes).forEach(function(name) {\n                var record = args.attributes[name].append(env, scope);\n                var scopeAttrib = env.scopeAttrib(name);\n                Object.keys(new AttributeRecord()).forEach(function(prop) {\n                    scope.set(scopeAttrib, \".\" + prop, record[prop]);\n                });\n            });\n            if (args.scopeVAO) scope.set(shared.vao, \".targetVAO\", args.scopeVAO.append(env, scope));\n            function saveShader(name) {\n                var shader = args.shader[name];\n                if (shader) scope.set(shared.shader, \".\" + name, shader.append(env, scope));\n            }\n            saveShader(S_VERT);\n            saveShader(S_FRAG);\n            if (Object.keys(args.state).length > 0) {\n                scope(CURRENT_STATE, \".dirty=true;\");\n                scope.exit(CURRENT_STATE, \".dirty=true;\");\n            }\n            scope(\"a1(\", env.shared.context, \",a0,\", env.batchId, \");\");\n        }\n        function isDynamicObject(object) {\n            if (typeof object !== \"object\" || isArrayLike(object)) return;\n            var props = Object.keys(object);\n            for(var i = 0; i < props.length; ++i){\n                if (dynamic.isDynamic(object[props[i]])) return true;\n            }\n            return false;\n        }\n        function splatObject(env, options, name) {\n            var object = options.static[name];\n            if (!object || !isDynamicObject(object)) return;\n            var globals = env.global;\n            var keys = Object.keys(object);\n            var thisDep = false;\n            var contextDep = false;\n            var propDep = false;\n            var objectRef = env.global.def(\"{}\");\n            keys.forEach(function(key) {\n                var value = object[key];\n                if (dynamic.isDynamic(value)) {\n                    if (typeof value === \"function\") value = object[key] = dynamic.unbox(value);\n                    var deps = createDynamicDecl(value, null);\n                    thisDep = thisDep || deps.thisDep;\n                    propDep = propDep || deps.propDep;\n                    contextDep = contextDep || deps.contextDep;\n                } else {\n                    globals(objectRef, \".\", key, \"=\");\n                    switch(typeof value){\n                        case \"number\":\n                            globals(value);\n                            break;\n                        case \"string\":\n                            globals('\"', value, '\"');\n                            break;\n                        case \"object\":\n                            if (Array.isArray(value)) globals(\"[\", value.join(), \"]\");\n                            break;\n                        default:\n                            globals(env.link(value));\n                            break;\n                    }\n                    globals(\";\");\n                }\n            });\n            function appendBlock(env, block) {\n                keys.forEach(function(key) {\n                    var value = object[key];\n                    if (!dynamic.isDynamic(value)) return;\n                    var ref = env.invoke(block, value);\n                    block(objectRef, \".\", key, \"=\", ref, \";\");\n                });\n            }\n            options.dynamic[name] = new dynamic.DynamicVariable(DYN_THUNK, {\n                thisDep: thisDep,\n                contextDep: contextDep,\n                propDep: propDep,\n                ref: objectRef,\n                append: appendBlock\n            });\n            delete options.static[name];\n        }\n        // ===========================================================================\n        // ===========================================================================\n        // MAIN DRAW COMMAND\n        // ===========================================================================\n        // ===========================================================================\n        function compileCommand(options, attributes, uniforms, context, stats) {\n            var env = createREGLEnvironment();\n            // link stats, so that we can easily access it in the program.\n            env.stats = env.link(stats);\n            // splat options and attributes to allow for dynamic nested properties\n            Object.keys(attributes.static).forEach(function(key) {\n                splatObject(env, attributes, key);\n            });\n            NESTED_OPTIONS.forEach(function(name) {\n                splatObject(env, options, name);\n            });\n            var args = parseArguments(options, attributes, uniforms, context, env);\n            emitDrawProc(env, args);\n            emitScopeProc(env, args);\n            emitBatchProc(env, args);\n            return extend(env.compile(), {\n                destroy: function() {\n                    args.shader.program.destroy();\n                }\n            });\n        }\n        // ===========================================================================\n        // ===========================================================================\n        // POLL / REFRESH\n        // ===========================================================================\n        // ===========================================================================\n        return {\n            next: nextState,\n            current: currentState,\n            procs: function() {\n                var env = createREGLEnvironment();\n                var poll = env.proc(\"poll\");\n                var refresh = env.proc(\"refresh\");\n                var common = env.block();\n                poll(common);\n                refresh(common);\n                var shared = env.shared;\n                var GL = shared.gl;\n                var NEXT_STATE = shared.next;\n                var CURRENT_STATE = shared.current;\n                common(CURRENT_STATE, \".dirty=false;\");\n                emitPollFramebuffer(env, poll);\n                emitPollFramebuffer(env, refresh, null, true);\n                // Refresh updates all attribute state changes\n                var INSTANCING;\n                if (extInstancing) INSTANCING = env.link(extInstancing);\n                // update vertex array bindings\n                if (extensions.oes_vertex_array_object) refresh(env.link(extensions.oes_vertex_array_object), \".bindVertexArrayOES(null);\");\n                for(var i = 0; i < limits.maxAttributes; ++i){\n                    var BINDING = refresh.def(shared.attributes, \"[\", i, \"]\");\n                    var ifte = env.cond(BINDING, \".buffer\");\n                    ifte.then(GL, \".enableVertexAttribArray(\", i, \");\", GL, \".bindBuffer(\", GL_ARRAY_BUFFER$2, \",\", BINDING, \".buffer.buffer);\", GL, \".vertexAttribPointer(\", i, \",\", BINDING, \".size,\", BINDING, \".type,\", BINDING, \".normalized,\", BINDING, \".stride,\", BINDING, \".offset);\").else(GL, \".disableVertexAttribArray(\", i, \");\", GL, \".vertexAttrib4f(\", i, \",\", BINDING, \".x,\", BINDING, \".y,\", BINDING, \".z,\", BINDING, \".w);\", BINDING, \".buffer=null;\");\n                    refresh(ifte);\n                    if (extInstancing) refresh(INSTANCING, \".vertexAttribDivisorANGLE(\", i, \",\", BINDING, \".divisor);\");\n                }\n                refresh(env.shared.vao, \".currentVAO=null;\", env.shared.vao, \".setVAO(\", env.shared.vao, \".targetVAO);\");\n                Object.keys(GL_FLAGS).forEach(function(flag) {\n                    var cap = GL_FLAGS[flag];\n                    var NEXT = common.def(NEXT_STATE, \".\", flag);\n                    var block = env.block();\n                    block(\"if(\", NEXT, \"){\", GL, \".enable(\", cap, \")}else{\", GL, \".disable(\", cap, \")}\", CURRENT_STATE, \".\", flag, \"=\", NEXT, \";\");\n                    refresh(block);\n                    poll(\"if(\", NEXT, \"!==\", CURRENT_STATE, \".\", flag, \"){\", block, \"}\");\n                });\n                Object.keys(GL_VARIABLES).forEach(function(name) {\n                    var func = GL_VARIABLES[name];\n                    var init = currentState[name];\n                    var NEXT, CURRENT;\n                    var block = env.block();\n                    block(GL, \".\", func, \"(\");\n                    if (isArrayLike(init)) {\n                        var n = init.length;\n                        NEXT = env.global.def(NEXT_STATE, \".\", name);\n                        CURRENT = env.global.def(CURRENT_STATE, \".\", name);\n                        block(loop(n, function(i) {\n                            return NEXT + \"[\" + i + \"]\";\n                        }), \");\", loop(n, function(i) {\n                            return CURRENT + \"[\" + i + \"]=\" + NEXT + \"[\" + i + \"];\";\n                        }).join(\"\"));\n                        poll(\"if(\", loop(n, function(i) {\n                            return NEXT + \"[\" + i + \"]!==\" + CURRENT + \"[\" + i + \"]\";\n                        }).join(\"||\"), \"){\", block, \"}\");\n                    } else {\n                        NEXT = common.def(NEXT_STATE, \".\", name);\n                        CURRENT = common.def(CURRENT_STATE, \".\", name);\n                        block(NEXT, \");\", CURRENT_STATE, \".\", name, \"=\", NEXT, \";\");\n                        poll(\"if(\", NEXT, \"!==\", CURRENT, \"){\", block, \"}\");\n                    }\n                    refresh(block);\n                });\n                return env.compile();\n            }(),\n            compile: compileCommand\n        };\n    }\n    function stats() {\n        return {\n            vaoCount: 0,\n            bufferCount: 0,\n            elementsCount: 0,\n            framebufferCount: 0,\n            shaderCount: 0,\n            textureCount: 0,\n            cubeCount: 0,\n            renderbufferCount: 0,\n            maxTextureUnits: 0\n        };\n    }\n    var GL_QUERY_RESULT_EXT = 0x8866;\n    var GL_QUERY_RESULT_AVAILABLE_EXT = 0x8867;\n    var GL_TIME_ELAPSED_EXT = 0x88BF;\n    var createTimer = function(gl, extensions) {\n        if (!extensions.ext_disjoint_timer_query) return null;\n        // QUERY POOL BEGIN\n        var queryPool = [];\n        function allocQuery() {\n            return queryPool.pop() || extensions.ext_disjoint_timer_query.createQueryEXT();\n        }\n        function freeQuery(query) {\n            queryPool.push(query);\n        }\n        // QUERY POOL END\n        var pendingQueries = [];\n        function beginQuery(stats) {\n            var query = allocQuery();\n            extensions.ext_disjoint_timer_query.beginQueryEXT(GL_TIME_ELAPSED_EXT, query);\n            pendingQueries.push(query);\n            pushScopeStats(pendingQueries.length - 1, pendingQueries.length, stats);\n        }\n        function endQuery() {\n            extensions.ext_disjoint_timer_query.endQueryEXT(GL_TIME_ELAPSED_EXT);\n        }\n        //\n        // Pending stats pool.\n        //\n        function PendingStats() {\n            this.startQueryIndex = -1;\n            this.endQueryIndex = -1;\n            this.sum = 0;\n            this.stats = null;\n        }\n        var pendingStatsPool = [];\n        function allocPendingStats() {\n            return pendingStatsPool.pop() || new PendingStats();\n        }\n        function freePendingStats(pendingStats) {\n            pendingStatsPool.push(pendingStats);\n        }\n        // Pending stats pool end\n        var pendingStats = [];\n        function pushScopeStats(start, end, stats) {\n            var ps = allocPendingStats();\n            ps.startQueryIndex = start;\n            ps.endQueryIndex = end;\n            ps.sum = 0;\n            ps.stats = stats;\n            pendingStats.push(ps);\n        }\n        // we should call this at the beginning of the frame,\n        // in order to update gpuTime\n        var timeSum = [];\n        var queryPtr = [];\n        function update() {\n            var ptr, i;\n            var n = pendingQueries.length;\n            if (n === 0) return;\n            // Reserve space\n            queryPtr.length = Math.max(queryPtr.length, n + 1);\n            timeSum.length = Math.max(timeSum.length, n + 1);\n            timeSum[0] = 0;\n            queryPtr[0] = 0;\n            // Update all pending timer queries\n            var queryTime = 0;\n            ptr = 0;\n            for(i = 0; i < pendingQueries.length; ++i){\n                var query = pendingQueries[i];\n                if (extensions.ext_disjoint_timer_query.getQueryObjectEXT(query, GL_QUERY_RESULT_AVAILABLE_EXT)) {\n                    queryTime += extensions.ext_disjoint_timer_query.getQueryObjectEXT(query, GL_QUERY_RESULT_EXT);\n                    freeQuery(query);\n                } else pendingQueries[ptr++] = query;\n                timeSum[i + 1] = queryTime;\n                queryPtr[i + 1] = ptr;\n            }\n            pendingQueries.length = ptr;\n            // Update all pending stat queries\n            ptr = 0;\n            for(i = 0; i < pendingStats.length; ++i){\n                var stats = pendingStats[i];\n                var start = stats.startQueryIndex;\n                var end = stats.endQueryIndex;\n                stats.sum += timeSum[end] - timeSum[start];\n                var startPtr = queryPtr[start];\n                var endPtr = queryPtr[end];\n                if (endPtr === startPtr) {\n                    stats.stats.gpuTime += stats.sum / 1e6;\n                    freePendingStats(stats);\n                } else {\n                    stats.startQueryIndex = startPtr;\n                    stats.endQueryIndex = endPtr;\n                    pendingStats[ptr++] = stats;\n                }\n            }\n            pendingStats.length = ptr;\n        }\n        return {\n            beginQuery: beginQuery,\n            endQuery: endQuery,\n            pushScopeStats: pushScopeStats,\n            update: update,\n            getNumPendingQueries: function() {\n                return pendingQueries.length;\n            },\n            clear: function() {\n                queryPool.push.apply(queryPool, pendingQueries);\n                for(var i = 0; i < queryPool.length; i++)extensions.ext_disjoint_timer_query.deleteQueryEXT(queryPool[i]);\n                pendingQueries.length = 0;\n                queryPool.length = 0;\n            },\n            restore: function() {\n                pendingQueries.length = 0;\n                queryPool.length = 0;\n            }\n        };\n    };\n    var GL_COLOR_BUFFER_BIT = 16384;\n    var GL_DEPTH_BUFFER_BIT = 256;\n    var GL_STENCIL_BUFFER_BIT = 1024;\n    var GL_ARRAY_BUFFER = 34962;\n    var CONTEXT_LOST_EVENT = \"webglcontextlost\";\n    var CONTEXT_RESTORED_EVENT = \"webglcontextrestored\";\n    var DYN_PROP = 1;\n    var DYN_CONTEXT = 2;\n    var DYN_STATE = 3;\n    function find(haystack, needle) {\n        for(var i = 0; i < haystack.length; ++i){\n            if (haystack[i] === needle) return i;\n        }\n        return -1;\n    }\n    function wrapREGL(args) {\n        var config = parseArgs(args);\n        if (!config) return null;\n        var gl = config.gl;\n        var glAttributes = gl.getContextAttributes();\n        var contextLost = gl.isContextLost();\n        var extensionState = createExtensionCache(gl, config);\n        if (!extensionState) return null;\n        var stringStore = createStringStore();\n        var stats$$1 = stats();\n        var extensions = extensionState.extensions;\n        var timer = createTimer(gl, extensions);\n        var START_TIME = clock();\n        var WIDTH = gl.drawingBufferWidth;\n        var HEIGHT = gl.drawingBufferHeight;\n        var contextState = {\n            tick: 0,\n            time: 0,\n            viewportWidth: WIDTH,\n            viewportHeight: HEIGHT,\n            framebufferWidth: WIDTH,\n            framebufferHeight: HEIGHT,\n            drawingBufferWidth: WIDTH,\n            drawingBufferHeight: HEIGHT,\n            pixelRatio: config.pixelRatio\n        };\n        var uniformState = {};\n        var drawState = {\n            elements: null,\n            primitive: 4,\n            count: -1,\n            offset: 0,\n            instances: -1\n        };\n        var limits = wrapLimits(gl, extensions);\n        var bufferState = wrapBufferState(gl, stats$$1, config, destroyBuffer);\n        var elementState = wrapElementsState(gl, extensions, bufferState, stats$$1);\n        var attributeState = wrapAttributeState(gl, extensions, limits, stats$$1, bufferState, elementState, drawState);\n        function destroyBuffer(buffer) {\n            return attributeState.destroyBuffer(buffer);\n        }\n        var shaderState = wrapShaderState(gl, stringStore, stats$$1, config);\n        var textureState = createTextureSet(gl, extensions, limits, function() {\n            core.procs.poll();\n        }, contextState, stats$$1, config);\n        var renderbufferState = wrapRenderbuffers(gl, extensions, limits, stats$$1, config);\n        var framebufferState = wrapFBOState(gl, extensions, limits, textureState, renderbufferState, stats$$1);\n        var core = reglCore(gl, stringStore, extensions, limits, bufferState, elementState, textureState, framebufferState, uniformState, attributeState, shaderState, drawState, contextState, timer, config);\n        var readPixels = wrapReadPixels(gl, framebufferState, core.procs.poll, contextState, glAttributes, extensions, limits);\n        var nextState = core.next;\n        var canvas = gl.canvas;\n        var rafCallbacks = [];\n        var lossCallbacks = [];\n        var restoreCallbacks = [];\n        var destroyCallbacks = [\n            config.onDestroy\n        ];\n        var activeRAF = null;\n        function handleRAF() {\n            if (rafCallbacks.length === 0) {\n                if (timer) timer.update();\n                activeRAF = null;\n                return;\n            }\n            // schedule next animation frame\n            activeRAF = raf.next(handleRAF);\n            // poll for changes\n            poll();\n            // fire a callback for all pending rafs\n            for(var i = rafCallbacks.length - 1; i >= 0; --i){\n                var cb = rafCallbacks[i];\n                if (cb) cb(contextState, null, 0);\n            }\n            // flush all pending webgl calls\n            gl.flush();\n            // poll GPU timers *after* gl.flush so we don't delay command dispatch\n            if (timer) timer.update();\n        }\n        function startRAF() {\n            if (!activeRAF && rafCallbacks.length > 0) activeRAF = raf.next(handleRAF);\n        }\n        function stopRAF() {\n            if (activeRAF) {\n                raf.cancel(handleRAF);\n                activeRAF = null;\n            }\n        }\n        function handleContextLoss(event) {\n            event.preventDefault();\n            // set context lost flag\n            contextLost = true;\n            // pause request animation frame\n            stopRAF();\n            // lose context\n            lossCallbacks.forEach(function(cb) {\n                cb();\n            });\n        }\n        function handleContextRestored(event) {\n            // clear error code\n            gl.getError();\n            // clear context lost flag\n            contextLost = false;\n            // refresh state\n            extensionState.restore();\n            shaderState.restore();\n            bufferState.restore();\n            textureState.restore();\n            renderbufferState.restore();\n            framebufferState.restore();\n            attributeState.restore();\n            if (timer) timer.restore();\n            // refresh state\n            core.procs.refresh();\n            // restart RAF\n            startRAF();\n            // restore context\n            restoreCallbacks.forEach(function(cb) {\n                cb();\n            });\n        }\n        if (canvas) {\n            canvas.addEventListener(CONTEXT_LOST_EVENT, handleContextLoss, false);\n            canvas.addEventListener(CONTEXT_RESTORED_EVENT, handleContextRestored, false);\n        }\n        function destroy() {\n            rafCallbacks.length = 0;\n            stopRAF();\n            if (canvas) {\n                canvas.removeEventListener(CONTEXT_LOST_EVENT, handleContextLoss);\n                canvas.removeEventListener(CONTEXT_RESTORED_EVENT, handleContextRestored);\n            }\n            shaderState.clear();\n            framebufferState.clear();\n            renderbufferState.clear();\n            attributeState.clear();\n            textureState.clear();\n            elementState.clear();\n            bufferState.clear();\n            if (timer) timer.clear();\n            destroyCallbacks.forEach(function(cb) {\n                cb();\n            });\n        }\n        function compileProcedure(options) {\n            check$1(!!options, \"invalid args to regl({...})\");\n            check$1.type(options, \"object\", \"invalid args to regl({...})\");\n            function flattenNestedOptions(options) {\n                var result = extend({}, options);\n                delete result.uniforms;\n                delete result.attributes;\n                delete result.context;\n                delete result.vao;\n                if (\"stencil\" in result && result.stencil.op) {\n                    result.stencil.opBack = result.stencil.opFront = result.stencil.op;\n                    delete result.stencil.op;\n                }\n                function merge(name) {\n                    if (name in result) {\n                        var child = result[name];\n                        delete result[name];\n                        Object.keys(child).forEach(function(prop) {\n                            result[name + \".\" + prop] = child[prop];\n                        });\n                    }\n                }\n                merge(\"blend\");\n                merge(\"depth\");\n                merge(\"cull\");\n                merge(\"stencil\");\n                merge(\"polygonOffset\");\n                merge(\"scissor\");\n                merge(\"sample\");\n                if (\"vao\" in options) result.vao = options.vao;\n                return result;\n            }\n            function separateDynamic(object, useArrays) {\n                var staticItems = {};\n                var dynamicItems = {};\n                Object.keys(object).forEach(function(option) {\n                    var value = object[option];\n                    if (dynamic.isDynamic(value)) {\n                        dynamicItems[option] = dynamic.unbox(value, option);\n                        return;\n                    } else if (useArrays && Array.isArray(value)) {\n                        for(var i = 0; i < value.length; ++i)if (dynamic.isDynamic(value[i])) {\n                            dynamicItems[option] = dynamic.unbox(value, option);\n                            return;\n                        }\n                    }\n                    staticItems[option] = value;\n                });\n                return {\n                    dynamic: dynamicItems,\n                    static: staticItems\n                };\n            }\n            // Treat context variables separate from other dynamic variables\n            var context = separateDynamic(options.context || {}, true);\n            var uniforms = separateDynamic(options.uniforms || {}, true);\n            var attributes = separateDynamic(options.attributes || {}, false);\n            var opts = separateDynamic(flattenNestedOptions(options), false);\n            var stats$$1 = {\n                gpuTime: 0.0,\n                cpuTime: 0.0,\n                count: 0\n            };\n            var compiled = core.compile(opts, attributes, uniforms, context, stats$$1);\n            var draw = compiled.draw;\n            var batch = compiled.batch;\n            var scope = compiled.scope;\n            // FIXME: we should modify code generation for batch commands so this\n            // isn't necessary\n            var EMPTY_ARRAY = [];\n            function reserve(count) {\n                while(EMPTY_ARRAY.length < count)EMPTY_ARRAY.push(null);\n                return EMPTY_ARRAY;\n            }\n            function REGLCommand(args, body) {\n                var i;\n                if (contextLost) check$1.raise(\"context lost\");\n                if (typeof args === \"function\") return scope.call(this, null, args, 0);\n                else if (typeof body === \"function\") {\n                    if (typeof args === \"number\") for(i = 0; i < args; ++i)scope.call(this, null, body, i);\n                    else if (Array.isArray(args)) for(i = 0; i < args.length; ++i)scope.call(this, args[i], body, i);\n                    else return scope.call(this, args, body, 0);\n                } else if (typeof args === \"number\") {\n                    if (args > 0) return batch.call(this, reserve(args | 0), args | 0);\n                } else if (Array.isArray(args)) {\n                    if (args.length) return batch.call(this, args, args.length);\n                } else return draw.call(this, args);\n            }\n            return extend(REGLCommand, {\n                stats: stats$$1,\n                destroy: function() {\n                    compiled.destroy();\n                }\n            });\n        }\n        var setFBO = framebufferState.setFBO = compileProcedure({\n            framebuffer: dynamic.define.call(null, DYN_PROP, \"framebuffer\")\n        });\n        function clearImpl(_, options) {\n            var clearFlags = 0;\n            core.procs.poll();\n            var c = options.color;\n            if (c) {\n                gl.clearColor(+c[0] || 0, +c[1] || 0, +c[2] || 0, +c[3] || 0);\n                clearFlags |= GL_COLOR_BUFFER_BIT;\n            }\n            if (\"depth\" in options) {\n                gl.clearDepth(+options.depth);\n                clearFlags |= GL_DEPTH_BUFFER_BIT;\n            }\n            if (\"stencil\" in options) {\n                gl.clearStencil(options.stencil | 0);\n                clearFlags |= GL_STENCIL_BUFFER_BIT;\n            }\n            check$1(!!clearFlags, \"called regl.clear with no buffer specified\");\n            gl.clear(clearFlags);\n        }\n        function clear(options) {\n            check$1(typeof options === \"object\" && options, \"regl.clear() takes an object as input\");\n            if (\"framebuffer\" in options) {\n                if (options.framebuffer && options.framebuffer_reglType === \"framebufferCube\") for(var i = 0; i < 6; ++i)setFBO(extend({\n                    framebuffer: options.framebuffer.faces[i]\n                }, options), clearImpl);\n                else setFBO(options, clearImpl);\n            } else clearImpl(null, options);\n        }\n        function frame(cb) {\n            check$1.type(cb, \"function\", \"regl.frame() callback must be a function\");\n            rafCallbacks.push(cb);\n            function cancel() {\n                // FIXME:  should we check something other than equals cb here?\n                // what if a user calls frame twice with the same callback...\n                //\n                var i = find(rafCallbacks, cb);\n                check$1(i >= 0, \"cannot cancel a frame twice\");\n                function pendingCancel() {\n                    var index = find(rafCallbacks, pendingCancel);\n                    rafCallbacks[index] = rafCallbacks[rafCallbacks.length - 1];\n                    rafCallbacks.length -= 1;\n                    if (rafCallbacks.length <= 0) stopRAF();\n                }\n                rafCallbacks[i] = pendingCancel;\n            }\n            startRAF();\n            return {\n                cancel: cancel\n            };\n        }\n        // poll viewport\n        function pollViewport() {\n            var viewport = nextState.viewport;\n            var scissorBox = nextState.scissor_box;\n            viewport[0] = viewport[1] = scissorBox[0] = scissorBox[1] = 0;\n            contextState.viewportWidth = contextState.framebufferWidth = contextState.drawingBufferWidth = viewport[2] = scissorBox[2] = gl.drawingBufferWidth;\n            contextState.viewportHeight = contextState.framebufferHeight = contextState.drawingBufferHeight = viewport[3] = scissorBox[3] = gl.drawingBufferHeight;\n        }\n        function poll() {\n            contextState.tick += 1;\n            contextState.time = now();\n            pollViewport();\n            core.procs.poll();\n        }\n        function refresh() {\n            textureState.refresh();\n            pollViewport();\n            core.procs.refresh();\n            if (timer) timer.update();\n        }\n        function now() {\n            return (clock() - START_TIME) / 1000.0;\n        }\n        refresh();\n        function addListener(event, callback) {\n            check$1.type(callback, \"function\", \"listener callback must be a function\");\n            var callbacks;\n            switch(event){\n                case \"frame\":\n                    return frame(callback);\n                case \"lost\":\n                    callbacks = lossCallbacks;\n                    break;\n                case \"restore\":\n                    callbacks = restoreCallbacks;\n                    break;\n                case \"destroy\":\n                    callbacks = destroyCallbacks;\n                    break;\n                default:\n                    check$1.raise(\"invalid event, must be one of frame,lost,restore,destroy\");\n            }\n            callbacks.push(callback);\n            return {\n                cancel: function() {\n                    for(var i = 0; i < callbacks.length; ++i)if (callbacks[i] === callback) {\n                        callbacks[i] = callbacks[callbacks.length - 1];\n                        callbacks.pop();\n                        return;\n                    }\n                }\n            };\n        }\n        var regl = extend(compileProcedure, {\n            // Clear current FBO\n            clear: clear,\n            // Short cuts for dynamic variables\n            prop: dynamic.define.bind(null, DYN_PROP),\n            context: dynamic.define.bind(null, DYN_CONTEXT),\n            this: dynamic.define.bind(null, DYN_STATE),\n            // executes an empty draw command\n            draw: compileProcedure({}),\n            // Resources\n            buffer: function(options) {\n                return bufferState.create(options, GL_ARRAY_BUFFER, false, false);\n            },\n            elements: function(options) {\n                return elementState.create(options, false);\n            },\n            texture: textureState.create2D,\n            cube: textureState.createCube,\n            renderbuffer: renderbufferState.create,\n            framebuffer: framebufferState.create,\n            framebufferCube: framebufferState.createCube,\n            vao: attributeState.createVAO,\n            // Expose context attributes\n            attributes: glAttributes,\n            // Frame rendering\n            frame: frame,\n            on: addListener,\n            // System limits\n            limits: limits,\n            hasExtension: function(name) {\n                return limits.extensions.indexOf(name.toLowerCase()) >= 0;\n            },\n            // Read pixels\n            read: readPixels,\n            // Destroy regl and all associated resources\n            destroy: destroy,\n            // Direct GL state manipulation\n            _gl: gl,\n            _refresh: refresh,\n            poll: function() {\n                poll();\n                if (timer) timer.update();\n            },\n            // Current time\n            now: now,\n            // regl Statistics Information\n            stats: stats$$1\n        });\n        config.onDone(null, regl);\n        return regl;\n    }\n    return wrapREGL;\n});\n\n\n\n\nvar $74e6377530482d2d$exports = {};\n\n$parcel$export($74e6377530482d2d$exports, \"create\", () => $74e6377530482d2d$export$185802fd694ee1f5);\n$parcel$export($74e6377530482d2d$exports, \"fromMat4\", () => $74e6377530482d2d$export$b4ad467060d346fe);\n$parcel$export($74e6377530482d2d$exports, \"clone\", () => $74e6377530482d2d$export$9cd59f9826255e47);\n$parcel$export($74e6377530482d2d$exports, \"copy\", () => $74e6377530482d2d$export$784d13d8ee351f07);\n$parcel$export($74e6377530482d2d$exports, \"fromValues\", () => $74e6377530482d2d$export$a82be99ed2a44a7d);\n$parcel$export($74e6377530482d2d$exports, \"set\", () => $74e6377530482d2d$export$adaa4cf7ef1b65be);\n$parcel$export($74e6377530482d2d$exports, \"identity\", () => $74e6377530482d2d$export$f0954fd7d5368655);\n$parcel$export($74e6377530482d2d$exports, \"transpose\", () => $74e6377530482d2d$export$9cb09a71b7d66923);\n$parcel$export($74e6377530482d2d$exports, \"invert\", () => $74e6377530482d2d$export$6897c284b6f9f4dc);\n$parcel$export($74e6377530482d2d$exports, \"adjoint\", () => $74e6377530482d2d$export$33f3c024b4ae00a1);\n$parcel$export($74e6377530482d2d$exports, \"determinant\", () => $74e6377530482d2d$export$a04698f914c55ed9);\n$parcel$export($74e6377530482d2d$exports, \"multiply\", () => $74e6377530482d2d$export$2060d2db72cce88f);\n$parcel$export($74e6377530482d2d$exports, \"translate\", () => $74e6377530482d2d$export$d73ee8ef04f5226a);\n$parcel$export($74e6377530482d2d$exports, \"rotate\", () => $74e6377530482d2d$export$bb628a54ab399bc9);\n$parcel$export($74e6377530482d2d$exports, \"scale\", () => $74e6377530482d2d$export$dcdf75081b88279d);\n$parcel$export($74e6377530482d2d$exports, \"fromTranslation\", () => $74e6377530482d2d$export$bc9e79e74e9fddf6);\n$parcel$export($74e6377530482d2d$exports, \"fromRotation\", () => $74e6377530482d2d$export$926fc125ff3c666c);\n$parcel$export($74e6377530482d2d$exports, \"fromScaling\", () => $74e6377530482d2d$export$832ca188ffb1955d);\n$parcel$export($74e6377530482d2d$exports, \"fromMat2d\", () => $74e6377530482d2d$export$68f5977575fae9bf);\n$parcel$export($74e6377530482d2d$exports, \"fromQuat\", () => $74e6377530482d2d$export$2ff2bbe382249af7);\n$parcel$export($74e6377530482d2d$exports, \"normalFromMat4\", () => $74e6377530482d2d$export$966b25ab6dc1b1f9);\n$parcel$export($74e6377530482d2d$exports, \"projection\", () => $74e6377530482d2d$export$b74061472fe7c07);\n$parcel$export($74e6377530482d2d$exports, \"str\", () => $74e6377530482d2d$export$42d51816ce590c93);\n$parcel$export($74e6377530482d2d$exports, \"frob\", () => $74e6377530482d2d$export$326827e8268e9cdb);\n$parcel$export($74e6377530482d2d$exports, \"add\", () => $74e6377530482d2d$export$e16d8520af44a096);\n$parcel$export($74e6377530482d2d$exports, \"subtract\", () => $74e6377530482d2d$export$4e2d2ead65e5f7e3);\n$parcel$export($74e6377530482d2d$exports, \"multiplyScalar\", () => $74e6377530482d2d$export$c697bed75648cdb7);\n$parcel$export($74e6377530482d2d$exports, \"multiplyScalarAndAdd\", () => $74e6377530482d2d$export$553579f63bdd7137);\n$parcel$export($74e6377530482d2d$exports, \"exactEquals\", () => $74e6377530482d2d$export$f2599a5cf1109d8);\n$parcel$export($74e6377530482d2d$exports, \"equals\", () => $74e6377530482d2d$export$e9bab7fafb253603);\n$parcel$export($74e6377530482d2d$exports, \"mul\", () => $74e6377530482d2d$export$6e3a27864ab166fe);\n$parcel$export($74e6377530482d2d$exports, \"sub\", () => $74e6377530482d2d$export$f93b5905241a7cca);\n/**\n * Common utilities\n * @module glMatrix\n */ // Configuration Constants\nvar $025278b023032180$export$fd293b15f47e270 = 0.000001;\nvar $025278b023032180$export$b67359430d3b1b2 = typeof Float32Array !== \"undefined\" ? Float32Array : Array;\nvar $025278b023032180$export$5ada478c8a628231 = Math.random;\nfunction $025278b023032180$export$cb2c0eb57f5e532c(type) {\n    $025278b023032180$export$b67359430d3b1b2 = type;\n}\nvar $025278b023032180$var$degree = Math.PI / 180;\nfunction $025278b023032180$export$408b8ee5959eefd5(a) {\n    return a * $025278b023032180$var$degree;\n}\nfunction $025278b023032180$export$e9bab7fafb253603(a, b) {\n    return Math.abs(a - b) <= $025278b023032180$export$fd293b15f47e270 * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function() {\n    var y = 0, i = arguments.length;\n    while(i--)y += arguments[i] * arguments[i];\n    return Math.sqrt(y);\n};\n\n\nfunction $74e6377530482d2d$export$185802fd694ee1f5() {\n    var out = new $025278b023032180$export$b67359430d3b1b2(9);\n    if ($025278b023032180$export$b67359430d3b1b2 != Float32Array) {\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[5] = 0;\n        out[6] = 0;\n        out[7] = 0;\n    }\n    out[0] = 1;\n    out[4] = 1;\n    out[8] = 1;\n    return out;\n}\nfunction $74e6377530482d2d$export$b4ad467060d346fe(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n}\nfunction $74e6377530482d2d$export$9cd59f9826255e47(a) {\n    var out = new $025278b023032180$export$b67359430d3b1b2(9);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\nfunction $74e6377530482d2d$export$784d13d8ee351f07(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\nfunction $74e6377530482d2d$export$a82be99ed2a44a7d(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    var out = new $025278b023032180$export$b67359430d3b1b2(9);\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n}\nfunction $74e6377530482d2d$export$adaa4cf7ef1b65be(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n}\nfunction $74e6377530482d2d$export$f0954fd7d5368655(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\nfunction $74e6377530482d2d$export$9cb09a71b7d66923(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n    return out;\n}\nfunction $74e6377530482d2d$export$6897c284b6f9f4dc(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2];\n    var a10 = a[3], a11 = a[4], a12 = a[5];\n    var a20 = a[6], a21 = a[7], a22 = a[8];\n    var b01 = a22 * a11 - a12 * a21;\n    var b11 = -a22 * a10 + a12 * a20;\n    var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n    var det = a00 * b01 + a01 * b11 + a02 * b21;\n    if (!det) return null;\n    det = 1.0 / det;\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n}\nfunction $74e6377530482d2d$export$33f3c024b4ae00a1(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2];\n    var a10 = a[3], a11 = a[4], a12 = a[5];\n    var a20 = a[6], a21 = a[7], a22 = a[8];\n    out[0] = a11 * a22 - a12 * a21;\n    out[1] = a02 * a21 - a01 * a22;\n    out[2] = a01 * a12 - a02 * a11;\n    out[3] = a12 * a20 - a10 * a22;\n    out[4] = a00 * a22 - a02 * a20;\n    out[5] = a02 * a10 - a00 * a12;\n    out[6] = a10 * a21 - a11 * a20;\n    out[7] = a01 * a20 - a00 * a21;\n    out[8] = a00 * a11 - a01 * a10;\n    return out;\n}\nfunction $74e6377530482d2d$export$a04698f914c55ed9(a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2];\n    var a10 = a[3], a11 = a[4], a12 = a[5];\n    var a20 = a[6], a21 = a[7], a22 = a[8];\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\nfunction $74e6377530482d2d$export$2060d2db72cce88f(out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2];\n    var a10 = a[3], a11 = a[4], a12 = a[5];\n    var a20 = a[6], a21 = a[7], a22 = a[8];\n    var b00 = b[0], b01 = b[1], b02 = b[2];\n    var b10 = b[3], b11 = b[4], b12 = b[5];\n    var b20 = b[6], b21 = b[7], b22 = b[8];\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n}\nfunction $74e6377530482d2d$export$d73ee8ef04f5226a(out, a, v) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a10 = a[3], a11 = a[4], a12 = a[5], a20 = a[6], a21 = a[7], a22 = a[8], x = v[0], y = v[1];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n}\nfunction $74e6377530482d2d$export$bb628a54ab399bc9(out, a, rad) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a10 = a[3], a11 = a[4], a12 = a[5], a20 = a[6], a21 = a[7], a22 = a[8], s = Math.sin(rad), c = Math.cos(rad);\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n}\nfunction $74e6377530482d2d$export$dcdf75081b88279d(out, a, v) {\n    var x = v[0], y = v[1];\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\nfunction $74e6377530482d2d$export$bc9e79e74e9fddf6(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = v[0];\n    out[7] = v[1];\n    out[8] = 1;\n    return out;\n}\nfunction $74e6377530482d2d$export$926fc125ff3c666c(out, rad) {\n    var s = Math.sin(rad), c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = 0;\n    out[3] = -s;\n    out[4] = c;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\nfunction $74e6377530482d2d$export$832ca188ffb1955d(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = v[1];\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\nfunction $74e6377530482d2d$export$68f5977575fae9bf(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = 0;\n    out[3] = a[2];\n    out[4] = a[3];\n    out[5] = 0;\n    out[6] = a[4];\n    out[7] = a[5];\n    out[8] = 1;\n    return out;\n}\nfunction $74e6377530482d2d$export$2ff2bbe382249af7(out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3];\n    var x2 = x + x;\n    var y2 = y + y;\n    var z2 = z + z;\n    var xx = x * x2;\n    var yx = y * x2;\n    var yy = y * y2;\n    var zx = z * x2;\n    var zy = z * y2;\n    var zz = z * z2;\n    var wx = w * x2;\n    var wy = w * y2;\n    var wz = w * z2;\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n    return out;\n}\nfunction $74e6377530482d2d$export$966b25ab6dc1b1f9(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n    var a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n    var a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n    var a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n    var b00 = a00 * a11 - a01 * a10;\n    var b01 = a00 * a12 - a02 * a10;\n    var b02 = a00 * a13 - a03 * a10;\n    var b03 = a01 * a12 - a02 * a11;\n    var b04 = a01 * a13 - a03 * a11;\n    var b05 = a02 * a13 - a03 * a12;\n    var b06 = a20 * a31 - a21 * a30;\n    var b07 = a20 * a32 - a22 * a30;\n    var b08 = a20 * a33 - a23 * a30;\n    var b09 = a21 * a32 - a22 * a31;\n    var b10 = a21 * a33 - a23 * a31;\n    var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n    var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n    if (!det) return null;\n    det = 1.0 / det;\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    return out;\n}\nfunction $74e6377530482d2d$export$b74061472fe7c07(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\nfunction $74e6377530482d2d$export$42d51816ce590c93(a) {\n    return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\nfunction $74e6377530482d2d$export$326827e8268e9cdb(a) {\n    return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\nfunction $74e6377530482d2d$export$e16d8520af44a096(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n}\nfunction $74e6377530482d2d$export$4e2d2ead65e5f7e3(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n}\nfunction $74e6377530482d2d$export$c697bed75648cdb7(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n}\nfunction $74e6377530482d2d$export$553579f63bdd7137(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    out[4] = a[4] + b[4] * scale;\n    out[5] = a[5] + b[5] * scale;\n    out[6] = a[6] + b[6] * scale;\n    out[7] = a[7] + b[7] * scale;\n    out[8] = a[8] + b[8] * scale;\n    return out;\n}\nfunction $74e6377530482d2d$export$f2599a5cf1109d8(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\nfunction $74e6377530482d2d$export$e9bab7fafb253603(a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8];\n    return Math.abs(a0 - b0) <= $025278b023032180$export$fd293b15f47e270 * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= $025278b023032180$export$fd293b15f47e270 * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= $025278b023032180$export$fd293b15f47e270 * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= $025278b023032180$export$fd293b15f47e270 * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= $025278b023032180$export$fd293b15f47e270 * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= $025278b023032180$export$fd293b15f47e270 * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= $025278b023032180$export$fd293b15f47e270 * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= $025278b023032180$export$fd293b15f47e270 * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= $025278b023032180$export$fd293b15f47e270 * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\nvar $74e6377530482d2d$export$6e3a27864ab166fe = $74e6377530482d2d$export$2060d2db72cce88f;\nvar $74e6377530482d2d$export$f93b5905241a7cca = $74e6377530482d2d$export$4e2d2ead65e5f7e3;\n\n\nvar $b451ab935132b01f$exports = {};\n// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\n\nvar $1NWL6 = parcelRequire(\"1NWL6\");\n\nvar $8FlDu = parcelRequire(\"8FlDu\");\n\nvar $1rFi6 = parcelRequire(\"1rFi6\");\n\nvar $iDdZD = parcelRequire(\"iDdZD\");\n\nvar $bDA0X = parcelRequire(\"bDA0X\");\n\nvar $oBon1 = parcelRequire(\"oBon1\");\nvar $f6958004dd10691b$exports = {};\n\n/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/ (function(global, pool, math) {\n    //\n    // The following constants are related to IEEE 754 limits.\n    //\n    var width = 256, chunks = 6, digits = 52, rngname = \"random\", startdenom = math.pow(width, chunks), significance = math.pow(2, digits), overflow = significance * 2, mask = width - 1, nodecrypto; // node.js crypto module, initialized at the bottom.\n    //\n    // seedrandom()\n    // This is the seedrandom function described above.\n    //\n    function seedrandom(seed, options, callback) {\n        var key = [];\n        options = options == true ? {\n            entropy: true\n        } : options || {};\n        // Flatten the seed string or build one from local entropy if needed.\n        var shortseed = mixkey(flatten(options.entropy ? [\n            seed,\n            tostring(pool)\n        ] : seed == null ? autoseed() : seed, 3), key);\n        // Use the seed to initialize an ARC4 generator.\n        var arc4 = new ARC4(key);\n        // This function returns a random double in [0, 1) that contains\n        // randomness in every bit of the mantissa of the IEEE 754 value.\n        var prng = function() {\n            var n = arc4.g(chunks), d = startdenom, x = 0; //   and no 'extra last byte'.\n            while(n < significance){\n                n = (n + x) * width; //   shifting numerator and\n                d *= width; //   denominator and generating a\n                x = arc4.g(1); //   new least-significant-byte.\n            }\n            while(n >= overflow){\n                n /= 2; //   last byte, shift everything\n                d /= 2; //   right using integer math until\n                x >>>= 1; //   we have exactly the desired bits.\n            }\n            return (n + x) / d; // Form the number within [0, 1).\n        };\n        prng.int32 = function() {\n            return arc4.g(4) | 0;\n        };\n        prng.quick = function() {\n            return arc4.g(4) / 0x100000000;\n        };\n        prng.double = prng;\n        // Mix the randomness into accumulated entropy.\n        mixkey(tostring(arc4.S), pool);\n        // Calling convention: what to return as a function of prng, seed, is_math.\n        return (options.pass || callback || function(prng, seed, is_math_call, state) {\n            if (state) {\n                // Load the arc4 state from the given state if it has an S array.\n                if (state.S) copy(state, arc4);\n                // Only provide the .state method if requested via options.state.\n                prng.state = function() {\n                    return copy(arc4, {});\n                };\n            }\n            // If called as a method of Math (Math.seedrandom()), mutate\n            // Math.random because that is how seedrandom.js has worked since v1.0.\n            if (is_math_call) {\n                math[rngname] = prng;\n                return seed;\n            } else return prng;\n        })(prng, shortseed, \"global\" in options ? options.global : this == math, options.state);\n    }\n    //\n    // ARC4\n    //\n    // An ARC4 implementation.  The constructor takes a key in the form of\n    // an array of at most (width) integers that should be 0 <= x < (width).\n    //\n    // The g(count) method returns a pseudorandom integer that concatenates\n    // the next (count) outputs from ARC4.  Its return value is a number x\n    // that is in the range 0 <= x < (width ^ count).\n    //\n    function ARC4(key) {\n        var t, keylen = key.length, me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n        // The empty key [] is treated as [0].\n        if (!keylen) key = [\n            keylen++\n        ];\n        // Set up S using the standard key scheduling algorithm.\n        while(i < width)s[i] = i++;\n        for(i = 0; i < width; i++){\n            s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];\n            s[j] = t;\n        }\n        // The \"g\" method returns the next (count) outputs as one number.\n        (me.g = function(count) {\n            // Using instance members instead of closure state nearly doubles speed.\n            var t, r = 0, i = me.i, j = me.j, s = me.S;\n            while(count--){\n                t = s[i = mask & i + 1];\n                r = r * width + s[mask & (s[i] = s[j = mask & j + t]) + (s[j] = t)];\n            }\n            me.i = i;\n            me.j = j;\n            return r;\n        // For robust unpredictability, the function call below automatically\n        // discards an initial batch of values.  This is called RC4-drop[256].\n        // See http://google.com/search?q=rsa+fluhrer+response&btnI\n        })(width);\n    }\n    //\n    // copy()\n    // Copies internal state of ARC4 to or from a plain object.\n    //\n    function copy(f, t) {\n        t.i = f.i;\n        t.j = f.j;\n        t.S = f.S.slice();\n        return t;\n    }\n    //\n    // flatten()\n    // Converts an object tree to nested arrays of strings.\n    //\n    function flatten(obj, depth) {\n        var result = [], typ = typeof obj, prop;\n        if (depth && typ == \"object\") {\n            for(prop in obj)try {\n                result.push(flatten(obj[prop], depth - 1));\n            } catch (e) {}\n        }\n        return result.length ? result : typ == \"string\" ? obj : obj + \"\\x00\";\n    }\n    //\n    // mixkey()\n    // Mixes a string seed into a key that is an array of integers, and\n    // returns a shortened string seed that is equivalent to the result key.\n    //\n    function mixkey(seed, key) {\n        var stringseed = seed + \"\", smear, j = 0;\n        while(j < stringseed.length)key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);\n        return tostring(key);\n    }\n    //\n    // autoseed()\n    // Returns an object for autoseeding, using window.crypto and Node crypto\n    // module if available.\n    //\n    function autoseed() {\n        try {\n            var out;\n            if (nodecrypto && (out = nodecrypto.randomBytes)) // The use of 'out' to remember randomBytes makes tight minified code.\n            out = out(width);\n            else {\n                out = new Uint8Array(width);\n                (global.crypto || global.msCrypto).getRandomValues(out);\n            }\n            return tostring(out);\n        } catch (e) {\n            var browser = global.navigator, plugins = browser && browser.plugins;\n            return [\n                +new Date,\n                global,\n                plugins,\n                global.screen,\n                tostring(pool)\n            ];\n        }\n    }\n    //\n    // tostring()\n    // Converts an array of charcodes to a string\n    //\n    function tostring(a) {\n        return String.fromCharCode.apply(0, a);\n    }\n    //\n    // When seedrandom.js is loaded, we immediately mix a few bits\n    // from the built-in RNG into the entropy pool.  Because we do\n    // not want to interfere with deterministic PRNG state later,\n    // seedrandom will not call math.random on its own again after\n    // initialization.\n    //\n    mixkey(math.random(), pool);\n    //\n    // Nodejs and AMD support: export the implementation as a module using\n    // either convention.\n    //\n    if (0, $f6958004dd10691b$exports) {\n        $f6958004dd10691b$exports = seedrandom;\n        // When in node.js, try using crypto package for autoseeding.\n        try {\n            nodecrypto = (parcelRequire(\"eO58V\"));\n        } catch (ex) {}\n    } else if (typeof define == \"function\" && define.amd) define(function() {\n        return seedrandom;\n    });\n    else // When included as a plain script, set up Math.seedrandom global.\n    math[\"seed\" + rngname] = seedrandom;\n// End anonymous scope, and pass initial values.\n})(// global: `self` in browsers (including strict mode and web workers),\n// otherwise `this` in Node and other environments\ntypeof self !== \"undefined\" ? self : $f6958004dd10691b$exports, [], Math // math: package containing random, pow, and seedrandom\n);\n\n\n$f6958004dd10691b$exports.alea = $1NWL6;\n$f6958004dd10691b$exports.xor128 = $8FlDu;\n$f6958004dd10691b$exports.xorwow = $1rFi6;\n$f6958004dd10691b$exports.xorshift7 = $iDdZD;\n$f6958004dd10691b$exports.xor4096 = $bDA0X;\n$f6958004dd10691b$exports.tychei = $oBon1;\n$b451ab935132b01f$exports = $f6958004dd10691b$exports;\n\n\nfunction $dcc60992372e5fa5$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, $dcc60992372e5fa5$var$_toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction $dcc60992372e5fa5$var$_createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) $dcc60992372e5fa5$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $dcc60992372e5fa5$var$_defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction $dcc60992372e5fa5$var$_inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    $dcc60992372e5fa5$var$_setPrototypeOf(subClass, superClass);\n}\nfunction $dcc60992372e5fa5$var$_setPrototypeOf(o, p) {\n    $dcc60992372e5fa5$var$_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return $dcc60992372e5fa5$var$_setPrototypeOf(o, p);\n}\nfunction $dcc60992372e5fa5$var$_toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (typeof res !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\nfunction $dcc60992372e5fa5$var$_toPropertyKey(arg) {\n    var key = $dcc60992372e5fa5$var$_toPrimitive(arg, \"string\");\n    return typeof key === \"symbol\" ? key : String(key);\n}\nvar $dcc60992372e5fa5$export$7492a095b4ff4e68 = /*#__PURE__*/ function() {\n    function RNG() {}\n    var _proto = RNG.prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _proto._seed = function _seed(seed, _opts) {\n        // TODO: add entropy and stuff\n        if (seed === (seed || 0)) return seed;\n        else {\n            var strSeed = \"\" + seed;\n            var s = 0;\n            for(var k = 0; k < strSeed.length; ++k)s ^= strSeed.charCodeAt(k) | 0;\n            return s;\n        }\n    };\n    return RNG;\n}();\nvar $dcc60992372e5fa5$var$RNGFunction = /*#__PURE__*/ function(_RNG) {\n    $dcc60992372e5fa5$var$_inheritsLoose(RNGFunction, _RNG);\n    function RNGFunction(thunk, opts) {\n        var _this;\n        _this = _RNG.call(this) || this;\n        _this._rng = void 0;\n        _this.seed(thunk, opts);\n        return _this;\n    }\n    var _proto = RNGFunction.prototype;\n    _proto.next = function next() {\n        return this._rng();\n    };\n    _proto.seed = function seed(thunk, _opts) {\n        this._rng = thunk;\n    };\n    _proto.clone = function clone(_, opts) {\n        return new RNGFunction(this._rng, opts);\n    };\n    $dcc60992372e5fa5$var$_createClass(RNGFunction, [\n        {\n            key: \"name\",\n            get: function get() {\n                return \"function\";\n            }\n        }\n    ]);\n    return RNGFunction;\n}($dcc60992372e5fa5$export$7492a095b4ff4e68);\n/**\r\n * Construct an RNG with variable inputs. Used in calls to Random constructor\r\n * @param {...*} args - Distribution-specific arguments\r\n * @return RNG\r\n *\r\n * @example\r\n * new Random(RNGFactory(...args))\r\n */ var $dcc60992372e5fa5$export$e6cb7150fd4ac6e7 = function() {\n    var args = [].slice.call(arguments);\n    var _args = args, _args$ = _args[0], arg0 = _args$ === void 0 ? \"default\" : _args$;\n    switch(typeof arg0){\n        case \"object\":\n            if (arg0 instanceof $dcc60992372e5fa5$export$7492a095b4ff4e68) return arg0;\n            break;\n        case \"function\":\n            return new $dcc60992372e5fa5$var$RNGFunction(arg0);\n        case \"number\":\n        case \"string\":\n        default:\n            return new $dcc60992372e5fa5$var$RNGFunction((0, (/*@__PURE__*/$parcel$interopDefault($b451ab935132b01f$exports))).apply(void 0, args));\n    }\n    throw new Error('invalid RNG \"' + arg0 + '\"');\n};\nvar $dcc60992372e5fa5$var$uniform = function(random, min, max) {\n    if (min === void 0) min = 0;\n    if (max === void 0) max = 1;\n    return function() {\n        return random.next() * (max - min) + min;\n    };\n};\nfunction $dcc60992372e5fa5$var$numberValidator(num) {\n    return new $dcc60992372e5fa5$var$NumberValidator(num);\n}\nvar $dcc60992372e5fa5$var$NumberValidator = function NumberValidator(num) {\n    var _this = this;\n    this.n = void 0;\n    this.isInt = function() {\n        if (Number.isInteger(_this.n)) return _this;\n        throw new Error(\"Expected number to be an integer, got \" + _this.n);\n    };\n    this.isPositive = function() {\n        if (_this.n > 0) return _this;\n        throw new Error(\"Expected number to be positive, got \" + _this.n);\n    };\n    this.lessThan = function(v) {\n        if (_this.n < v) return _this;\n        throw new Error(\"Expected number to be less than \" + v + \", got \" + _this.n);\n    };\n    this.greaterThanOrEqual = function(v) {\n        if (_this.n >= v) return _this;\n        throw new Error(\"Expected number to be greater than or equal to \" + v + \", got \" + _this.n);\n    };\n    this.greaterThan = function(v) {\n        if (_this.n > v) return _this;\n        throw new Error(\"Expected number to be greater than \" + v + \", got \" + _this.n);\n    };\n    this.n = num;\n};\nvar $dcc60992372e5fa5$var$uniformInt = function(random, min, max) {\n    if (min === void 0) min = 0;\n    if (max === void 0) max = 1;\n    if (max === undefined) {\n        max = min === undefined ? 1 : min;\n        min = 0;\n    }\n    $dcc60992372e5fa5$var$numberValidator(min).isInt();\n    $dcc60992372e5fa5$var$numberValidator(max).isInt();\n    return function() {\n        return Math.floor(random.next() * (max - min + 1) + min);\n    };\n};\nvar $dcc60992372e5fa5$var$uniformBoolean = function(random) {\n    return function() {\n        return random.next() >= 0.5;\n    };\n};\nvar $dcc60992372e5fa5$var$normal = function(random, mu, sigma) {\n    if (mu === void 0) mu = 0;\n    if (sigma === void 0) sigma = 1;\n    return function() {\n        var x, y, r;\n        do {\n            x = random.next() * 2 - 1;\n            y = random.next() * 2 - 1;\n            r = x * x + y * y;\n        }while (!r || r > 1);\n        return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n};\nvar $dcc60992372e5fa5$var$logNormal = function(random, mu, sigma) {\n    if (mu === void 0) mu = 0;\n    if (sigma === void 0) sigma = 1;\n    var normal = random.normal(mu, sigma);\n    return function() {\n        return Math.exp(normal());\n    };\n};\nvar $dcc60992372e5fa5$var$bernoulli = function(random, p) {\n    if (p === void 0) p = 0.5;\n    $dcc60992372e5fa5$var$numberValidator(p).greaterThanOrEqual(0).lessThan(1);\n    return function() {\n        return Math.floor(random.next() + p);\n    };\n};\nvar $dcc60992372e5fa5$var$binomial = function(random, n, p) {\n    if (n === void 0) n = 1;\n    if (p === void 0) p = 0.5;\n    $dcc60992372e5fa5$var$numberValidator(n).isInt().isPositive();\n    $dcc60992372e5fa5$var$numberValidator(p).greaterThanOrEqual(0).lessThan(1);\n    return function() {\n        var i = 0;\n        var x = 0;\n        while(i++ < n)if (random.next() < p) x++;\n        return x;\n    };\n};\nvar $dcc60992372e5fa5$var$geometric = function(random, p) {\n    if (p === void 0) p = 0.5;\n    $dcc60992372e5fa5$var$numberValidator(p).greaterThan(0).lessThan(1);\n    var invLogP = 1.0 / Math.log(1.0 - p);\n    return function() {\n        return Math.floor(1 + Math.log(random.next()) * invLogP);\n    };\n};\nvar $dcc60992372e5fa5$var$logFactorialTable = [\n    0.0,\n    0.0,\n    0.69314718055994529,\n    1.791759469228055,\n    3.1780538303479458,\n    4.7874917427820458,\n    6.5792512120101012,\n    8.5251613610654147,\n    10.604602902745251,\n    12.801827480081469\n];\nvar $dcc60992372e5fa5$var$logFactorial = function logFactorial(k) {\n    return $dcc60992372e5fa5$var$logFactorialTable[k];\n};\nvar $dcc60992372e5fa5$var$logSqrt2PI = 0.91893853320467267;\nvar $dcc60992372e5fa5$var$poisson = function(random, lambda) {\n    if (lambda === void 0) lambda = 1;\n    $dcc60992372e5fa5$var$numberValidator(lambda).isPositive();\n    if (lambda < 10) {\n        // inversion method\n        var expMean = Math.exp(-lambda);\n        return function() {\n            var p = expMean;\n            var x = 0;\n            var u = random.next();\n            while(u > p){\n                u = u - p;\n                p = lambda * p / ++x;\n            }\n            return x;\n        };\n    } else {\n        // generative method\n        var smu = Math.sqrt(lambda);\n        var b = 0.931 + 2.53 * smu;\n        var a = -0.059 + 0.02483 * b;\n        var invAlpha = 1.1239 + 1.1328 / (b - 3.4);\n        var vR = 0.9277 - 3.6224 / (b - 2);\n        return function() {\n            while(true){\n                var u = void 0;\n                var v = random.next();\n                if (v <= 0.86 * vR) {\n                    u = v / vR - 0.43;\n                    return Math.floor((2 * a / (0.5 - Math.abs(u)) + b) * u + lambda + 0.445);\n                }\n                if (v >= vR) u = random.next() - 0.5;\n                else {\n                    u = v / vR - 0.93;\n                    u = (u < 0 ? -0.5 : 0.5) - u;\n                    v = random.next() * vR;\n                }\n                var us = 0.5 - Math.abs(u);\n                if (us < 0.013 && v > us) continue;\n                var k = Math.floor((2 * a / us + b) * u + lambda + 0.445);\n                v = v * invAlpha / (a / (us * us) + b);\n                if (k >= 10) {\n                    var t = (k + 0.5) * Math.log(lambda / k) - lambda - $dcc60992372e5fa5$var$logSqrt2PI + k - (1 / 12.0 - (1 / 360.0 - 1 / (1260.0 * k * k)) / (k * k)) / k;\n                    if (Math.log(v * smu) <= t) return k;\n                } else if (k >= 0) {\n                    var _logFactorial;\n                    var f = (_logFactorial = $dcc60992372e5fa5$var$logFactorial(k)) != null ? _logFactorial : 0;\n                    if (Math.log(v) <= k * Math.log(lambda) - lambda - f) return k;\n                }\n            }\n        };\n    }\n};\nvar $dcc60992372e5fa5$var$exponential = function(random, lambda) {\n    if (lambda === void 0) lambda = 1;\n    $dcc60992372e5fa5$var$numberValidator(lambda).isPositive();\n    return function() {\n        return -Math.log(1 - random.next()) / lambda;\n    };\n};\nvar $dcc60992372e5fa5$var$irwinHall = function(random, n) {\n    if (n === void 0) n = 1;\n    $dcc60992372e5fa5$var$numberValidator(n).isInt().greaterThanOrEqual(0);\n    return function() {\n        var sum = 0;\n        for(var i = 0; i < n; ++i)sum += random.next();\n        return sum;\n    };\n};\nvar $dcc60992372e5fa5$var$bates = function(random, n) {\n    if (n === void 0) n = 1;\n    $dcc60992372e5fa5$var$numberValidator(n).isInt().isPositive();\n    var irwinHall = random.irwinHall(n);\n    return function() {\n        return irwinHall() / n;\n    };\n};\nvar $dcc60992372e5fa5$var$pareto = function(random, alpha) {\n    if (alpha === void 0) alpha = 1;\n    $dcc60992372e5fa5$var$numberValidator(alpha).greaterThanOrEqual(0);\n    var invAlpha = 1.0 / alpha;\n    return function() {\n        return 1.0 / Math.pow(1.0 - random.next(), invAlpha);\n    };\n};\nvar $dcc60992372e5fa5$var$RNGMathRandom = /*#__PURE__*/ function(_RNG) {\n    $dcc60992372e5fa5$var$_inheritsLoose(RNGMathRandom, _RNG);\n    function RNGMathRandom() {\n        return _RNG.apply(this, arguments) || this;\n    }\n    var _proto = RNGMathRandom.prototype;\n    _proto.next = function next() {\n        return Math.random();\n    };\n    _proto.seed = function seed(_seed, _opts) {\n    // intentionally empty\n    };\n    _proto.clone = function clone() {\n        return new RNGMathRandom();\n    };\n    $dcc60992372e5fa5$var$_createClass(RNGMathRandom, [\n        {\n            key: \"name\",\n            get: function get() {\n                return \"default\";\n            }\n        }\n    ]);\n    return RNGMathRandom;\n}($dcc60992372e5fa5$export$7492a095b4ff4e68);\n/**\r\n * Seedable random number generator supporting many common distributions.\r\n *\r\n * Defaults to Math.random as its underlying pseudorandom number generator.\r\n *\r\n * @name Random\r\n * @class\r\n *\r\n * @param {RNG|function} [rng=Math.random] - Underlying pseudorandom number generator.\r\n */ var $dcc60992372e5fa5$export$a92776769f460054 = /*#__PURE__*/ function() {\n    function Random(rng) {\n        var _this = this;\n        this._rng = void 0;\n        this._patch = void 0;\n        this._cache = {};\n        this.next = function() {\n            return _this._rng.next();\n        };\n        this[\"float\"] = function(min, max) {\n            return _this.uniform(min, max)();\n        };\n        this[\"int\"] = function(min, max) {\n            return _this.uniformInt(min, max)();\n        };\n        this.integer = function(min, max) {\n            return _this.uniformInt(min, max)();\n        };\n        this.bool = function() {\n            return _this.uniformBoolean()();\n        };\n        this[\"boolean\"] = function() {\n            return _this.uniformBoolean()();\n        };\n        this.uniform = function(min, max) {\n            return _this._memoize(\"uniform\", $dcc60992372e5fa5$var$uniform, min, max);\n        };\n        this.uniformInt = function(min, max) {\n            return _this._memoize(\"uniformInt\", $dcc60992372e5fa5$var$uniformInt, min, max);\n        };\n        this.uniformBoolean = function() {\n            return _this._memoize(\"uniformBoolean\", $dcc60992372e5fa5$var$uniformBoolean);\n        };\n        this.normal = function(mu, sigma) {\n            return $dcc60992372e5fa5$var$normal(_this, mu, sigma);\n        };\n        this.logNormal = function(mu, sigma) {\n            return $dcc60992372e5fa5$var$logNormal(_this, mu, sigma);\n        };\n        this.bernoulli = function(p) {\n            return $dcc60992372e5fa5$var$bernoulli(_this, p);\n        };\n        this.binomial = function(n, p) {\n            return $dcc60992372e5fa5$var$binomial(_this, n, p);\n        };\n        this.geometric = function(p) {\n            return $dcc60992372e5fa5$var$geometric(_this, p);\n        };\n        this.poisson = function(lambda) {\n            return $dcc60992372e5fa5$var$poisson(_this, lambda);\n        };\n        this.exponential = function(lambda) {\n            return $dcc60992372e5fa5$var$exponential(_this, lambda);\n        };\n        this.irwinHall = function(n) {\n            return $dcc60992372e5fa5$var$irwinHall(_this, n);\n        };\n        this.bates = function(n) {\n            return $dcc60992372e5fa5$var$bates(_this, n);\n        };\n        this.pareto = function(alpha) {\n            return $dcc60992372e5fa5$var$pareto(_this, alpha);\n        };\n        if (rng && rng instanceof $dcc60992372e5fa5$export$7492a095b4ff4e68) this.use(rng);\n        else this.use(new $dcc60992372e5fa5$var$RNGMathRandom());\n        this._cache = {};\n    }\n    /**\r\n   * @member {RNG} Underlying pseudo-random number generator\r\n   */ var _proto = Random.prototype;\n    /**\r\n   * Creates a new `Random` instance, optionally specifying parameters to\r\n   * set a new seed.\r\n   *\r\n   * @see RNG.clone\r\n   *\r\n   * @param {string} [seed] - Optional seed for new RNG.\r\n   * @param {object} [opts] - Optional config for new RNG options.\r\n   * @return {Random}\r\n   */ _proto.clone = function clone() {\n        var args = [].slice.call(arguments);\n        if (args.length) return new Random($dcc60992372e5fa5$export$e6cb7150fd4ac6e7.apply(void 0, args));\n        else return new Random(this.rng.clone());\n    } /**\r\n   * Sets the underlying pseudorandom number generator used via\r\n   * either an instance of `seedrandom`, a custom instance of RNG\r\n   * (for PRNG plugins), or a string specifying the PRNG to use\r\n   * along with an optional `seed` and `opts` to initialize the\r\n   * RNG.\r\n   *\r\n   * @example\r\n   * import random from 'random'\r\n   *\r\n   * random.use('example_seedrandom_string')\r\n   * // or\r\n   * random.use(seedrandom('kittens'))\r\n   * // or\r\n   * random.use(Math.random)\r\n   *\r\n   * @param {...*} args\r\n   */ ;\n    _proto.use = function use() {\n        this._rng = $dcc60992372e5fa5$export$e6cb7150fd4ac6e7.apply(void 0, [].slice.call(arguments));\n    } /**\r\n   * Patches `Math.random` with this Random instance's PRNG.\r\n   */ ;\n    _proto.patch = function patch() {\n        if (this._patch) throw new Error(\"Math.random already patched\");\n        this._patch = Math.random;\n        Math.random = this.uniform();\n    } /**\r\n   * Restores a previously patched `Math.random` to its original value.\r\n   */ ;\n    _proto.unpatch = function unpatch() {\n        if (this._patch) {\n            Math.random = this._patch;\n            delete this._patch;\n        }\n    } /**\r\n   * Convenience wrapper around `this.rng.next()`\r\n   *\r\n   * Returns a floating point number in [0, 1).\r\n   *\r\n   * @return {number}\r\n   */ ;\n    /**\r\n   * Returns an item chosen uniformly at trandom from the given array.\r\n   *\r\n   * Convence wrapper around `random.uniformInt()`\r\n   *\r\n   * @param {Array<T>} [array] - Lower bound (integer, inclusive)\r\n   * @return {T | undefined}\r\n   */ _proto.choice = function choice(array) {\n        if (!Array.isArray(array)) throw new Error(\"Random.choice expected input to be an array, got \" + typeof array);\n        var length = array == null ? void 0 : array.length;\n        if (length > 0) {\n            var index = this.uniformInt(0, length - 1)();\n            return array[index];\n        } else return undefined;\n    } /**\r\n   * Generates a [Continuous uniform distribution](https://en.wikipedia.org/wiki/Uniform_distribution_(continuous)).\r\n   *\r\n   * @param {number} [min=0] - Lower bound (float, inclusive)\r\n   * @param {number} [max=1] - Upper bound (float, exclusive)\r\n   * @return {function}\r\n   */ ;\n    // --------------------------------------------------------------------------\n    // Internal\n    // --------------------------------------------------------------------------\n    /**\r\n   * Memoizes distributions to ensure they're only created when necessary.\r\n   *\r\n   * Returns a thunk which that returns independent, identically distributed\r\n   * samples from the specified distribution.\r\n   *\r\n   * @private\r\n   *\r\n   * @param {string} label - Name of distribution\r\n   * @param {function} getter - Function which generates a new distribution\r\n   * @param {...*} args - Distribution-specific arguments\r\n   *\r\n   * @return {function}\r\n   */ _proto._memoize = function _memoize(label, getter) {\n        var args = [].slice.call(arguments, 2);\n        var key = \"\" + args.join(\";\");\n        var value = this._cache[label];\n        if (value === undefined || value.key !== key) {\n            value = {\n                key: key,\n                distribution: getter.apply(void 0, [\n                    this\n                ].concat(args))\n            };\n            this._cache[label] = value;\n        }\n        return value.distribution;\n    };\n    $dcc60992372e5fa5$var$_createClass(Random, [\n        {\n            key: \"rng\",\n            get: function get() {\n                return this._rng;\n            }\n        }\n    ]);\n    return Random;\n}();\n// defaults to Math.random as its RNG\nvar $dcc60992372e5fa5$export$2e2bcd8739ae039 = new $dcc60992372e5fa5$export$a92776769f460054();\n\n\n\n\n// These are typically used in conjunction with noevent to ensure that we can\n// preventDefault on the event.\nconst $19c289642832a009$export$524615cd03e458cc = {\n    passive: false\n};\nconst $19c289642832a009$export$35431a0e47022de1 = {\n    capture: true,\n    passive: false\n};\nfunction $19c289642832a009$export$2e2561858db9bf47(event) {\n    event.stopImmediatePropagation();\n}\nfunction $19c289642832a009$export$2e2bcd8739ae039(event) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n}\n\n\nfunction $ae3cd07c3e922ae3$export$2e2bcd8739ae039(view) {\n    var root = view.document.documentElement, selection = (0, $4506c173c1ba6b79$export$2e2bcd8739ae039)(view).on(\"dragstart.drag\", (0, $19c289642832a009$export$2e2bcd8739ae039), (0, $19c289642832a009$export$35431a0e47022de1));\n    if (\"onselectstart\" in root) selection.on(\"selectstart.drag\", (0, $19c289642832a009$export$2e2bcd8739ae039), (0, $19c289642832a009$export$35431a0e47022de1));\n    else {\n        root.__noselect = root.style.MozUserSelect;\n        root.style.MozUserSelect = \"none\";\n    }\n}\nfunction $ae3cd07c3e922ae3$export$833237748009e1e1(view, noclick) {\n    var root = view.document.documentElement, selection = (0, $4506c173c1ba6b79$export$2e2bcd8739ae039)(view).on(\"dragstart.drag\", null);\n    if (noclick) {\n        selection.on(\"click.drag\", (0, $19c289642832a009$export$2e2bcd8739ae039), (0, $19c289642832a009$export$35431a0e47022de1));\n        setTimeout(function() {\n            selection.on(\"click.drag\", null);\n        }, 0);\n    }\n    if (\"onselectstart\" in root) selection.on(\"selectstart.drag\", null);\n    else {\n        root.style.MozUserSelect = root.__noselect;\n        delete root.__noselect;\n    }\n}\n\n\nvar $ab1b56f08da5f0f8$var$epsilon2 = 1e-12;\nfunction $ab1b56f08da5f0f8$var$cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n}\nfunction $ab1b56f08da5f0f8$var$sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n}\nfunction $ab1b56f08da5f0f8$var$tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\nvar $ab1b56f08da5f0f8$export$2e2bcd8739ae039 = function zoomRho(rho, rho2, rho4) {\n    // p0 = [ux0, uy0, w0]\n    // p1 = [ux1, uy1, w1]\n    function zoom(p0, p1) {\n        var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n        // Special case for u0 ≅ u1.\n        if (d2 < $ab1b56f08da5f0f8$var$epsilon2) {\n            S = Math.log(w1 / w0) / rho;\n            i = function(t) {\n                return [\n                    ux0 + t * dx,\n                    uy0 + t * dy,\n                    w0 * Math.exp(rho * t * S)\n                ];\n            };\n        } else {\n            var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1), b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n            S = (r1 - r0) / rho;\n            i = function(t) {\n                var s = t * S, coshr0 = $ab1b56f08da5f0f8$var$cosh(r0), u = w0 / (rho2 * d1) * (coshr0 * $ab1b56f08da5f0f8$var$tanh(rho * s + r0) - $ab1b56f08da5f0f8$var$sinh(r0));\n                return [\n                    ux0 + u * dx,\n                    uy0 + u * dy,\n                    w0 * coshr0 / $ab1b56f08da5f0f8$var$cosh(rho * s + r0)\n                ];\n            };\n        }\n        i.duration = S * 1000 * rho / Math.SQRT2;\n        return i;\n    }\n    zoom.rho = function(_) {\n        var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;\n        return zoomRho(_1, _2, _4);\n    };\n    return zoom;\n}(Math.SQRT2, 2, 4);\n\n\nfunction $39821514e2bb6c34$export$2e2bcd8739ae039(event) {\n    let sourceEvent;\n    while(sourceEvent = event.sourceEvent)event = sourceEvent;\n    return event;\n}\n\n\nfunction $7edc954089de14ac$export$2e2bcd8739ae039(event, node) {\n    event = (0, $39821514e2bb6c34$export$2e2bcd8739ae039)(event);\n    if (node === undefined) node = event.currentTarget;\n    if (node) {\n        var svg = node.ownerSVGElement || node;\n        if (svg.createSVGPoint) {\n            var point = svg.createSVGPoint();\n            point.x = event.clientX, point.y = event.clientY;\n            point = point.matrixTransform(node.getScreenCTM().inverse());\n            return [\n                point.x,\n                point.y\n            ];\n        }\n        if (node.getBoundingClientRect) {\n            var rect = node.getBoundingClientRect();\n            return [\n                event.clientX - rect.left - node.clientLeft,\n                event.clientY - rect.top - node.clientTop\n            ];\n        }\n    }\n    return [\n        event.pageX,\n        event.pageY\n    ];\n}\n\n\n\nvar $855f7c13dc5c8800$export$2e2bcd8739ae039 = (x)=>()=>x;\n\n\nfunction $f8b8ac12d46296b4$export$2e2bcd8739ae039(type, { sourceEvent: sourceEvent , target: target , transform: transform , dispatch: dispatch  }) {\n    Object.defineProperties(this, {\n        type: {\n            value: type,\n            enumerable: true,\n            configurable: true\n        },\n        sourceEvent: {\n            value: sourceEvent,\n            enumerable: true,\n            configurable: true\n        },\n        target: {\n            value: target,\n            enumerable: true,\n            configurable: true\n        },\n        transform: {\n            value: transform,\n            enumerable: true,\n            configurable: true\n        },\n        _: {\n            value: dispatch\n        }\n    });\n}\n\n\nfunction $2aeeefb9d4aa62cb$export$563a914cafbdc389(k, x, y) {\n    this.k = k;\n    this.x = x;\n    this.y = y;\n}\n$2aeeefb9d4aa62cb$export$563a914cafbdc389.prototype = {\n    constructor: $2aeeefb9d4aa62cb$export$563a914cafbdc389,\n    scale: function(k) {\n        return k === 1 ? this : new $2aeeefb9d4aa62cb$export$563a914cafbdc389(this.k * k, this.x, this.y);\n    },\n    translate: function(x, y) {\n        return x === 0 & y === 0 ? this : new $2aeeefb9d4aa62cb$export$563a914cafbdc389(this.k, this.x + this.k * x, this.y + this.k * y);\n    },\n    apply: function(point) {\n        return [\n            point[0] * this.k + this.x,\n            point[1] * this.k + this.y\n        ];\n    },\n    applyX: function(x) {\n        return x * this.k + this.x;\n    },\n    applyY: function(y) {\n        return y * this.k + this.y;\n    },\n    invert: function(location) {\n        return [\n            (location[0] - this.x) / this.k,\n            (location[1] - this.y) / this.k\n        ];\n    },\n    invertX: function(x) {\n        return (x - this.x) / this.k;\n    },\n    invertY: function(y) {\n        return (y - this.y) / this.k;\n    },\n    rescaleX: function(x) {\n        return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n    },\n    rescaleY: function(y) {\n        return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n    },\n    toString: function() {\n        return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n    }\n};\nvar $2aeeefb9d4aa62cb$export$f0954fd7d5368655 = new $2aeeefb9d4aa62cb$export$563a914cafbdc389(1, 0, 0);\n$2aeeefb9d4aa62cb$export$2e2bcd8739ae039.prototype = $2aeeefb9d4aa62cb$export$563a914cafbdc389.prototype;\nfunction $2aeeefb9d4aa62cb$export$2e2bcd8739ae039(node) {\n    while(!node.__zoom)if (!(node = node.parentNode)) return $2aeeefb9d4aa62cb$export$f0954fd7d5368655;\n    return node.__zoom;\n}\n\n\nfunction $4c382e9682a58de3$export$2e2561858db9bf47(event) {\n    event.stopImmediatePropagation();\n}\nfunction $4c382e9682a58de3$export$2e2bcd8739ae039(event) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n}\n\n\n// Ignore right-click, since that should open the context menu.\n// except for pinch-to-zoom, which is sent as a wheel+ctrlKey event\nfunction $2e3210259ae866af$var$defaultFilter(event) {\n    return (!event.ctrlKey || event.type === \"wheel\") && !event.button;\n}\nfunction $2e3210259ae866af$var$defaultExtent() {\n    var e = this;\n    if (e instanceof SVGElement) {\n        e = e.ownerSVGElement || e;\n        if (e.hasAttribute(\"viewBox\")) {\n            e = e.viewBox.baseVal;\n            return [\n                [\n                    e.x,\n                    e.y\n                ],\n                [\n                    e.x + e.width,\n                    e.y + e.height\n                ]\n            ];\n        }\n        return [\n            [\n                0,\n                0\n            ],\n            [\n                e.width.baseVal.value,\n                e.height.baseVal.value\n            ]\n        ];\n    }\n    return [\n        [\n            0,\n            0\n        ],\n        [\n            e.clientWidth,\n            e.clientHeight\n        ]\n    ];\n}\nfunction $2e3210259ae866af$var$defaultTransform() {\n    return this.__zoom || (0, $2aeeefb9d4aa62cb$export$f0954fd7d5368655);\n}\nfunction $2e3210259ae866af$var$defaultWheelDelta(event) {\n    return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);\n}\nfunction $2e3210259ae866af$var$defaultTouchable() {\n    return navigator.maxTouchPoints || \"ontouchstart\" in this;\n}\nfunction $2e3210259ae866af$var$defaultConstrain(transform, extent, translateExtent) {\n    var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0], dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0], dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1], dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n    return transform.translate(dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1), dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1));\n}\nfunction $2e3210259ae866af$export$2e2bcd8739ae039() {\n    var filter = $2e3210259ae866af$var$defaultFilter, extent = $2e3210259ae866af$var$defaultExtent, constrain = $2e3210259ae866af$var$defaultConstrain, wheelDelta = $2e3210259ae866af$var$defaultWheelDelta, touchable = $2e3210259ae866af$var$defaultTouchable, scaleExtent = [\n        0,\n        Infinity\n    ], translateExtent = [\n        [\n            -Infinity,\n            -Infinity\n        ],\n        [\n            Infinity,\n            Infinity\n        ]\n    ], duration = 250, interpolate = (0, $ab1b56f08da5f0f8$export$2e2bcd8739ae039), listeners = (0, $f22df01f36f3bbc5$export$2e2bcd8739ae039)(\"start\", \"zoom\", \"end\"), touchstarting, touchfirst, touchending, touchDelay = 500, wheelDelay = 150, clickDistance2 = 0, tapDistance = 10;\n    function zoom(selection) {\n        selection.property(\"__zoom\", $2e3210259ae866af$var$defaultTransform).on(\"wheel.zoom\", wheeled, {\n            passive: false\n        }).on(\"mousedown.zoom\", mousedowned).on(\"dblclick.zoom\", dblclicked).filter(touchable).on(\"touchstart.zoom\", touchstarted).on(\"touchmove.zoom\", touchmoved).on(\"touchend.zoom touchcancel.zoom\", touchended).style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n    }\n    zoom.transform = function(collection, transform, point, event) {\n        var selection = collection.selection ? collection.selection() : collection;\n        selection.property(\"__zoom\", $2e3210259ae866af$var$defaultTransform);\n        if (collection !== selection) schedule(collection, transform, point, event);\n        else selection.interrupt().each(function() {\n            gesture(this, arguments).event(event).start().zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform).end();\n        });\n    };\n    zoom.scaleBy = function(selection, k, p, event) {\n        zoom.scaleTo(selection, function() {\n            var k0 = this.__zoom.k, k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n            return k0 * k1;\n        }, p, event);\n    };\n    zoom.scaleTo = function(selection, k, p, event) {\n        zoom.transform(selection, function() {\n            var e = extent.apply(this, arguments), t0 = this.__zoom, p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p, p1 = t0.invert(p0), k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n            return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n        }, p, event);\n    };\n    zoom.translateBy = function(selection, x, y, event) {\n        zoom.transform(selection, function() {\n            return constrain(this.__zoom.translate(typeof x === \"function\" ? x.apply(this, arguments) : x, typeof y === \"function\" ? y.apply(this, arguments) : y), extent.apply(this, arguments), translateExtent);\n        }, null, event);\n    };\n    zoom.translateTo = function(selection, x, y, p, event) {\n        zoom.transform(selection, function() {\n            var e = extent.apply(this, arguments), t = this.__zoom, p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\n            return constrain((0, $2aeeefb9d4aa62cb$export$f0954fd7d5368655).translate(p0[0], p0[1]).scale(t.k).translate(typeof x === \"function\" ? -x.apply(this, arguments) : -x, typeof y === \"function\" ? -y.apply(this, arguments) : -y), e, translateExtent);\n        }, p, event);\n    };\n    function scale(transform, k) {\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n        return k === transform.k ? transform : new (0, $2aeeefb9d4aa62cb$export$563a914cafbdc389)(k, transform.x, transform.y);\n    }\n    function translate(transform, p0, p1) {\n        var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n        return x === transform.x && y === transform.y ? transform : new (0, $2aeeefb9d4aa62cb$export$563a914cafbdc389)(transform.k, x, y);\n    }\n    function centroid(extent) {\n        return [\n            (+extent[0][0] + +extent[1][0]) / 2,\n            (+extent[0][1] + +extent[1][1]) / 2\n        ];\n    }\n    function schedule(transition, transform, point, event) {\n        transition.on(\"start.zoom\", function() {\n            gesture(this, arguments).event(event).start();\n        }).on(\"interrupt.zoom end.zoom\", function() {\n            gesture(this, arguments).event(event).end();\n        }).tween(\"zoom\", function() {\n            var that = this, args = arguments, g = gesture(that, args).event(event), e = extent.apply(that, args), p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point, w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]), a = that.__zoom, b = typeof transform === \"function\" ? transform.apply(that, args) : transform, i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n            return function(t) {\n                if (t === 1) t = b; // Avoid rounding error on end.\n                else {\n                    var l = i(t), k = w / l[2];\n                    t = new (0, $2aeeefb9d4aa62cb$export$563a914cafbdc389)(k, p[0] - l[0] * k, p[1] - l[1] * k);\n                }\n                g.zoom(null, t);\n            };\n        });\n    }\n    function gesture(that, args, clean) {\n        return !clean && that.__zooming || new Gesture(that, args);\n    }\n    function Gesture(that, args) {\n        this.that = that;\n        this.args = args;\n        this.active = 0;\n        this.sourceEvent = null;\n        this.extent = extent.apply(that, args);\n        this.taps = 0;\n    }\n    Gesture.prototype = {\n        event: function(event) {\n            if (event) this.sourceEvent = event;\n            return this;\n        },\n        start: function() {\n            if (++this.active === 1) {\n                this.that.__zooming = this;\n                this.emit(\"start\");\n            }\n            return this;\n        },\n        zoom: function(key, transform) {\n            if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n            if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n            if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n            this.that.__zoom = transform;\n            this.emit(\"zoom\");\n            return this;\n        },\n        end: function() {\n            if (--this.active === 0) {\n                delete this.that.__zooming;\n                this.emit(\"end\");\n            }\n            return this;\n        },\n        emit: function(type) {\n            var d = (0, $4506c173c1ba6b79$export$2e2bcd8739ae039)(this.that).datum();\n            listeners.call(type, this.that, new (0, $f8b8ac12d46296b4$export$2e2bcd8739ae039)(type, {\n                sourceEvent: this.sourceEvent,\n                target: zoom,\n                type: type,\n                transform: this.that.__zoom,\n                dispatch: listeners\n            }), d);\n        }\n    };\n    function wheeled(event, ...args) {\n        if (!filter.apply(this, arguments)) return;\n        var g = gesture(this, args).event(event), t = this.__zoom, k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))), p = (0, $7edc954089de14ac$export$2e2bcd8739ae039)(event);\n        // If the mouse is in the same location as before, reuse it.\n        // If there were recent wheel events, reset the wheel idle timeout.\n        if (g.wheel) {\n            if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) g.mouse[1] = t.invert(g.mouse[0] = p);\n            clearTimeout(g.wheel);\n        } else if (t.k === k) return;\n        else {\n            g.mouse = [\n                p,\n                t.invert(p)\n            ];\n            (0, $a9f60c0c7972321a$export$2e2bcd8739ae039)(this);\n            g.start();\n        }\n        (0, $4c382e9682a58de3$export$2e2bcd8739ae039)(event);\n        g.wheel = setTimeout(wheelidled, wheelDelay);\n        g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n        function wheelidled() {\n            g.wheel = null;\n            g.end();\n        }\n    }\n    function mousedowned(event, ...args) {\n        if (touchending || !filter.apply(this, arguments)) return;\n        var currentTarget = event.currentTarget, g = gesture(this, args, true).event(event), v = (0, $4506c173c1ba6b79$export$2e2bcd8739ae039)(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true), p = (0, $7edc954089de14ac$export$2e2bcd8739ae039)(event, currentTarget), x0 = event.clientX, y0 = event.clientY;\n        (0, $ae3cd07c3e922ae3$export$2e2bcd8739ae039)(event.view);\n        (0, $4c382e9682a58de3$export$2e2561858db9bf47)(event);\n        g.mouse = [\n            p,\n            this.__zoom.invert(p)\n        ];\n        (0, $a9f60c0c7972321a$export$2e2bcd8739ae039)(this);\n        g.start();\n        function mousemoved(event) {\n            (0, $4c382e9682a58de3$export$2e2bcd8739ae039)(event);\n            if (!g.moved) {\n                var dx = event.clientX - x0, dy = event.clientY - y0;\n                g.moved = dx * dx + dy * dy > clickDistance2;\n            }\n            g.event(event).zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = (0, $7edc954089de14ac$export$2e2bcd8739ae039)(event, currentTarget), g.mouse[1]), g.extent, translateExtent));\n        }\n        function mouseupped(event) {\n            v.on(\"mousemove.zoom mouseup.zoom\", null);\n            (0, $ae3cd07c3e922ae3$export$833237748009e1e1)(event.view, g.moved);\n            (0, $4c382e9682a58de3$export$2e2bcd8739ae039)(event);\n            g.event(event).end();\n        }\n    }\n    function dblclicked(event, ...args) {\n        if (!filter.apply(this, arguments)) return;\n        var t0 = this.__zoom, p0 = (0, $7edc954089de14ac$export$2e2bcd8739ae039)(event.changedTouches ? event.changedTouches[0] : event, this), p1 = t0.invert(p0), k1 = t0.k * (event.shiftKey ? 0.5 : 2), t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);\n        (0, $4c382e9682a58de3$export$2e2bcd8739ae039)(event);\n        if (duration > 0) (0, $4506c173c1ba6b79$export$2e2bcd8739ae039)(this).transition().duration(duration).call(schedule, t1, p0, event);\n        else (0, $4506c173c1ba6b79$export$2e2bcd8739ae039)(this).call(zoom.transform, t1, p0, event);\n    }\n    function touchstarted(event, ...args) {\n        if (!filter.apply(this, arguments)) return;\n        var touches = event.touches, n = touches.length, g = gesture(this, args, event.changedTouches.length === n).event(event), started, i, t, p;\n        (0, $4c382e9682a58de3$export$2e2561858db9bf47)(event);\n        for(i = 0; i < n; ++i){\n            t = touches[i], p = (0, $7edc954089de14ac$export$2e2bcd8739ae039)(t, this);\n            p = [\n                p,\n                this.__zoom.invert(p),\n                t.identifier\n            ];\n            if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;\n            else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n        }\n        if (touchstarting) touchstarting = clearTimeout(touchstarting);\n        if (started) {\n            if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function() {\n                touchstarting = null;\n            }, touchDelay);\n            (0, $a9f60c0c7972321a$export$2e2bcd8739ae039)(this);\n            g.start();\n        }\n    }\n    function touchmoved(event, ...args) {\n        if (!this.__zooming) return;\n        var g = gesture(this, args).event(event), touches = event.changedTouches, n = touches.length, i, t, p, l;\n        (0, $4c382e9682a58de3$export$2e2bcd8739ae039)(event);\n        for(i = 0; i < n; ++i){\n            t = touches[i], p = (0, $7edc954089de14ac$export$2e2bcd8739ae039)(t, this);\n            if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n            else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n        }\n        t = g.that.__zoom;\n        if (g.touch1) {\n            var p0 = g.touch0[0], l0 = g.touch0[1], p1 = g.touch1[0], l1 = g.touch1[1], dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp, dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n            t = scale(t, Math.sqrt(dp / dl));\n            p = [\n                (p0[0] + p1[0]) / 2,\n                (p0[1] + p1[1]) / 2\n            ];\n            l = [\n                (l0[0] + l1[0]) / 2,\n                (l0[1] + l1[1]) / 2\n            ];\n        } else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n        else return;\n        g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n    }\n    function touchended(event, ...args) {\n        if (!this.__zooming) return;\n        var g = gesture(this, args).event(event), touches = event.changedTouches, n = touches.length, i, t;\n        (0, $4c382e9682a58de3$export$2e2561858db9bf47)(event);\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() {\n            touchending = null;\n        }, touchDelay);\n        for(i = 0; i < n; ++i){\n            t = touches[i];\n            if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n            else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n        }\n        if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n        if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n        else {\n            g.end();\n            // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n            if (g.taps === 2) {\n                t = (0, $7edc954089de14ac$export$2e2bcd8739ae039)(t, this);\n                if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {\n                    var p = (0, $4506c173c1ba6b79$export$2e2bcd8739ae039)(this).on(\"dblclick.zoom\");\n                    if (p) p.apply(this, arguments);\n                }\n            }\n        }\n    }\n    zoom.wheelDelta = function(_) {\n        return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : (0, $855f7c13dc5c8800$export$2e2bcd8739ae039)(+_), zoom) : wheelDelta;\n    };\n    zoom.filter = function(_) {\n        return arguments.length ? (filter = typeof _ === \"function\" ? _ : (0, $855f7c13dc5c8800$export$2e2bcd8739ae039)(!!_), zoom) : filter;\n    };\n    zoom.touchable = function(_) {\n        return arguments.length ? (touchable = typeof _ === \"function\" ? _ : (0, $855f7c13dc5c8800$export$2e2bcd8739ae039)(!!_), zoom) : touchable;\n    };\n    zoom.extent = function(_) {\n        return arguments.length ? (extent = typeof _ === \"function\" ? _ : (0, $855f7c13dc5c8800$export$2e2bcd8739ae039)([\n            [\n                +_[0][0],\n                +_[0][1]\n            ],\n            [\n                +_[1][0],\n                +_[1][1]\n            ]\n        ]), zoom) : extent;\n    };\n    zoom.scaleExtent = function(_) {\n        return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [\n            scaleExtent[0],\n            scaleExtent[1]\n        ];\n    };\n    zoom.translateExtent = function(_) {\n        return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [\n            [\n                translateExtent[0][0],\n                translateExtent[0][1]\n            ],\n            [\n                translateExtent[1][0],\n                translateExtent[1][1]\n            ]\n        ];\n    };\n    zoom.constrain = function(_) {\n        return arguments.length ? (constrain = _, zoom) : constrain;\n    };\n    zoom.duration = function(_) {\n        return arguments.length ? (duration = +_, zoom) : duration;\n    };\n    zoom.interpolate = function(_) {\n        return arguments.length ? (interpolate = _, zoom) : interpolate;\n    };\n    zoom.on = function() {\n        var value = listeners.on.apply(listeners, arguments);\n        return value === listeners ? zoom : value;\n    };\n    zoom.clickDistance = function(_) {\n        return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n    };\n    zoom.tapDistance = function(_) {\n        return arguments.length ? (tapDistance = +_, zoom) : tapDistance;\n    };\n    return zoom;\n}\n\n\n\n\n\nfunction $960ae2d550011e08$export$2e2bcd8739ae039(values, valueof) {\n    let min;\n    let max;\n    if (valueof === undefined) {\n        for (const value of values)if (value != null) {\n            if (min === undefined) {\n                if (value >= value) min = max = value;\n            } else {\n                if (min > value) min = value;\n                if (max < value) max = value;\n            }\n        }\n    } else {\n        let index = -1;\n        for (let value of values)if ((value = valueof(value, ++index, values)) != null) {\n            if (min === undefined) {\n                if (value >= value) min = max = value;\n            } else {\n                if (min > value) min = value;\n                if (max < value) max = value;\n            }\n        }\n    }\n    return [\n        min,\n        max\n    ];\n}\n\n\nconst $7dda263e87144b68$var$defaultNodeColor = \"#b3b3b3\";\nconst $7dda263e87144b68$var$defaultGreyoutNodeOpacity = 0.1;\nconst $7dda263e87144b68$var$defaultNodeSize = 4;\nconst $7dda263e87144b68$var$defaultLinkColor = \"#666666\";\nconst $7dda263e87144b68$var$defaultGreyoutLinkOpacity = 0.1;\nconst $7dda263e87144b68$var$defaultLinkWidth = 1;\nconst $7dda263e87144b68$var$defaultBackgroundColor = \"#222222\";\nconst $7dda263e87144b68$var$defaultConfigValues = {\n    spaceSize: 4096,\n    nodeSizeScale: 1,\n    linkWidthScale: 1,\n    arrowSizeScale: 1,\n    renderLinks: true,\n    arrowLinks: true,\n    linkVisibilityDistanceRange: [\n        50,\n        150\n    ],\n    linkVisibilityMinTransparency: 0.25,\n    useQuadtree: false,\n    simulation: {\n        decay: 1000,\n        gravity: 0,\n        center: 0,\n        repulsion: 0.1,\n        repulsionTheta: 1.7,\n        repulsionQuadtreeLevels: 12,\n        linkSpring: 1,\n        linkDistance: 2,\n        linkDistRandomVariationRange: [\n            1,\n            1.2\n        ],\n        repulsionFromMouse: 2,\n        friction: 0.85\n    },\n    showFPSMonitor: false,\n    pixelRatio: 2,\n    scaleNodesOnZoom: true\n};\nconst $7dda263e87144b68$var$hoveredNodeRingOpacity = 0.7;\nconst $7dda263e87144b68$var$focusedNodeRingOpacity = 0.95;\nconst $7dda263e87144b68$var$defaultScaleToZoom = 3;\nconst $7dda263e87144b68$var$isFunction = (a)=>typeof a === \"function\";\nconst $7dda263e87144b68$var$isArray = (a)=>Array.isArray(a);\nconst $7dda263e87144b68$var$isObject = (a)=>a instanceof Object;\nconst $7dda263e87144b68$var$isAClassInstance = (a)=>{\n    if (a instanceof Object) // eslint-disable-next-line @typescript-eslint/ban-types\n    return a.constructor.name !== \"Function\" && a.constructor.name !== \"Object\";\n    else return false;\n};\nconst $7dda263e87144b68$var$isPlainObject = (a)=>$7dda263e87144b68$var$isObject(a) && !$7dda263e87144b68$var$isArray(a) && !$7dda263e87144b68$var$isFunction(a) && !$7dda263e87144b68$var$isAClassInstance(a);\nfunction $7dda263e87144b68$var$getValue(d, accessor, index) {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    if ($7dda263e87144b68$var$isFunction(accessor)) return accessor(d, index);\n    else return accessor;\n}\nfunction $7dda263e87144b68$var$getRgbaColor(value) {\n    var _a;\n    let rgba;\n    if ($7dda263e87144b68$var$isArray(value)) rgba = value;\n    else {\n        const color$1 = (0, $6b954386a0255d00$export$2e2bcd8739ae039)(value);\n        const rgb = color$1 === null || color$1 === void 0 ? void 0 : color$1.rgb();\n        rgba = [\n            (rgb === null || rgb === void 0 ? void 0 : rgb.r) || 0,\n            (rgb === null || rgb === void 0 ? void 0 : rgb.g) || 0,\n            (rgb === null || rgb === void 0 ? void 0 : rgb.b) || 0,\n            (_a = color$1 === null || color$1 === void 0 ? void 0 : color$1.opacity) !== null && _a !== void 0 ? _a : 1\n        ];\n    }\n    return [\n        rgba[0] / 255,\n        rgba[1] / 255,\n        rgba[2] / 255,\n        rgba[3]\n    ];\n}\nfunction $7dda263e87144b68$var$readPixels(reglInstance, fbo) {\n    let resultPixels = new Float32Array();\n    reglInstance({\n        framebuffer: fbo\n    })(()=>{\n        resultPixels = reglInstance.read();\n    });\n    return resultPixels;\n}\nfunction $7dda263e87144b68$var$clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nclass $7dda263e87144b68$var$GraphConfig {\n    constructor(){\n        this.backgroundColor = $7dda263e87144b68$var$defaultBackgroundColor;\n        this.spaceSize = $7dda263e87144b68$var$defaultConfigValues.spaceSize;\n        this.nodeColor = $7dda263e87144b68$var$defaultNodeColor;\n        this.nodeGreyoutOpacity = $7dda263e87144b68$var$defaultGreyoutNodeOpacity;\n        this.nodeSize = $7dda263e87144b68$var$defaultNodeSize;\n        this.nodeSizeScale = $7dda263e87144b68$var$defaultConfigValues.nodeSizeScale;\n        this.renderHighlightedNodeRing = true;\n        this.highlightedNodeRingColor = undefined;\n        this.linkColor = $7dda263e87144b68$var$defaultLinkColor;\n        this.linkGreyoutOpacity = $7dda263e87144b68$var$defaultGreyoutLinkOpacity;\n        this.linkWidth = $7dda263e87144b68$var$defaultLinkWidth;\n        this.linkWidthScale = $7dda263e87144b68$var$defaultConfigValues.linkWidthScale;\n        this.renderLinks = $7dda263e87144b68$var$defaultConfigValues.renderLinks;\n        this.linkArrows = $7dda263e87144b68$var$defaultConfigValues.arrowLinks;\n        this.linkArrowsSizeScale = $7dda263e87144b68$var$defaultConfigValues.arrowSizeScale;\n        this.linkVisibilityDistanceRange = $7dda263e87144b68$var$defaultConfigValues.linkVisibilityDistanceRange;\n        this.linkVisibilityMinTransparency = $7dda263e87144b68$var$defaultConfigValues.linkVisibilityMinTransparency;\n        this.useQuadtree = $7dda263e87144b68$var$defaultConfigValues.useQuadtree;\n        this.simulation = {\n            decay: $7dda263e87144b68$var$defaultConfigValues.simulation.decay,\n            gravity: $7dda263e87144b68$var$defaultConfigValues.simulation.gravity,\n            center: $7dda263e87144b68$var$defaultConfigValues.simulation.center,\n            repulsion: $7dda263e87144b68$var$defaultConfigValues.simulation.repulsion,\n            repulsionTheta: $7dda263e87144b68$var$defaultConfigValues.simulation.repulsionTheta,\n            repulsionQuadtreeLevels: $7dda263e87144b68$var$defaultConfigValues.simulation.repulsionQuadtreeLevels,\n            linkSpring: $7dda263e87144b68$var$defaultConfigValues.simulation.linkSpring,\n            linkDistance: $7dda263e87144b68$var$defaultConfigValues.simulation.linkDistance,\n            linkDistRandomVariationRange: $7dda263e87144b68$var$defaultConfigValues.simulation.linkDistRandomVariationRange,\n            repulsionFromMouse: $7dda263e87144b68$var$defaultConfigValues.simulation.repulsionFromMouse,\n            friction: $7dda263e87144b68$var$defaultConfigValues.simulation.friction,\n            onStart: undefined,\n            onTick: undefined,\n            onEnd: undefined,\n            onPause: undefined,\n            onRestart: undefined\n        };\n        this.events = {\n            onClick: undefined,\n            onMouseMove: undefined,\n            onNodeMouseOver: undefined,\n            onNodeMouseOut: undefined,\n            onZoomStart: undefined,\n            onZoom: undefined,\n            onZoomEnd: undefined\n        };\n        this.showFPSMonitor = $7dda263e87144b68$var$defaultConfigValues.showFPSMonitor;\n        this.pixelRatio = $7dda263e87144b68$var$defaultConfigValues.pixelRatio;\n        this.scaleNodesOnZoom = $7dda263e87144b68$var$defaultConfigValues.scaleNodesOnZoom;\n        this.randomSeed = undefined;\n    }\n    init(config) {\n        Object.keys(config).forEach((configParameter)=>{\n            this.deepMergeConfig(this.getConfig(), config, configParameter);\n        });\n    }\n    deepMergeConfig(current, next, key) {\n        if ($7dda263e87144b68$var$isPlainObject(current[key]) && $7dda263e87144b68$var$isPlainObject(next[key])) // eslint-disable-next-line @typescript-eslint/ban-types\n        Object.keys(next[key]).forEach((configParameter)=>{\n            this.deepMergeConfig(current[key], next[key], configParameter);\n        });\n        else current[key] = next[key];\n    }\n    getConfig() {\n        return this;\n    }\n}\nclass $7dda263e87144b68$var$CoreModule {\n    constructor(reglInstance, config, store, data, points){\n        this.reglInstance = reglInstance;\n        this.config = config;\n        this.store = store;\n        this.data = data;\n        if (points) this.points = points;\n    }\n}\nvar $7dda263e87144b68$var$calculateCentermassFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nvarying vec4 rgba;void main(){gl_FragColor=rgba;}\"; // eslint-disable-line\nvar $7dda263e87144b68$var$calculateCentermassVert = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform float pointsTextureSize;attribute vec2 indexes;varying vec4 rgba;void main(){vec4 pointPosition=texture2D(position,indexes/pointsTextureSize);rgba=vec4(pointPosition.xy,1.0,0.0);gl_Position=vec4(0.0,0.0,0.0,1.0);gl_PointSize=1.0;}\"; // eslint-disable-line\nvar $7dda263e87144b68$var$forceFrag$5 = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform sampler2D centermass;uniform float center;uniform float alpha;varying vec2 index;void main(){vec4 pointPosition=texture2D(position,index);vec4 velocity=vec4(0.0);vec4 centermassValues=texture2D(centermass,vec2(0.0));vec2 centermassPosition=centermassValues.xy/centermassValues.b;vec2 distVector=centermassPosition-pointPosition.xy;float dist=sqrt(dot(distVector,distVector));if(dist>0.0){float angle=atan(distVector.y,distVector.x);float addV=alpha*center*dist*0.01;velocity.rg+=addV*vec2(cos(angle),sin(angle));}gl_FragColor=velocity;}\"; // eslint-disable-line\nfunction $7dda263e87144b68$var$createQuadBuffer(reglInstance) {\n    const quadBuffer = reglInstance.buffer(new Float32Array([\n        -1,\n        -1,\n        1,\n        -1,\n        -1,\n        1,\n        1,\n        1\n    ]));\n    return {\n        buffer: quadBuffer,\n        size: 2\n    };\n}\nfunction $7dda263e87144b68$var$createIndexesBuffer(reglInstance, textureSize) {\n    const indexes = new Float32Array(textureSize * textureSize * 2);\n    for(let y = 0; y < textureSize; y++)for(let x = 0; x < textureSize; x++){\n        const i = y * textureSize * 2 + x * 2;\n        indexes[i + 0] = x;\n        indexes[i + 1] = y;\n    }\n    const indexBuffer = reglInstance.buffer(indexes);\n    return {\n        buffer: indexBuffer,\n        size: 2\n    };\n}\nvar $7dda263e87144b68$var$clearFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nvarying vec2 index;void main(){gl_FragColor=vec4(0.0);}\"; // eslint-disable-line\nvar $7dda263e87144b68$var$updateVert = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nattribute vec2 quad;varying vec2 index;void main(){index=(quad+1.0)/2.0;gl_Position=vec4(quad,0,1);}\"; // eslint-disable-line\nclass $7dda263e87144b68$var$ForceCenter extends $7dda263e87144b68$var$CoreModule {\n    create() {\n        const { reglInstance: reglInstance  } = this;\n        this.centermassFbo = reglInstance.framebuffer({\n            color: reglInstance.texture({\n                data: new Float32Array(4).fill(0),\n                shape: [\n                    1,\n                    1,\n                    4\n                ],\n                type: \"float\"\n            }),\n            depth: false,\n            stencil: false\n        });\n    }\n    initPrograms() {\n        const { reglInstance: reglInstance , config: config , store: store , data: data , points: points  } = this;\n        this.clearCentermassCommand = reglInstance({\n            frag: $7dda263e87144b68$var$clearFrag,\n            vert: $7dda263e87144b68$var$updateVert,\n            framebuffer: this.centermassFbo,\n            primitive: \"triangle strip\",\n            count: 4,\n            attributes: {\n                quad: $7dda263e87144b68$var$createQuadBuffer(reglInstance)\n            }\n        });\n        this.calculateCentermassCommand = reglInstance({\n            frag: $7dda263e87144b68$var$calculateCentermassFrag,\n            vert: $7dda263e87144b68$var$calculateCentermassVert,\n            framebuffer: ()=>this.centermassFbo,\n            primitive: \"points\",\n            count: ()=>data.nodes.length,\n            attributes: {\n                indexes: $7dda263e87144b68$var$createIndexesBuffer(reglInstance, store.pointsTextureSize)\n            },\n            uniforms: {\n                position: ()=>points === null || points === void 0 ? void 0 : points.previousPositionFbo,\n                pointsTextureSize: ()=>store.pointsTextureSize\n            },\n            blend: {\n                enable: true,\n                func: {\n                    src: \"one\",\n                    dst: \"one\"\n                },\n                equation: {\n                    rgb: \"add\",\n                    alpha: \"add\"\n                }\n            },\n            depth: {\n                enable: false,\n                mask: false\n            },\n            stencil: {\n                enable: false\n            }\n        });\n        this.runCommand = reglInstance({\n            frag: $7dda263e87144b68$var$forceFrag$5,\n            vert: $7dda263e87144b68$var$updateVert,\n            framebuffer: ()=>points === null || points === void 0 ? void 0 : points.velocityFbo,\n            primitive: \"triangle strip\",\n            count: 4,\n            attributes: {\n                quad: $7dda263e87144b68$var$createQuadBuffer(reglInstance)\n            },\n            uniforms: {\n                position: ()=>points === null || points === void 0 ? void 0 : points.previousPositionFbo,\n                centermass: ()=>this.centermassFbo,\n                center: ()=>{\n                    var _a;\n                    return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.center;\n                },\n                alpha: ()=>store.alpha\n            }\n        });\n    }\n    run() {\n        var _a, _b, _c;\n        (_a = this.clearCentermassCommand) === null || _a === void 0 || _a.call(this);\n        (_b = this.calculateCentermassCommand) === null || _b === void 0 || _b.call(this);\n        (_c = this.runCommand) === null || _c === void 0 || _c.call(this);\n    }\n    destroy() {\n        var _a;\n        (_a = this.centermassFbo) === null || _a === void 0 || _a.destroy();\n    }\n}\nvar $7dda263e87144b68$var$forceFrag$4 = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform float gravity;uniform float spaceSize;uniform float alpha;varying vec2 index;void main(){vec4 pointPosition=texture2D(position,index);vec4 velocity=vec4(0.0);vec2 centerPosition=vec2(spaceSize/2.0);vec2 distVector=centerPosition-pointPosition.rg;float dist=sqrt(dot(distVector,distVector));if(dist>0.0){float angle=atan(distVector.y,distVector.x);float addV=alpha*gravity*dist*0.1;velocity.rg+=addV*vec2(cos(angle),sin(angle));}gl_FragColor=velocity;}\"; // eslint-disable-line\nclass $7dda263e87144b68$var$ForceGravity extends $7dda263e87144b68$var$CoreModule {\n    initPrograms() {\n        const { reglInstance: reglInstance , config: config , store: store , points: points  } = this;\n        this.runCommand = reglInstance({\n            frag: $7dda263e87144b68$var$forceFrag$4,\n            vert: $7dda263e87144b68$var$updateVert,\n            framebuffer: ()=>points === null || points === void 0 ? void 0 : points.velocityFbo,\n            primitive: \"triangle strip\",\n            count: 4,\n            attributes: {\n                quad: $7dda263e87144b68$var$createQuadBuffer(reglInstance)\n            },\n            uniforms: {\n                position: ()=>points === null || points === void 0 ? void 0 : points.previousPositionFbo,\n                gravity: ()=>{\n                    var _a;\n                    return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.gravity;\n                },\n                spaceSize: ()=>config.spaceSize,\n                alpha: ()=>store.alpha\n            }\n        });\n    }\n    run() {\n        var _a;\n        (_a = this.runCommand) === null || _a === void 0 || _a.call(this);\n    }\n}\nfunction $7dda263e87144b68$var$forceFrag$3(maxLinks) {\n    return `\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform sampler2D position;\nuniform float linkSpring;\nuniform float linkDistance;\nuniform vec2 linkDistRandomVariationRange;\n\nuniform sampler2D linkFirstIndicesAndAmount;\nuniform sampler2D linkIndices;\nuniform sampler2D linkBiasAndStrength;\nuniform sampler2D linkRandomDistanceFbo;\n\nuniform float pointsTextureSize;\nuniform float linksTextureSize;\nuniform float alpha;\n\nvarying vec2 index;\n\nconst float MAX_LINKS = ${maxLinks}.0;\n\nvoid main() {\n  vec4 pointPosition = texture2D(position, index);\n  vec4 velocity = vec4(0.0);\n\n  vec4 linkFirstIJAndAmount = texture2D(linkFirstIndicesAndAmount, index);\n  float iCount = linkFirstIJAndAmount.r;\n  float jCount = linkFirstIJAndAmount.g;\n  float linkAmount = linkFirstIJAndAmount.b;\n  if (linkAmount > 0.0) {\n    for (float i = 0.0; i < MAX_LINKS; i += 1.0) {\n      if (i < linkAmount) {\n        if (iCount >= linksTextureSize) {\n          iCount = 0.0;\n          jCount += 1.0;\n        }\n        vec2 linkTextureIndex = (vec2(iCount, jCount) + 0.5) / linksTextureSize;\n        vec4 connectedPointIndex = texture2D(linkIndices, linkTextureIndex);\n        vec4 biasAndStrength = texture2D(linkBiasAndStrength, linkTextureIndex);\n        vec4 randomMinDistance = texture2D(linkRandomDistanceFbo, linkTextureIndex);\n        float bias = biasAndStrength.r;\n        float strength = biasAndStrength.g;\n        float randomMinLinkDist = randomMinDistance.r * (linkDistRandomVariationRange.g - linkDistRandomVariationRange.r) + linkDistRandomVariationRange.r;\n        randomMinLinkDist *= linkDistance;\n\n        iCount += 1.0;\n\n        vec4 connectedPointPosition = texture2D(position, (connectedPointIndex.rg + 0.5) / pointsTextureSize);\n        float x = connectedPointPosition.x - (pointPosition.x + velocity.x);\n        float y = connectedPointPosition.y - (pointPosition.y + velocity.y);\n        float l = sqrt(x * x + y * y);\n        l = max(l, randomMinLinkDist * 0.99);\n        l = (l - randomMinLinkDist) / l;\n        l *= linkSpring * alpha;\n        l *= strength;\n        l *= bias;\n        x *= l;\n        y *= l;\n        velocity.x += x;\n        velocity.y += y;\n      }\n    }\n  }\n\n  gl_FragColor = vec4(velocity.rg, 0.0, 0.0);\n}\n  `;\n}\nvar $7dda263e87144b68$var$LinkDirection;\n(function(LinkDirection) {\n    LinkDirection[\"OUTGOING\"] = \"outgoing\";\n    LinkDirection[\"INCOMING\"] = \"incoming\";\n})($7dda263e87144b68$var$LinkDirection || ($7dda263e87144b68$var$LinkDirection = {}));\nclass $7dda263e87144b68$var$ForceLink extends $7dda263e87144b68$var$CoreModule {\n    constructor(){\n        super(...arguments);\n        this.linkFirstIndicesAndAmount = new Float32Array();\n        this.indices = new Float32Array();\n        this.maxPointDegree = 0;\n    }\n    create(direction) {\n        const { reglInstance: reglInstance , store: { pointsTextureSize: pointsTextureSize , linksTextureSize: linksTextureSize  } , data: data  } = this;\n        this.linkFirstIndicesAndAmount = new Float32Array(pointsTextureSize * pointsTextureSize * 4);\n        this.indices = new Float32Array(linksTextureSize * linksTextureSize * 4);\n        const linkBiasAndStrengthState = new Float32Array(linksTextureSize * linksTextureSize * 4);\n        const linkDistanceState = new Float32Array(linksTextureSize * linksTextureSize * 4);\n        const grouped = direction === $7dda263e87144b68$var$LinkDirection.INCOMING ? data.groupedSourceToTargetLinks : data.groupedTargetToSourceLinks;\n        this.maxPointDegree = 0;\n        let linkIndex = 0;\n        grouped.forEach((connectedNodeIndices, nodeIndex)=>{\n            this.linkFirstIndicesAndAmount[nodeIndex * 4 + 0] = linkIndex % linksTextureSize;\n            this.linkFirstIndicesAndAmount[nodeIndex * 4 + 1] = Math.floor(linkIndex / linksTextureSize);\n            this.linkFirstIndicesAndAmount[nodeIndex * 4 + 2] = connectedNodeIndices.size;\n            connectedNodeIndices.forEach((connectedNodeIndex)=>{\n                var _a, _b;\n                this.indices[linkIndex * 4 + 0] = connectedNodeIndex % pointsTextureSize;\n                this.indices[linkIndex * 4 + 1] = Math.floor(connectedNodeIndex / pointsTextureSize);\n                const degree = (_a = data.degree[data.getInputIndexBySortedIndex(connectedNodeIndex)]) !== null && _a !== void 0 ? _a : 0;\n                const connectedDegree = (_b = data.degree[data.getInputIndexBySortedIndex(nodeIndex)]) !== null && _b !== void 0 ? _b : 0;\n                const bias = degree / (degree + connectedDegree);\n                let strength = 1 / Math.min(degree, connectedDegree);\n                strength = Math.sqrt(strength);\n                linkBiasAndStrengthState[linkIndex * 4 + 0] = bias;\n                linkBiasAndStrengthState[linkIndex * 4 + 1] = strength;\n                linkDistanceState[linkIndex * 4] = this.store.getRandomFloat(0, 1);\n                linkIndex += 1;\n            });\n            this.maxPointDegree = Math.max(this.maxPointDegree, connectedNodeIndices.size);\n        });\n        this.linkFirstIndicesAndAmountFbo = reglInstance.framebuffer({\n            color: reglInstance.texture({\n                data: this.linkFirstIndicesAndAmount,\n                shape: [\n                    pointsTextureSize,\n                    pointsTextureSize,\n                    4\n                ],\n                type: \"float\"\n            }),\n            depth: false,\n            stencil: false\n        });\n        this.indicesFbo = reglInstance.framebuffer({\n            color: reglInstance.texture({\n                data: this.indices,\n                shape: [\n                    linksTextureSize,\n                    linksTextureSize,\n                    4\n                ],\n                type: \"float\"\n            }),\n            depth: false,\n            stencil: false\n        });\n        this.biasAndStrengthFbo = reglInstance.framebuffer({\n            color: reglInstance.texture({\n                data: linkBiasAndStrengthState,\n                shape: [\n                    linksTextureSize,\n                    linksTextureSize,\n                    4\n                ],\n                type: \"float\"\n            }),\n            depth: false,\n            stencil: false\n        });\n        this.randomDistanceFbo = reglInstance.framebuffer({\n            color: reglInstance.texture({\n                data: linkDistanceState,\n                shape: [\n                    linksTextureSize,\n                    linksTextureSize,\n                    4\n                ],\n                type: \"float\"\n            }),\n            depth: false,\n            stencil: false\n        });\n    }\n    initPrograms() {\n        const { reglInstance: reglInstance , config: config , store: store , points: points  } = this;\n        this.runCommand = reglInstance({\n            frag: ()=>$7dda263e87144b68$var$forceFrag$3(this.maxPointDegree),\n            vert: $7dda263e87144b68$var$updateVert,\n            framebuffer: ()=>points === null || points === void 0 ? void 0 : points.velocityFbo,\n            primitive: \"triangle strip\",\n            count: 4,\n            attributes: {\n                quad: $7dda263e87144b68$var$createQuadBuffer(reglInstance)\n            },\n            uniforms: {\n                position: ()=>points === null || points === void 0 ? void 0 : points.previousPositionFbo,\n                linkSpring: ()=>{\n                    var _a;\n                    return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.linkSpring;\n                },\n                linkDistance: ()=>{\n                    var _a;\n                    return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.linkDistance;\n                },\n                linkDistRandomVariationRange: ()=>{\n                    var _a;\n                    return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.linkDistRandomVariationRange;\n                },\n                linkFirstIndicesAndAmount: ()=>this.linkFirstIndicesAndAmountFbo,\n                linkIndices: ()=>this.indicesFbo,\n                linkBiasAndStrength: ()=>this.biasAndStrengthFbo,\n                linkRandomDistanceFbo: ()=>this.randomDistanceFbo,\n                pointsTextureSize: ()=>store.pointsTextureSize,\n                linksTextureSize: ()=>store.linksTextureSize,\n                alpha: ()=>store.alpha\n            }\n        });\n    }\n    run() {\n        var _a;\n        (_a = this.runCommand) === null || _a === void 0 || _a.call(this);\n    }\n    destroy() {\n        var _a, _b, _c, _d;\n        (_a = this.linkFirstIndicesAndAmountFbo) === null || _a === void 0 || _a.destroy();\n        (_b = this.indicesFbo) === null || _b === void 0 || _b.destroy();\n        (_c = this.biasAndStrengthFbo) === null || _c === void 0 || _c.destroy();\n        (_d = this.randomDistanceFbo) === null || _d === void 0 || _d.destroy();\n    }\n}\nvar $7dda263e87144b68$var$calculateLevelFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nvarying vec4 rgba;void main(){gl_FragColor=rgba;}\"; // eslint-disable-line\nvar $7dda263e87144b68$var$calculateLevelVert = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform float pointsTextureSize;uniform float levelTextureSize;uniform float cellSize;attribute vec2 indexes;varying vec4 rgba;void main(){vec4 pointPosition=texture2D(position,indexes/pointsTextureSize);rgba=vec4(pointPosition.rg,1.0,0.0);float n=floor(pointPosition.x/cellSize);float m=floor(pointPosition.y/cellSize);vec2 levelPosition=2.0*(vec2(n,m)+0.5)/levelTextureSize-1.0;gl_Position=vec4(levelPosition,0.0,1.0);gl_PointSize=1.0;}\"; // eslint-disable-line\nvar $7dda263e87144b68$var$forceFrag$2 = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform sampler2D levelFbo;uniform float level;uniform float levels;uniform float levelTextureSize;uniform float repulsion;uniform float alpha;uniform float spaceSize;uniform float theta;varying vec2 index;const float MAX_LEVELS_NUM=14.0;vec2 calcAdd(vec2 ij,vec2 pp){vec2 add=vec2(0.0);vec4 centermass=texture2D(levelFbo,ij);if(centermass.r>0.0&&centermass.g>0.0&&centermass.b>0.0){vec2 centermassPosition=vec2(centermass.rg/centermass.b);vec2 distVector=pp-centermassPosition;float l=dot(distVector,distVector);float dist=sqrt(l);if(l>0.0){float angle=atan(distVector.y,distVector.x);float c=alpha*repulsion*centermass.b;float distanceMin2=1.0;if(l<distanceMin2)l=sqrt(distanceMin2*l);float addV=c/sqrt(l);add=addV*vec2(cos(angle),sin(angle));}}return add;}void main(){vec4 pointPosition=texture2D(position,index);float x=pointPosition.x;float y=pointPosition.y;float left=0.0;float top=0.0;float right=spaceSize;float bottom=spaceSize;float n_left=0.0;float n_top=0.0;float n_right=0.0;float n_bottom=0.0;float cellSize=0.0;for(float i=0.0;i<MAX_LEVELS_NUM;i+=1.0){if(i<=level){left+=cellSize*n_left;top+=cellSize*n_top;right-=cellSize*n_right;bottom-=cellSize*n_bottom;cellSize=pow(2.0,levels-i-1.0);float dist_left=x-left;n_left=max(0.0,floor(dist_left/cellSize-theta));float dist_top=y-top;n_top=max(0.0,floor(dist_top/cellSize-theta));float dist_right=right-x;n_right=max(0.0,floor(dist_right/cellSize-theta));float dist_bottom=bottom-y;n_bottom=max(0.0,floor(dist_bottom/cellSize-theta));}}vec4 velocity=vec4(vec2(0.0),1.0,0.0);for(float i=0.0;i<12.0;i+=1.0){for(float j=0.0;j<4.0;j+=1.0){float n=left+cellSize*j;float m=top+cellSize*n_top+cellSize*i;if(n<(left+n_left*cellSize)&&m<bottom){velocity.xy+=calcAdd(vec2(n/cellSize,m/cellSize)/levelTextureSize,pointPosition.xy);}n=left+cellSize*i;m=top+cellSize*j;if(n<(right-n_right*cellSize)&&m<(top+n_top*cellSize)){velocity.xy+=calcAdd(vec2(n/cellSize,m/cellSize)/levelTextureSize,pointPosition.xy);}n=right-n_right*cellSize+cellSize*j;m=top+cellSize*i;if(n<right&&m<(bottom-n_bottom*cellSize)){velocity.xy+=calcAdd(vec2(n/cellSize,m/cellSize)/levelTextureSize,pointPosition.xy);}n=left+n_left*cellSize+cellSize*i;m=bottom-n_bottom*cellSize+cellSize*j;if(n<right&&m<bottom){velocity.xy+=calcAdd(vec2(n/cellSize,m/cellSize)/levelTextureSize,pointPosition.xy);}}}gl_FragColor=velocity;}\"; // eslint-disable-line\nvar $7dda263e87144b68$var$forceCenterFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform sampler2D levelFbo;uniform sampler2D randomValues;uniform float levelTextureSize;uniform float repulsion;uniform float alpha;varying vec2 index;vec2 calcAdd(vec2 ij,vec2 pp){vec2 add=vec2(0.0);vec4 centermass=texture2D(levelFbo,ij);if(centermass.r>0.0&&centermass.g>0.0&&centermass.b>0.0){vec2 centermassPosition=vec2(centermass.rg/centermass.b);vec2 distVector=pp-centermassPosition;float l=dot(distVector,distVector);float dist=sqrt(l);if(l>0.0){float angle=atan(distVector.y,distVector.x);float c=alpha*repulsion*centermass.b;float distanceMin2=1.0;if(l<distanceMin2)l=sqrt(distanceMin2*l);float addV=c/sqrt(l);add=addV*vec2(cos(angle),sin(angle));}}return add;}void main(){vec4 pointPosition=texture2D(position,index);vec4 random=texture2D(randomValues,index);vec4 velocity=vec4(0.0);velocity.xy+=calcAdd(pointPosition.xy/levelTextureSize,pointPosition.xy);velocity.xy+=velocity.xy*random.rg;gl_FragColor=velocity;}\"; // eslint-disable-line\nclass $7dda263e87144b68$var$ForceManyBody extends $7dda263e87144b68$var$CoreModule {\n    constructor(){\n        super(...arguments);\n        this.levelsFbos = new Map();\n        this.quadtreeLevels = 0;\n    }\n    create() {\n        var _a;\n        const { reglInstance: reglInstance , config: config , store: store  } = this;\n        this.quadtreeLevels = Math.log2((_a = config.spaceSize) !== null && _a !== void 0 ? _a : $7dda263e87144b68$var$defaultConfigValues.spaceSize);\n        for(let i = 0; i < this.quadtreeLevels; i += 1){\n            const levelTextureSize = Math.pow(2, i + 1);\n            this.levelsFbos.set(`level[${i}]`, reglInstance.framebuffer({\n                shape: [\n                    levelTextureSize,\n                    levelTextureSize\n                ],\n                colorType: \"float\",\n                depth: false,\n                stencil: false\n            }));\n        }\n        // Create random number to prevent point to stick together in one coordinate\n        const randomValuesState = new Float32Array(store.pointsTextureSize * store.pointsTextureSize * 4);\n        for(let i = 0; i < store.pointsTextureSize * store.pointsTextureSize; ++i){\n            randomValuesState[i * 4] = store.getRandomFloat(-1, 1) * 0.00001;\n            randomValuesState[i * 4 + 1] = store.getRandomFloat(-1, 1) * 0.00001;\n        }\n        this.randomValuesFbo = reglInstance.framebuffer({\n            color: reglInstance.texture({\n                data: randomValuesState,\n                shape: [\n                    store.pointsTextureSize,\n                    store.pointsTextureSize,\n                    4\n                ],\n                type: \"float\"\n            }),\n            depth: false,\n            stencil: false\n        });\n    }\n    initPrograms() {\n        const { reglInstance: reglInstance , config: config , store: store , data: data , points: points  } = this;\n        this.clearLevelsCommand = reglInstance({\n            frag: $7dda263e87144b68$var$clearFrag,\n            vert: $7dda263e87144b68$var$updateVert,\n            framebuffer: (_, props)=>props.levelFbo,\n            primitive: \"triangle strip\",\n            count: 4,\n            attributes: {\n                quad: $7dda263e87144b68$var$createQuadBuffer(reglInstance)\n            }\n        });\n        this.calculateLevelsCommand = reglInstance({\n            frag: $7dda263e87144b68$var$calculateLevelFrag,\n            vert: $7dda263e87144b68$var$calculateLevelVert,\n            framebuffer: (_, props)=>props.levelFbo,\n            primitive: \"points\",\n            count: ()=>data.nodes.length,\n            attributes: {\n                indexes: $7dda263e87144b68$var$createIndexesBuffer(reglInstance, store.pointsTextureSize)\n            },\n            uniforms: {\n                position: ()=>points === null || points === void 0 ? void 0 : points.previousPositionFbo,\n                pointsTextureSize: ()=>store.pointsTextureSize,\n                levelTextureSize: (_, props)=>props.levelTextureSize,\n                cellSize: (_, props)=>props.cellSize\n            },\n            blend: {\n                enable: true,\n                func: {\n                    src: \"one\",\n                    dst: \"one\"\n                },\n                equation: {\n                    rgb: \"add\",\n                    alpha: \"add\"\n                }\n            },\n            depth: {\n                enable: false,\n                mask: false\n            },\n            stencil: {\n                enable: false\n            }\n        });\n        this.forceCommand = reglInstance({\n            frag: $7dda263e87144b68$var$forceFrag$2,\n            vert: $7dda263e87144b68$var$updateVert,\n            framebuffer: ()=>points === null || points === void 0 ? void 0 : points.velocityFbo,\n            primitive: \"triangle strip\",\n            count: 4,\n            attributes: {\n                quad: $7dda263e87144b68$var$createQuadBuffer(reglInstance)\n            },\n            uniforms: {\n                position: ()=>points === null || points === void 0 ? void 0 : points.previousPositionFbo,\n                level: (_, props)=>props.level,\n                levels: this.quadtreeLevels,\n                levelFbo: (_, props)=>props.levelFbo,\n                levelTextureSize: (_, props)=>props.levelTextureSize,\n                alpha: ()=>store.alpha,\n                repulsion: ()=>{\n                    var _a;\n                    return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsion;\n                },\n                spaceSize: ()=>config.spaceSize,\n                theta: ()=>{\n                    var _a;\n                    return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsionTheta;\n                }\n            },\n            blend: {\n                enable: true,\n                func: {\n                    src: \"one\",\n                    dst: \"one\"\n                },\n                equation: {\n                    rgb: \"add\",\n                    alpha: \"add\"\n                }\n            },\n            depth: {\n                enable: false,\n                mask: false\n            },\n            stencil: {\n                enable: false\n            }\n        });\n        this.forceFromItsOwnCentermassCommand = reglInstance({\n            frag: $7dda263e87144b68$var$forceCenterFrag,\n            vert: $7dda263e87144b68$var$updateVert,\n            framebuffer: ()=>points === null || points === void 0 ? void 0 : points.velocityFbo,\n            primitive: \"triangle strip\",\n            count: 4,\n            attributes: {\n                quad: $7dda263e87144b68$var$createQuadBuffer(reglInstance)\n            },\n            uniforms: {\n                position: ()=>points === null || points === void 0 ? void 0 : points.previousPositionFbo,\n                randomValues: ()=>this.randomValuesFbo,\n                levelFbo: (_, props)=>props.levelFbo,\n                levelTextureSize: (_, props)=>props.levelTextureSize,\n                alpha: ()=>store.alpha,\n                repulsion: ()=>{\n                    var _a;\n                    return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsion;\n                },\n                spaceSize: ()=>config.spaceSize\n            },\n            blend: {\n                enable: true,\n                func: {\n                    src: \"one\",\n                    dst: \"one\"\n                },\n                equation: {\n                    rgb: \"add\",\n                    alpha: \"add\"\n                }\n            },\n            depth: {\n                enable: false,\n                mask: false\n            },\n            stencil: {\n                enable: false\n            }\n        });\n        this.clearVelocityCommand = reglInstance({\n            frag: $7dda263e87144b68$var$clearFrag,\n            vert: $7dda263e87144b68$var$updateVert,\n            framebuffer: ()=>points === null || points === void 0 ? void 0 : points.velocityFbo,\n            primitive: \"triangle strip\",\n            count: 4,\n            attributes: {\n                quad: $7dda263e87144b68$var$createQuadBuffer(reglInstance)\n            }\n        });\n    }\n    run() {\n        var _a, _b, _c, _d, _e, _f;\n        const { config: config  } = this;\n        for(let i = 0; i < this.quadtreeLevels; i += 1){\n            (_a = this.clearLevelsCommand) === null || _a === void 0 || _a.call(this, {\n                levelFbo: this.levelsFbos.get(`level[${i}]`)\n            });\n            const levelTextureSize = Math.pow(2, i + 1);\n            const cellSize = ((_b = config.spaceSize) !== null && _b !== void 0 ? _b : $7dda263e87144b68$var$defaultConfigValues.spaceSize) / levelTextureSize;\n            (_c = this.calculateLevelsCommand) === null || _c === void 0 || _c.call(this, {\n                levelFbo: this.levelsFbos.get(`level[${i}]`),\n                levelTextureSize: levelTextureSize,\n                cellSize: cellSize\n            });\n        }\n        (_d = this.clearVelocityCommand) === null || _d === void 0 || _d.call(this);\n        for(let i = 0; i < this.quadtreeLevels; i += 1){\n            const levelTextureSize = Math.pow(2, i + 1);\n            (_e = this.forceCommand) === null || _e === void 0 || _e.call(this, {\n                levelFbo: this.levelsFbos.get(`level[${i}]`),\n                levelTextureSize: levelTextureSize,\n                level: i\n            });\n            if (i === this.quadtreeLevels - 1) (_f = this.forceFromItsOwnCentermassCommand) === null || _f === void 0 || _f.call(this, {\n                levelFbo: this.levelsFbos.get(`level[${i}]`),\n                levelTextureSize: levelTextureSize,\n                level: i\n            });\n        }\n    }\n    destroy() {\n        var _a;\n        (_a = this.randomValuesFbo) === null || _a === void 0 || _a.destroy();\n        this.levelsFbos.forEach((fbo)=>{\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (fbo === null || fbo === void 0 ? void 0 : fbo._framebuffer.framebuffer) fbo.destroy();\n        });\n        this.levelsFbos.clear();\n    }\n}\nfunction $7dda263e87144b68$var$forceFrag$1(startLevel, maxLevels) {\n    startLevel = Math.min(startLevel, maxLevels);\n    const delta = maxLevels - startLevel;\n    const calcAdd = `\n    float dist = sqrt(l);\n    if (dist > 0.0) {\n      float c = alpha * repulsion * centermass.b;\n      addVelocity += calcAdd(vec2(x, y), l, c);\n      addVelocity += addVelocity * random.rg;\n    }\n  `;\n    function quad(level) {\n        if (level >= maxLevels) return calcAdd;\n        else {\n            const groupSize = Math.pow(2, level + 1);\n            const iEnding = new Array(level + 1 - delta).fill(0).map((_, l)=>`pow(2.0, ${level - (l + delta)}.0) * i${l + delta}`).join(\"+\");\n            const jEnding = new Array(level + 1 - delta).fill(0).map((_, l)=>`pow(2.0, ${level - (l + delta)}.0) * j${l + delta}`).join(\"+\");\n            return `\n      for (float ij${level} = 0.0; ij${level} < 4.0; ij${level} += 1.0) {\n        float i${level} = 0.0;\n        float j${level} = 0.0;\n        if (ij${level} == 1.0 || ij${level} == 3.0) i${level} = 1.0;\n        if (ij${level} == 2.0 || ij${level} == 3.0) j${level} = 1.0;\n        float i = pow(2.0, ${startLevel}.0) * n / width${level + 1} + ${iEnding};\n        float j = pow(2.0, ${startLevel}.0) * m / width${level + 1} + ${jEnding};\n        float groupPosX = (i + 0.5) / ${groupSize}.0;\n        float groupPosY = (j + 0.5) / ${groupSize}.0;\n        \n        vec4 centermass = texture2D(level[${level}], vec2(groupPosX, groupPosY));\n        if (centermass.r > 0.0 && centermass.g > 0.0 && centermass.b > 0.0) {\n          float x = centermass.r / centermass.b - pointPosition.r;\n          float y = centermass.g / centermass.b - pointPosition.g;\n          float l = x * x + y * y;\n          if ((width${level + 1} * width${level + 1}) / theta < l) {\n            ${calcAdd}\n          } else {\n            ${quad(level + 1)}\n          }\n        }\n      }\n      `;\n        }\n    }\n    return `\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform sampler2D position;\nuniform sampler2D randomValues;\nuniform float spaceSize;\nuniform float repulsion;\nuniform float theta;\nuniform float alpha;\nuniform sampler2D level[${maxLevels}];\nvarying vec2 index;\n\nvec2 calcAdd(vec2 xy, float l, float c) {\n  float distanceMin2 = 1.0;\n  if (l < distanceMin2) l = sqrt(distanceMin2 * l);\n  float add = c / l;\n  return add * xy;\n}\n\nvoid main() {\n  vec4 pointPosition = texture2D(position, index);\n  vec4 random = texture2D(randomValues, index);\n\n  float width0 = spaceSize;\n\n  vec2 velocity = vec2(0.0);\n  vec2 addVelocity = vec2(0.0);\n\n  ${new Array(maxLevels).fill(0).map((_, i)=>`float width${i + 1} = width${i} / 2.0;`).join(\"\\n\")}\n\n  for (float n = 0.0; n < pow(2.0, ${delta}.0); n += 1.0) {\n    for (float m = 0.0; m < pow(2.0, ${delta}.0); m += 1.0) {\n      ${quad(delta)}\n    }\n  }\n\n  velocity -= addVelocity;\n\n  gl_FragColor = vec4(velocity, 0.0, 0.0);\n}\n`;\n}\nclass $7dda263e87144b68$var$ForceManyBodyQuadtree extends $7dda263e87144b68$var$CoreModule {\n    constructor(){\n        super(...arguments);\n        this.levelsFbos = new Map();\n        this.quadtreeLevels = 0;\n    }\n    create() {\n        var _a;\n        const { reglInstance: reglInstance , config: config , store: store  } = this;\n        this.quadtreeLevels = Math.log2((_a = config.spaceSize) !== null && _a !== void 0 ? _a : $7dda263e87144b68$var$defaultConfigValues.spaceSize);\n        for(let i = 0; i < this.quadtreeLevels; i += 1){\n            const levelTextureSize = Math.pow(2, i + 1);\n            this.levelsFbos.set(`level[${i}]`, reglInstance.framebuffer({\n                color: reglInstance.texture({\n                    data: new Float32Array(levelTextureSize * levelTextureSize * 4),\n                    shape: [\n                        levelTextureSize,\n                        levelTextureSize,\n                        4\n                    ],\n                    type: \"float\"\n                }),\n                depth: false,\n                stencil: false\n            }));\n        }\n        // Create random number to prevent point to stick together in one coordinate\n        const randomValuesState = new Float32Array(store.pointsTextureSize * store.pointsTextureSize * 4);\n        for(let i = 0; i < store.pointsTextureSize * store.pointsTextureSize; ++i){\n            randomValuesState[i * 4] = store.getRandomFloat(-1, 1) * 0.00001;\n            randomValuesState[i * 4 + 1] = store.getRandomFloat(-1, 1) * 0.00001;\n        }\n        this.randomValuesFbo = reglInstance.framebuffer({\n            color: reglInstance.texture({\n                data: randomValuesState,\n                shape: [\n                    store.pointsTextureSize,\n                    store.pointsTextureSize,\n                    4\n                ],\n                type: \"float\"\n            }),\n            depth: false,\n            stencil: false\n        });\n    }\n    initPrograms() {\n        var _a, _b;\n        const { reglInstance: reglInstance , config: config , store: store , data: data , points: points  } = this;\n        this.clearLevelsCommand = reglInstance({\n            frag: $7dda263e87144b68$var$clearFrag,\n            vert: $7dda263e87144b68$var$updateVert,\n            framebuffer: (_, props)=>props.levelFbo,\n            primitive: \"triangle strip\",\n            count: 4,\n            attributes: {\n                quad: $7dda263e87144b68$var$createQuadBuffer(reglInstance)\n            }\n        });\n        this.calculateLevelsCommand = reglInstance({\n            frag: $7dda263e87144b68$var$calculateLevelFrag,\n            vert: $7dda263e87144b68$var$calculateLevelVert,\n            framebuffer: (_, props)=>props.levelFbo,\n            primitive: \"points\",\n            count: ()=>data.nodes.length,\n            attributes: {\n                indexes: $7dda263e87144b68$var$createIndexesBuffer(reglInstance, store.pointsTextureSize)\n            },\n            uniforms: {\n                position: ()=>points === null || points === void 0 ? void 0 : points.previousPositionFbo,\n                pointsTextureSize: ()=>store.pointsTextureSize,\n                levelTextureSize: (_, props)=>props.levelTextureSize,\n                cellSize: (_, props)=>props.cellSize\n            },\n            blend: {\n                enable: true,\n                func: {\n                    src: \"one\",\n                    dst: \"one\"\n                },\n                equation: {\n                    rgb: \"add\",\n                    alpha: \"add\"\n                }\n            },\n            depth: {\n                enable: false,\n                mask: false\n            },\n            stencil: {\n                enable: false\n            }\n        });\n        this.quadtreeCommand = reglInstance({\n            frag: $7dda263e87144b68$var$forceFrag$1((_b = (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsionQuadtreeLevels) !== null && _b !== void 0 ? _b : this.quadtreeLevels, this.quadtreeLevels),\n            vert: $7dda263e87144b68$var$updateVert,\n            framebuffer: ()=>points === null || points === void 0 ? void 0 : points.velocityFbo,\n            primitive: \"triangle strip\",\n            count: 4,\n            attributes: {\n                quad: $7dda263e87144b68$var$createQuadBuffer(reglInstance)\n            },\n            uniforms: {\n                position: ()=>points === null || points === void 0 ? void 0 : points.previousPositionFbo,\n                randomValues: ()=>this.randomValuesFbo,\n                spaceSize: ()=>config.spaceSize,\n                repulsion: ()=>{\n                    var _a;\n                    return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsion;\n                },\n                theta: ()=>{\n                    var _a;\n                    return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsionTheta;\n                },\n                alpha: ()=>store.alpha,\n                ...Object.fromEntries(this.levelsFbos)\n            }\n        });\n    }\n    run() {\n        var _a, _b, _c, _d;\n        const { config: config  } = this;\n        for(let i = 0; i < this.quadtreeLevels; i += 1){\n            (_a = this.clearLevelsCommand) === null || _a === void 0 || _a.call(this, {\n                levelFbo: this.levelsFbos.get(`level[${i}]`)\n            });\n            const levelTextureSize = Math.pow(2, i + 1);\n            const cellSize = ((_b = config.spaceSize) !== null && _b !== void 0 ? _b : $7dda263e87144b68$var$defaultConfigValues.spaceSize) / levelTextureSize;\n            (_c = this.calculateLevelsCommand) === null || _c === void 0 || _c.call(this, {\n                levelFbo: this.levelsFbos.get(`level[${i}]`),\n                levelTextureSize: levelTextureSize,\n                cellSize: cellSize\n            });\n        }\n        (_d = this.quadtreeCommand) === null || _d === void 0 || _d.call(this);\n    }\n    destroy() {\n        var _a;\n        (_a = this.randomValuesFbo) === null || _a === void 0 || _a.destroy();\n        this.levelsFbos.forEach((fbo)=>{\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (fbo === null || fbo === void 0 ? void 0 : fbo._framebuffer.framebuffer) fbo.destroy();\n        });\n        this.levelsFbos.clear();\n    }\n}\nvar $7dda263e87144b68$var$forceFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform float repulsion;uniform vec2 mousePos;varying vec2 index;void main(){vec4 pointPosition=texture2D(position,index);vec4 velocity=vec4(0.0);vec2 mouse=mousePos;vec2 distVector=mouse-pointPosition.rg;float dist=sqrt(dot(distVector,distVector));dist=max(dist,10.0);float angle=atan(distVector.y,distVector.x);float addV=100.0*repulsion/(dist*dist);velocity.rg-=addV*vec2(cos(angle),sin(angle));gl_FragColor=velocity;}\"; // eslint-disable-line\nclass $7dda263e87144b68$var$ForceMouse extends $7dda263e87144b68$var$CoreModule {\n    initPrograms() {\n        const { reglInstance: reglInstance , config: config , store: store , points: points  } = this;\n        this.runCommand = reglInstance({\n            frag: $7dda263e87144b68$var$forceFrag,\n            vert: $7dda263e87144b68$var$updateVert,\n            framebuffer: ()=>points === null || points === void 0 ? void 0 : points.velocityFbo,\n            primitive: \"triangle strip\",\n            count: 4,\n            attributes: {\n                quad: $7dda263e87144b68$var$createQuadBuffer(reglInstance)\n            },\n            uniforms: {\n                position: ()=>points === null || points === void 0 ? void 0 : points.previousPositionFbo,\n                mousePos: ()=>store.mousePosition,\n                repulsion: ()=>{\n                    var _a;\n                    return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsionFromMouse;\n                }\n            }\n        });\n    }\n    run() {\n        var _a;\n        (_a = this.runCommand) === null || _a === void 0 || _a.call(this);\n    }\n}\nvar $7dda263e87144b68$var$commonjsGlobal = typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof $parcel$global !== \"undefined\" ? $parcel$global : typeof self !== \"undefined\" ? self : {};\nvar $7dda263e87144b68$var$glBench = {\n    exports: {}\n};\n(function(module, exports) {\n    (function(global1, factory) {\n        module.exports = factory();\n    })($7dda263e87144b68$var$commonjsGlobal, function() {\n        var UISVG = '<div class=\"gl-box\">\\n  <svg viewBox=\"0 0 55 60\">\\n    <text x=\"27\" y=\"56\" class=\"gl-fps\">00 FPS</text>\\n    <text x=\"28\" y=\"8\" class=\"gl-mem\"></text>\\n    <rect x=\"0\" y=\"14\" rx=\"4\" ry=\"4\" width=\"55\" height=\"32\"></rect>\\n    <polyline class=\"gl-chart\"></polyline>\\n  </svg>\\n  <svg viewBox=\"0 0 14 60\" class=\"gl-cpu-svg\">\\n    <line x1=\"7\" y1=\"38\" x2=\"7\" y2=\"11\" class=\"opacity\"/>\\n    <line x1=\"7\" y1=\"38\" x2=\"7\" y2=\"11\" class=\"gl-cpu\" stroke-dasharray=\"0 27\"/>\\n    <path d=\"M5.35 43c-.464 0-.812.377-.812.812v1.16c-.783.1972-1.421.812-1.595 1.624h-1.16c-.435 0-.812.348-.812.812s.348.812.812.812h1.102v1.653H1.812c-.464 0-.812.377-.812.812 0 .464.377.812.812.812h1.131c.1943.783.812 1.392 1.595 1.595v1.131c0 .464.377.812.812.812.464 0 .812-.377.812-.812V53.15h1.653v1.073c0 .464.377.812.812.812.464 0 .812-.377.812-.812v-1.131c.783-.1943 1.392-.812 1.595-1.595h1.131c.464 0 .812-.377.812-.812 0-.464-.377-.812-.812-.812h-1.073V48.22h1.102c.435 0 .812-.348.812-.812s-.348-.812-.812-.812h-1.16c-.1885-.783-.812-1.421-1.595-1.624v-1.131c0-.464-.377-.812-.812-.812-.464 0-.812.377-.812.812v1.073H6.162v-1.073c0-.464-.377-.812-.812-.812zm.58 3.48h2.088c.754 0 1.363.609 1.363 1.363v2.088c0 .754-.609 1.363-1.363 1.363H5.93c-.754 0-1.363-.609-1.363-1.363v-2.088c0-.754.609-1.363 1.363-1.363z\"/>\\n  </svg>\\n  <svg viewBox=\"0 0 14 60\" class=\"gl-gpu-svg\">\\n    <line x1=\"7\" y1=\"38\" x2=\"7\" y2=\"11\" class=\"opacity\"/>\\n    <line x1=\"7\" y1=\"38\" x2=\"7\" y2=\"11\" class=\"gl-gpu\" stroke-dasharray=\"0 27\"/>\\n    <path d=\"M1.94775 43.3772a.736.736 0 10-.00416 1.472c.58535.00231.56465.1288.6348.3197.07015.18975.04933.43585.04933.43585l-.00653.05405v8.671a.736.736 0 101.472 0v-1.4145c.253.09522.52785.1495.81765.1495h5.267c1.2535 0 2.254-.9752 2.254-2.185v-3.105c0-1.2075-1.00625-2.185-2.254-2.185h-5.267c-.28865 0-.5635.05405-.8165.1495.01806-.16445.04209-.598-.1357-1.0787-.22425-.6072-.9499-1.2765-2.0125-1.2765zm2.9095 3.6455c.42435 0 .7659.36225.7659.8119v2.9785c0 .44965-.34155.8119-.7659.8119s-.7659-.36225-.7659-.8119v-2.9785c0-.44965.34155-.8119.7659-.8119zm4.117 0a2.3 2.3 0 012.3 2.3 2.3 2.3 0 01-2.3 2.3 2.3 2.3 0 01-2.3-2.3 2.3 2.3 0 012.3-2.3z\"/>\\n  </svg>\\n</div>';\n        var UICSS = \"#gl-bench {\\n  position:absolute;\\n  left:0;\\n  top:0;\\n  z-index:1000;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  user-select: none;\\n}\\n\\n#gl-bench div {\\n  position: relative;\\n  display: block;\\n  margin: 4px;\\n  padding: 0 7px 0 10px;\\n  background: #6c6;\\n  border-radius: 15px;\\n  cursor: pointer;\\n  opacity: 0.9;\\n}\\n\\n#gl-bench svg {\\n  height: 60px;\\n  margin: 0 -1px;\\n}\\n\\n#gl-bench text {\\n  font-size: 12px;\\n  font-family: Helvetica,Arial,sans-serif;\\n  font-weight: 700;\\n  dominant-baseline: middle;\\n  text-anchor: middle;\\n}\\n\\n#gl-bench .gl-mem {\\n  font-size: 9px;\\n}\\n\\n#gl-bench line {\\n  stroke-width: 5;\\n  stroke: #112211;\\n  stroke-linecap: round;\\n}\\n\\n#gl-bench polyline {\\n  fill: none;\\n  stroke: #112211;\\n  stroke-linecap: round;\\n  stroke-linejoin: round;\\n  stroke-width: 3.5;\\n}\\n\\n#gl-bench rect {\\n  fill: #448844;\\n}\\n\\n#gl-bench .opacity {\\n  stroke: #448844;\\n}\\n\";\n        class GLBench {\n            /** GLBench constructor\n\t     * @param { WebGLRenderingContext | WebGL2RenderingContext } gl context\n\t     * @param { Object | undefined } settings additional settings\n\t     */ constructor(gl, settings = {}){\n                this.css = UICSS;\n                this.svg = UISVG;\n                this.paramLogger = ()=>{};\n                this.chartLogger = ()=>{};\n                this.chartLen = 20;\n                this.chartHz = 20;\n                this.names = [];\n                this.cpuAccums = [];\n                this.gpuAccums = [];\n                this.activeAccums = [];\n                this.chart = new Array(this.chartLen);\n                this.now = ()=>performance && performance.now ? performance.now() : Date.now();\n                this.updateUI = ()=>{\n                    [].forEach.call(this.nodes[\"gl-gpu-svg\"], (node)=>{\n                        node.style.display = this.trackGPU ? \"inline\" : \"none\";\n                    });\n                };\n                Object.assign(this, settings);\n                this.detected = 0;\n                this.finished = [];\n                this.isFramebuffer = 0;\n                this.frameId = 0;\n                // 120hz device detection\n                let rafId, n = 0, t0;\n                let loop = (t)=>{\n                    if (++n < 20) rafId = requestAnimationFrame(loop);\n                    else {\n                        this.detected = Math.ceil(1e3 * n / (t - t0) / 70);\n                        cancelAnimationFrame(rafId);\n                    }\n                    if (!t0) t0 = t;\n                };\n                requestAnimationFrame(loop);\n                // attach gpu profilers\n                if (gl) {\n                    const glFinish = async (t, activeAccums)=>Promise.resolve(setTimeout(()=>{\n                            gl.getError();\n                            const dt = this.now() - t;\n                            activeAccums.forEach((active, i)=>{\n                                if (active) this.gpuAccums[i] += dt;\n                            });\n                        }, 0));\n                    const addProfiler = (fn, self1, target)=>function() {\n                            const t = self1.now();\n                            fn.apply(target, arguments);\n                            if (self1.trackGPU) self1.finished.push(glFinish(t, self1.activeAccums.slice(0)));\n                        };\n                    [\n                        \"drawArrays\",\n                        \"drawElements\",\n                        \"drawArraysInstanced\",\n                        \"drawBuffers\",\n                        \"drawElementsInstanced\",\n                        \"drawRangeElements\"\n                    ].forEach((fn)=>{\n                        if (gl[fn]) gl[fn] = addProfiler(gl[fn], this, gl);\n                    });\n                    gl.getExtension = ((fn, self1)=>function() {\n                            let ext = fn.apply(gl, arguments);\n                            if (ext) [\n                                \"drawElementsInstancedANGLE\",\n                                \"drawBuffersWEBGL\"\n                            ].forEach((fn)=>{\n                                if (ext[fn]) ext[fn] = addProfiler(ext[fn], self1, ext);\n                            });\n                            return ext;\n                        })(gl.getExtension, this);\n                }\n                // init ui and ui loggers\n                if (!this.withoutUI) {\n                    if (!this.dom) this.dom = document.body;\n                    let elm = document.createElement(\"div\");\n                    elm.id = \"gl-bench\";\n                    this.dom.appendChild(elm);\n                    this.dom.insertAdjacentHTML(\"afterbegin\", '<style id=\"gl-bench-style\">' + this.css + \"</style>\");\n                    this.dom = elm;\n                    this.dom.addEventListener(\"click\", ()=>{\n                        this.trackGPU = !this.trackGPU;\n                        this.updateUI();\n                    });\n                    this.paramLogger = ((logger, dom, names)=>{\n                        const classes = [\n                            \"gl-cpu\",\n                            \"gl-gpu\",\n                            \"gl-mem\",\n                            \"gl-fps\",\n                            \"gl-gpu-svg\",\n                            \"gl-chart\"\n                        ];\n                        const nodes = Object.assign({}, classes);\n                        classes.forEach((c)=>nodes[c] = dom.getElementsByClassName(c));\n                        this.nodes = nodes;\n                        return (i, cpu, gpu, mem, fps, totalTime, frameId)=>{\n                            nodes[\"gl-cpu\"][i].style.strokeDasharray = (cpu * 0.27).toFixed(0) + \" 100\";\n                            nodes[\"gl-gpu\"][i].style.strokeDasharray = (gpu * 0.27).toFixed(0) + \" 100\";\n                            nodes[\"gl-mem\"][i].innerHTML = names[i] ? names[i] : mem ? \"mem: \" + mem.toFixed(0) + \"mb\" : \"\";\n                            nodes[\"gl-fps\"][i].innerHTML = fps.toFixed(0) + \" FPS\";\n                            logger(names[i], cpu, gpu, mem, fps, totalTime, frameId);\n                        };\n                    })(this.paramLogger, this.dom, this.names);\n                    this.chartLogger = ((logger, dom)=>{\n                        let nodes = {\n                            \"gl-chart\": dom.getElementsByClassName(\"gl-chart\")\n                        };\n                        return (i, chart, circularId)=>{\n                            let points = \"\";\n                            let len = chart.length;\n                            for(let i = 0; i < len; i++){\n                                let id = (circularId + i + 1) % len;\n                                if (chart[id] != undefined) points = points + \" \" + (55 * i / (len - 1)).toFixed(1) + \",\" + (45 - chart[id] * 22 / 60 / this.detected).toFixed(1);\n                            }\n                            nodes[\"gl-chart\"][i].setAttribute(\"points\", points);\n                            logger(this.names[i], chart, circularId);\n                        };\n                    })(this.chartLogger, this.dom);\n                }\n            }\n            /**\n\t     * Explicit UI add\n\t     * @param { string | undefined } name \n\t     */ addUI(name) {\n                if (this.names.indexOf(name) == -1) {\n                    this.names.push(name);\n                    if (this.dom) {\n                        this.dom.insertAdjacentHTML(\"beforeend\", this.svg);\n                        this.updateUI();\n                    }\n                    this.cpuAccums.push(0);\n                    this.gpuAccums.push(0);\n                    this.activeAccums.push(false);\n                }\n            }\n            /**\n\t     * Increase frameID\n\t     * @param { number | undefined } now\n\t     */ nextFrame(now) {\n                this.frameId++;\n                const t = now ? now : this.now();\n                // params\n                if (this.frameId <= 1) {\n                    this.paramFrame = this.frameId;\n                    this.paramTime = t;\n                } else {\n                    let duration = t - this.paramTime;\n                    if (duration >= 1e3) {\n                        const frameCount = this.frameId - this.paramFrame;\n                        const fps = frameCount / duration * 1e3;\n                        for(let i = 0; i < this.names.length; i++){\n                            const cpu = this.cpuAccums[i] / duration * 100, gpu = this.gpuAccums[i] / duration * 100, mem = performance && performance.memory ? performance.memory.usedJSHeapSize / 1048576 : 0;\n                            this.paramLogger(i, cpu, gpu, mem, fps, duration, frameCount);\n                            this.cpuAccums[i] = 0;\n                            Promise.all(this.finished).then(()=>{\n                                this.gpuAccums[i] = 0;\n                                this.finished = [];\n                            });\n                        }\n                        this.paramFrame = this.frameId;\n                        this.paramTime = t;\n                    }\n                }\n                // chart\n                if (!this.detected || !this.chartFrame) {\n                    this.chartFrame = this.frameId;\n                    this.chartTime = t;\n                    this.circularId = 0;\n                } else {\n                    let timespan = t - this.chartTime;\n                    let hz = this.chartHz * timespan / 1e3;\n                    while(--hz > 0 && this.detected){\n                        const frameCount = this.frameId - this.chartFrame;\n                        const fps = frameCount / timespan * 1e3;\n                        this.chart[this.circularId % this.chartLen] = fps;\n                        for(let i = 0; i < this.names.length; i++)this.chartLogger(i, this.chart, this.circularId);\n                        this.circularId++;\n                        this.chartFrame = this.frameId;\n                        this.chartTime = t;\n                    }\n                }\n            }\n            /**\n\t     * Begin named measurement\n\t     * @param { string | undefined } name\n\t     */ begin(name) {\n                this.updateAccums(name);\n            }\n            /**\n\t     * End named measure\n\t     * @param { string | undefined } name\n\t     */ end(name) {\n                this.updateAccums(name);\n            }\n            updateAccums(name) {\n                let nameId = this.names.indexOf(name);\n                if (nameId == -1) {\n                    nameId = this.names.length;\n                    this.addUI(name);\n                }\n                const t = this.now();\n                const dt = t - this.t0;\n                for(let i = 0; i < nameId + 1; i++)if (this.activeAccums[i]) this.cpuAccums[i] += dt;\n                this.activeAccums[nameId] = !this.activeAccums[nameId];\n                this.t0 = t;\n            }\n        }\n        return GLBench;\n    });\n})($7dda263e87144b68$var$glBench);\nvar $7dda263e87144b68$var$GLBench = $7dda263e87144b68$var$glBench.exports;\nconst $7dda263e87144b68$var$benchCSS = `\n  #gl-bench {\n    position:absolute;\n    right:0;\n    top:0;\n    z-index:1000;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  #gl-bench div {\n    position: relative;\n    display: block;\n    margin: 4px;\n    padding: 0 7px 0 10px;\n    background: #5f69de;\n    border-radius: 15px;\n    cursor: pointer;\n    opacity: 0.9;\n  }\n  #gl-bench svg {\n    height: 60px;\n    margin: 0 -1px;\n  }\n  #gl-bench text {\n    font-size: 12px;\n    font-family: Helvetica,Arial,sans-serif;\n    font-weight: 700;\n    dominant-baseline: middle;\n    text-anchor: middle;\n  }\n  #gl-bench .gl-mem {\n    font-size: 9px;\n  }\n  #gl-bench line {\n    stroke-width: 5;\n    stroke: #112211;\n    stroke-linecap: round;\n  }\n  #gl-bench polyline {\n    fill: none;\n    stroke: #112211;\n    stroke-linecap: round;\n    stroke-linejoin: round;\n    stroke-width: 3.5;\n  }\n  #gl-bench rect {\n    fill: #8288e4;\n  }\n  #gl-bench .opacity {\n    stroke: #8288e4;\n  }\n`;\nclass $7dda263e87144b68$var$FPSMonitor {\n    constructor(canvas){\n        this.destroy();\n        const gl = canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\n        this.bench = new $7dda263e87144b68$var$GLBench(gl, {\n            css: $7dda263e87144b68$var$benchCSS\n        });\n    }\n    begin() {\n        var _a;\n        (_a = this.bench) === null || _a === void 0 || _a.begin(\"frame\");\n    }\n    end(now) {\n        var _a, _b;\n        (_a = this.bench) === null || _a === void 0 || _a.end(\"frame\");\n        (_b = this.bench) === null || _b === void 0 || _b.nextFrame(now);\n    }\n    destroy() {\n        this.bench = undefined;\n        (0, $4506c173c1ba6b79$export$2e2bcd8739ae039)(\"#gl-bench\").remove();\n    }\n}\nclass $7dda263e87144b68$var$GraphData {\n    constructor(){\n        /** Links that have existing source and target nodes  */ this.completeLinks = new Set();\n        this.degree = [];\n        /** Mapping the source node index to a `Set` of target node indices connected to that node */ this.groupedSourceToTargetLinks = new Map();\n        /** Mapping the target node index to a `Set` of source node indices connected to that node */ this.groupedTargetToSourceLinks = new Map();\n        this._nodes = [];\n        this._links = [];\n        /** Mapping the original id to the original node */ this.idToNodeMap = new Map();\n        /** We want to display more important nodes (i.e. with the biggest number of connections)\r\n         * on top of the other. To render them in the right order,\r\n         * we create an array of node indices sorted by degree (number of connections)\r\n         * and and we store multiple maps that help us referencing the right data objects\r\n         * and other properties by original node index, sorted index, and id 👇. */ /** Mapping the sorted index to the original index */ this.sortedIndexToInputIndexMap = new Map();\n        /** Mapping the original index to the sorted index of the node */ this.inputIndexToSortedIndexMap = new Map();\n        /** Mapping the original id to the sorted index of the node */ this.idToSortedIndexMap = new Map();\n        /** Mapping the original index to the original id of the node */ this.inputIndexToIdMap = new Map();\n        /** Mapping the original id to the indegree value of the node */ this.idToIndegreeMap = new Map();\n        /** Mapping the original id to the outdegree value of the node */ this.idToOutdegreeMap = new Map();\n    }\n    get nodes() {\n        return this._nodes;\n    }\n    get links() {\n        return this._links;\n    }\n    get linksNumber() {\n        return this.completeLinks.size;\n    }\n    setData(inputNodes, inputLinks) {\n        this.idToNodeMap.clear();\n        this.idToSortedIndexMap.clear();\n        this.inputIndexToIdMap.clear();\n        this.idToIndegreeMap.clear();\n        this.idToOutdegreeMap.clear();\n        inputNodes.forEach((n, i)=>{\n            this.idToNodeMap.set(n.id, n);\n            this.inputIndexToIdMap.set(i, n.id);\n            this.idToIndegreeMap.set(n.id, 0);\n            this.idToOutdegreeMap.set(n.id, 0);\n        });\n        // Calculate node outdegree/indegree values\n        // And filter links if source/target node does not exist\n        this.completeLinks.clear();\n        inputLinks.forEach((l)=>{\n            const sourceNode = this.idToNodeMap.get(l.source);\n            const targetNode = this.idToNodeMap.get(l.target);\n            if (sourceNode !== undefined && targetNode !== undefined) {\n                this.completeLinks.add(l);\n                const outdegree = this.idToOutdegreeMap.get(sourceNode.id);\n                if (outdegree !== undefined) this.idToOutdegreeMap.set(sourceNode.id, outdegree + 1);\n                const indegree = this.idToIndegreeMap.get(targetNode.id);\n                if (indegree !== undefined) this.idToIndegreeMap.set(targetNode.id, indegree + 1);\n            }\n        });\n        // Calculate node degree value\n        this.degree = new Array(inputNodes.length);\n        inputNodes.forEach((n, i)=>{\n            const outdegree = this.idToOutdegreeMap.get(n.id);\n            const indegree = this.idToIndegreeMap.get(n.id);\n            this.degree[i] = (outdegree !== null && outdegree !== void 0 ? outdegree : 0) + (indegree !== null && indegree !== void 0 ? indegree : 0);\n        });\n        // Sort nodes by degree value\n        this.sortedIndexToInputIndexMap.clear();\n        this.inputIndexToSortedIndexMap.clear();\n        const sortedDegrees = Object.entries(this.degree).sort((a, b)=>a[1] - b[1]);\n        sortedDegrees.forEach(([inputStringedIndex], sortedIndex)=>{\n            const inputIndex = +inputStringedIndex;\n            this.sortedIndexToInputIndexMap.set(sortedIndex, inputIndex);\n            this.inputIndexToSortedIndexMap.set(inputIndex, sortedIndex);\n            this.idToSortedIndexMap.set(this.inputIndexToIdMap.get(inputIndex), sortedIndex);\n        });\n        this.groupedSourceToTargetLinks.clear();\n        this.groupedTargetToSourceLinks.clear();\n        inputLinks.forEach((l)=>{\n            const sourceIndex = this.idToSortedIndexMap.get(l.source);\n            const targetIndex = this.idToSortedIndexMap.get(l.target);\n            if (sourceIndex !== undefined && targetIndex !== undefined) {\n                if (this.groupedSourceToTargetLinks.get(sourceIndex) === undefined) this.groupedSourceToTargetLinks.set(sourceIndex, new Set());\n                const targets = this.groupedSourceToTargetLinks.get(sourceIndex);\n                targets === null || targets === void 0 || targets.add(targetIndex);\n                if (this.groupedTargetToSourceLinks.get(targetIndex) === undefined) this.groupedTargetToSourceLinks.set(targetIndex, new Set());\n                const sources = this.groupedTargetToSourceLinks.get(targetIndex);\n                sources === null || sources === void 0 || sources.add(sourceIndex);\n            }\n        });\n        this._nodes = inputNodes;\n        this._links = inputLinks;\n    }\n    getNodeById(id) {\n        return this.idToNodeMap.get(id);\n    }\n    getNodeByIndex(index) {\n        return this._nodes[index];\n    }\n    getSortedIndexByInputIndex(index) {\n        return this.inputIndexToSortedIndexMap.get(index);\n    }\n    getInputIndexBySortedIndex(index) {\n        return this.sortedIndexToInputIndexMap.get(index);\n    }\n    getSortedIndexById(id) {\n        return id !== undefined ? this.idToSortedIndexMap.get(id) : undefined;\n    }\n    getAdjacentNodes(id) {\n        var _a, _b;\n        const index = this.getSortedIndexById(id);\n        if (index === undefined) return undefined;\n        const outgoingSet = (_a = this.groupedSourceToTargetLinks.get(index)) !== null && _a !== void 0 ? _a : [];\n        const incomingSet = (_b = this.groupedTargetToSourceLinks.get(index)) !== null && _b !== void 0 ? _b : [];\n        return [\n            ...new Set([\n                ...outgoingSet,\n                ...incomingSet\n            ])\n        ].map((index)=>this.getNodeByIndex(this.getInputIndexBySortedIndex(index)));\n    }\n}\nvar $7dda263e87144b68$var$drawStraightFrag = \"precision highp float;\\n#define GLSLIFY 1\\nuniform bool useArrow;varying vec4 rgbaColor;varying vec2 pos;varying float arrowLength;varying float linkWidthArrowWidthRatio;varying float smoothWidthRatio;varying float targetPointSize;float map(float value,float min1,float max1,float min2,float max2){return min2+(value-min1)*(max2-min2)/(max1-min1);}void main(){float opacity=1.0;vec3 color=rgbaColor.rgb;float smoothDelta=smoothWidthRatio/2.0;if(useArrow){float end_arrow=0.5+arrowLength/2.0;float start_arrow=end_arrow-arrowLength;float arrowWidthDelta=linkWidthArrowWidthRatio/2.0;float linkOpacity=rgbaColor.a*smoothstep(0.5-arrowWidthDelta,0.5-arrowWidthDelta-smoothDelta,abs(pos.y));float arrowOpacity=1.0;if(pos.x>start_arrow&&pos.x<start_arrow+arrowLength){float xmapped=map(pos.x,start_arrow,end_arrow,0.0,1.0);arrowOpacity=rgbaColor.a*smoothstep(xmapped-smoothDelta,xmapped,map(abs(pos.y),0.5,0.0,0.0,1.0));if(linkOpacity!=arrowOpacity){linkOpacity+=arrowOpacity;}}opacity=linkOpacity;}else opacity=rgbaColor.a*smoothstep(0.5,0.5-smoothDelta,abs(pos.y));gl_FragColor=vec4(color,opacity);}\"; // eslint-disable-line\nvar $7dda263e87144b68$var$drawStraightVert = \"precision highp float;\\n#define GLSLIFY 1\\nattribute vec2 position,pointA,pointB;attribute vec4 color;attribute float width;uniform sampler2D positions;uniform sampler2D particleSize;uniform sampler2D particleGreyoutStatus;uniform mat3 transform;uniform float pointsTextureSize;uniform float widthScale;uniform float nodeSizeScale;uniform bool useArrow;uniform float arrowSizeScale;uniform float spaceSize;uniform vec2 screenSize;uniform float ratio;uniform vec2 linkVisibilityDistanceRange;uniform float linkVisibilityMinTransparency;uniform float greyoutOpacity;uniform bool scaleNodesOnZoom;varying vec4 rgbaColor;varying vec2 pos;varying float arrowLength;varying float linkWidthArrowWidthRatio;varying float smoothWidthRatio;varying float targetPointSize;float map(float value,float min1,float max1,float min2,float max2){return min2+(value-min1)*(max2-min2)/(max1-min1);}float pointSize(float size){float pSize;if(scaleNodesOnZoom){pSize=size*ratio*transform[0][0];}else{pSize=size*ratio*min(5.0,max(1.0,transform[0][0]*0.01));}return pSize;}void main(){pos=position;vec2 pointTexturePosA=(pointA+0.5)/pointsTextureSize;vec2 pointTexturePosB=(pointB+0.5)/pointsTextureSize;vec4 greyoutStatusA=texture2D(particleGreyoutStatus,pointTexturePosA);vec4 greyoutStatusB=texture2D(particleGreyoutStatus,pointTexturePosB);targetPointSize=pointSize(texture2D(particleSize,pointTexturePosB).r*nodeSizeScale);vec4 pointPositionA=texture2D(positions,pointTexturePosA);vec4 pointPositionB=texture2D(positions,pointTexturePosB);vec2 a=pointPositionA.xy;vec2 b=pointPositionB.xy;vec2 xBasis=b-a;vec2 yBasis=normalize(vec2(-xBasis.y,xBasis.x));vec2 distVector=a-b;float linkDist=sqrt(dot(distVector,distVector));float linkDistPx=linkDist*transform[0][0];targetPointSize=(targetPointSize/(2.0*ratio))/linkDistPx;float linkWidth=width*widthScale;float k=2.0;float arrowWidth=max(5.0,linkWidth*k);arrowWidth*=arrowSizeScale;float arrowWidthPx=arrowWidth/transform[0][0];arrowLength=min(0.3,(0.866*arrowWidthPx*2.0)/linkDist);float smoothWidth=2.0;float arrowExtraWidth=arrowWidth-linkWidth;linkWidth+=smoothWidth/2.0;if(useArrow){linkWidth+=arrowExtraWidth;}smoothWidthRatio=smoothWidth/linkWidth;linkWidthArrowWidthRatio=arrowExtraWidth/linkWidth;float linkWidthPx=linkWidth/transform[0][0];vec3 rgbColor=color.rgb;float opacity=color.a*max(linkVisibilityMinTransparency,map(linkDistPx,linkVisibilityDistanceRange.g,linkVisibilityDistanceRange.r,0.0,1.0));if(greyoutStatusA.r>0.0||greyoutStatusB.r>0.0){opacity*=greyoutOpacity;}rgbaColor=vec4(rgbColor,opacity);vec2 point=a+xBasis*position.x+yBasis*linkWidthPx*position.y;vec2 p=2.0*point/spaceSize-1.0;p*=spaceSize/screenSize;vec3 final=transform*vec3(p,1);gl_Position=vec4(final.rg,0,1);}\"; // eslint-disable-line\nclass $7dda263e87144b68$var$Lines extends $7dda263e87144b68$var$CoreModule {\n    create() {\n        this.updateColor();\n        this.updateWidth();\n    }\n    initPrograms() {\n        const { reglInstance: reglInstance , config: config , store: store , data: data , points: points  } = this;\n        const { pointsTextureSize: pointsTextureSize  } = store;\n        const geometryLinkBuffer = {\n            buffer: reglInstance.buffer([\n                [\n                    0,\n                    -0.5\n                ],\n                [\n                    1,\n                    -0.5\n                ],\n                [\n                    1,\n                    0.5\n                ],\n                [\n                    0,\n                    -0.5\n                ],\n                [\n                    1,\n                    0.5\n                ],\n                [\n                    0,\n                    0.5\n                ]\n            ]),\n            divisor: 0\n        };\n        const instancePoints = [];\n        data.completeLinks.forEach((l)=>{\n            const toIndex = data.getSortedIndexById(l.target);\n            const fromIndex = data.getSortedIndexById(l.source);\n            const fromX = fromIndex % pointsTextureSize;\n            const fromY = Math.floor(fromIndex / pointsTextureSize);\n            const toX = toIndex % pointsTextureSize;\n            const toY = Math.floor(toIndex / pointsTextureSize);\n            instancePoints.push([\n                fromX,\n                fromY\n            ]);\n            instancePoints.push([\n                toX,\n                toY\n            ]);\n        });\n        const pointsBuffer = reglInstance.buffer(instancePoints);\n        this.drawStraightCommand = reglInstance({\n            vert: $7dda263e87144b68$var$drawStraightVert,\n            frag: $7dda263e87144b68$var$drawStraightFrag,\n            attributes: {\n                position: geometryLinkBuffer,\n                pointA: {\n                    buffer: ()=>pointsBuffer,\n                    divisor: 1,\n                    offset: Float32Array.BYTES_PER_ELEMENT * 0,\n                    stride: Float32Array.BYTES_PER_ELEMENT * 4\n                },\n                pointB: {\n                    buffer: ()=>pointsBuffer,\n                    divisor: 1,\n                    offset: Float32Array.BYTES_PER_ELEMENT * 2,\n                    stride: Float32Array.BYTES_PER_ELEMENT * 4\n                },\n                color: {\n                    buffer: ()=>this.colorBuffer,\n                    divisor: 1,\n                    offset: Float32Array.BYTES_PER_ELEMENT * 0,\n                    stride: Float32Array.BYTES_PER_ELEMENT * 4\n                },\n                width: {\n                    buffer: ()=>this.widthBuffer,\n                    divisor: 1,\n                    offset: Float32Array.BYTES_PER_ELEMENT * 0,\n                    stride: Float32Array.BYTES_PER_ELEMENT * 1\n                }\n            },\n            uniforms: {\n                positions: ()=>points === null || points === void 0 ? void 0 : points.currentPositionFbo,\n                particleSize: ()=>points === null || points === void 0 ? void 0 : points.sizeFbo,\n                particleGreyoutStatus: ()=>points === null || points === void 0 ? void 0 : points.greyoutStatusFbo,\n                transform: ()=>store.transform,\n                pointsTextureSize: ()=>store.pointsTextureSize,\n                nodeSizeScale: ()=>config.nodeSizeScale,\n                widthScale: ()=>config.linkWidthScale,\n                useArrow: ()=>config.linkArrows,\n                arrowSizeScale: ()=>config.linkArrowsSizeScale,\n                spaceSize: ()=>config.spaceSize,\n                screenSize: ()=>store.screenSize,\n                ratio: ()=>config.pixelRatio,\n                linkVisibilityDistanceRange: ()=>config.linkVisibilityDistanceRange,\n                linkVisibilityMinTransparency: ()=>config.linkVisibilityMinTransparency,\n                greyoutOpacity: ()=>config.linkGreyoutOpacity,\n                scaleNodesOnZoom: ()=>config.scaleNodesOnZoom\n            },\n            cull: {\n                enable: true,\n                face: \"back\"\n            },\n            blend: {\n                enable: true,\n                func: {\n                    dstRGB: \"one minus src alpha\",\n                    srcRGB: \"src alpha\",\n                    dstAlpha: \"one minus src alpha\",\n                    srcAlpha: \"one\"\n                },\n                equation: {\n                    rgb: \"add\",\n                    alpha: \"add\"\n                }\n            },\n            depth: {\n                enable: false,\n                mask: false\n            },\n            count: 6,\n            instances: ()=>data.linksNumber\n        });\n    }\n    draw() {\n        var _a;\n        if (!this.colorBuffer || !this.widthBuffer) return;\n        (_a = this.drawStraightCommand) === null || _a === void 0 || _a.call(this);\n    }\n    updateColor() {\n        const { reglInstance: reglInstance , config: config , data: data  } = this;\n        const instancePoints = [];\n        data.completeLinks.forEach((l)=>{\n            var _a;\n            const c = (_a = $7dda263e87144b68$var$getValue(l, config.linkColor)) !== null && _a !== void 0 ? _a : $7dda263e87144b68$var$defaultLinkColor;\n            const rgba = $7dda263e87144b68$var$getRgbaColor(c);\n            instancePoints.push(rgba);\n        });\n        this.colorBuffer = reglInstance.buffer(instancePoints);\n    }\n    updateWidth() {\n        const { reglInstance: reglInstance , config: config , data: data  } = this;\n        const instancePoints = [];\n        data.completeLinks.forEach((l)=>{\n            const linkWidth = $7dda263e87144b68$var$getValue(l, config.linkWidth);\n            instancePoints.push([\n                linkWidth !== null && linkWidth !== void 0 ? linkWidth : $7dda263e87144b68$var$defaultLinkWidth\n            ]);\n        });\n        this.widthBuffer = reglInstance.buffer(instancePoints);\n    }\n    destroy() {\n        var _a, _b;\n        (_a = this.colorBuffer) === null || _a === void 0 || _a.destroy();\n        (_b = this.widthBuffer) === null || _b === void 0 || _b.destroy();\n    }\n}\nfunction $7dda263e87144b68$var$createColorBuffer(data, reglInstance, textureSize, colorAccessor) {\n    var _a;\n    const initialState = new Float32Array(textureSize * textureSize * 4);\n    for(let i = 0; i < data.nodes.length; ++i){\n        const sortedIndex = data.getSortedIndexByInputIndex(i);\n        const node = data.nodes[i];\n        if (node && sortedIndex !== undefined) {\n            const c = (_a = $7dda263e87144b68$var$getValue(node, colorAccessor)) !== null && _a !== void 0 ? _a : $7dda263e87144b68$var$defaultNodeColor;\n            const rgba = $7dda263e87144b68$var$getRgbaColor(c);\n            initialState[sortedIndex * 4 + 0] = rgba[0];\n            initialState[sortedIndex * 4 + 1] = rgba[1];\n            initialState[sortedIndex * 4 + 2] = rgba[2];\n            initialState[sortedIndex * 4 + 3] = rgba[3];\n        }\n    }\n    const initialTexture = reglInstance.texture({\n        data: initialState,\n        width: textureSize,\n        height: textureSize,\n        type: \"float\"\n    });\n    return reglInstance.framebuffer({\n        color: initialTexture,\n        depth: false,\n        stencil: false\n    });\n}\nfunction $7dda263e87144b68$var$createGreyoutStatusBuffer(selectedIndices, reglInstance, textureSize) {\n    // Greyout status: 0 - false, highlighted or normal point; 1 - true, greyout point\n    const initialState = new Float32Array(textureSize * textureSize * 4).fill(selectedIndices ? 1 : 0);\n    if (selectedIndices) for (const selectedIndex of selectedIndices)initialState[selectedIndex * 4] = 0;\n    const initialTexture = reglInstance.texture({\n        data: initialState,\n        width: textureSize,\n        height: textureSize,\n        type: \"float\"\n    });\n    return reglInstance.framebuffer({\n        color: initialTexture,\n        depth: false,\n        stencil: false\n    });\n}\nvar $7dda263e87144b68$var$drawPointsFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nvarying vec2 index;varying vec3 rgbColor;varying float alpha;const float smoothing=0.9;void main(){if(alpha==0.0){discard;}float r=0.0;float delta=0.0;vec2 cxy=2.0*gl_PointCoord-1.0;r=dot(cxy,cxy);float opacity=alpha*(1.0-smoothstep(smoothing,1.0,r));gl_FragColor=vec4(rgbColor,opacity);}\"; // eslint-disable-line\nvar $7dda263e87144b68$var$drawPointsVert = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nattribute vec2 indexes;uniform sampler2D positions;uniform sampler2D particleColor;uniform sampler2D particleGreyoutStatus;uniform sampler2D particleSize;uniform float ratio;uniform mat3 transform;uniform float pointsTextureSize;uniform float sizeScale;uniform float spaceSize;uniform vec2 screenSize;uniform float greyoutOpacity;uniform bool scaleNodesOnZoom;varying vec2 index;varying vec3 rgbColor;varying float alpha;float pointSize(float size){float pSize;if(scaleNodesOnZoom){pSize=size*ratio*transform[0][0];}else{pSize=size*ratio*min(5.0,max(1.0,transform[0][0]*0.01));}return pSize;}void main(){index=indexes;vec4 pointPosition=texture2D(positions,(index+0.5)/pointsTextureSize);vec2 point=pointPosition.rg;vec2 p=2.0*point/spaceSize-1.0;p*=spaceSize/screenSize;vec3 final=transform*vec3(p,1);gl_Position=vec4(final.rg,0,1);vec4 pSize=texture2D(particleSize,(index+0.5)/pointsTextureSize);float size=pSize.r*sizeScale;vec4 pColor=texture2D(particleColor,(index+0.5)/pointsTextureSize);rgbColor=pColor.rgb;gl_PointSize=pointSize(size);alpha=pColor.a;vec4 greyoutStatus=texture2D(particleGreyoutStatus,(index+0.5)/pointsTextureSize);if(greyoutStatus.r>0.0){alpha*=greyoutOpacity;}}\"; // eslint-disable-line\nvar $7dda263e87144b68$var$findPointsOnAreaSelectionFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform sampler2D particleSize;uniform float sizeScale;uniform float spaceSize;uniform vec2 screenSize;uniform float ratio;uniform mat3 transform;uniform vec2 selection[2];uniform bool scaleNodesOnZoom;uniform float maxPointSize;varying vec2 index;float pointSize(float size){float pSize;if(scaleNodesOnZoom){pSize=size*ratio*transform[0][0];}else{pSize=size*ratio*min(5.0,max(1.0,transform[0][0]*0.01));}return min(pSize,maxPointSize);}void main(){vec4 pointPosition=texture2D(position,index);vec2 p=2.0*pointPosition.rg/spaceSize-1.0;p*=spaceSize/screenSize;vec3 final=transform*vec3(p,1);vec4 pSize=texture2D(particleSize,index);float size=pSize.r*sizeScale;float left=2.0*(selection[0].x-0.5*pointSize(size))/screenSize.x-1.0;float right=2.0*(selection[1].x+0.5*pointSize(size))/screenSize.x-1.0;float top=2.0*(selection[0].y-0.5*pointSize(size))/screenSize.y-1.0;float bottom=2.0*(selection[1].y+0.5*pointSize(size))/screenSize.y-1.0;gl_FragColor=vec4(0.0,0.0,pointPosition.rg);if(final.x>=left&&final.x<=right&&final.y>=top&&final.y<=bottom){gl_FragColor.r=1.0;}}\"; // eslint-disable-line\nvar $7dda263e87144b68$var$drawHighlightedFrag = \"precision mediump float;\\n#define GLSLIFY 1\\nuniform vec4 color;uniform float width;varying vec2 pos;const float smoothing=1.05;void main(){vec2 cxy=pos;float r=dot(cxy,cxy);float opacity=smoothstep(r,r*smoothing,1.0);float stroke=smoothstep(width,width*smoothing,r);gl_FragColor=vec4(color.rgb,opacity*stroke*color.a);}\"; // eslint-disable-line\nvar $7dda263e87144b68$var$drawHighlightedVert = \"precision mediump float;\\n#define GLSLIFY 1\\nattribute vec2 quad;uniform sampler2D positions;uniform sampler2D particleSize;uniform mat3 transform;uniform float pointsTextureSize;uniform float sizeScale;uniform float spaceSize;uniform vec2 screenSize;uniform bool scaleNodesOnZoom;uniform float pointIndex;uniform float maxPointSize;uniform vec4 color;varying vec2 pos;float pointSize(float size){float pSize;if(scaleNodesOnZoom){pSize=size*transform[0][0];}else{pSize=size*min(5.0,max(1.0,transform[0][0]*0.01));}return min(pSize,maxPointSize);}const float relativeRingRadius=1.3;void main(){pos=quad;vec2 ij=vec2(mod(pointIndex,pointsTextureSize),floor(pointIndex/pointsTextureSize))+0.5;vec4 pointPosition=texture2D(positions,ij/pointsTextureSize);vec4 pSize=texture2D(particleSize,ij/pointsTextureSize);float size=(pointSize(pSize.r*sizeScale)*relativeRingRadius)/transform[0][0];float radius=size*0.5;vec2 a=pointPosition.xy;vec2 b=pointPosition.xy+vec2(0.0,radius);vec2 xBasis=b-a;vec2 yBasis=normalize(vec2(-xBasis.y,xBasis.x));vec2 point=a+xBasis*quad.x+yBasis*radius*quad.y;vec2 p=2.0*point/spaceSize-1.0;p*=spaceSize/screenSize;vec3 final=transform*vec3(p,1);gl_Position=vec4(final.rg,0,1);}\"; // eslint-disable-line\nvar $7dda263e87144b68$var$findHoveredPointFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nvarying vec4 rgba;void main(){gl_FragColor=rgba;}\"; // eslint-disable-line\nvar $7dda263e87144b68$var$findHoveredPointVert = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform float pointsTextureSize;uniform sampler2D particleSize;uniform float sizeScale;uniform float spaceSize;uniform vec2 screenSize;uniform float ratio;uniform mat3 transform;uniform vec2 mousePosition;uniform bool scaleNodesOnZoom;uniform float maxPointSize;attribute vec2 indexes;varying vec4 rgba;float pointSize(float size){float pSize;if(scaleNodesOnZoom){pSize=size*ratio*transform[0][0];}else{pSize=size*ratio*min(5.0,max(1.0,transform[0][0]*0.01));}return min(pSize,maxPointSize);}float euclideanDistance(float x1,float x2,float y1,float y2){return sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));}void main(){vec4 pointPosition=texture2D(position,(indexes+0.5)/pointsTextureSize);vec2 p=2.0*pointPosition.rg/spaceSize-1.0;p*=spaceSize/screenSize;vec3 final=transform*vec3(p,1);vec4 pSize=texture2D(particleSize,indexes/pointsTextureSize);float size=pSize.r*sizeScale;float pointRadius=0.5*pointSize(size);vec2 pointScreenPosition=(final.xy+1.0)*screenSize/2.0;rgba=vec4(0.0);gl_Position=vec4(0.5,0.5,0.0,1.0);if(euclideanDistance(pointScreenPosition.x,mousePosition.x,pointScreenPosition.y,mousePosition.y)<pointRadius){float index=indexes.g*pointsTextureSize+indexes.r;rgba=vec4(index,pSize.r,pointPosition.xy);gl_Position=vec4(-0.5,-0.5,0.0,1.0);}gl_PointSize=1.0;}\"; // eslint-disable-line\nfunction $7dda263e87144b68$var$getNodeSize(node, sizeAccessor) {\n    const size = $7dda263e87144b68$var$getValue(node, sizeAccessor);\n    return size !== null && size !== void 0 ? size : $7dda263e87144b68$var$defaultNodeSize;\n}\nfunction $7dda263e87144b68$var$createSizeBuffer(data, reglInstance, pointTextureSize, sizeAccessor) {\n    const numParticles = data.nodes.length;\n    const initialState = new Float32Array(pointTextureSize * pointTextureSize * 4);\n    for(let i = 0; i < numParticles; ++i){\n        const sortedIndex = data.getSortedIndexByInputIndex(i);\n        const node = data.nodes[i];\n        if (node && sortedIndex !== undefined) initialState[sortedIndex * 4] = $7dda263e87144b68$var$getNodeSize(node, sizeAccessor);\n    }\n    const initialTexture = reglInstance.texture({\n        data: initialState,\n        width: pointTextureSize,\n        height: pointTextureSize,\n        type: \"float\"\n    });\n    return reglInstance.framebuffer({\n        color: initialTexture,\n        depth: false,\n        stencil: false\n    });\n}\nvar $7dda263e87144b68$var$updatePositionFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform sampler2D velocity;uniform float friction;uniform float spaceSize;varying vec2 index;void main(){vec4 pointPosition=texture2D(position,index);vec4 pointVelocity=texture2D(velocity,index);pointVelocity.rg*=friction;pointPosition.rg+=pointVelocity.rg;pointPosition.r=clamp(pointPosition.r,0.0,spaceSize);pointPosition.g=clamp(pointPosition.g,0.0,spaceSize);gl_FragColor=pointPosition;}\"; // eslint-disable-line\nfunction $7dda263e87144b68$var$createTrackedPositionsBuffer(indices, reglInstance) {\n    const size = Math.ceil(Math.sqrt(indices.length));\n    return reglInstance.framebuffer({\n        shape: [\n            size,\n            size\n        ],\n        depth: false,\n        stencil: false,\n        colorType: \"float\"\n    });\n}\nfunction $7dda263e87144b68$var$createTrackedIndicesBuffer(indices, pointsTextureSize, reglInstance) {\n    const size = Math.ceil(Math.sqrt(indices.length));\n    const initialState = new Float32Array(size * size * 4).fill(-1);\n    for (const [i, sortedIndex] of indices.entries())if (sortedIndex !== undefined) {\n        initialState[i * 4] = sortedIndex % pointsTextureSize;\n        initialState[i * 4 + 1] = Math.floor(sortedIndex / pointsTextureSize);\n        initialState[i * 4 + 2] = 0;\n        initialState[i * 4 + 3] = 0;\n    }\n    const initialTexture = reglInstance.texture({\n        data: initialState,\n        width: size,\n        height: size,\n        type: \"float\"\n    });\n    return reglInstance.framebuffer({\n        color: initialTexture,\n        depth: false,\n        stencil: false\n    });\n}\nvar $7dda263e87144b68$var$trackPositionsFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform sampler2D trackedIndices;uniform float pointsTextureSize;varying vec2 index;void main(){vec4 trackedPointIndicies=texture2D(trackedIndices,index);if(trackedPointIndicies.r<0.0)discard;vec4 pointPosition=texture2D(position,(trackedPointIndicies.rg+0.5)/pointsTextureSize);gl_FragColor=vec4(pointPosition.rg,1.0,1.0);}\"; // eslint-disable-line\nclass $7dda263e87144b68$var$Points extends $7dda263e87144b68$var$CoreModule {\n    constructor(){\n        super(...arguments);\n        this.trackedPositionsById = new Map();\n    }\n    create() {\n        var _a, _b;\n        const { reglInstance: reglInstance , config: config , store: store , data: data  } = this;\n        const { spaceSize: spaceSize  } = config;\n        const { pointsTextureSize: pointsTextureSize  } = store;\n        const numParticles = data.nodes.length;\n        const initialState = new Float32Array(pointsTextureSize * pointsTextureSize * 4);\n        for(let i = 0; i < numParticles; ++i){\n            const sortedIndex = this.data.getSortedIndexByInputIndex(i);\n            const node = data.nodes[i];\n            if (node && sortedIndex !== undefined) {\n                const space = spaceSize !== null && spaceSize !== void 0 ? spaceSize : $7dda263e87144b68$var$defaultConfigValues.spaceSize;\n                initialState[sortedIndex * 4 + 0] = (_a = node.x) !== null && _a !== void 0 ? _a : space * store.getRandomFloat(0.495, 0.505);\n                initialState[sortedIndex * 4 + 1] = (_b = node.y) !== null && _b !== void 0 ? _b : space * store.getRandomFloat(0.495, 0.505);\n            }\n        }\n        // Create position buffer\n        this.currentPositionFbo = reglInstance.framebuffer({\n            color: reglInstance.texture({\n                data: initialState,\n                shape: [\n                    pointsTextureSize,\n                    pointsTextureSize,\n                    4\n                ],\n                type: \"float\"\n            }),\n            depth: false,\n            stencil: false\n        });\n        this.previousPositionFbo = reglInstance.framebuffer({\n            color: reglInstance.texture({\n                data: initialState,\n                shape: [\n                    pointsTextureSize,\n                    pointsTextureSize,\n                    4\n                ],\n                type: \"float\"\n            }),\n            depth: false,\n            stencil: false\n        });\n        // Create velocity buffer\n        this.velocityFbo = reglInstance.framebuffer({\n            color: reglInstance.texture({\n                data: new Float32Array(pointsTextureSize * pointsTextureSize * 4).fill(0),\n                shape: [\n                    pointsTextureSize,\n                    pointsTextureSize,\n                    4\n                ],\n                type: \"float\"\n            }),\n            depth: false,\n            stencil: false\n        });\n        // Create selected points buffer\n        this.selectedFbo = reglInstance.framebuffer({\n            color: reglInstance.texture({\n                data: initialState,\n                shape: [\n                    pointsTextureSize,\n                    pointsTextureSize,\n                    4\n                ],\n                type: \"float\"\n            }),\n            depth: false,\n            stencil: false\n        });\n        this.hoveredFbo = reglInstance.framebuffer({\n            shape: [\n                2,\n                2\n            ],\n            colorType: \"float\",\n            depth: false,\n            stencil: false\n        });\n        this.updateSize();\n        this.updateColor();\n        this.updateGreyoutStatus();\n    }\n    initPrograms() {\n        const { reglInstance: reglInstance , config: config , store: store , data: data  } = this;\n        this.updatePositionCommand = reglInstance({\n            frag: $7dda263e87144b68$var$updatePositionFrag,\n            vert: $7dda263e87144b68$var$updateVert,\n            framebuffer: ()=>this.currentPositionFbo,\n            primitive: \"triangle strip\",\n            count: 4,\n            attributes: {\n                quad: $7dda263e87144b68$var$createQuadBuffer(reglInstance)\n            },\n            uniforms: {\n                position: ()=>this.previousPositionFbo,\n                velocity: ()=>this.velocityFbo,\n                friction: ()=>{\n                    var _a;\n                    return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.friction;\n                },\n                spaceSize: ()=>config.spaceSize\n            }\n        });\n        this.drawCommand = reglInstance({\n            frag: $7dda263e87144b68$var$drawPointsFrag,\n            vert: $7dda263e87144b68$var$drawPointsVert,\n            primitive: \"points\",\n            count: ()=>data.nodes.length,\n            attributes: {\n                indexes: $7dda263e87144b68$var$createIndexesBuffer(reglInstance, store.pointsTextureSize)\n            },\n            uniforms: {\n                positions: ()=>this.currentPositionFbo,\n                particleColor: ()=>this.colorFbo,\n                particleGreyoutStatus: ()=>this.greyoutStatusFbo,\n                particleSize: ()=>this.sizeFbo,\n                ratio: ()=>config.pixelRatio,\n                sizeScale: ()=>config.nodeSizeScale,\n                pointsTextureSize: ()=>store.pointsTextureSize,\n                transform: ()=>store.transform,\n                spaceSize: ()=>config.spaceSize,\n                screenSize: ()=>store.screenSize,\n                greyoutOpacity: ()=>config.nodeGreyoutOpacity,\n                scaleNodesOnZoom: ()=>config.scaleNodesOnZoom\n            },\n            blend: {\n                enable: true,\n                func: {\n                    dstRGB: \"one minus src alpha\",\n                    srcRGB: \"src alpha\",\n                    dstAlpha: \"one minus src alpha\",\n                    srcAlpha: \"one\"\n                },\n                equation: {\n                    rgb: \"add\",\n                    alpha: \"add\"\n                }\n            },\n            depth: {\n                enable: false,\n                mask: false\n            }\n        });\n        this.findPointsOnAreaSelectionCommand = reglInstance({\n            frag: $7dda263e87144b68$var$findPointsOnAreaSelectionFrag,\n            vert: $7dda263e87144b68$var$updateVert,\n            framebuffer: ()=>this.selectedFbo,\n            primitive: \"triangle strip\",\n            count: 4,\n            attributes: {\n                quad: $7dda263e87144b68$var$createQuadBuffer(reglInstance)\n            },\n            uniforms: {\n                position: ()=>this.currentPositionFbo,\n                particleSize: ()=>this.sizeFbo,\n                spaceSize: ()=>config.spaceSize,\n                screenSize: ()=>store.screenSize,\n                sizeScale: ()=>config.nodeSizeScale,\n                transform: ()=>store.transform,\n                ratio: ()=>config.pixelRatio,\n                \"selection[0]\": ()=>store.selectedArea[0],\n                \"selection[1]\": ()=>store.selectedArea[1],\n                scaleNodesOnZoom: ()=>config.scaleNodesOnZoom,\n                maxPointSize: ()=>store.maxPointSize\n            }\n        });\n        this.clearHoveredFboCommand = reglInstance({\n            frag: $7dda263e87144b68$var$clearFrag,\n            vert: $7dda263e87144b68$var$updateVert,\n            framebuffer: this.hoveredFbo,\n            primitive: \"triangle strip\",\n            count: 4,\n            attributes: {\n                quad: $7dda263e87144b68$var$createQuadBuffer(reglInstance)\n            }\n        });\n        this.findHoveredPointCommand = reglInstance({\n            frag: $7dda263e87144b68$var$findHoveredPointFrag,\n            vert: $7dda263e87144b68$var$findHoveredPointVert,\n            primitive: \"points\",\n            count: ()=>data.nodes.length,\n            framebuffer: ()=>this.hoveredFbo,\n            attributes: {\n                indexes: $7dda263e87144b68$var$createIndexesBuffer(reglInstance, store.pointsTextureSize)\n            },\n            uniforms: {\n                position: ()=>this.currentPositionFbo,\n                particleSize: ()=>this.sizeFbo,\n                ratio: ()=>config.pixelRatio,\n                sizeScale: ()=>config.nodeSizeScale,\n                pointsTextureSize: ()=>store.pointsTextureSize,\n                transform: ()=>store.transform,\n                spaceSize: ()=>config.spaceSize,\n                screenSize: ()=>store.screenSize,\n                scaleNodesOnZoom: ()=>config.scaleNodesOnZoom,\n                mousePosition: ()=>store.screenMousePosition,\n                maxPointSize: ()=>store.maxPointSize\n            },\n            depth: {\n                enable: false,\n                mask: false\n            }\n        });\n        this.drawHighlightedCommand = reglInstance({\n            frag: $7dda263e87144b68$var$drawHighlightedFrag,\n            vert: $7dda263e87144b68$var$drawHighlightedVert,\n            attributes: {\n                quad: $7dda263e87144b68$var$createQuadBuffer(reglInstance)\n            },\n            primitive: \"triangle strip\",\n            count: 4,\n            uniforms: {\n                color: reglInstance.prop(\"color\"),\n                width: reglInstance.prop(\"width\"),\n                pointIndex: reglInstance.prop(\"pointIndex\"),\n                positions: ()=>this.currentPositionFbo,\n                particleSize: ()=>this.sizeFbo,\n                sizeScale: ()=>config.nodeSizeScale,\n                pointsTextureSize: ()=>store.pointsTextureSize,\n                transform: ()=>store.transform,\n                spaceSize: ()=>config.spaceSize,\n                screenSize: ()=>store.screenSize,\n                scaleNodesOnZoom: ()=>config.scaleNodesOnZoom,\n                maxPointSize: ()=>store.maxPointSize\n            },\n            blend: {\n                enable: true,\n                func: {\n                    dstRGB: \"one minus src alpha\",\n                    srcRGB: \"src alpha\",\n                    dstAlpha: \"one minus src alpha\",\n                    srcAlpha: \"one\"\n                },\n                equation: {\n                    rgb: \"add\",\n                    alpha: \"add\"\n                }\n            },\n            depth: {\n                enable: false,\n                mask: false\n            }\n        });\n        this.trackPointsCommand = reglInstance({\n            frag: $7dda263e87144b68$var$trackPositionsFrag,\n            vert: $7dda263e87144b68$var$updateVert,\n            framebuffer: ()=>this.trackedPositionsFbo,\n            primitive: \"triangle strip\",\n            count: 4,\n            attributes: {\n                quad: $7dda263e87144b68$var$createQuadBuffer(reglInstance)\n            },\n            uniforms: {\n                position: ()=>this.currentPositionFbo,\n                trackedIndices: ()=>this.trackedIndicesFbo,\n                pointsTextureSize: ()=>store.pointsTextureSize\n            }\n        });\n    }\n    updateColor() {\n        const { reglInstance: reglInstance , config: config , store: store , data: data  } = this;\n        this.colorFbo = $7dda263e87144b68$var$createColorBuffer(data, reglInstance, store.pointsTextureSize, config.nodeColor);\n    }\n    updateGreyoutStatus() {\n        const { reglInstance: reglInstance , store: store  } = this;\n        this.greyoutStatusFbo = $7dda263e87144b68$var$createGreyoutStatusBuffer(store.selectedIndices, reglInstance, store.pointsTextureSize);\n    }\n    updateSize() {\n        const { reglInstance: reglInstance , config: config , store: store , data: data  } = this;\n        this.sizeFbo = $7dda263e87144b68$var$createSizeBuffer(data, reglInstance, store.pointsTextureSize, config.nodeSize);\n    }\n    trackPoints() {\n        var _a;\n        if (!this.trackedIndicesFbo || !this.trackedPositionsFbo) return;\n        (_a = this.trackPointsCommand) === null || _a === void 0 || _a.call(this);\n    }\n    draw() {\n        var _a, _b, _c;\n        (_a = this.drawCommand) === null || _a === void 0 || _a.call(this);\n        if (this.config.renderHighlightedNodeRing) {\n            if (this.store.hoveredNode) (_b = this.drawHighlightedCommand) === null || _b === void 0 || _b.call(this, {\n                width: 0.85,\n                color: this.store.hoveredNodeRingColor,\n                pointIndex: this.store.hoveredNode.index\n            });\n            if (this.store.focusedNode) (_c = this.drawHighlightedCommand) === null || _c === void 0 || _c.call(this, {\n                width: 0.75,\n                color: this.store.focusedNodeRingColor,\n                pointIndex: this.store.focusedNode.index\n            });\n        }\n    }\n    updatePosition() {\n        var _a;\n        (_a = this.updatePositionCommand) === null || _a === void 0 || _a.call(this);\n        this.swapFbo();\n    }\n    findPointsOnAreaSelection() {\n        var _a;\n        (_a = this.findPointsOnAreaSelectionCommand) === null || _a === void 0 || _a.call(this);\n    }\n    findHoveredPoint() {\n        var _a, _b;\n        (_a = this.clearHoveredFboCommand) === null || _a === void 0 || _a.call(this);\n        (_b = this.findHoveredPointCommand) === null || _b === void 0 || _b.call(this);\n    }\n    getNodeRadius(node) {\n        const { nodeSize: nodeSize  } = this.config;\n        return $7dda263e87144b68$var$getNodeSize(node, nodeSize) / 2;\n    }\n    trackNodesByIds(ids) {\n        this.trackedIds = ids.length ? ids : undefined;\n        this.trackedPositionsById.clear();\n        const indices = ids.map((id)=>this.data.getSortedIndexById(id)).filter((d)=>d !== undefined);\n        if (this.trackedIndicesFbo) {\n            this.trackedIndicesFbo.destroy();\n            this.trackedIndicesFbo = undefined;\n        }\n        if (this.trackedPositionsFbo) {\n            this.trackedPositionsFbo.destroy();\n            this.trackedPositionsFbo = undefined;\n        }\n        if (indices.length) {\n            this.trackedIndicesFbo = $7dda263e87144b68$var$createTrackedIndicesBuffer(indices, this.store.pointsTextureSize, this.reglInstance);\n            this.trackedPositionsFbo = $7dda263e87144b68$var$createTrackedPositionsBuffer(indices, this.reglInstance);\n        }\n        this.trackPoints();\n    }\n    getTrackedPositions() {\n        if (!this.trackedIds) return this.trackedPositionsById;\n        const pixels = $7dda263e87144b68$var$readPixels(this.reglInstance, this.trackedPositionsFbo);\n        this.trackedIds.forEach((id, i)=>{\n            const x = pixels[i * 4];\n            const y = pixels[i * 4 + 1];\n            if (x !== undefined && y !== undefined) this.trackedPositionsById.set(id, [\n                x,\n                y\n            ]);\n        });\n        return this.trackedPositionsById;\n    }\n    destroy() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        (_a = this.currentPositionFbo) === null || _a === void 0 || _a.destroy();\n        (_b = this.previousPositionFbo) === null || _b === void 0 || _b.destroy();\n        (_c = this.velocityFbo) === null || _c === void 0 || _c.destroy();\n        (_d = this.selectedFbo) === null || _d === void 0 || _d.destroy();\n        (_e = this.colorFbo) === null || _e === void 0 || _e.destroy();\n        (_f = this.sizeFbo) === null || _f === void 0 || _f.destroy();\n        (_g = this.greyoutStatusFbo) === null || _g === void 0 || _g.destroy();\n        (_h = this.hoveredFbo) === null || _h === void 0 || _h.destroy();\n        (_j = this.trackedIndicesFbo) === null || _j === void 0 || _j.destroy();\n        (_k = this.trackedPositionsFbo) === null || _k === void 0 || _k.destroy();\n    }\n    swapFbo() {\n        const temp = this.previousPositionFbo;\n        this.previousPositionFbo = this.currentPositionFbo;\n        this.currentPositionFbo = temp;\n    }\n}\nconst $7dda263e87144b68$var$ALPHA_MIN = 0.001;\nconst $7dda263e87144b68$var$MAX_POINT_SIZE = 64;\nclass $7dda263e87144b68$var$Store {\n    constructor(){\n        this.pointsTextureSize = 0;\n        this.linksTextureSize = 0;\n        this.alpha = 1;\n        this.transform = (0, $74e6377530482d2d$exports).create();\n        this.backgroundColor = [\n            0,\n            0,\n            0,\n            0\n        ];\n        this.screenSize = [\n            0,\n            0\n        ];\n        this.mousePosition = [\n            0,\n            0\n        ];\n        this.screenMousePosition = [\n            0,\n            0\n        ];\n        this.selectedArea = [\n            [\n                0,\n                0\n            ],\n            [\n                0,\n                0\n            ]\n        ];\n        this.isSimulationRunning = false;\n        this.simulationProgress = 0;\n        this.selectedIndices = null;\n        this.maxPointSize = $7dda263e87144b68$var$MAX_POINT_SIZE;\n        this.hoveredNode = undefined;\n        this.focusedNode = undefined;\n        this.hoveredNodeRingColor = [\n            1,\n            1,\n            1,\n            $7dda263e87144b68$var$hoveredNodeRingOpacity\n        ];\n        this.focusedNodeRingColor = [\n            1,\n            1,\n            1,\n            $7dda263e87144b68$var$focusedNodeRingOpacity\n        ];\n        this.alphaTarget = 0;\n        this.scaleNodeX = (0, $9d892af289cba166$export$2e2bcd8739ae039)();\n        this.scaleNodeY = (0, $9d892af289cba166$export$2e2bcd8739ae039)();\n        this.random = new (0, $dcc60992372e5fa5$export$a92776769f460054)();\n        this.alphaDecay = (decay)=>1 - Math.pow($7dda263e87144b68$var$ALPHA_MIN, 1 / decay);\n    }\n    addRandomSeed(seed) {\n        this.random = this.random.clone(seed);\n    }\n    getRandomFloat(min, max) {\n        return this.random.float(min, max);\n    }\n    updateScreenSize(width, height, spaceSize) {\n        this.screenSize = [\n            width,\n            height\n        ];\n        this.scaleNodeX.domain([\n            0,\n            spaceSize\n        ]).range([\n            (width - spaceSize) / 2,\n            (width + spaceSize) / 2\n        ]);\n        this.scaleNodeY.domain([\n            spaceSize,\n            0\n        ]).range([\n            (height - spaceSize) / 2,\n            (height + spaceSize) / 2\n        ]);\n    }\n    scaleX(x) {\n        return this.scaleNodeX(x);\n    }\n    scaleY(y) {\n        return this.scaleNodeY(y);\n    }\n    setHighlightedNodeRingColor(color) {\n        const convertedRgba = $7dda263e87144b68$var$getRgbaColor(color);\n        this.hoveredNodeRingColor[0] = convertedRgba[0];\n        this.hoveredNodeRingColor[1] = convertedRgba[1];\n        this.hoveredNodeRingColor[2] = convertedRgba[2];\n        this.focusedNodeRingColor[0] = convertedRgba[0];\n        this.focusedNodeRingColor[1] = convertedRgba[1];\n        this.focusedNodeRingColor[2] = convertedRgba[2];\n    }\n    setFocusedNode(node, index) {\n        if (node && index !== undefined) this.focusedNode = {\n            node: node,\n            index: index\n        };\n        else this.focusedNode = undefined;\n    }\n    addAlpha(decay) {\n        return (this.alphaTarget - this.alpha) * this.alphaDecay(decay);\n    }\n}\nclass $7dda263e87144b68$var$Zoom {\n    constructor(store, config){\n        this.eventTransform = (0, $2aeeefb9d4aa62cb$export$f0954fd7d5368655);\n        this.behavior = (0, $2e3210259ae866af$export$2e2bcd8739ae039)().scaleExtent([\n            0.001,\n            Infinity\n        ]).on(\"start\", (e)=>{\n            var _a, _b, _c;\n            this.isRunning = true;\n            const userDriven = !!e.sourceEvent;\n            (_c = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onZoomStart) === null || _c === void 0 || _c.call(_b, e, userDriven);\n        }).on(\"zoom\", (e)=>{\n            var _a, _b, _c;\n            this.eventTransform = e.transform;\n            const { eventTransform: { x: x , y: y , k: k  } , store: { transform: transform , screenSize: screenSize  }  } = this;\n            const w = screenSize[0];\n            const h = screenSize[1];\n            (0, $74e6377530482d2d$exports).projection(transform, w, h);\n            (0, $74e6377530482d2d$exports).translate(transform, transform, [\n                x,\n                y\n            ]);\n            (0, $74e6377530482d2d$exports).scale(transform, transform, [\n                k,\n                k\n            ]);\n            (0, $74e6377530482d2d$exports).translate(transform, transform, [\n                w / 2,\n                h / 2\n            ]);\n            (0, $74e6377530482d2d$exports).scale(transform, transform, [\n                w / 2,\n                h / 2\n            ]);\n            (0, $74e6377530482d2d$exports).scale(transform, transform, [\n                1,\n                -1\n            ]);\n            const userDriven = !!e.sourceEvent;\n            (_c = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onZoom) === null || _c === void 0 || _c.call(_b, e, userDriven);\n        }).on(\"end\", (e)=>{\n            var _a, _b, _c;\n            this.isRunning = false;\n            const userDriven = !!e.sourceEvent;\n            (_c = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onZoomEnd) === null || _c === void 0 || _c.call(_b, e, userDriven);\n        });\n        this.isRunning = false;\n        this.store = store;\n        this.config = config;\n    }\n    getTransform(positions, scale) {\n        if (positions.length === 0) return this.eventTransform;\n        const { store: { screenSize: screenSize , maxPointSize: maxPointSize  }  } = this;\n        const width = screenSize[0];\n        const height = screenSize[1];\n        const xExtent = (0, $960ae2d550011e08$export$2e2bcd8739ae039)(positions.map((d)=>d[0]));\n        const yExtent = (0, $960ae2d550011e08$export$2e2bcd8739ae039)(positions.map((d)=>d[1]));\n        xExtent[0] = this.store.scaleX(xExtent[0] - maxPointSize / 2);\n        xExtent[1] = this.store.scaleX(xExtent[1] + maxPointSize / 2);\n        yExtent[0] = this.store.scaleY(yExtent[0] - maxPointSize / 2);\n        yExtent[1] = this.store.scaleY(yExtent[1] + maxPointSize / 2);\n        const xScale = width / (xExtent[1] - xExtent[0]);\n        const yScale = height / (yExtent[0] - yExtent[1]);\n        const clampedScale = $7dda263e87144b68$var$clamp(scale !== null && scale !== void 0 ? scale : Math.min(xScale, yScale), ...this.behavior.scaleExtent());\n        const xCenter = (xExtent[1] + xExtent[0]) / 2;\n        const yCenter = (yExtent[1] + yExtent[0]) / 2;\n        const translateX = width / 2 - xCenter * clampedScale;\n        const translateY = height / 2 - yCenter * clampedScale;\n        const transform = (0, $2aeeefb9d4aa62cb$export$f0954fd7d5368655).translate(translateX, translateY).scale(clampedScale);\n        return transform;\n    }\n    getDistanceToPoint(position) {\n        const { x: x , y: y , k: k  } = this.eventTransform;\n        const point = this.getTransform([\n            position\n        ], k);\n        const dx = x - point.x;\n        const dy = y - point.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n    getMiddlePointTransform(position) {\n        const { store: { screenSize: screenSize  } , eventTransform: { x: x , y: y , k: k  }  } = this;\n        const width = screenSize[0];\n        const height = screenSize[1];\n        const currX = (width / 2 - x) / k;\n        const currY = (height / 2 - y) / k;\n        const pointX = this.store.scaleX(position[0]);\n        const pointY = this.store.scaleY(position[1]);\n        const centerX = (currX + pointX) / 2;\n        const centerY = (currY + pointY) / 2;\n        const scale = 1;\n        const translateX = width / 2 - centerX * scale;\n        const translateY = height / 2 - centerY * scale;\n        return (0, $2aeeefb9d4aa62cb$export$f0954fd7d5368655).translate(translateX, translateY).scale(scale);\n    }\n    convertSpaceToScreenPosition(spacePosition) {\n        const screenPointX = this.eventTransform.applyX(this.store.scaleX(spacePosition[0]));\n        const screenPointY = this.eventTransform.applyY(this.store.scaleY(spacePosition[1]));\n        return [\n            screenPointX,\n            screenPointY\n        ];\n    }\n    convertSpaceToScreenRadius(spaceRadius) {\n        const { config: { scaleNodesOnZoom: scaleNodesOnZoom  } , store: { maxPointSize: maxPointSize  } , eventTransform: { k: k  }  } = this;\n        let size = spaceRadius * 2;\n        if (scaleNodesOnZoom) size *= k;\n        else size *= Math.min(5.0, Math.max(1.0, k * 0.01));\n        return Math.min(size, maxPointSize) / 2;\n    }\n}\nclass $7dda263e87144b68$export$614db49f3febe941 {\n    constructor(canvas, config){\n        var _a;\n        this.config = new $7dda263e87144b68$var$GraphConfig();\n        this.requestAnimationFrameId = 0;\n        this.isRightClickMouse = false;\n        this.graph = new $7dda263e87144b68$var$GraphData();\n        this.store = new $7dda263e87144b68$var$Store();\n        this.zoomInstance = new $7dda263e87144b68$var$Zoom(this.store, this.config);\n        this.hasBeenRecentlyDestroyed = false;\n        if (config) this.config.init(config);\n        const w = canvas.clientWidth;\n        const h = canvas.clientHeight;\n        this.store.updateScreenSize(w, h, this.config.spaceSize);\n        canvas.width = w * this.config.pixelRatio;\n        canvas.height = h * this.config.pixelRatio;\n        // If the canvas element has no CSS width and height style, the clientWidth and the clientHeight will always\n        // be equal to the width and height canvas attribute.\n        // In order to prevent resize problem assume that canvas CSS style width and height has a value of 100%.\n        if (canvas.style.width === \"\" && canvas.style.height === \"\") (0, $4506c173c1ba6b79$export$2e2bcd8739ae039)(canvas).style(\"width\", \"100%\").style(\"height\", \"100%\");\n        this.canvas = canvas;\n        this.canvasD3Selection = (0, $4506c173c1ba6b79$export$2e2bcd8739ae039)(canvas);\n        this.zoomInstance.behavior.on(\"start.detect\", (e)=>{\n            this.currentEvent = e;\n        }).on(\"zoom.detect\", (e)=>{\n            const userDriven = !!e.sourceEvent;\n            if (userDriven) this.updateMousePosition(e.sourceEvent);\n            this.currentEvent = e;\n        }).on(\"end.detect\", (e)=>{\n            this.currentEvent = e;\n        });\n        this.canvasD3Selection.call(this.zoomInstance.behavior).on(\"click\", this.onClick.bind(this)).on(\"mousemove\", this.onMouseMove.bind(this)).on(\"contextmenu\", this.onRightClickMouse.bind(this));\n        this.reglInstance = (0, (/*@__PURE__*/$parcel$interopDefault($f9d4992238192526$exports)))({\n            canvas: this.canvas,\n            attributes: {\n                antialias: false,\n                preserveDrawingBuffer: true,\n                premultipliedAlpha: false,\n                alpha: false\n            },\n            extensions: [\n                \"OES_texture_float\",\n                \"ANGLE_instanced_arrays\"\n            ]\n        });\n        this.store.maxPointSize = ((_a = this.reglInstance.limits.pointSizeDims[1]) !== null && _a !== void 0 ? _a : $7dda263e87144b68$var$MAX_POINT_SIZE) / this.config.pixelRatio;\n        this.points = new $7dda263e87144b68$var$Points(this.reglInstance, this.config, this.store, this.graph);\n        this.lines = new $7dda263e87144b68$var$Lines(this.reglInstance, this.config, this.store, this.graph, this.points);\n        this.forceGravity = new $7dda263e87144b68$var$ForceGravity(this.reglInstance, this.config, this.store, this.graph, this.points);\n        this.forceCenter = new $7dda263e87144b68$var$ForceCenter(this.reglInstance, this.config, this.store, this.graph, this.points);\n        this.forceManyBody = this.config.useQuadtree ? new $7dda263e87144b68$var$ForceManyBodyQuadtree(this.reglInstance, this.config, this.store, this.graph, this.points) : new $7dda263e87144b68$var$ForceManyBody(this.reglInstance, this.config, this.store, this.graph, this.points);\n        this.forceLinkIncoming = new $7dda263e87144b68$var$ForceLink(this.reglInstance, this.config, this.store, this.graph, this.points);\n        this.forceLinkOutgoing = new $7dda263e87144b68$var$ForceLink(this.reglInstance, this.config, this.store, this.graph, this.points);\n        this.forceMouse = new $7dda263e87144b68$var$ForceMouse(this.reglInstance, this.config, this.store, this.graph, this.points);\n        this.store.backgroundColor = $7dda263e87144b68$var$getRgbaColor(this.config.backgroundColor);\n        if (this.config.highlightedNodeRingColor) this.store.setHighlightedNodeRingColor(this.config.highlightedNodeRingColor);\n        if (this.config.showFPSMonitor) this.fpsMonitor = new $7dda263e87144b68$var$FPSMonitor(this.canvas);\n        if (this.config.randomSeed !== undefined) this.store.addRandomSeed(this.config.randomSeed);\n    }\n    get progress() {\n        return this.store.simulationProgress;\n    }\n    /**\r\n     * A value that gives information about the running simulation status.\r\n     */ get isSimulationRunning() {\n        return this.store.isSimulationRunning;\n    }\n    /**\r\n     * The maximum point size.\r\n     * This value is the maximum size of the `gl.POINTS` primitive that WebGL can render on the user's hardware.\r\n     */ get maxPointSize() {\n        return this.store.maxPointSize;\n    }\n    /**\r\n     * Set or update Cosmos configuration. The changes will be applied in real time.\r\n     * @param config Cosmos configuration object.\r\n     */ setConfig(config) {\n        var _a, _b;\n        const prevConfig = {\n            ...this.config\n        };\n        this.config.init(config);\n        if (prevConfig.linkColor !== this.config.linkColor) this.lines.updateColor();\n        if (prevConfig.nodeColor !== this.config.nodeColor) this.points.updateColor();\n        if (prevConfig.nodeSize !== this.config.nodeSize) this.points.updateSize();\n        if (prevConfig.linkWidth !== this.config.linkWidth) this.lines.updateWidth();\n        if (prevConfig.backgroundColor !== this.config.backgroundColor) this.store.backgroundColor = $7dda263e87144b68$var$getRgbaColor(this.config.backgroundColor);\n        if (prevConfig.highlightedNodeRingColor !== this.config.highlightedNodeRingColor) this.store.setHighlightedNodeRingColor(this.config.highlightedNodeRingColor);\n        if (prevConfig.spaceSize !== this.config.spaceSize || prevConfig.simulation.repulsionQuadtreeLevels !== this.config.simulation.repulsionQuadtreeLevels) this.update(this.store.isSimulationRunning);\n        if (prevConfig.showFPSMonitor !== this.config.showFPSMonitor) {\n            if (this.config.showFPSMonitor) this.fpsMonitor = new $7dda263e87144b68$var$FPSMonitor(this.canvas);\n            else {\n                (_a = this.fpsMonitor) === null || _a === void 0 || _a.destroy();\n                this.fpsMonitor = undefined;\n            }\n        }\n        if (prevConfig.pixelRatio !== this.config.pixelRatio) this.store.maxPointSize = ((_b = this.reglInstance.limits.pointSizeDims[1]) !== null && _b !== void 0 ? _b : $7dda263e87144b68$var$MAX_POINT_SIZE) / this.config.pixelRatio;\n    }\n    /**\r\n     * Pass data to Cosmos.\r\n     * @param nodes Array of nodes.\r\n     * @param links Array of links.\r\n     * @param runSimulation When set to `false`, the simulation won't be started automatically (`true` by default).\r\n     */ setData(nodes, links, runSimulation = true) {\n        if (!nodes.length && !links.length) {\n            this.destroy();\n            this.reglInstance.clear({\n                color: this.store.backgroundColor,\n                depth: 1,\n                stencil: 0\n            });\n            return;\n        }\n        this.graph.setData(nodes, links);\n        this.update(runSimulation);\n    }\n    /**\r\n     * Center the view on a node and zoom in, by node id.\r\n     * @param id Id of the node.\r\n     * @param duration Duration of the animation transition in milliseconds (`700` by default).\r\n     * @param scale Scale value to zoom in or out (`3` by default).\r\n     * @param canZoomOut Set to `false` to prevent zooming out from the node (`true` by default).\r\n     */ zoomToNodeById(id, duration = 700, scale = $7dda263e87144b68$var$defaultScaleToZoom, canZoomOut = true) {\n        const node = this.graph.getNodeById(id);\n        if (!node) return;\n        this.zoomToNode(node, duration, scale, canZoomOut);\n    }\n    /**\r\n     * Center the view on a node and zoom in, by node index.\r\n     * @param index The index of the node in the array of nodes.\r\n     * @param duration Duration of the animation transition in milliseconds (`700` by default).\r\n     * @param scale Scale value to zoom in or out (`3` by default).\r\n     * @param canZoomOut Set to `false` to prevent zooming out from the node (`true` by default).\r\n     */ zoomToNodeByIndex(index, duration = 700, scale = $7dda263e87144b68$var$defaultScaleToZoom, canZoomOut = true) {\n        const node = this.graph.getNodeByIndex(index);\n        if (!node) return;\n        this.zoomToNode(node, duration, scale, canZoomOut);\n    }\n    /**\r\n     * Zoom the view in or out to the specified zoom level.\r\n     * @param value Zoom level\r\n     * @param duration Duration of the zoom in/out transition.\r\n     */ zoom(value, duration = 0) {\n        this.setZoomLevel(value, duration);\n    }\n    /**\r\n     * Zoom the view in or out to the specified zoom level.\r\n     * @param value Zoom level\r\n     * @param duration Duration of the zoom in/out transition.\r\n     */ setZoomLevel(value, duration = 0) {\n        this.canvasD3Selection.transition().duration(duration).call(this.zoomInstance.behavior.scaleTo, value);\n    }\n    /**\r\n     * Get zoom level.\r\n     * @returns Zoom level value of the view.\r\n     */ getZoomLevel() {\n        return this.zoomInstance.eventTransform.k;\n    }\n    /**\r\n     * Get current X and Y coordinates of the nodes.\r\n     * @returns Object where keys are the ids of the nodes and values are corresponding `{ x: number; y: number }` objects.\r\n     */ getNodePositions() {\n        if (this.hasBeenRecentlyDestroyed) return {};\n        const particlePositionPixels = $7dda263e87144b68$var$readPixels(this.reglInstance, this.points.currentPositionFbo);\n        return this.graph.nodes.reduce((acc, curr)=>{\n            const index = this.graph.getSortedIndexById(curr.id);\n            const posX = particlePositionPixels[index * 4 + 0];\n            const posY = particlePositionPixels[index * 4 + 1];\n            if (posX !== undefined && posY !== undefined) acc[curr.id] = {\n                x: posX,\n                y: posY\n            };\n            return acc;\n        }, {});\n    }\n    /**\r\n     * Get current X and Y coordinates of the nodes.\r\n     * @returns A Map object where keys are the ids of the nodes and values are their corresponding X and Y coordinates in the [number, number] format.\r\n     */ getNodePositionsMap() {\n        const positionMap = new Map();\n        if (this.hasBeenRecentlyDestroyed) return positionMap;\n        const particlePositionPixels = $7dda263e87144b68$var$readPixels(this.reglInstance, this.points.currentPositionFbo);\n        return this.graph.nodes.reduce((acc, curr)=>{\n            const index = this.graph.getSortedIndexById(curr.id);\n            const posX = particlePositionPixels[index * 4 + 0];\n            const posY = particlePositionPixels[index * 4 + 1];\n            if (posX !== undefined && posY !== undefined) acc.set(curr.id, [\n                posX,\n                posY\n            ]);\n            return acc;\n        }, positionMap);\n    }\n    /**\r\n     * Get current X and Y coordinates of the nodes.\r\n     * @returns Array of `[x: number, y: number]` arrays.\r\n     */ getNodePositionsArray() {\n        const positions = [];\n        if (this.hasBeenRecentlyDestroyed) return [];\n        const particlePositionPixels = $7dda263e87144b68$var$readPixels(this.reglInstance, this.points.currentPositionFbo);\n        positions.length = this.graph.nodes.length;\n        for(let i = 0; i < this.graph.nodes.length; i += 1){\n            const index = this.graph.getSortedIndexByInputIndex(i);\n            const posX = particlePositionPixels[index * 4 + 0];\n            const posY = particlePositionPixels[index * 4 + 1];\n            if (posX !== undefined && posY !== undefined) positions[i] = [\n                posX,\n                posY\n            ];\n        }\n        return positions;\n    }\n    /**\r\n     * Center and zoom in/out the view to fit all nodes in the scene.\r\n     * @param duration Duration of the center and zoom in/out animation in milliseconds (`250` by default).\r\n     */ fitView(duration = 250) {\n        this.setZoomTransformByNodePositions(this.getNodePositionsArray(), duration);\n    }\n    /**\r\n     * Center and zoom in/out the view to fit nodes by their ids in the scene.\r\n     * @param duration Duration of the center and zoom in/out animation in milliseconds (`250` by default).\r\n     */ fitViewByNodeIds(ids, duration = 250) {\n        const positionsMap = this.getNodePositionsMap();\n        const positions = ids.map((id)=>positionsMap.get(id)).filter((d)=>d !== undefined);\n        this.setZoomTransformByNodePositions(positions, duration);\n    }\n    /** Select nodes inside a rectangular area.\r\n     * @param selection - Array of two corner points `[[left, top], [right, bottom]]`.\r\n     * The `left` and `right` coordinates should be from 0 to the width of the canvas.\r\n     * The `top` and `bottom` coordinates should be from 0 to the height of the canvas. */ selectNodesInRange(selection) {\n        if (selection) {\n            const h = this.store.screenSize[1];\n            this.store.selectedArea = [\n                [\n                    selection[0][0],\n                    h - selection[1][1]\n                ],\n                [\n                    selection[1][0],\n                    h - selection[0][1]\n                ]\n            ];\n            this.points.findPointsOnAreaSelection();\n            const pixels = $7dda263e87144b68$var$readPixels(this.reglInstance, this.points.selectedFbo);\n            this.store.selectedIndices = pixels.map((pixel, i)=>{\n                if (i % 4 === 0 && pixel !== 0) return i / 4;\n                else return -1;\n            }).filter((d)=>d !== -1);\n        } else this.store.selectedIndices = null;\n        this.store.setFocusedNode();\n        this.points.updateGreyoutStatus();\n    }\n    /**\r\n     * Select a node by id. If you want the adjacent nodes to get selected too, provide `true` as the second argument.\r\n     * @param id Id of the node.\r\n     * @param selectAdjacentNodes When set to `true`, selects adjacent nodes (`false` by default).\r\n     */ selectNodeById(id, selectAdjacentNodes = false) {\n        var _a;\n        if (selectAdjacentNodes) {\n            const adjacentNodes = (_a = this.graph.getAdjacentNodes(id)) !== null && _a !== void 0 ? _a : [];\n            this.selectNodesByIds([\n                id,\n                ...adjacentNodes.map((d)=>d.id)\n            ]);\n        } else this.selectNodesByIds([\n            id\n        ]);\n        this.store.setFocusedNode(this.graph.getNodeById(id), this.graph.getSortedIndexById(id));\n    }\n    /**\r\n     * Select a node by index. If you want the adjacent nodes to get selected too, provide `true` as the second argument.\r\n     * @param index The index of the node in the array of nodes.\r\n     * @param selectAdjacentNodes When set to `true`, selects adjacent nodes (`false` by default).\r\n     */ selectNodeByIndex(index, selectAdjacentNodes = false) {\n        const node = this.graph.getNodeByIndex(index);\n        if (node) this.selectNodeById(node.id, selectAdjacentNodes);\n    }\n    /**\r\n     * Select multiples nodes by their ids.\r\n     * @param ids Array of nodes ids.\r\n     */ selectNodesByIds(ids) {\n        this.selectNodesByIndices(ids === null || ids === void 0 ? void 0 : ids.map((d)=>this.graph.getSortedIndexById(d)));\n    }\n    /**\r\n     * Select multiples nodes by their indices.\r\n     * @param indices Array of nodes indices.\r\n     */ selectNodesByIndices(indices) {\n        if (!indices) this.store.selectedIndices = null;\n        else if (indices.length === 0) this.store.selectedIndices = new Float32Array();\n        else this.store.selectedIndices = new Float32Array(indices.filter((d)=>d !== undefined));\n        this.store.setFocusedNode();\n        this.points.updateGreyoutStatus();\n    }\n    /**\r\n     * Unselect all nodes.\r\n     */ unselectNodes() {\n        this.store.selectedIndices = null;\n        this.store.setFocusedNode();\n        this.points.updateGreyoutStatus();\n    }\n    /**\r\n     * Get nodes that are currently selected.\r\n     * @returns Array of selected nodes.\r\n     */ getSelectedNodes() {\n        const { selectedIndices: selectedIndices  } = this.store;\n        if (!selectedIndices) return null;\n        const points = new Array(selectedIndices.length);\n        for (const [i, selectedIndex] of selectedIndices.entries())if (selectedIndex !== undefined) {\n            const index = this.graph.getInputIndexBySortedIndex(selectedIndex);\n            if (index !== undefined) points[i] = this.graph.nodes[index];\n        }\n        return points;\n    }\n    /**\r\n     * Get nodes that are adjacent to a specific node by its id.\r\n     * @param id Id of the node.\r\n     * @returns Array of adjacent nodes.\r\n     */ getAdjacentNodes(id) {\n        return this.graph.getAdjacentNodes(id);\n    }\n    /**\r\n     * Converts the X and Y node coordinates from the space coordinate system to the screen coordinate system.\r\n     * @param spacePosition Array of x and y coordinates in the space coordinate system.\r\n     * @returns Array of x and y coordinates in the screen coordinate system.\r\n     */ spaceToScreenPosition(spacePosition) {\n        return this.zoomInstance.convertSpaceToScreenPosition(spacePosition);\n    }\n    /**\r\n     * Converts the node radius value from the space coordinate system to the screen coordinate system.\r\n     * @param spaceRadius Radius of Node in the space coordinate system.\r\n     * @returns Radius of Node in the screen coordinate system.\r\n     */ spaceToScreenRadius(spaceRadius) {\n        return this.zoomInstance.convertSpaceToScreenRadius(spaceRadius);\n    }\n    /**\r\n     * Get node radius by its index.\r\n     * @param index Index of the node.\r\n     * @returns Radius of the node.\r\n     */ getNodeRadiusByIndex(index) {\n        const node = this.graph.getNodeByIndex(index);\n        return node && this.points.getNodeRadius(node);\n    }\n    /**\r\n     * Get node radius by its id.\r\n     * @param id Id of the node.\r\n     * @returns Radius of the node.\r\n     */ getNodeRadiusById(id) {\n        const node = this.graph.getNodeById(id);\n        return node && this.points.getNodeRadius(node);\n    }\n    /**\r\n     * Track multiple node positions by their ids on each Cosmos tick.\r\n     * @param ids Array of nodes ids.\r\n     */ trackNodePositionsByIds(ids) {\n        this.points.trackNodesByIds(ids);\n    }\n    /**\r\n     * Track multiple node positions by their indices on each Cosmos tick.\r\n     * @param ids Array of nodes indices.\r\n     */ trackNodePositionsByIndices(indices) {\n        this.points.trackNodesByIds(indices.map((index)=>this.graph.getNodeByIndex(index)).filter((d)=>d !== undefined).map((d)=>d.id));\n    }\n    /**\r\n     * Get current X and Y coordinates of the tracked nodes.\r\n     * @returns A Map object where keys are the ids of the nodes and values are their corresponding X and Y coordinates in the [number, number] format.\r\n     */ getTrackedNodePositionsMap() {\n        return this.points.getTrackedPositions();\n    }\n    /**\r\n     * Start the simulation.\r\n     * @param alpha Value from 0 to 1. The higher the value, the more initial energy the simulation will get.\r\n     */ start(alpha = 1) {\n        var _a, _b;\n        if (!this.graph.nodes.length) return;\n        this.store.isSimulationRunning = true;\n        this.store.alpha = alpha;\n        this.store.simulationProgress = 0;\n        (_b = (_a = this.config.simulation).onStart) === null || _b === void 0 || _b.call(_a);\n        this.stopFrames();\n        this.frame();\n    }\n    /**\r\n     * Pause the simulation.\r\n     */ pause() {\n        var _a, _b;\n        this.store.isSimulationRunning = false;\n        (_b = (_a = this.config.simulation).onPause) === null || _b === void 0 || _b.call(_a);\n    }\n    /**\r\n     * Restart the simulation.\r\n     */ restart() {\n        var _a, _b;\n        this.store.isSimulationRunning = true;\n        (_b = (_a = this.config.simulation).onRestart) === null || _b === void 0 || _b.call(_a);\n    }\n    /**\r\n     * Render only one frame of the simulation (stops the simulation if it was running).\r\n     */ step() {\n        this.store.isSimulationRunning = false;\n        this.stopFrames();\n        this.frame();\n    }\n    /**\r\n     * Destroy this Cosmos instance.\r\n     */ destroy() {\n        var _a;\n        this.stopFrames();\n        if (this.hasBeenRecentlyDestroyed) return;\n        this.points.destroy();\n        this.lines.destroy();\n        this.forceCenter.destroy();\n        this.forceLinkIncoming.destroy();\n        this.forceLinkOutgoing.destroy();\n        (_a = this.forceManyBody) === null || _a === void 0 || _a.destroy();\n        this.reglInstance.destroy();\n        this.hasBeenRecentlyDestroyed = true;\n    }\n    /**\r\n     * Create new Cosmos instance.\r\n     */ create() {\n        var _a;\n        this.points.create();\n        this.lines.create();\n        (_a = this.forceManyBody) === null || _a === void 0 || _a.create();\n        this.forceLinkIncoming.create($7dda263e87144b68$var$LinkDirection.INCOMING);\n        this.forceLinkOutgoing.create($7dda263e87144b68$var$LinkDirection.OUTGOING);\n        this.forceCenter.create();\n        this.hasBeenRecentlyDestroyed = false;\n    }\n    update(runSimulation) {\n        const { graph: graph  } = this;\n        this.store.pointsTextureSize = Math.ceil(Math.sqrt(graph.nodes.length));\n        this.store.linksTextureSize = Math.ceil(Math.sqrt(graph.linksNumber * 2));\n        this.destroy();\n        this.create();\n        this.initPrograms();\n        if (runSimulation) this.start();\n        else this.step();\n    }\n    initPrograms() {\n        var _a;\n        this.points.initPrograms();\n        this.lines.initPrograms();\n        this.forceGravity.initPrograms();\n        this.forceLinkIncoming.initPrograms();\n        this.forceLinkOutgoing.initPrograms();\n        this.forceMouse.initPrograms();\n        (_a = this.forceManyBody) === null || _a === void 0 || _a.initPrograms();\n        this.forceCenter.initPrograms();\n    }\n    frame() {\n        const { config: { simulation: simulation , renderLinks: renderLinks  } , store: { alpha: alpha , isSimulationRunning: isSimulationRunning  }  } = this;\n        if (alpha < $7dda263e87144b68$var$ALPHA_MIN && isSimulationRunning) this.end();\n        this.requestAnimationFrameId = window.requestAnimationFrame((now)=>{\n            var _a, _b, _c, _d, _e, _f;\n            (_a = this.fpsMonitor) === null || _a === void 0 || _a.begin();\n            this.resizeCanvas();\n            this.findHoveredPoint();\n            if (this.isRightClickMouse) {\n                if (!isSimulationRunning) this.start(0.1);\n                this.forceMouse.run();\n                this.points.updatePosition();\n            }\n            if (isSimulationRunning && !this.zoomInstance.isRunning) {\n                if (simulation.gravity) {\n                    this.forceGravity.run();\n                    this.points.updatePosition();\n                }\n                if (simulation.center) {\n                    this.forceCenter.run();\n                    this.points.updatePosition();\n                }\n                (_b = this.forceManyBody) === null || _b === void 0 || _b.run();\n                this.points.updatePosition();\n                this.forceLinkIncoming.run();\n                this.points.updatePosition();\n                this.forceLinkOutgoing.run();\n                this.points.updatePosition();\n                this.store.alpha += this.store.addAlpha((_c = this.config.simulation.decay) !== null && _c !== void 0 ? _c : $7dda263e87144b68$var$defaultConfigValues.simulation.decay);\n                if (this.isRightClickMouse) this.store.alpha = Math.max(this.store.alpha, 0.1);\n                this.store.simulationProgress = Math.sqrt(Math.min(1, $7dda263e87144b68$var$ALPHA_MIN / this.store.alpha));\n                (_e = (_d = this.config.simulation).onTick) === null || _e === void 0 || _e.call(_d, this.store.alpha);\n            }\n            this.points.trackPoints();\n            // Clear canvas\n            this.reglInstance.clear({\n                color: this.store.backgroundColor,\n                depth: 1,\n                stencil: 0\n            });\n            if (renderLinks) this.lines.draw();\n            this.points.draw();\n            (_f = this.fpsMonitor) === null || _f === void 0 || _f.end(now);\n            this.currentEvent = undefined;\n            this.frame();\n        });\n    }\n    stopFrames() {\n        if (this.requestAnimationFrameId) window.cancelAnimationFrame(this.requestAnimationFrameId);\n    }\n    end() {\n        var _a, _b;\n        this.store.isSimulationRunning = false;\n        this.store.simulationProgress = 1;\n        (_b = (_a = this.config.simulation).onEnd) === null || _b === void 0 || _b.call(_a);\n    }\n    onClick(event) {\n        var _a, _b, _c, _d, _e, _f;\n        this.store.setFocusedNode((_a = this.store.hoveredNode) === null || _a === void 0 ? void 0 : _a.node, (_b = this.store.hoveredNode) === null || _b === void 0 ? void 0 : _b.index);\n        (_d = (_c = this.config.events).onClick) === null || _d === void 0 || _d.call(_c, (_e = this.store.hoveredNode) === null || _e === void 0 ? void 0 : _e.node, this.store.hoveredNode ? this.graph.getInputIndexBySortedIndex(this.store.hoveredNode.index) : undefined, (_f = this.store.hoveredNode) === null || _f === void 0 ? void 0 : _f.position, event);\n    }\n    updateMousePosition(event) {\n        if (!event || event.offsetX === undefined || event.offsetY === undefined) return;\n        const { x: x , y: y , k: k  } = this.zoomInstance.eventTransform;\n        const h = this.canvas.clientHeight;\n        const mouseX = event.offsetX;\n        const mouseY = event.offsetY;\n        const invertedX = (mouseX - x) / k;\n        const invertedY = (mouseY - y) / k;\n        this.store.mousePosition = [\n            invertedX,\n            h - invertedY\n        ];\n        this.store.mousePosition[0] -= (this.store.screenSize[0] - this.config.spaceSize) / 2;\n        this.store.mousePosition[1] -= (this.store.screenSize[1] - this.config.spaceSize) / 2;\n        this.store.screenMousePosition = [\n            mouseX,\n            this.store.screenSize[1] - mouseY\n        ];\n    }\n    onMouseMove(event) {\n        var _a, _b, _c, _d;\n        this.currentEvent = event;\n        this.updateMousePosition(event);\n        this.isRightClickMouse = event.which === 3;\n        (_b = (_a = this.config.events).onMouseMove) === null || _b === void 0 || _b.call(_a, (_c = this.store.hoveredNode) === null || _c === void 0 ? void 0 : _c.node, this.store.hoveredNode ? this.graph.getInputIndexBySortedIndex(this.store.hoveredNode.index) : undefined, (_d = this.store.hoveredNode) === null || _d === void 0 ? void 0 : _d.position, this.currentEvent);\n    }\n    onRightClickMouse(event) {\n        event.preventDefault();\n    }\n    resizeCanvas() {\n        const prevWidth = this.canvas.width;\n        const prevHeight = this.canvas.height;\n        const w = this.canvas.clientWidth;\n        const h = this.canvas.clientHeight;\n        if (prevWidth !== w * this.config.pixelRatio || prevHeight !== h * this.config.pixelRatio) {\n            this.store.updateScreenSize(w, h, this.config.spaceSize);\n            this.canvas.width = w * this.config.pixelRatio;\n            this.canvas.height = h * this.config.pixelRatio;\n            this.reglInstance.poll();\n            this.canvasD3Selection.call(this.zoomInstance.behavior.transform, this.zoomInstance.eventTransform);\n        }\n    }\n    setZoomTransformByNodePositions(positions, duration = 250, scale) {\n        const transform = this.zoomInstance.getTransform(positions, scale);\n        this.canvasD3Selection.transition().ease((0, $3435b4ae8be5b7c0$export$d6ded66933892ed3)).duration(duration).call(this.zoomInstance.behavior.transform, transform);\n    }\n    zoomToNode(node, duration, scale, canZoomOut) {\n        const { graph: graph , store: { screenSize: screenSize  }  } = this;\n        const positionPixels = $7dda263e87144b68$var$readPixels(this.reglInstance, this.points.currentPositionFbo);\n        const nodeIndex = graph.getSortedIndexById(node.id);\n        if (nodeIndex === undefined) return;\n        const posX = positionPixels[nodeIndex * 4 + 0];\n        const posY = positionPixels[nodeIndex * 4 + 1];\n        if (posX === undefined || posY === undefined) return;\n        const distance = this.zoomInstance.getDistanceToPoint([\n            posX,\n            posY\n        ]);\n        const zoomLevel = canZoomOut ? scale : Math.max(this.getZoomLevel(), scale);\n        if (distance < Math.min(screenSize[0], screenSize[1])) this.setZoomTransformByNodePositions([\n            [\n                posX,\n                posY\n            ]\n        ], duration, zoomLevel);\n        else {\n            const transform = this.zoomInstance.getTransform([\n                [\n                    posX,\n                    posY\n                ]\n            ], zoomLevel);\n            const middle = this.zoomInstance.getMiddlePointTransform([\n                posX,\n                posY\n            ]);\n            this.canvasD3Selection.transition().ease((0, $3435b4ae8be5b7c0$export$5118fc7a1e64441b)).duration(duration / 2).call(this.zoomInstance.behavior.transform, middle).transition().ease((0, $3435b4ae8be5b7c0$export$5be5f5e804d0b60c)).duration(duration / 2).call(this.zoomInstance.behavior.transform, transform);\n        }\n    }\n    findHoveredPoint() {\n        var _a, _b, _c, _d, _e;\n        this.points.findHoveredPoint();\n        let isMouseover = false;\n        let isMouseout = false;\n        const pixels = $7dda263e87144b68$var$readPixels(this.reglInstance, this.points.hoveredFbo);\n        const nodeSize = pixels[1];\n        if (nodeSize) {\n            const index = pixels[0];\n            const inputIndex = this.graph.getInputIndexBySortedIndex(index);\n            const hovered = inputIndex !== undefined ? this.graph.getNodeByIndex(inputIndex) : undefined;\n            if (((_a = this.store.hoveredNode) === null || _a === void 0 ? void 0 : _a.node) !== hovered) isMouseover = true;\n            const pointX = pixels[2];\n            const pointY = pixels[3];\n            this.store.hoveredNode = hovered && {\n                node: hovered,\n                index: index,\n                position: [\n                    pointX,\n                    pointY\n                ]\n            };\n        } else {\n            if (this.store.hoveredNode) isMouseout = true;\n            this.store.hoveredNode = undefined;\n        }\n        if (isMouseover && this.store.hoveredNode) (_c = (_b = this.config.events).onNodeMouseOver) === null || _c === void 0 || _c.call(_b, this.store.hoveredNode.node, this.graph.getInputIndexBySortedIndex(this.graph.getSortedIndexById(this.store.hoveredNode.node.id)), this.store.hoveredNode.position, this.currentEvent);\n        if (isMouseout) (_e = (_d = this.config.events).onNodeMouseOut) === null || _e === void 0 || _e.call(_d, this.currentEvent);\n    }\n}\n\n\nfunction $4250447d44fe847a$export$acb3acf1d1fb10d5(input) {\n    const lines = input.split(\"\\n\");\n    const nodes = [];\n    for (const line of lines){\n        if (!line.includes(\"->\")) continue;\n        const matches = line.trim().match(/^\\s*\"?(\\S+?)\"?\\s*->\\s*\"?(\\S+?)\"?\\s*;?\\s*$/);\n        if (matches == null) continue;\n        const from = matches[1];\n        const to = matches[2];\n        if (!from || !to) continue;\n        const fromNode = nodes.find((n)=>n.id === from);\n        if (fromNode != null) fromNode.edges?.push(to);\n        else nodes.push({\n            id: from,\n            label: from,\n            edges: [\n                to\n            ]\n        });\n        const toNode = nodes.find((n)=>n.id === to);\n        if (!toNode) nodes.push({\n            id: to,\n            label: to,\n            edges: []\n        });\n    }\n    return {\n        nodes: nodes\n    };\n}\n\n\nfunction $26194fbb8e8cc845$export$61fc7d43ac8f84b0(func, timeout = 300) {\n    let timer;\n    return (...args)=>{\n        clearTimeout(timer);\n        // @ts-expect-error\n        timer = setTimeout(()=>{\n            // @ts-expect-error\n            func.apply(this, args);\n        }, timeout);\n    };\n}\n\n\nfunction $3cf17f87d4f90222$export$5f156e41c20211e5(input) {\n    const UNVISITED = -1;\n    const n = input.nodes.length;\n    const [g, indexToId] = $3cf17f87d4f90222$export$69f7c684ad757298(input);\n    let id = 0;\n    const ids = Array(n).fill(UNVISITED);\n    const low = Array(n).fill(0);\n    const onStack = Array(n).fill(false);\n    const stack = [];\n    const dfs = (at)=>{\n        stack.push(at);\n        onStack[at] = true;\n        ids[at] = id;\n        low[at] = id;\n        id += 1;\n        // Visit all neighbors and min low-link on callback\n        for (let to of g[at]){\n            // v = at\n            // w = to\n            if (ids[to] === UNVISITED) {\n                dfs(to);\n                low[at] = Math.min(low[at], low[to]);\n            } else if (onStack[to] === true) low[at] = Math.min(low[at], ids[to]);\n        }\n        // After visiting all `at` neighbors if we're at the start of an SCC, empty\n        // the seen stack until we back to the start of the SCC.\n        if (ids[at] === low[at]) {\n            let node;\n            do {\n                node = stack.pop();\n                onStack[node] = false;\n                low[node] = ids[at];\n            }while (node !== at);\n        }\n    };\n    for(let i = 0; i < n; i++)if (ids[i] === UNVISITED) dfs(i);\n    // This transformed the `low` array into groupings of cycles. If multiple\n    // entries share the same \"lowlink\" value then they are part of an SCC.\n    const cyclesIndex = {};\n    for(let i = 0; i < n; i++){\n        if (cyclesIndex[low[i]] == null) cyclesIndex[low[i]] = [];\n        cyclesIndex[low[i]].push(i);\n    }\n    const cycles = [];\n    for (const [, indexes] of Object.entries(cyclesIndex))// With tarjan's, cycles are only SCCs with more than 1 node\n    if (indexes.length > 1) // Map the indexes back to the user-provided IDs\n    cycles.push(indexes.map((i)=>indexToId[i]));\n    return cycles;\n}\nfunction $3cf17f87d4f90222$export$69f7c684ad757298(input) {\n    const list = {};\n    const idToIndex = {};\n    const indexToId = {};\n    input.nodes.forEach((node, i)=>{\n        idToIndex[node.id] = i;\n        indexToId[i] = node.id;\n    });\n    for(let i = 0; i < input.nodes.length; i++){\n        const node = input.nodes[i];\n        list[i] = [];\n        for (let edge of node.edges ?? [])list[i].push(idToIndex[edge]);\n    }\n    return [\n        list,\n        indexToId\n    ];\n}\n\n\nconst $2ea20df539ddfd90$var$_tmpl$ = /*#__PURE__*/ (0, $478712cee1e6b565$export$ce69bd05624d0c48)(`<a class=\"font-medium text-zinc-400 underline\" href=\"#\"></a>`, 2), $2ea20df539ddfd90$var$_tmpl$2 = /*#__PURE__*/ (0, $478712cee1e6b565$export$ce69bd05624d0c48)(`<pre class=\"bg-slate-700 overflow-auto text-sm rounded-md border p-2 border-slate-600 mb-1\"></pre>`, 2), $2ea20df539ddfd90$var$_tmpl$3 = /*#__PURE__*/ (0, $478712cee1e6b565$export$ce69bd05624d0c48)(`<div class=\"mt-2 text-xs text-zinc-500 text-right\"> results hidden</div>`, 2), $2ea20df539ddfd90$var$_tmpl$4 = /*#__PURE__*/ (0, $478712cee1e6b565$export$ce69bd05624d0c48)(`<div class=\"h-screen flex flex-initial\"><div class=\"w-2/6 overflow-auto bg-slate-800 text-zinc-200 px-2\"><h1 class=\"text-xl my-3\">Load Data</h1><div class=\"flex mb-3\"><button class=\"bg-indigo-500 hover:bg-indigo-700 text-zinc-200 px-2 rounded\">From clipboard</button><div class=\"bg-slate-700 rounded-md border border-dashed px-1 ml-1 border-slate-500\">Drag file here</div></div><h1 class=\"text-xl mb-3\">Tools</h1><div><div class=\"flex my-1 justify-between\"><button class=\"bg-indigo-500 hover:bg-indigo-700 text-zinc-200 px-2 rounded\">Detect cycles</button></div><h1 class=\"text-xl mb-3 mt-3\">Search</h1><div class=\"flex justify-between mb-2\"><input class=\"p-1 w-8/12 border bg-slate-700 border-slate-600 rounded-md\" type=\"text\" placeholder=\"filter nodes\"><div class=\"text-right text-xs self-center\">click item(s) to select</div></div><ul class=\"border border-slate-600 divide-y divide-slate-600 rounded-md text-xs\"></ul></div></div><div class=\"w-5/6 bg-slate-800 relative\"><canvas class=\"h-screen\"></canvas><div class=\"absolute text-sm text-zinc-200 bottom-0 right-0 py-2 px-4 bg-slate-800 border-t border-l border-slate-600 rounded-tl-md\"><div>Nodes: </div><div>Edges: </div></div></div></div>`, 39), $2ea20df539ddfd90$var$_tmpl$5 = /*#__PURE__*/ (0, $478712cee1e6b565$export$ce69bd05624d0c48)(`<li class=\"py-1 px-2 cursor-pointer hover:underline\"><a href=\"#\"></a></li>`, 4);\n// Little hack to \"fix\" hmr with tailwind styles\n// @ts-expect-error\nif (null) // @ts-expect-error\nnull.accept(()=>{\n    document.location.reload();\n});\nconst $2ea20df539ddfd90$var$slate = {\n    50: \"#f8fafc\",\n    100: \"#f1f5f9\",\n    200: \"#e2e8f0\",\n    300: \"#cbd5e1\",\n    400: \"#94a3b8\",\n    500: \"#64748b\",\n    600: \"#475569\",\n    700: \"#334155\",\n    800: \"#1e293b\",\n    900: \"#0f172a\",\n    950: \"#020617\"\n};\nconst $2ea20df539ddfd90$var$tableauColors = [\n    \"#4e79a7\",\n    \"#f28e2b\",\n    \"#e15759\",\n    \"#76b7b2\",\n    \"#59a14f\",\n    \"#edc948\",\n    \"#b07aa1\",\n    \"#ff9da7\",\n    \"#9c755f\",\n    \"#bab0ac\"\n];\nconst $2ea20df539ddfd90$var$MAX_LIST_LENGTH = 25;\nconst $2ea20df539ddfd90$var$Link = (props)=>(()=>{\n        const _el$ = $2ea20df539ddfd90$var$_tmpl$.cloneNode(true);\n        (0, $478712cee1e6b565$export$21a5ca8aa77d35ff)(_el$, ()=>props.children);\n        return _el$;\n    })();\nconst $2ea20df539ddfd90$var$buttonClass = \"bg-indigo-500 hover:bg-indigo-700 text-zinc-200 px-2 rounded\";\n// I tried putting this in a `createSignal` but it was a hassle to get TS to be\n// happy so I'm putting it in module scope here.\nconst $2ea20df539ddfd90$var$nodeScale = (0, $970875132489e6ff$export$2e2bcd8739ae039)((0, $55faa4b4fb802c91$export$c5cedbc1ab3be2c3));\nconst $2ea20df539ddfd90$var$sampleData = {\n    nodes: [\n        {\n            id: 1,\n            edges: [\n                2\n            ]\n        },\n        {\n            id: 2,\n            edges: [\n                3\n            ]\n        },\n        {\n            id: 3,\n            edges: [\n                1,\n                4\n            ]\n        },\n        {\n            id: 4,\n            edges: [\n                5\n            ]\n        },\n        {\n            id: 5,\n            edges: [\n                6\n            ]\n        },\n        {\n            id: 6,\n            edges: [\n                5\n            ]\n        }\n    ]\n};\nconst $2ea20df539ddfd90$export$614db49f3febe941 = ()=>{\n    const [filter, setFilter] = (0, $82b01333e79ab06f$export$c1e1e1ecbbe76a5)(\"\");\n    const [cosmoGraph, setCosmoGraph] = (0, $82b01333e79ab06f$export$c1e1e1ecbbe76a5)();\n    const [graphData, setGraphData] = (0, $82b01333e79ab06f$export$c1e1e1ecbbe76a5)($2ea20df539ddfd90$var$sampleData);\n    const [filteredGraphData, setFilteredGraphData] = (0, $82b01333e79ab06f$export$c1e1e1ecbbe76a5)([]);\n    const [numEdges, setNumEdges] = (0, $82b01333e79ab06f$export$c1e1e1ecbbe76a5)(1); // hard coded start value :|\n    const [windowSize, setWindowSize] = (0, $82b01333e79ab06f$export$c1e1e1ecbbe76a5)({\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n    const [message, setMessage] = (0, $82b01333e79ab06f$export$c1e1e1ecbbe76a5)(\"\");\n    const [domain, setDomain] = (0, $82b01333e79ab06f$export$c1e1e1ecbbe76a5)([\n        1,\n        0\n    ]);\n    const [selectedNodeId, setSelectedNodeId] = (0, $82b01333e79ab06f$export$c1e1e1ecbbe76a5)();\n    const processInput = (input)=>{\n        let d;\n        try {\n            d = JSON.parse(input);\n        } catch (e) {\n            d = (0, $4250447d44fe847a$export$acb3acf1d1fb10d5)(input);\n        }\n        setGraphData(d);\n    };\n    let canvasRef = undefined;\n    (0, $82b01333e79ab06f$export$1e848a9e87980bd5)(()=>{\n        // make TS happy\n        if (canvasRef == null) return;\n        window.addEventListener(\"resize\", (0, $26194fbb8e8cc845$export$61fc7d43ac8f84b0)(()=>{\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight\n            });\n        }));\n        let g;\n        const config = {\n            nodeGreyoutOpacity: 0.2,\n            backgroundColor: $2ea20df539ddfd90$var$slate[\"900\"],\n            linkArrows: false,\n            linkColor: (link)=>$2ea20df539ddfd90$var$slate[\"100\"],\n            linkWidth: 0.1,\n            scaleNodesOnZoom: true,\n            showFPSMonitor: true,\n            nodeColor: (node)=>$2ea20df539ddfd90$var$nodeScale(node.edgesIn),\n            nodeSizeScale: 0.6,\n            events: {\n                onClick: (node)=>{\n                    // This handler introduces a closure that'll hold on to `g`. Not sure\n                    // if that'll cause problems down the road.\n                    if (node == null) g.unselectNodes();\n                    else {\n                        setSelectedNodeId();\n                        g.selectNodeById(node.id);\n                    }\n                }\n            }\n        };\n        g = new (0, $7dda263e87144b68$export$614db49f3febe941)(canvasRef, config);\n        // @ts-expect-error\n        window.g = g;\n        setCosmoGraph(g);\n    }); // end onMount\n    (0, $82b01333e79ab06f$export$7ea7134f704deda4)(()=>{\n        // reactive deps\n        const g = cosmoGraph();\n        const gd = graphData();\n        // make TS happy\n        if (canvasRef == null || g == null) return;\n        let edgeId = 0;\n        let largestEdgesIn = 0;\n        const edges = [];\n        const nodes = gd.nodes.map((node)=>{\n            let edgesIn = 0;\n            if (node.edges != null) {\n                edgesIn = node.edges.length;\n                if (edgesIn > largestEdgesIn) largestEdgesIn = edgesIn;\n                node.edges.forEach((endId)=>{\n                    edges.push({\n                        id: edgeId,\n                        source: node.id.toString(),\n                        target: endId.toString()\n                    });\n                    edgeId += 1;\n                });\n            }\n            return {\n                id: node.id.toString(),\n                edgesIn: edgesIn,\n                edgesOut: 0 // TODO\n            };\n        });\n        // Adjust the scale domain based on the observed data\n        $2ea20df539ddfd90$var$nodeScale.domain([\n            0,\n            largestEdgesIn\n        ]);\n        setNumEdges(edgeId);\n        g.setData(nodes, edges);\n        // TODO: why do I need a timeout here?\n        setTimeout(function() {\n            g.fitView();\n        }, 200);\n    }); // end createEffect\n    (0, $82b01333e79ab06f$export$7ea7134f704deda4)(()=>{\n        const size = windowSize();\n        const g = cosmoGraph();\n        // make TS happy\n        if (g == null) return;\n        g.fitView();\n    }); // end createEffect\n    (0, $82b01333e79ab06f$export$7ea7134f704deda4)(()=>{\n        // reactive deps\n        const gd = graphData();\n        setFilteredGraphData(gd.nodes.filter((n)=>String(n.id).includes(filter())).sort((a, b)=>a.id > b.id ? 1 : -1));\n    });\n    return (()=>{\n        const _el$2 = $2ea20df539ddfd90$var$_tmpl$4.cloneNode(true), _el$3 = _el$2.firstChild, _el$4 = _el$3.firstChild, _el$5 = _el$4.nextSibling, _el$6 = _el$5.firstChild, _el$7 = _el$6.nextSibling, _el$8 = _el$5.nextSibling, _el$9 = _el$8.nextSibling, _el$10 = _el$9.firstChild, _el$11 = _el$10.firstChild, _el$13 = _el$10.nextSibling, _el$14 = _el$13.nextSibling, _el$15 = _el$14.firstChild, _el$16 = _el$14.nextSibling, _el$19 = _el$3.nextSibling, _el$20 = _el$19.firstChild, _el$21 = _el$20.nextSibling, _el$22 = _el$21.firstChild, _el$23 = _el$22.firstChild, _el$24 = _el$22.nextSibling, _el$25 = _el$24.firstChild;\n        _el$6.$$click = async ()=>{\n            const text = await navigator.clipboard.readText();\n            processInput(text);\n        };\n        _el$7.addEventListener(\"drop\", (ev)=>{\n            ev.preventDefault();\n            if (ev.dataTransfer != null && ev.dataTransfer.items) // Use DataTransferItemList interface to access the file(s)\n            [\n                ...ev.dataTransfer.items\n            ].forEach((item, i)=>{\n                // If dropped items aren't files, reject them\n                if (item.kind === \"file\") {\n                    const file = item.getAsFile();\n                    if (file) file.text().then((input)=>{\n                        processInput(input);\n                    });\n                }\n            });\n        });\n        _el$7.addEventListener(\"dragover\", (ev)=>{\n            ev.preventDefault();\n        });\n        _el$11.$$click = async ()=>{\n            const gd = graphData();\n            const start = Date.now();\n            const cycles = (0, $3cf17f87d4f90222$export$5f156e41c20211e5)(gd);\n            const end = Date.now();\n            if (cycles.length > 0) {\n                setMessage(`Cycles found in ${(end - start).toFixed(0)}ms:\\n${JSON.stringify(cycles, null, 2)}`);\n                return;\n            }\n            setMessage(`No cycles found in ${(end - start).toFixed(0)}ms.`);\n        };\n        (0, $478712cee1e6b565$export$21a5ca8aa77d35ff)(_el$9, (0, $82b01333e79ab06f$export$60e54eaca7e7fb38)((0, $82b01333e79ab06f$export$f6a3d19be20f5819), {\n            get when () {\n                return message();\n            },\n            get children () {\n                const _el$12 = $2ea20df539ddfd90$var$_tmpl$2.cloneNode(true);\n                (0, $478712cee1e6b565$export$21a5ca8aa77d35ff)(_el$12, message);\n                return _el$12;\n            }\n        }), _el$13);\n        _el$15.$$input = (e)=>setFilter(e.target.value);\n        (0, $478712cee1e6b565$export$21a5ca8aa77d35ff)(_el$16, (0, $82b01333e79ab06f$export$60e54eaca7e7fb38)((0, $82b01333e79ab06f$export$bdf530073099ce9f), {\n            get each () {\n                return filteredGraphData().slice(0, $2ea20df539ddfd90$var$MAX_LIST_LENGTH);\n            },\n            children: (node)=>(()=>{\n                    const _el$26 = $2ea20df539ddfd90$var$_tmpl$5.cloneNode(true), _el$27 = _el$26.firstChild;\n                    _el$26.$$click = ()=>{\n                        const o = cosmoGraph();\n                        if (o === undefined) return;\n                        o.selectNodeById(node.id.toString());\n                        console.log(\"TODO: handle select\");\n                    };\n                    (0, $478712cee1e6b565$export$21a5ca8aa77d35ff)(_el$27, ()=>node.id);\n                    return _el$26;\n                })()\n        }));\n        (0, $478712cee1e6b565$export$21a5ca8aa77d35ff)(_el$9, (0, $82b01333e79ab06f$export$60e54eaca7e7fb38)((0, $82b01333e79ab06f$export$f6a3d19be20f5819), {\n            get when () {\n                return filteredGraphData().length > $2ea20df539ddfd90$var$MAX_LIST_LENGTH;\n            },\n            get children () {\n                const _el$17 = $2ea20df539ddfd90$var$_tmpl$3.cloneNode(true), _el$18 = _el$17.firstChild;\n                (0, $478712cee1e6b565$export$21a5ca8aa77d35ff)(_el$17, ()=>filteredGraphData().length - $2ea20df539ddfd90$var$MAX_LIST_LENGTH, _el$18);\n                return _el$17;\n            }\n        }), null);\n        const _ref$ = canvasRef;\n        typeof _ref$ === \"function\" ? (0, $478712cee1e6b565$export$1f96ae73734a86cc)(_ref$, _el$20) : canvasRef = _el$20;\n        (0, $478712cee1e6b565$export$21a5ca8aa77d35ff)(_el$22, ()=>graphData().nodes.length, null);\n        (0, $478712cee1e6b565$export$21a5ca8aa77d35ff)(_el$24, numEdges, null);\n        return _el$2;\n    })();\n};\n(0, $478712cee1e6b565$export$ad0f7f87f67e17d6)([\n    \"click\",\n    \"input\"\n]);\n\n\n\nconst $a88ea9323d3a23c8$var$app = document.getElementById(\"app\");\nif ($a88ea9323d3a23c8$var$app) (0, $478712cee1e6b565$export$b3890eb0ae9dca99)(()=>(0, $82b01333e79ab06f$export$60e54eaca7e7fb38)((0, $2ea20df539ddfd90$export$614db49f3febe941), {}), $a88ea9323d3a23c8$var$app);\n\n\n//# sourceMappingURL=index.4ab047fa.js.map\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","\"use strict\";","import { render } from \"solid-js/web\";\nimport { Graph } from \"./components/graph\";\n\nimport \"./index.css\";\n\nconst app = document.getElementById(\"app\");\n\nif (app) {\n  render(() => <Graph />, app);\n}\n","import { createRoot, createRenderEffect, sharedConfig, untrack, enableHydration, createSignal, onCleanup, splitProps, createMemo } from 'solid-js';\nexport { ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, createComponent, createRenderEffect as effect, getOwner, createMemo as memo, mergeProps, untrack } from 'solid-js';\n\nconst booleans = [\"allowfullscreen\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\", \"indeterminate\", \"ismap\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\", \"selected\"];\nconst Properties = /*#__PURE__*/new Set([\"className\", \"value\", \"readOnly\", \"formNoValidate\", \"isMap\", \"noModule\", \"playsInline\", ...booleans]);\nconst ChildProperties = /*#__PURE__*/new Set([\"innerHTML\", \"textContent\", \"innerText\", \"children\"]);\nconst Aliases = /*#__PURE__*/Object.assign(Object.create(null), {\n  className: \"class\",\n  htmlFor: \"for\"\n});\nconst PropAliases = /*#__PURE__*/Object.assign(Object.create(null), {\n  class: \"className\",\n  formnovalidate: \"formNoValidate\",\n  ismap: \"isMap\",\n  nomodule: \"noModule\",\n  playsinline: \"playsInline\",\n  readonly: \"readOnly\"\n});\nconst DelegatedEvents = /*#__PURE__*/new Set([\"beforeinput\", \"click\", \"dblclick\", \"contextmenu\", \"focusin\", \"focusout\", \"input\", \"keydown\", \"keyup\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"pointerdown\", \"pointermove\", \"pointerout\", \"pointerover\", \"pointerup\", \"touchend\", \"touchmove\", \"touchstart\"]);\nconst SVGElements = /*#__PURE__*/new Set([\n\"altGlyph\", \"altGlyphDef\", \"altGlyphItem\", \"animate\", \"animateColor\", \"animateMotion\", \"animateTransform\", \"circle\", \"clipPath\", \"color-profile\", \"cursor\", \"defs\", \"desc\", \"ellipse\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"filter\", \"font\", \"font-face\", \"font-face-format\", \"font-face-name\", \"font-face-src\", \"font-face-uri\", \"foreignObject\", \"g\", \"glyph\", \"glyphRef\", \"hkern\", \"image\", \"line\", \"linearGradient\", \"marker\", \"mask\", \"metadata\", \"missing-glyph\", \"mpath\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialGradient\", \"rect\",\n\"set\", \"stop\",\n\"svg\", \"switch\", \"symbol\", \"text\", \"textPath\",\n\"tref\", \"tspan\", \"use\", \"view\", \"vkern\"]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nconst DOMElements = /*#__PURE__*/new Set([\"html\", \"base\", \"head\", \"link\", \"meta\", \"style\", \"title\", \"body\", \"address\", \"article\", \"aside\", \"footer\", \"header\", \"main\", \"nav\", \"section\", \"body\", \"blockquote\", \"dd\", \"div\", \"dl\", \"dt\", \"figcaption\", \"figure\", \"hr\", \"li\", \"ol\", \"p\", \"pre\", \"ul\", \"a\", \"abbr\", \"b\", \"bdi\", \"bdo\", \"br\", \"cite\", \"code\", \"data\", \"dfn\", \"em\", \"i\", \"kbd\", \"mark\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"small\", \"span\", \"strong\", \"sub\", \"sup\", \"time\", \"u\", \"var\", \"wbr\", \"area\", \"audio\", \"img\", \"map\", \"track\", \"video\", \"embed\", \"iframe\", \"object\", \"param\", \"picture\", \"portal\", \"source\", \"svg\", \"math\", \"canvas\", \"noscript\", \"script\", \"del\", \"ins\", \"caption\", \"col\", \"colgroup\", \"table\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\", \"button\", \"datalist\", \"fieldset\", \"form\", \"input\", \"label\", \"legend\", \"meter\", \"optgroup\", \"option\", \"output\", \"progress\", \"select\", \"textarea\", \"details\", \"dialog\", \"menu\", \"summary\", \"details\", \"slot\", \"template\", \"acronym\", \"applet\", \"basefont\", \"bgsound\", \"big\", \"blink\", \"center\", \"content\", \"dir\", \"font\", \"frame\", \"frameset\", \"hgroup\", \"image\", \"keygen\", \"marquee\", \"menuitem\", \"nobr\", \"noembed\", \"noframes\", \"plaintext\", \"rb\", \"rtc\", \"shadow\", \"spacer\", \"strike\", \"tt\", \"xmp\", \"a\", \"abbr\", \"acronym\", \"address\", \"applet\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"basefont\", \"bdi\", \"bdo\", \"bgsound\", \"big\", \"blink\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"center\", \"cite\", \"code\", \"col\", \"colgroup\", \"content\", \"data\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"dialog\", \"dir\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"font\", \"footer\", \"form\", \"frame\", \"frameset\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"image\", \"img\", \"input\", \"ins\", \"kbd\", \"keygen\", \"label\", \"legend\", \"li\", \"link\", \"main\", \"map\", \"mark\", \"marquee\", \"menu\", \"menuitem\", \"meta\", \"meter\", \"nav\", \"nobr\", \"noembed\", \"noframes\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"picture\", \"plaintext\", \"portal\", \"pre\", \"progress\", \"q\", \"rb\", \"rp\", \"rt\", \"rtc\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"shadow\", \"slot\", \"small\", \"source\", \"spacer\", \"span\", \"strike\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"title\", \"tr\", \"track\", \"tt\", \"u\", \"ul\", \"var\", \"video\", \"wbr\", \"xmp\", \"input\"]);\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n      aEnd = a.length,\n      bEnd = bLength,\n      aStart = 0,\n      bStart = 0,\n      after = a[aEnd - 1].nextSibling,\n      map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) a[aStart].remove();\n        aStart++;\n      }\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n              sequence = 1,\n              t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else a[aStart++].remove();\n    }\n  }\n}\n\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init, options = {}) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    element === document ? code() : insert(element, code(), element.firstChild ? null : undefined, init);\n  }, options.owner);\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, check, isSVG) {\n  const t = document.createElement(\"template\");\n  t.innerHTML = html;\n  let node = t.content.firstChild;\n  if (isSVG) node = node.firstChild;\n  return node;\n}\nfunction delegateEvents(eventNames, document = window.document) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents(document = window.document) {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setAttribute(node, name, value) {\n  if (value == null) node.removeAttribute(name);else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (value == null) node.removeAttributeNS(namespace, name);else node.setAttributeNS(namespace, name, value);\n}\nfunction className(node, value) {\n  if (value == null) node.removeAttribute(\"class\");else node.className = value;\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    const handlerFn = handler[0];\n    node.addEventListener(name, handler[0] = e => handlerFn.call(node, handler[1], e));\n  } else node.addEventListener(name, handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}),\n        prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || value[key]) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n          classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue) continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev) {\n  if (!value) return prev ? setAttribute(node, \"style\") : value;\n  const nodeStyle = node.style;\n  if (typeof value === \"string\") return nodeStyle.cssText = value;\n  typeof prev === \"string\" && (nodeStyle.cssText = prev = undefined);\n  prev || (prev = {});\n  value || (value = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, props = {}, isSVG, skipChildren) {\n  const prevProps = {};\n  if (!skipChildren) {\n    createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n  }\n  createRenderEffect(() => props.ref && props.ref(node));\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));\n  return prevProps;\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction innerHTML(parent, content) {\n  !sharedConfig.context && (parent.innerHTML = content);\n}\nfunction use(fn, element, arg) {\n  return untrack(() => fn(element, arg));\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n  props || (props = {});\n  for (const prop in prevProps) {\n    if (!(prop in props)) {\n      if (prop === \"children\") continue;\n      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef);\n    }\n  }\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef);\n  }\n}\nfunction hydrate$1(code, element, options = {}) {\n  sharedConfig.completed = globalThis._$HY.completed;\n  sharedConfig.events = globalThis._$HY.events;\n  sharedConfig.load = globalThis._$HY.load;\n  sharedConfig.gather = root => gatherHydratable(element, root);\n  sharedConfig.registry = new Map();\n  sharedConfig.context = {\n    id: options.renderId || \"\",\n    count: 0\n  };\n  gatherHydratable(element, options.renderId);\n  const dispose = render(code, element, [...element.childNodes], options);\n  sharedConfig.context = null;\n  return dispose;\n}\nfunction getNextElement(template) {\n  let node, key;\n  if (!sharedConfig.context || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {\n    return template.cloneNode(true);\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMatch(el, nodeName) {\n  while (el && el.localName !== nodeName) el = el.nextSibling;\n  return el;\n}\nfunction getNextMarker(start) {\n  let end = start,\n      count = 0,\n      current = [];\n  if (sharedConfig.context) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"#\") count++;else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const {\n        completed,\n        events\n      } = sharedConfig;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        eventHandler(e);\n        events.shift();\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++) node.classList.toggle(classNames[i], value);\n}\nfunction assignProp(node, prop, value, prev, isSVG, skipRef) {\n  let isCE, isProp, isChildProp;\n  if (prop === \"style\") return style(node, value, prev);\n  if (prop === \"classList\") return classList(node, value, prev);\n  if (value === prev) return prev;\n  if (prop === \"ref\") {\n    if (!skipRef) value(node);\n  } else if (prop.slice(0, 3) === \"on:\") {\n    const e = prop.slice(3);\n    prev && node.removeEventListener(e, prev);\n    value && node.addEventListener(e, value);\n  } else if (prop.slice(0, 10) === \"oncapture:\") {\n    const e = prop.slice(10);\n    prev && node.removeEventListener(e, prev, true);\n    value && node.addEventListener(e, value, true);\n  } else if (prop.slice(0, 2) === \"on\") {\n    const name = prop.slice(2).toLowerCase();\n    const delegate = DelegatedEvents.has(name);\n    if (!delegate && prev) {\n      const h = Array.isArray(prev) ? prev[0] : prev;\n      node.removeEventListener(name, h);\n    }\n    if (delegate || value) {\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    }\n  } else if ((isChildProp = ChildProperties.has(prop)) || !isSVG && (PropAliases[prop] || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes(\"-\"))) {\n    if (prop === \"class\" || prop === \"className\") className(node, value);else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;else node[PropAliases[prop] || prop] = value;\n  } else {\n    const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n    if (ns) setAttributeNS(node, ns, prop, value);else setAttribute(node, Aliases[prop] || prop, value);\n  }\n  return value;\n}\nfunction eventHandler(e) {\n  const key = `$$${e.type}`;\n  let node = e.composedPath && e.composedPath()[0] || e.target;\n  if (e.target !== node) {\n    Object.defineProperty(e, \"target\", {\n      configurable: true,\n      value: node\n    });\n  }\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node || document;\n    }\n  });\n  if (sharedConfig.registry && !sharedConfig.done) {\n    sharedConfig.done = true;\n    document.querySelectorAll(\"[id^=pl-]\").forEach(elem => elem.remove());\n  }\n  while (node) {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler.call(node, data, e) : handler.call(node, e);\n      if (e.cancelBubble) return;\n    }\n    node = node._$host || node.parentNode || node.host;\n  }\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  if (sharedConfig.context && !current) current = [...parent.childNodes];\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n        multi = marker !== undefined;\n  parent = multi && current[0] && current[0].parentNode || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (sharedConfig.context) return current;\n    if (t === \"number\") value = value.toString();\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data = value;\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (sharedConfig.context) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    const currentArray = current && Array.isArray(current);\n    if (normalizeIncomingArray(array, value, current, unwrapArray)) {\n      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n      return () => current;\n    }\n    if (sharedConfig.context) {\n      if (!array.length) return current;\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].parentNode) return current = array;\n      }\n    }\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else if (currentArray) {\n      if (current.length === 0) {\n        appendNodes(parent, array, marker);\n      } else reconcileArrays(parent, current, array);\n    } else {\n      current && cleanChildren(parent);\n      appendNodes(parent, array);\n    }\n    current = array;\n  } else if (value instanceof Node) {\n    if (sharedConfig.context && value.parentNode) return current = multi ? [value] : value;\n    if (Array.isArray(current)) {\n      if (multi) return current = cleanChildren(parent, current, marker, value);\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else ;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, current, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n        prev = current && current[i];\n    if (item instanceof Node) {\n      normalized.push(item);\n    } else if (item == null || item === true || item === false) ; else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item, prev) || dynamic;\n    } else if ((typeof item) === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item], Array.isArray(prev) ? prev : [prev]) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else {\n      const value = String(item);\n      if (prev && prev.nodeType === 3 && prev.data === value) {\n        normalized.push(prev);\n      } else normalized.push(document.createTextNode(value));\n    }\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker = null) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return parent.textContent = \"\";\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i) isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);else isParent && el.remove();\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction gatherHydratable(element, root) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    const key = node.getAttribute(\"data-hk\");\n    if ((!root || key.startsWith(root)) && !sharedConfig.registry.has(key)) sharedConfig.registry.set(key, node);\n  }\n}\nfunction getHydrationKey() {\n  const hydrate = sharedConfig.context;\n  return `${hydrate.id}${hydrate.count++}`;\n}\nfunction NoHydration(props) {\n  return sharedConfig.context ? undefined : props.children;\n}\nfunction Hydration(props) {\n  return props.children;\n}\nfunction voidFn() {}\n\nfunction throwInBrowser(func) {\n  const err = new Error(`${func.name} is not supported in the browser, returning undefined`);\n  console.error(err);\n}\nfunction renderToString(fn, options) {\n  throwInBrowser(renderToString);\n}\nfunction renderToStringAsync(fn, options) {\n  throwInBrowser(renderToStringAsync);\n}\nfunction renderToStream(fn, options) {\n  throwInBrowser(renderToStream);\n}\nfunction ssr(template, ...nodes) {}\nfunction ssrElement(name, props, children, needsId) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrAttribute(key, value) {}\nfunction ssrHydrationKey() {}\nfunction resolveSSRNode(node) {}\nfunction escape(html) {}\nfunction ssrSpread(props, isSVG, skipChildren) {}\n\nconst isServer = false;\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nconst hydrate = (...args) => {\n  enableHydration();\n  return hydrate$1(...args);\n};\nfunction Portal(props) {\n  const {\n    useShadow\n  } = props,\n        marker = document.createTextNode(\"\"),\n        mount = props.mount || document.body;\n  function renderPortal() {\n    if (sharedConfig.context) {\n      const [s, set] = createSignal(false);\n      queueMicrotask(() => set(true));\n      return () => s() && props.children;\n    } else return () => props.children;\n  }\n  if (mount instanceof HTMLHeadElement) {\n    const [clean, setClean] = createSignal(false);\n    const cleanup = () => setClean(true);\n    createRoot(dispose => insert(mount, () => !clean() ? renderPortal()() : dispose(), null));\n    onCleanup(() => {\n      if (sharedConfig.context) queueMicrotask(cleanup);else cleanup();\n    });\n  } else {\n    const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n          renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n      mode: \"open\"\n    }) : container;\n    Object.defineProperty(container, \"_$host\", {\n      get() {\n        return marker.parentNode;\n      },\n      configurable: true\n    });\n    insert(renderRoot, renderPortal());\n    mount.appendChild(container);\n    props.ref && props.ref(container);\n    onCleanup(() => mount.removeChild(container));\n  }\n  return marker;\n}\nfunction Dynamic(props) {\n  const [p, others] = splitProps(props, [\"component\"]);\n  const cached = createMemo(() => p.component);\n  return createMemo(() => {\n    const component = cached();\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(others));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);\n        spread(el, others, isSvg);\n        return el;\n    }\n  });\n}\n\nexport { Aliases, voidFn as Assets, ChildProperties, DOMElements, DelegatedEvents, Dynamic, Hydration, voidFn as HydrationScript, NoHydration, Portal, PropAliases, Properties, SVGElements, SVGNamespace, addEventListener, assign, classList, className, clearDelegatedEvents, delegateEvents, dynamicProperty, escape, voidFn as generateHydrationScript, voidFn as getAssets, getHydrationKey, getNextElement, getNextMarker, getNextMatch, hydrate, innerHTML, insert, isServer, render, renderToStream, renderToString, renderToStringAsync, resolveSSRNode, runHydrationEvents, setAttribute, setAttributeNS, spread, ssr, ssrAttribute, ssrClassList, ssrElement, ssrHydrationKey, ssrSpread, ssrStyle, style, template, use, voidFn as useAssets };\n","let taskIdCounter = 1,\n    isCallbackScheduled = false,\n    isPerformingWork = false,\n    taskQueue = [],\n    currentTask = null,\n    shouldYieldToHost = null,\n    yieldInterval = 5,\n    deadline = 0,\n    maxYieldInterval = 300,\n    scheduleCallback = null,\n    scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n        port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = n + m >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n      timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {};\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return { ...sharedConfig.context,\n    id: `${sharedConfig.context.id}${sharedConfig.context.count++}-`,\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceFactory = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nconst [transPending, setTransPending] = /*@__PURE__*/createSignal(false);\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n        owner = Owner,\n        unowned = fn.length === 0,\n        root = unowned && !false ? UNOWNED : {\n    owned: null,\n    cleanups: null,\n    context: null,\n    owner: detachedOwner || owner\n  },\n        updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || undefined\n  };\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.tValue);else value = value(s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE),\n        s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(() => {\n    fn ? fn() : untrack(onInvalidate);\n    fn = undefined;\n  }, undefined, false, 0),\n        s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0);\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if (arguments.length === 2 && typeof pFetcher === \"object\" || arguments.length === 1) {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  } else {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  }\n  let pr = null,\n      initP = NO_INIT,\n      id = null,\n      loadedUnderTransition = false,\n      scheduled = false,\n      resolved = (\"initialValue\" in options),\n      dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = new Set(),\n        [value, setValue] = (options.storage || createSignal)(options.initialValue),\n        [error, setError] = createSignal(undefined),\n        [track, trigger] = createSignal(undefined, {\n    equals: false\n  }),\n        [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\n    let v;\n    if (options.ssrLoadFrom === \"initial\") initP = options.initialValue;else if (sharedConfig.load && (v = sharedConfig.load(id))) initP = v[0];\n  }\n  function loadEnd(p, v, error, key) {\n    if (pr === p) {\n      pr = null;\n      resolved = true;\n      if ((p === initP || v === initP) && options.onHydrated) queueMicrotask(() => options.onHydrated(key, {\n        value: v\n      }));\n      initP = NO_INIT;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          completeLoad(v, error);\n        }, false);\n      } else completeLoad(v, error);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (!err) setValue(() => v);\n      setState(err ? \"errored\" : \"ready\");\n      setError(err);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c = SuspenseContext && lookup(Owner, SuspenseContext.id),\n          v = value(),\n          err = error();\n    if (err && !pr) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching !== false && scheduled) return;\n    scheduled = false;\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p = initP !== NO_INIT ? initP : untrack(() => fetcher(lookup, {\n      value: value(),\n      refetching\n    }));\n    if (typeof p !== \"object\" || !(p && \"then\" in p)) {\n      loadEnd(pr, p, undefined, lookup);\n      return p;\n    }\n    pr = p;\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p.then(v => loadEnd(p, v, undefined, lookup), e => loadEnd(p, undefined, castError(e), lookup));\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s = state();\n        return s === \"pending\" || s === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        const err = error();\n        if (err && !pr) throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic) createComputed(() => load(false));else load(false);\n  return [read, {\n    refetch: load,\n    mutate: setValue\n  }];\n}\nfunction createDeferred(source, options) {\n  let t,\n      timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(() => node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  const [deferred, setDeferred] = createSignal(node.value, options);\n  updateComputation(node);\n  setDeferred(() => node.value);\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const [key, val] of subs.entries()) if (fn(key, v) !== fn(key, p)) {\n      for (const c of val.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true, STALE);\n  updateComputation(node);\n  return key => {\n    const listener = Listener;\n    if (listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(key, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  };\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  const listener = Listener;\n  Listener = null;\n  try {\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return undefined;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) ;else if (Owner.context === null) Owner.context = {\n    [ERROR]: [fn]\n  };else if (!Owner.context[ERROR]) Owner.context[ERROR] = [fn];else Owner.context[ERROR].push(fn);\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  Owner = o;\n  try {\n    return runUpdates(fn, true);\n  } finally {\n    Owner = prev;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t = Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        queue: new Set(),\n        running: true\n      });\n      t.done || (t.done = new Promise(res => t.resolve = res));\n      t.running = true;\n    }\n    runUpdates(fn, false);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let ctx;\n  return (ctx = lookup(Owner, context.id)) !== undefined ? ctx : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children()));\n  memo.toArray = () => {\n    const c = memo();\n    return Array.isArray(c) ? c : c != null ? [c] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext({}));\n}\nfunction enableExternalSource(factory) {\n  if (ExternalSourceFactory) {\n    const oldFactory = ExternalSourceFactory;\n    ExternalSourceFactory = (fn, trigger) => {\n      const oldSource = oldFactory(fn, trigger);\n      const source = factory(x => oldSource.track(x), trigger);\n      return {\n        track: x => source.track(x),\n        dispose() {\n          source.dispose();\n          oldSource.dispose();\n        }\n      };\n    };\n  } else {\n    ExternalSourceFactory = factory;\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (!runningTransition && this.state || runningTransition && this.tState)) {\n    if (!runningTransition && this.state === STALE || runningTransition && this.tState === STALE) updateComputation(this);else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current = Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    if (Transition) {\n      const TransitionRunning = Transition.running;\n      if (TransitionRunning || !isComp && Transition.sources.has(node)) {\n        Transition.sources.add(node);\n        node.tValue = value;\n      }\n      if (!TransitionRunning) node.value = value;\n    } else node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i = 0; i < node.observers.length; i += 1) {\n          const o = node.observers[i];\n          const TransitionRunning = Transition && Transition.running;\n          if (TransitionRunning && Transition.disposed.has(o)) continue;\n          if (TransitionRunning && !o.tState || !TransitionRunning && !o.state) {\n            if (o.pure) Updates.push(o);else Effects.push(o);\n            if (o.observers) markDownstream(o);\n          }\n          if (TransitionRunning) o.tState = STALE;else o.state = STALE;\n        }\n        if (Updates.length > 10e5) {\n          Updates = [];\n          if (false) ;\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const owner = Owner,\n        listener = Listener,\n        time = ExecCount;\n  Listener = Owner = node;\n  runComputation(node, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        Listener = Owner = node;\n        runComputation(node, node.tValue, time);\n        Listener = Owner = null;\n      }, false);\n    });\n  }\n  Listener = listener;\n  Owner = owner;\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) Transition && Transition.running ? node.tState = STALE : node.state = STALE;\n    handleError(err);\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null) ;else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  if (ExternalSourceFactory) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceFactory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceFactory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if (!runningTransition && node.state === 0 || runningTransition && node.tState === 0) return;\n  if (!runningTransition && node.state === PENDING || runningTransition && node.tState === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (!runningTransition && node.state || runningTransition && node.tState) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n          prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if (!runningTransition && node.state === STALE || runningTransition && node.tState === STALE) {\n      updateComputation(node);\n    } else if (!runningTransition && node.state === PENDING || runningTransition && node.tState === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!Updates) Effects = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition) {\n    if (!Transition.promises.size && !Transition.queue.size) {\n      const sources = Transition.sources;\n      const disposed = Transition.disposed;\n      Effects.push.apply(Effects, Transition.effects);\n      res = Transition.resolve;\n      for (const e of Effects) {\n        \"tState\" in e && (e.state = e.tState);\n        delete e.tState;\n      }\n      Transition = null;\n      runUpdates(() => {\n        for (const d of disposed) cleanNode(d);\n        for (const v of sources) {\n          v.value = v.tValue;\n          if (v.owned) {\n            for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n          }\n          if (v.tOwned) v.owned = v.tOwned;\n          delete v.tValue;\n          delete v.tOwned;\n          v.tState = 0;\n        }\n        setTransPending(false);\n      }, false);\n    } else if (Transition.running) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n  }\n  const e = Effects;\n  Effects = null;\n  if (e.length) runUpdates(() => runEffects(e), false);\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n      userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) setHydrateContext();\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      if (!runningTransition && source.state === STALE || runningTransition && source.tState === STALE) {\n        if (source !== ignore) runTop(source);\n      } else if (!runningTransition && source.state === PENDING || runningTransition && source.tState === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (!runningTransition && !o.state || runningTransition && !o.tState) {\n      if (runningTransition) o.tState = PENDING;else o.state = PENDING;\n      if (o.pure) Updates.push(o);else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n            index = node.sourceSlots.pop(),\n            obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n              s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (Transition && Transition.running && node.pure) {\n    if (node.tOwned) {\n      for (i = 0; i < node.tOwned.length; i++) cleanNode(node.tOwned[i]);\n      delete node.tOwned;\n    }\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = 0; i < node.owned.length; i++) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = 0; i < node.cleanups.length; i++) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;else node.state = 0;\n  node.context = null;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction castError(err) {\n  if (err instanceof Error || typeof err === \"string\") return err;\n  return new Error(\"Unknown error\");\n}\nfunction handleError(err) {\n  err = castError(err);\n  const fns = ERROR && lookup(Owner, ERROR);\n  if (!fns) throw err;\n  for (const f of fns) f(err);\n}\nfunction lookup(owner, key) {\n  return owner ? owner.context && owner.context[key] !== undefined ? owner.context[key] : lookup(owner.owner, key) : undefined;\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(() => res = untrack(() => {\n      Owner.context = {\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }), undefined);\n    return res;\n  };\n}\n\nfunction observable(input) {\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler = typeof observer === 'function' ? observer : observer.next && observer.next.bind(observer);\n      if (!handler) {\n        return {\n          unsubscribe() {}\n        };\n      }\n      const dispose = createRoot(disposer => {\n        createEffect(() => {\n          const v = input();\n          untrack(() => handler(v));\n        });\n        return disposer;\n      });\n      if (getOwner()) onCleanup(dispose);\n      return {\n        unsubscribe() {\n          dispose();\n        }\n      };\n    },\n    [Symbol.observable || \"@@observable\"]() {\n      return this;\n    }\n  };\n}\nfunction from(producer) {\n  const [s, set] = createSignal(undefined, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => \"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub());\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      len = 0,\n      indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n        i,\n        j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newLen = newItems.length,\n          newIndices,\n          newIndicesNext,\n          temp,\n          tempdisposers,\n          tempIndexes,\n          start,\n          end,\n          newEnd,\n          item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      }\n      else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      signals = [],\n      len = 0,\n      i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [];\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newItems.length === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newItems.length; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newItems.length;\n      items = newItems.slice(0);\n      return mapped = mapped.slice(0, len);\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i]);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = untrack(() => Comp(props || {}));\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return !(s = typeof s === \"function\" ? s() : s) ? {} : s;\n}\nfunction mergeProps(...sources) {\n  if (sources.some(s => s && ($PROXY in s || typeof s === \"function\"))) {\n    return new Proxy({\n      get(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          const v = resolveSource(sources[i])[property];\n          if (v !== undefined) return v;\n        }\n      },\n      has(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          if (property in resolveSource(sources[i])) return true;\n        }\n        return false;\n      },\n      keys() {\n        const keys = [];\n        for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(resolveSource(sources[i])));\n        return [...new Set(keys)];\n      }\n    }, propTraps);\n  }\n  const target = {};\n  for (let i = sources.length - 1; i >= 0; i--) {\n    if (sources[i]) {\n      const descriptors = Object.getOwnPropertyDescriptors(sources[i]);\n      for (const key in descriptors) {\n        if (key in target) continue;\n        Object.defineProperty(target, key, {\n          enumerable: true,\n          get() {\n            for (let i = sources.length - 1; i >= 0; i--) {\n              const v = (sources[i] || {})[key];\n              if (v !== undefined) return v;\n            }\n          }\n        });\n      }\n    }\n  }\n  return target;\n}\nfunction splitProps(props, ...keys) {\n  const blocked = new Set(keys.flat());\n  const descriptors = Object.getOwnPropertyDescriptors(props);\n  const isProxy = ($PROXY in props);\n  if (!isProxy) keys.push(Object.keys(descriptors).filter(k => !blocked.has(k)));\n  const res = keys.map(k => {\n    const clone = {};\n    for (let i = 0; i < k.length; i++) {\n      const key = k[i];\n      if (!isProxy && !(key in props)) continue;\n      Object.defineProperty(clone, key, descriptors[key] ? descriptors[key] : {\n        get() {\n          return props[key];\n        },\n        set() {\n          return true;\n        },\n        enumerable: true\n      });\n    }\n    return clone;\n  });\n  if (isProxy) {\n    res.push(new Proxy({\n      get(property) {\n        return blocked.has(property) ? undefined : props[property];\n      },\n      has(property) {\n        return blocked.has(property) ? false : property in props;\n      },\n      keys() {\n        return Object.keys(props).filter(k => !blocked.has(k));\n      }\n    }, propTraps));\n  }\n  return res;\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      (p || (p = fn())).then(mod => {\n        setHydrateContext(ctx);\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    } else {\n      const c = comp();\n      if (c) return c(props);\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) && untrack(() => {\n      if (false) ;\n      if (!ctx) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }));\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => comp = () => mod.default), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? `${ctx.id}${ctx.count++}` : `cl-${counter++}`;\n}\n\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Show(props) {\n  let strictEqual = false;\n  const keyed = props.keyed;\n  const condition = createMemo(() => props.when, undefined, {\n    equals: (a, b) => strictEqual ? a === b : !a === !b\n  });\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      const fn = typeof child === \"function\" && child.length > 0;\n      strictEqual = keyed || fn;\n      return fn ? untrack(() => child(c)) : child;\n    }\n    return props.fallback;\n  }, undefined, undefined);\n}\nfunction Switch(props) {\n  let strictEqual = false;\n  let keyed = false;\n  const equals = (a, b) => a[0] === b[0] && (strictEqual ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2];\n  const conditions = children(() => props.children),\n        evalConditions = createMemo(() => {\n    let conds = conditions();\n    if (!Array.isArray(conds)) conds = [conds];\n    for (let i = 0; i < conds.length; i++) {\n      const c = conds[i].when;\n      if (c) {\n        keyed = !!conds[i].keyed;\n        return [i, c, conds[i]];\n      }\n    }\n    return [-1];\n  }, undefined, {\n    equals\n  });\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0) return props.fallback;\n    const c = cond.children;\n    const fn = typeof c === \"function\" && c.length > 0;\n    strictEqual = keyed || fn;\n    return fn ? untrack(() => c(when)) : c;\n  }, undefined, undefined);\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn());\n}\nfunction ErrorBoundary(props) {\n  let err;\n  let v;\n  if (sharedConfig.context && sharedConfig.load && (v = sharedConfig.load(sharedConfig.context.id + sharedConfig.context.count))) err = v[0];\n  const [errored, setErrored] = createSignal(err, undefined);\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(() => {\n    let e;\n    if (e = errored()) {\n      const f = props.fallback;\n      const res = typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored())) : f;\n      onError(setErrored);\n      return res;\n    }\n    onError(setErrored);\n    return props.children;\n  }, undefined, undefined);\n}\n\nconst suspenseListEquals = (a, b) => a.showContent === b.showContent && a.showFallback === b.showFallback;\nconst SuspenseListContext = createContext();\nfunction SuspenseList(props) {\n  let [wrapper, setWrapper] = createSignal(() => ({\n    inFallback: false\n  })),\n      show;\n  const listContext = useContext(SuspenseListContext);\n  const [registry, setRegistry] = createSignal([]);\n  if (listContext) {\n    show = listContext.register(createMemo(() => wrapper()().inFallback));\n  }\n  const resolved = createMemo(prev => {\n    const reveal = props.revealOrder,\n          tail = props.tail,\n          {\n      showContent = true,\n      showFallback = true\n    } = show ? show() : {},\n          reg = registry(),\n          reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = reg.every(inFallback => !inFallback());\n      const res = reg.map(() => ({\n        showContent: all && showContent,\n        showFallback\n      }));\n      res.inFallback = !all;\n      return res;\n    }\n    let stop = false;\n    let inFallback = prev.inFallback;\n    const res = [];\n    for (let i = 0, len = reg.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n            s = reg[n]();\n      if (!stop && !s) {\n        res[n] = {\n          showContent,\n          showFallback\n        };\n      } else {\n        const next = !stop;\n        if (next) inFallback = true;\n        res[n] = {\n          showContent: next,\n          showFallback: !tail || next && tail === \"collapsed\" ? showFallback : false\n        };\n        stop = true;\n      }\n    }\n    if (!stop) inFallback = false;\n    res.inFallback = inFallback;\n    return res;\n  }, {\n    inFallback: false\n  });\n  setWrapper(() => resolved);\n  return createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        let index;\n        setRegistry(registry => {\n          index = registry.length;\n          return [...registry, inFallback];\n        });\n        return createMemo(() => resolved()[index], undefined, {\n          equals: suspenseListEquals\n        });\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction Suspense(props) {\n  let counter = 0,\n      show,\n      ctx,\n      p,\n      flicker,\n      error;\n  const [inFallback, setFallback] = createSignal(false),\n        SuspenseContext = getSuspenseContext(),\n        store = {\n    increment: () => {\n      if (++counter === 1) setFallback(true);\n    },\n    decrement: () => {\n      if (--counter === 0) setFallback(false);\n    },\n    inFallback,\n    effects: [],\n    resolved: false\n  },\n        owner = getOwner();\n  if (sharedConfig.context && sharedConfig.load) {\n    const key = sharedConfig.context.id + sharedConfig.context.count;\n    let ref = sharedConfig.load(key);\n    if (ref && (p = ref[0]) && p !== \"$$f\") {\n      if (typeof p !== \"object\" || !(\"then\" in p)) p = Promise.resolve(p);\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(err => {\n        if (err || sharedConfig.done) {\n          err && (error = err);\n          return set();\n        }\n        sharedConfig.gather(key);\n        setHydrateContext(ctx);\n        set();\n        setHydrateContext();\n      });\n    }\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) show = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return flicker = undefined;\n        }\n        if (ctx && p === \"$$f\") setHydrateContext();\n        const rendered = createMemo(() => props.children);\n        return createMemo(prev => {\n          const inFallback = store.inFallback(),\n                {\n            showContent = true,\n            showFallback = true\n          } = show ? show() : {};\n          if ((!inFallback || p && p !== \"$$f\") && showContent) {\n            store.resolved = true;\n            dispose && dispose();\n            dispose = ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered();\n          }\n          if (!showFallback) return;\n          if (dispose) return prev;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"f\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nlet DEV;\n\nexport { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };\n","import { createSignal, onMount, createEffect, For, Show } from \"solid-js\";\nimport { scaleSequential, type ScaleSequential } from \"d3-scale\";\nimport { interpolateCool } from \"d3-scale-chromatic\";\nimport {\n  Graph as CosmoGraph,\n  type GraphConfigInterface,\n} from \"@cosmograph/cosmos\";\n// => // fix syntax highlighting\nimport { parseDotGraph } from \"../util/parsers/dot\";\nimport { debounce } from \"../util/general\";\nimport { tarjan } from \"../util/algo/tarjan\";\n\nimport type { Id, Module, GraphData } from \"../util/types\";\n\n// Little hack to \"fix\" hmr with tailwind styles\n// @ts-expect-error\nif (module.hot) {\n  // @ts-expect-error\n  module.hot.accept(() => {\n    document.location.reload();\n  });\n}\n\ntype Node = {\n  id: string;\n  edgesIn: number;\n  edgesOut: number;\n};\n\ntype Edge = {\n  id: Id;\n  source: string;\n  target: string;\n};\n\nconst slate = {\n  50: \"#f8fafc\",\n  100: \"#f1f5f9\",\n  200: \"#e2e8f0\",\n  300: \"#cbd5e1\",\n  400: \"#94a3b8\",\n  500: \"#64748b\",\n  600: \"#475569\",\n  700: \"#334155\",\n  800: \"#1e293b\",\n  900: \"#0f172a\",\n  950: \"#020617\",\n};\n\nconst tableauColors = [\n  \"#4e79a7\",\n  \"#f28e2b\",\n  \"#e15759\",\n  \"#76b7b2\",\n  \"#59a14f\",\n  \"#edc948\",\n  \"#b07aa1\",\n  \"#ff9da7\",\n  \"#9c755f\",\n  \"#bab0ac\",\n];\n\nconst MAX_LIST_LENGTH = 25;\n\nconst Link = (props: any) => (\n  <a class=\"font-medium text-zinc-400 underline\" href=\"#\">\n    {props.children}\n  </a>\n);\n\nconst buttonClass =\n  \"bg-indigo-500 hover:bg-indigo-700 text-zinc-200 px-2 rounded\";\n\n// I tried putting this in a `createSignal` but it was a hassle to get TS to be\n// happy so I'm putting it in module scope here.\nconst nodeScale = scaleSequential(interpolateCool);\n\nconst sampleData = {\n  nodes: [\n    { id: 1, edges: [2] },\n    { id: 2, edges: [3] },\n    { id: 3, edges: [1, 4] },\n    { id: 4, edges: [5] },\n    { id: 5, edges: [6] },\n    { id: 6, edges: [5] },\n  ],\n};\n\nconst Graph = () => {\n  const [filter, setFilter] = createSignal<string>(\"\");\n  const [cosmoGraph, setCosmoGraph] = createSignal<CosmoGraph<Node, Edge>>();\n  const [graphData, setGraphData] = createSignal<GraphData>(sampleData);\n  const [filteredGraphData, setFilteredGraphData] = createSignal<Module[]>([]);\n  const [numEdges, setNumEdges] = createSignal<number>(1); // hard coded start value :|\n  const [windowSize, setWindowSize] = createSignal<{\n    width: number;\n    height: number;\n  }>({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  const [message, setMessage] = createSignal<string>(\"\");\n  const [domain, setDomain] = createSignal<[number, number]>([1, 0]);\n  const [selectedNodeId, setSelectedNodeId] = createSignal<string>();\n\n  const processInput = (input: string) => {\n    let d: any;\n\n    try {\n      d = JSON.parse(input);\n    } catch (e) {\n      d = parseDotGraph(input);\n    }\n    setGraphData(d);\n  };\n\n  let canvasRef: HTMLCanvasElement | undefined = undefined;\n\n  onMount(() => {\n    // make TS happy\n    if (canvasRef == null) {\n      return;\n    }\n\n    window.addEventListener(\n      \"resize\",\n      debounce(() => {\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      })\n    );\n\n    let g: CosmoGraph<Node, Edge>;\n\n    const config: GraphConfigInterface<Node, Edge> = {\n      nodeGreyoutOpacity: 0.2,\n      backgroundColor: slate[\"900\"],\n      linkArrows: false,\n      linkColor: (link) => slate[\"100\"],\n      linkWidth: 0.1,\n      scaleNodesOnZoom: true,\n      showFPSMonitor: true,\n      nodeColor: (node) => nodeScale(node.edgesIn),\n      nodeSizeScale: 0.6,\n      events: {\n        onClick: (node) => {\n          // This handler introduces a closure that'll hold on to `g`. Not sure\n          // if that'll cause problems down the road.\n          if (node == null) {\n            g.unselectNodes();\n          } else {\n            setSelectedNodeId();\n            g.selectNodeById(node.id);\n          }\n        },\n      },\n    };\n\n    g = new CosmoGraph(canvasRef, config);\n    // @ts-expect-error\n    window.g = g;\n    setCosmoGraph(g);\n  }); // end onMount\n\n  createEffect(() => {\n    // reactive deps\n    const g = cosmoGraph();\n    const gd = graphData();\n\n    // make TS happy\n    if (canvasRef == null || g == null) {\n      return;\n    }\n\n    let edgeId = 0;\n    let largestEdgesIn = 0;\n\n    const edges: Edge[] = [];\n    const nodes: Node[] = gd.nodes.map((node) => {\n      let edgesIn = 0;\n\n      if (node.edges != null) {\n        edgesIn = node.edges.length;\n\n        if (edgesIn > largestEdgesIn) {\n          largestEdgesIn = edgesIn;\n        }\n\n        node.edges.forEach((endId) => {\n          edges.push({\n            id: edgeId,\n            source: node.id.toString(),\n            target: endId.toString(),\n          });\n          edgeId += 1;\n        });\n      }\n\n      return {\n        id: node.id.toString(),\n        edgesIn,\n        edgesOut: 0, // TODO\n      };\n    });\n\n    // Adjust the scale domain based on the observed data\n    nodeScale.domain([0, largestEdgesIn]);\n    setNumEdges(edgeId);\n\n    g.setData(nodes, edges);\n    // TODO: why do I need a timeout here?\n    setTimeout(function () {\n      g.fitView();\n    }, 200);\n  }); // end createEffect\n\n  createEffect(() => {\n    const size = windowSize();\n    const g = cosmoGraph();\n\n    // make TS happy\n    if (g == null) {\n      return;\n    }\n\n    g.fitView();\n  }); // end createEffect\n\n  createEffect(() => {\n    // reactive deps\n    const gd = graphData();\n\n    setFilteredGraphData(\n      gd.nodes\n        .filter((n) => String(n.id).includes(filter()))\n        .sort((a, b) => (a.id > b.id ? 1 : -1))\n    );\n  });\n\n  return (\n    <div class=\"h-screen flex flex-initial\">\n      {/* sidebar */}\n      <div class=\"w-2/6 overflow-auto bg-slate-800 text-zinc-200 px-2\">\n        {/* top bar */}\n        {/*\n        <ul class=\"p-2 flex my-2 items-baseline justify-evenly\">\n          <li class=\"\">one</li>\n          <li class=\"\">two</li>\n          <li class=\"text-sm\">\n            <Link>load data</Link>\n          </li>\n        </ul>\n        */}\n        <h1 class=\"text-xl my-3\">Load Data</h1>\n        <div class=\"flex mb-3\">\n          <button\n            class={buttonClass}\n            onClick={async () => {\n              const text = await navigator.clipboard.readText();\n              processInput(text);\n            }}\n          >\n            From clipboard\n          </button>\n          <div\n            class=\"bg-slate-700 rounded-md border border-dashed px-1 ml-1 border-slate-500\"\n            onDragOver={(ev) => {\n              ev.preventDefault();\n            }}\n            onDrop={(ev) => {\n              ev.preventDefault();\n              if (ev.dataTransfer != null && ev.dataTransfer.items) {\n                // Use DataTransferItemList interface to access the file(s)\n                [...ev.dataTransfer.items].forEach((item, i) => {\n                  // If dropped items aren't files, reject them\n                  if (item.kind === \"file\") {\n                    const file = item.getAsFile();\n                    if (file) {\n                      file.text().then((input) => {\n                        processInput(input);\n                      });\n                    }\n                  }\n                });\n              }\n            }}\n          >\n            Drag file here\n          </div>\n        </div>\n        <h1 class=\"text-xl mb-3\">Tools</h1>\n        <div>\n          <div class=\"flex my-1 justify-between\">\n            <button\n              class={buttonClass}\n              onClick={async () => {\n                const gd = graphData();\n                const start = Date.now();\n                const cycles = tarjan(gd);\n                const end = Date.now();\n\n                if (cycles.length > 0) {\n                  setMessage(\n                    `Cycles found in ${(end - start).toFixed(\n                      0\n                    )}ms:\\n${JSON.stringify(cycles, null, 2)}`\n                  );\n\n                  return;\n                }\n\n                setMessage(`No cycles found in ${(end - start).toFixed(0)}ms.`);\n              }}\n            >\n              Detect cycles\n            </button>\n          </div>\n          {/* info box */}\n          <Show when={message()}>\n            <pre class=\"bg-slate-700 overflow-auto text-sm rounded-md border p-2 border-slate-600 mb-1\">\n              {message}\n            </pre>\n          </Show>\n          <h1 class=\"text-xl mb-3 mt-3\">Search</h1>\n          <div class=\"flex justify-between mb-2\">\n            <input\n              class=\"p-1 w-8/12 border bg-slate-700 border-slate-600 rounded-md\"\n              type=\"text\"\n              // @ts-expect-error -- not sure why `value` is missing\n              onInput={(e) => setFilter(e.target.value)}\n              placeholder=\"filter nodes\"\n            />\n            <div class=\"text-right text-xs self-center\">\n              click item(s) to select\n            </div>\n          </div>\n          <ul class=\"border border-slate-600 divide-y divide-slate-600 rounded-md text-xs\">\n            <For each={filteredGraphData().slice(0, MAX_LIST_LENGTH)}>\n              {(node) => (\n                <li\n                  class=\"py-1 px-2 cursor-pointer hover:underline\"\n                  onClick={() => {\n                    const o = cosmoGraph();\n                    if (o === undefined) return;\n\n                    o.selectNodeById(node.id.toString());\n                    console.log(\"TODO: handle select\");\n                  }}\n                >\n                  <a href=\"#\">{node.id}</a>\n                </li>\n              )}\n            </For>\n          </ul>\n          <Show when={filteredGraphData().length > MAX_LIST_LENGTH}>\n            <div class=\"mt-2 text-xs text-zinc-500 text-right\">\n              {filteredGraphData().length - MAX_LIST_LENGTH} results hidden\n            </div>\n          </Show>\n        </div>\n      </div>\n      {/* main */}\n      <div class=\"w-5/6 bg-slate-800 relative\">\n        <canvas class=\"h-screen\" ref={canvasRef} />\n        <div class=\"absolute text-sm text-zinc-200 bottom-0 right-0 py-2 px-4 bg-slate-800 border-t border-l border-slate-600 rounded-tl-md\">\n          <div>Nodes: {graphData().nodes.length}</div>\n          <div>Edges: {numEdges()}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Graph };\n","import {interpolate, interpolateRound} from \"d3-interpolate\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport {loggish} from \"./log.js\";\nimport {symlogish} from \"./symlog.js\";\nimport {powish} from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function(_) {\n      var r0, r1;\n      return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [interpolator(0), interpolator(1)];\n    };\n  }\n\n  scale.range = range(interpolate);\n\n  scale.rangeRound = range(interpolateRound);\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\n\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\n\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\n\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\n\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\n\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n  }\n}));\n\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\n\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","export default x => () => x;\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function number(x) {\n  return +x;\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","const e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log10(step)),\n      error = step / Math.pow(10, power),\n      factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start) ++i1;\n    if (i2 / inc > stop) --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start) ++i1;\n    if (i2 * inc > stop) --i2;\n  }\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\n\nexport default function ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0)) return [];\n  if (start === stop) return [start];\n  const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1)) return [];\n  const n = i2 - i1 + 1, ticks = new Array(n);\n  if (reverse) {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\n  }\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\n\nexport function tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks} from \"d3-array\";\nimport {format, formatSpecifier} from \"d3-format\";\nimport nice from \"./nice.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : x => Math.pow(base, x);\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), x => Math.log(x) / base);\n}\n\nfunction reflect(f) {\n  return (x, k) => -f(-x, k);\n}\n\nexport function loggish(transform) {\n  const scale = transform(transformLog, transformExp);\n  const domain = scale.domain;\n  let base = 10;\n  let logs;\n  let pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = count => {\n    const d = domain();\n    let u = d[0];\n    let v = d[d.length - 1];\n    const r = v < u;\n\n    if (r) ([u, v] = [v, u]);\n\n    let i = logs(u);\n    let j = logs(v);\n    let k;\n    let t;\n    const n = count == null ? 10 : +count;\n    let z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1; k < base; ++k) {\n          t = i < 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1; k >= 1; --k) {\n          t = i > 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = ticks(u, v, n);\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = (count, specifier) => {\n    if (count == null) count = 10;\n    if (specifier == null) specifier = base === 10 ? \"s\" : \",\";\n    if (typeof specifier !== \"function\") {\n      if (!(base % 1) && (specifier = formatSpecifier(specifier)).precision == null) specifier.trim = true;\n      specifier = format(specifier);\n    }\n    if (count === Infinity) return specifier;\n    const k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return d => {\n      let i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = () => {\n    return domain(nice(domain(), {\n      floor: x => pows(Math.floor(logs(x))),\n      ceil: x => pows(Math.ceil(logs(x)))\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  const scale = loggish(transformer()).domain([1, 10]);\n  scale.copy = () => copy(scale, log()).base(scale.base());\n  initRange.apply(scale, arguments);\n  return scale;\n}\n","export default function nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {linearish} from \"./linear.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {linearish} from \"./linear.js\";\nimport {copy, identity, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nexport function powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nexport default function pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nexport function sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * degrees - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export const radians = Math.PI / 180;\nexport const degrees = 180 / Math.PI;\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","import { select } from 'd3-selection';\nimport 'd3-transition';\nimport { easeQuadInOut, easeQuadIn, easeQuadOut } from 'd3-ease';\nimport regl from 'regl';\nimport { color } from 'd3-color';\nimport { scaleLinear } from 'd3-scale';\nimport { mat3 } from 'gl-matrix';\nimport { Random } from 'random';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { extent } from 'd3-array';\n\nconst defaultNodeColor = '#b3b3b3';\r\nconst defaultGreyoutNodeOpacity = 0.1;\r\nconst defaultNodeSize = 4;\r\nconst defaultLinkColor = '#666666';\r\nconst defaultGreyoutLinkOpacity = 0.1;\r\nconst defaultLinkWidth = 1;\r\nconst defaultBackgroundColor = '#222222';\r\nconst defaultConfigValues = {\r\n    spaceSize: 4096,\r\n    nodeSizeScale: 1,\r\n    linkWidthScale: 1,\r\n    arrowSizeScale: 1,\r\n    renderLinks: true,\r\n    arrowLinks: true,\r\n    linkVisibilityDistanceRange: [50, 150],\r\n    linkVisibilityMinTransparency: 0.25,\r\n    useQuadtree: false,\r\n    simulation: {\r\n        decay: 1000,\r\n        gravity: 0,\r\n        center: 0,\r\n        repulsion: 0.1,\r\n        repulsionTheta: 1.7,\r\n        repulsionQuadtreeLevels: 12,\r\n        linkSpring: 1,\r\n        linkDistance: 2,\r\n        linkDistRandomVariationRange: [1, 1.2],\r\n        repulsionFromMouse: 2,\r\n        friction: 0.85,\r\n    },\r\n    showFPSMonitor: false,\r\n    pixelRatio: 2,\r\n    scaleNodesOnZoom: true,\r\n};\r\nconst hoveredNodeRingOpacity = 0.7;\r\nconst focusedNodeRingOpacity = 0.95;\r\nconst defaultScaleToZoom = 3;\n\nconst isFunction = (a) => typeof a === 'function';\r\nconst isArray = (a) => Array.isArray(a);\r\nconst isObject = (a) => (a instanceof Object);\r\nconst isAClassInstance = (a) => {\r\n    if (a instanceof Object) {\r\n        // eslint-disable-next-line @typescript-eslint/ban-types\r\n        return a.constructor.name !== 'Function' && a.constructor.name !== 'Object';\r\n    }\r\n    else\r\n        return false;\r\n};\r\nconst isPlainObject = (a) => isObject(a) && !isArray(a) && !isFunction(a) && !isAClassInstance(a);\r\nfunction getValue(d, accessor, index) {\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    if (isFunction(accessor))\r\n        return accessor(d, index);\r\n    else\r\n        return accessor;\r\n}\r\nfunction getRgbaColor(value) {\r\n    var _a;\r\n    let rgba;\r\n    if (isArray(value)) {\r\n        rgba = value;\r\n    }\r\n    else {\r\n        const color$1 = color(value);\r\n        const rgb = color$1 === null || color$1 === void 0 ? void 0 : color$1.rgb();\r\n        rgba = [(rgb === null || rgb === void 0 ? void 0 : rgb.r) || 0, (rgb === null || rgb === void 0 ? void 0 : rgb.g) || 0, (rgb === null || rgb === void 0 ? void 0 : rgb.b) || 0, (_a = color$1 === null || color$1 === void 0 ? void 0 : color$1.opacity) !== null && _a !== void 0 ? _a : 1];\r\n    }\r\n    return [\r\n        rgba[0] / 255,\r\n        rgba[1] / 255,\r\n        rgba[2] / 255,\r\n        rgba[3],\r\n    ];\r\n}\r\nfunction readPixels(reglInstance, fbo) {\r\n    let resultPixels = new Float32Array();\r\n    reglInstance({ framebuffer: fbo })(() => {\r\n        resultPixels = reglInstance.read();\r\n    });\r\n    return resultPixels;\r\n}\r\nfunction clamp(num, min, max) {\r\n    return Math.min(Math.max(num, min), max);\r\n}\n\nclass GraphConfig {\r\n    constructor() {\r\n        this.backgroundColor = defaultBackgroundColor;\r\n        this.spaceSize = defaultConfigValues.spaceSize;\r\n        this.nodeColor = defaultNodeColor;\r\n        this.nodeGreyoutOpacity = defaultGreyoutNodeOpacity;\r\n        this.nodeSize = defaultNodeSize;\r\n        this.nodeSizeScale = defaultConfigValues.nodeSizeScale;\r\n        this.renderHighlightedNodeRing = true;\r\n        this.highlightedNodeRingColor = undefined;\r\n        this.linkColor = defaultLinkColor;\r\n        this.linkGreyoutOpacity = defaultGreyoutLinkOpacity;\r\n        this.linkWidth = defaultLinkWidth;\r\n        this.linkWidthScale = defaultConfigValues.linkWidthScale;\r\n        this.renderLinks = defaultConfigValues.renderLinks;\r\n        this.linkArrows = defaultConfigValues.arrowLinks;\r\n        this.linkArrowsSizeScale = defaultConfigValues.arrowSizeScale;\r\n        this.linkVisibilityDistanceRange = defaultConfigValues.linkVisibilityDistanceRange;\r\n        this.linkVisibilityMinTransparency = defaultConfigValues.linkVisibilityMinTransparency;\r\n        this.useQuadtree = defaultConfigValues.useQuadtree;\r\n        this.simulation = {\r\n            decay: defaultConfigValues.simulation.decay,\r\n            gravity: defaultConfigValues.simulation.gravity,\r\n            center: defaultConfigValues.simulation.center,\r\n            repulsion: defaultConfigValues.simulation.repulsion,\r\n            repulsionTheta: defaultConfigValues.simulation.repulsionTheta,\r\n            repulsionQuadtreeLevels: defaultConfigValues.simulation.repulsionQuadtreeLevels,\r\n            linkSpring: defaultConfigValues.simulation.linkSpring,\r\n            linkDistance: defaultConfigValues.simulation.linkDistance,\r\n            linkDistRandomVariationRange: defaultConfigValues.simulation.linkDistRandomVariationRange,\r\n            repulsionFromMouse: defaultConfigValues.simulation.repulsionFromMouse,\r\n            friction: defaultConfigValues.simulation.friction,\r\n            onStart: undefined,\r\n            onTick: undefined,\r\n            onEnd: undefined,\r\n            onPause: undefined,\r\n            onRestart: undefined,\r\n        };\r\n        this.events = {\r\n            onClick: undefined,\r\n            onMouseMove: undefined,\r\n            onNodeMouseOver: undefined,\r\n            onNodeMouseOut: undefined,\r\n            onZoomStart: undefined,\r\n            onZoom: undefined,\r\n            onZoomEnd: undefined,\r\n        };\r\n        this.showFPSMonitor = defaultConfigValues.showFPSMonitor;\r\n        this.pixelRatio = defaultConfigValues.pixelRatio;\r\n        this.scaleNodesOnZoom = defaultConfigValues.scaleNodesOnZoom;\r\n        this.randomSeed = undefined;\r\n    }\r\n    init(config) {\r\n        Object.keys(config)\r\n            .forEach(configParameter => {\r\n            this.deepMergeConfig(this.getConfig(), config, configParameter);\r\n        });\r\n    }\r\n    deepMergeConfig(current, next, key) {\r\n        if (isPlainObject(current[key]) && isPlainObject(next[key])) {\r\n            // eslint-disable-next-line @typescript-eslint/ban-types\r\n            Object.keys(next[key])\r\n                .forEach(configParameter => {\r\n                this.deepMergeConfig(current[key], next[key], configParameter);\r\n            });\r\n        }\r\n        else\r\n            current[key] = next[key];\r\n    }\r\n    getConfig() {\r\n        return this;\r\n    }\r\n}\n\nclass CoreModule {\r\n    constructor(reglInstance, config, store, data, points) {\r\n        this.reglInstance = reglInstance;\r\n        this.config = config;\r\n        this.store = store;\r\n        this.data = data;\r\n        if (points)\r\n            this.points = points;\r\n    }\r\n}\n\nvar calculateCentermassFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nvarying vec4 rgba;void main(){gl_FragColor=rgba;}\"; // eslint-disable-line\n\nvar calculateCentermassVert = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform float pointsTextureSize;attribute vec2 indexes;varying vec4 rgba;void main(){vec4 pointPosition=texture2D(position,indexes/pointsTextureSize);rgba=vec4(pointPosition.xy,1.0,0.0);gl_Position=vec4(0.0,0.0,0.0,1.0);gl_PointSize=1.0;}\"; // eslint-disable-line\n\nvar forceFrag$5 = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform sampler2D centermass;uniform float center;uniform float alpha;varying vec2 index;void main(){vec4 pointPosition=texture2D(position,index);vec4 velocity=vec4(0.0);vec4 centermassValues=texture2D(centermass,vec2(0.0));vec2 centermassPosition=centermassValues.xy/centermassValues.b;vec2 distVector=centermassPosition-pointPosition.xy;float dist=sqrt(dot(distVector,distVector));if(dist>0.0){float angle=atan(distVector.y,distVector.x);float addV=alpha*center*dist*0.01;velocity.rg+=addV*vec2(cos(angle),sin(angle));}gl_FragColor=velocity;}\"; // eslint-disable-line\n\nfunction createQuadBuffer(reglInstance) {\r\n    const quadBuffer = reglInstance.buffer(new Float32Array([-1, -1, 1, -1, -1, 1, 1, 1]));\r\n    return {\r\n        buffer: quadBuffer,\r\n        size: 2,\r\n    };\r\n}\r\nfunction createIndexesBuffer(reglInstance, textureSize) {\r\n    const indexes = new Float32Array(textureSize * textureSize * 2);\r\n    for (let y = 0; y < textureSize; y++) {\r\n        for (let x = 0; x < textureSize; x++) {\r\n            const i = y * textureSize * 2 + x * 2;\r\n            indexes[i + 0] = x;\r\n            indexes[i + 1] = y;\r\n        }\r\n    }\r\n    const indexBuffer = reglInstance.buffer(indexes);\r\n    return {\r\n        buffer: indexBuffer,\r\n        size: 2,\r\n    };\r\n}\n\nvar clearFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nvarying vec2 index;void main(){gl_FragColor=vec4(0.0);}\"; // eslint-disable-line\n\nvar updateVert = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nattribute vec2 quad;varying vec2 index;void main(){index=(quad+1.0)/2.0;gl_Position=vec4(quad,0,1);}\"; // eslint-disable-line\n\nclass ForceCenter extends CoreModule {\r\n    create() {\r\n        const { reglInstance } = this;\r\n        this.centermassFbo = reglInstance.framebuffer({\r\n            color: reglInstance.texture({\r\n                data: new Float32Array(4).fill(0),\r\n                shape: [1, 1, 4],\r\n                type: 'float',\r\n            }),\r\n            depth: false,\r\n            stencil: false,\r\n        });\r\n    }\r\n    initPrograms() {\r\n        const { reglInstance, config, store, data, points } = this;\r\n        this.clearCentermassCommand = reglInstance({\r\n            frag: clearFrag,\r\n            vert: updateVert,\r\n            framebuffer: this.centermassFbo,\r\n            primitive: 'triangle strip',\r\n            count: 4,\r\n            attributes: { quad: createQuadBuffer(reglInstance) },\r\n        });\r\n        this.calculateCentermassCommand = reglInstance({\r\n            frag: calculateCentermassFrag,\r\n            vert: calculateCentermassVert,\r\n            framebuffer: () => this.centermassFbo,\r\n            primitive: 'points',\r\n            count: () => data.nodes.length,\r\n            attributes: { indexes: createIndexesBuffer(reglInstance, store.pointsTextureSize) },\r\n            uniforms: {\r\n                position: () => points === null || points === void 0 ? void 0 : points.previousPositionFbo,\r\n                pointsTextureSize: () => store.pointsTextureSize,\r\n            },\r\n            blend: {\r\n                enable: true,\r\n                func: {\r\n                    src: 'one',\r\n                    dst: 'one',\r\n                },\r\n                equation: {\r\n                    rgb: 'add',\r\n                    alpha: 'add',\r\n                },\r\n            },\r\n            depth: { enable: false, mask: false },\r\n            stencil: { enable: false },\r\n        });\r\n        this.runCommand = reglInstance({\r\n            frag: forceFrag$5,\r\n            vert: updateVert,\r\n            framebuffer: () => points === null || points === void 0 ? void 0 : points.velocityFbo,\r\n            primitive: 'triangle strip',\r\n            count: 4,\r\n            attributes: { quad: createQuadBuffer(reglInstance) },\r\n            uniforms: {\r\n                position: () => points === null || points === void 0 ? void 0 : points.previousPositionFbo,\r\n                centermass: () => this.centermassFbo,\r\n                center: () => { var _a; return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.center; },\r\n                alpha: () => store.alpha,\r\n            },\r\n        });\r\n    }\r\n    run() {\r\n        var _a, _b, _c;\r\n        (_a = this.clearCentermassCommand) === null || _a === void 0 ? void 0 : _a.call(this);\r\n        (_b = this.calculateCentermassCommand) === null || _b === void 0 ? void 0 : _b.call(this);\r\n        (_c = this.runCommand) === null || _c === void 0 ? void 0 : _c.call(this);\r\n    }\r\n    destroy() {\r\n        var _a;\r\n        (_a = this.centermassFbo) === null || _a === void 0 ? void 0 : _a.destroy();\r\n    }\r\n}\n\nvar forceFrag$4 = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform float gravity;uniform float spaceSize;uniform float alpha;varying vec2 index;void main(){vec4 pointPosition=texture2D(position,index);vec4 velocity=vec4(0.0);vec2 centerPosition=vec2(spaceSize/2.0);vec2 distVector=centerPosition-pointPosition.rg;float dist=sqrt(dot(distVector,distVector));if(dist>0.0){float angle=atan(distVector.y,distVector.x);float addV=alpha*gravity*dist*0.1;velocity.rg+=addV*vec2(cos(angle),sin(angle));}gl_FragColor=velocity;}\"; // eslint-disable-line\n\nclass ForceGravity extends CoreModule {\r\n    initPrograms() {\r\n        const { reglInstance, config, store, points } = this;\r\n        this.runCommand = reglInstance({\r\n            frag: forceFrag$4,\r\n            vert: updateVert,\r\n            framebuffer: () => points === null || points === void 0 ? void 0 : points.velocityFbo,\r\n            primitive: 'triangle strip',\r\n            count: 4,\r\n            attributes: { quad: createQuadBuffer(reglInstance) },\r\n            uniforms: {\r\n                position: () => points === null || points === void 0 ? void 0 : points.previousPositionFbo,\r\n                gravity: () => { var _a; return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.gravity; },\r\n                spaceSize: () => config.spaceSize,\r\n                alpha: () => store.alpha,\r\n            },\r\n        });\r\n    }\r\n    run() {\r\n        var _a;\r\n        (_a = this.runCommand) === null || _a === void 0 ? void 0 : _a.call(this);\r\n    }\r\n}\n\nfunction forceFrag$3(maxLinks) {\r\n    return `\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform sampler2D position;\nuniform float linkSpring;\nuniform float linkDistance;\nuniform vec2 linkDistRandomVariationRange;\n\nuniform sampler2D linkFirstIndicesAndAmount;\nuniform sampler2D linkIndices;\nuniform sampler2D linkBiasAndStrength;\nuniform sampler2D linkRandomDistanceFbo;\n\nuniform float pointsTextureSize;\nuniform float linksTextureSize;\nuniform float alpha;\n\nvarying vec2 index;\n\nconst float MAX_LINKS = ${maxLinks}.0;\n\nvoid main() {\n  vec4 pointPosition = texture2D(position, index);\n  vec4 velocity = vec4(0.0);\n\n  vec4 linkFirstIJAndAmount = texture2D(linkFirstIndicesAndAmount, index);\n  float iCount = linkFirstIJAndAmount.r;\n  float jCount = linkFirstIJAndAmount.g;\n  float linkAmount = linkFirstIJAndAmount.b;\n  if (linkAmount > 0.0) {\n    for (float i = 0.0; i < MAX_LINKS; i += 1.0) {\n      if (i < linkAmount) {\n        if (iCount >= linksTextureSize) {\n          iCount = 0.0;\n          jCount += 1.0;\n        }\n        vec2 linkTextureIndex = (vec2(iCount, jCount) + 0.5) / linksTextureSize;\n        vec4 connectedPointIndex = texture2D(linkIndices, linkTextureIndex);\n        vec4 biasAndStrength = texture2D(linkBiasAndStrength, linkTextureIndex);\n        vec4 randomMinDistance = texture2D(linkRandomDistanceFbo, linkTextureIndex);\n        float bias = biasAndStrength.r;\n        float strength = biasAndStrength.g;\n        float randomMinLinkDist = randomMinDistance.r * (linkDistRandomVariationRange.g - linkDistRandomVariationRange.r) + linkDistRandomVariationRange.r;\n        randomMinLinkDist *= linkDistance;\n\n        iCount += 1.0;\n\n        vec4 connectedPointPosition = texture2D(position, (connectedPointIndex.rg + 0.5) / pointsTextureSize);\n        float x = connectedPointPosition.x - (pointPosition.x + velocity.x);\n        float y = connectedPointPosition.y - (pointPosition.y + velocity.y);\n        float l = sqrt(x * x + y * y);\n        l = max(l, randomMinLinkDist * 0.99);\n        l = (l - randomMinLinkDist) / l;\n        l *= linkSpring * alpha;\n        l *= strength;\n        l *= bias;\n        x *= l;\n        y *= l;\n        velocity.x += x;\n        velocity.y += y;\n      }\n    }\n  }\n\n  gl_FragColor = vec4(velocity.rg, 0.0, 0.0);\n}\n  `;\r\n}\n\nvar LinkDirection;\r\n(function (LinkDirection) {\r\n    LinkDirection[\"OUTGOING\"] = \"outgoing\";\r\n    LinkDirection[\"INCOMING\"] = \"incoming\";\r\n})(LinkDirection || (LinkDirection = {}));\r\nclass ForceLink extends CoreModule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.linkFirstIndicesAndAmount = new Float32Array();\r\n        this.indices = new Float32Array();\r\n        this.maxPointDegree = 0;\r\n    }\r\n    create(direction) {\r\n        const { reglInstance, store: { pointsTextureSize, linksTextureSize }, data } = this;\r\n        this.linkFirstIndicesAndAmount = new Float32Array(pointsTextureSize * pointsTextureSize * 4);\r\n        this.indices = new Float32Array(linksTextureSize * linksTextureSize * 4);\r\n        const linkBiasAndStrengthState = new Float32Array(linksTextureSize * linksTextureSize * 4);\r\n        const linkDistanceState = new Float32Array(linksTextureSize * linksTextureSize * 4);\r\n        const grouped = direction === LinkDirection.INCOMING ? data.groupedSourceToTargetLinks : data.groupedTargetToSourceLinks;\r\n        this.maxPointDegree = 0;\r\n        let linkIndex = 0;\r\n        grouped.forEach((connectedNodeIndices, nodeIndex) => {\r\n            this.linkFirstIndicesAndAmount[nodeIndex * 4 + 0] = linkIndex % linksTextureSize;\r\n            this.linkFirstIndicesAndAmount[nodeIndex * 4 + 1] = Math.floor(linkIndex / linksTextureSize);\r\n            this.linkFirstIndicesAndAmount[nodeIndex * 4 + 2] = connectedNodeIndices.size;\r\n            connectedNodeIndices.forEach((connectedNodeIndex) => {\r\n                var _a, _b;\r\n                this.indices[linkIndex * 4 + 0] = connectedNodeIndex % pointsTextureSize;\r\n                this.indices[linkIndex * 4 + 1] = Math.floor(connectedNodeIndex / pointsTextureSize);\r\n                const degree = (_a = data.degree[data.getInputIndexBySortedIndex(connectedNodeIndex)]) !== null && _a !== void 0 ? _a : 0;\r\n                const connectedDegree = (_b = data.degree[data.getInputIndexBySortedIndex(nodeIndex)]) !== null && _b !== void 0 ? _b : 0;\r\n                const bias = degree / (degree + connectedDegree);\r\n                let strength = 1 / Math.min(degree, connectedDegree);\r\n                strength = Math.sqrt(strength);\r\n                linkBiasAndStrengthState[linkIndex * 4 + 0] = bias;\r\n                linkBiasAndStrengthState[linkIndex * 4 + 1] = strength;\r\n                linkDistanceState[linkIndex * 4] = this.store.getRandomFloat(0, 1);\r\n                linkIndex += 1;\r\n            });\r\n            this.maxPointDegree = Math.max(this.maxPointDegree, connectedNodeIndices.size);\r\n        });\r\n        this.linkFirstIndicesAndAmountFbo = reglInstance.framebuffer({\r\n            color: reglInstance.texture({\r\n                data: this.linkFirstIndicesAndAmount,\r\n                shape: [pointsTextureSize, pointsTextureSize, 4],\r\n                type: 'float',\r\n            }),\r\n            depth: false,\r\n            stencil: false,\r\n        });\r\n        this.indicesFbo = reglInstance.framebuffer({\r\n            color: reglInstance.texture({\r\n                data: this.indices,\r\n                shape: [linksTextureSize, linksTextureSize, 4],\r\n                type: 'float',\r\n            }),\r\n            depth: false,\r\n            stencil: false,\r\n        });\r\n        this.biasAndStrengthFbo = reglInstance.framebuffer({\r\n            color: reglInstance.texture({\r\n                data: linkBiasAndStrengthState,\r\n                shape: [linksTextureSize, linksTextureSize, 4],\r\n                type: 'float',\r\n            }),\r\n            depth: false,\r\n            stencil: false,\r\n        });\r\n        this.randomDistanceFbo = reglInstance.framebuffer({\r\n            color: reglInstance.texture({\r\n                data: linkDistanceState,\r\n                shape: [linksTextureSize, linksTextureSize, 4],\r\n                type: 'float',\r\n            }),\r\n            depth: false,\r\n            stencil: false,\r\n        });\r\n    }\r\n    initPrograms() {\r\n        const { reglInstance, config, store, points } = this;\r\n        this.runCommand = reglInstance({\r\n            frag: () => forceFrag$3(this.maxPointDegree),\r\n            vert: updateVert,\r\n            framebuffer: () => points === null || points === void 0 ? void 0 : points.velocityFbo,\r\n            primitive: 'triangle strip',\r\n            count: 4,\r\n            attributes: { quad: createQuadBuffer(reglInstance) },\r\n            uniforms: {\r\n                position: () => points === null || points === void 0 ? void 0 : points.previousPositionFbo,\r\n                linkSpring: () => { var _a; return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.linkSpring; },\r\n                linkDistance: () => { var _a; return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.linkDistance; },\r\n                linkDistRandomVariationRange: () => { var _a; return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.linkDistRandomVariationRange; },\r\n                linkFirstIndicesAndAmount: () => this.linkFirstIndicesAndAmountFbo,\r\n                linkIndices: () => this.indicesFbo,\r\n                linkBiasAndStrength: () => this.biasAndStrengthFbo,\r\n                linkRandomDistanceFbo: () => this.randomDistanceFbo,\r\n                pointsTextureSize: () => store.pointsTextureSize,\r\n                linksTextureSize: () => store.linksTextureSize,\r\n                alpha: () => store.alpha,\r\n            },\r\n        });\r\n    }\r\n    run() {\r\n        var _a;\r\n        (_a = this.runCommand) === null || _a === void 0 ? void 0 : _a.call(this);\r\n    }\r\n    destroy() {\r\n        var _a, _b, _c, _d;\r\n        (_a = this.linkFirstIndicesAndAmountFbo) === null || _a === void 0 ? void 0 : _a.destroy();\r\n        (_b = this.indicesFbo) === null || _b === void 0 ? void 0 : _b.destroy();\r\n        (_c = this.biasAndStrengthFbo) === null || _c === void 0 ? void 0 : _c.destroy();\r\n        (_d = this.randomDistanceFbo) === null || _d === void 0 ? void 0 : _d.destroy();\r\n    }\r\n}\n\nvar calculateLevelFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nvarying vec4 rgba;void main(){gl_FragColor=rgba;}\"; // eslint-disable-line\n\nvar calculateLevelVert = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform float pointsTextureSize;uniform float levelTextureSize;uniform float cellSize;attribute vec2 indexes;varying vec4 rgba;void main(){vec4 pointPosition=texture2D(position,indexes/pointsTextureSize);rgba=vec4(pointPosition.rg,1.0,0.0);float n=floor(pointPosition.x/cellSize);float m=floor(pointPosition.y/cellSize);vec2 levelPosition=2.0*(vec2(n,m)+0.5)/levelTextureSize-1.0;gl_Position=vec4(levelPosition,0.0,1.0);gl_PointSize=1.0;}\"; // eslint-disable-line\n\nvar forceFrag$2 = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform sampler2D levelFbo;uniform float level;uniform float levels;uniform float levelTextureSize;uniform float repulsion;uniform float alpha;uniform float spaceSize;uniform float theta;varying vec2 index;const float MAX_LEVELS_NUM=14.0;vec2 calcAdd(vec2 ij,vec2 pp){vec2 add=vec2(0.0);vec4 centermass=texture2D(levelFbo,ij);if(centermass.r>0.0&&centermass.g>0.0&&centermass.b>0.0){vec2 centermassPosition=vec2(centermass.rg/centermass.b);vec2 distVector=pp-centermassPosition;float l=dot(distVector,distVector);float dist=sqrt(l);if(l>0.0){float angle=atan(distVector.y,distVector.x);float c=alpha*repulsion*centermass.b;float distanceMin2=1.0;if(l<distanceMin2)l=sqrt(distanceMin2*l);float addV=c/sqrt(l);add=addV*vec2(cos(angle),sin(angle));}}return add;}void main(){vec4 pointPosition=texture2D(position,index);float x=pointPosition.x;float y=pointPosition.y;float left=0.0;float top=0.0;float right=spaceSize;float bottom=spaceSize;float n_left=0.0;float n_top=0.0;float n_right=0.0;float n_bottom=0.0;float cellSize=0.0;for(float i=0.0;i<MAX_LEVELS_NUM;i+=1.0){if(i<=level){left+=cellSize*n_left;top+=cellSize*n_top;right-=cellSize*n_right;bottom-=cellSize*n_bottom;cellSize=pow(2.0,levels-i-1.0);float dist_left=x-left;n_left=max(0.0,floor(dist_left/cellSize-theta));float dist_top=y-top;n_top=max(0.0,floor(dist_top/cellSize-theta));float dist_right=right-x;n_right=max(0.0,floor(dist_right/cellSize-theta));float dist_bottom=bottom-y;n_bottom=max(0.0,floor(dist_bottom/cellSize-theta));}}vec4 velocity=vec4(vec2(0.0),1.0,0.0);for(float i=0.0;i<12.0;i+=1.0){for(float j=0.0;j<4.0;j+=1.0){float n=left+cellSize*j;float m=top+cellSize*n_top+cellSize*i;if(n<(left+n_left*cellSize)&&m<bottom){velocity.xy+=calcAdd(vec2(n/cellSize,m/cellSize)/levelTextureSize,pointPosition.xy);}n=left+cellSize*i;m=top+cellSize*j;if(n<(right-n_right*cellSize)&&m<(top+n_top*cellSize)){velocity.xy+=calcAdd(vec2(n/cellSize,m/cellSize)/levelTextureSize,pointPosition.xy);}n=right-n_right*cellSize+cellSize*j;m=top+cellSize*i;if(n<right&&m<(bottom-n_bottom*cellSize)){velocity.xy+=calcAdd(vec2(n/cellSize,m/cellSize)/levelTextureSize,pointPosition.xy);}n=left+n_left*cellSize+cellSize*i;m=bottom-n_bottom*cellSize+cellSize*j;if(n<right&&m<bottom){velocity.xy+=calcAdd(vec2(n/cellSize,m/cellSize)/levelTextureSize,pointPosition.xy);}}}gl_FragColor=velocity;}\"; // eslint-disable-line\n\nvar forceCenterFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform sampler2D levelFbo;uniform sampler2D randomValues;uniform float levelTextureSize;uniform float repulsion;uniform float alpha;varying vec2 index;vec2 calcAdd(vec2 ij,vec2 pp){vec2 add=vec2(0.0);vec4 centermass=texture2D(levelFbo,ij);if(centermass.r>0.0&&centermass.g>0.0&&centermass.b>0.0){vec2 centermassPosition=vec2(centermass.rg/centermass.b);vec2 distVector=pp-centermassPosition;float l=dot(distVector,distVector);float dist=sqrt(l);if(l>0.0){float angle=atan(distVector.y,distVector.x);float c=alpha*repulsion*centermass.b;float distanceMin2=1.0;if(l<distanceMin2)l=sqrt(distanceMin2*l);float addV=c/sqrt(l);add=addV*vec2(cos(angle),sin(angle));}}return add;}void main(){vec4 pointPosition=texture2D(position,index);vec4 random=texture2D(randomValues,index);vec4 velocity=vec4(0.0);velocity.xy+=calcAdd(pointPosition.xy/levelTextureSize,pointPosition.xy);velocity.xy+=velocity.xy*random.rg;gl_FragColor=velocity;}\"; // eslint-disable-line\n\nclass ForceManyBody extends CoreModule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.levelsFbos = new Map();\r\n        this.quadtreeLevels = 0;\r\n    }\r\n    create() {\r\n        var _a;\r\n        const { reglInstance, config, store } = this;\r\n        this.quadtreeLevels = Math.log2((_a = config.spaceSize) !== null && _a !== void 0 ? _a : defaultConfigValues.spaceSize);\r\n        for (let i = 0; i < this.quadtreeLevels; i += 1) {\r\n            const levelTextureSize = Math.pow(2, i + 1);\r\n            this.levelsFbos.set(`level[${i}]`, reglInstance.framebuffer({\r\n                shape: [levelTextureSize, levelTextureSize],\r\n                colorType: 'float',\r\n                depth: false,\r\n                stencil: false,\r\n            }));\r\n        }\r\n        // Create random number to prevent point to stick together in one coordinate\r\n        const randomValuesState = new Float32Array(store.pointsTextureSize * store.pointsTextureSize * 4);\r\n        for (let i = 0; i < store.pointsTextureSize * store.pointsTextureSize; ++i) {\r\n            randomValuesState[i * 4] = store.getRandomFloat(-1, 1) * 0.00001;\r\n            randomValuesState[i * 4 + 1] = store.getRandomFloat(-1, 1) * 0.00001;\r\n        }\r\n        this.randomValuesFbo = reglInstance.framebuffer({\r\n            color: reglInstance.texture({\r\n                data: randomValuesState,\r\n                shape: [store.pointsTextureSize, store.pointsTextureSize, 4],\r\n                type: 'float',\r\n            }),\r\n            depth: false,\r\n            stencil: false,\r\n        });\r\n    }\r\n    initPrograms() {\r\n        const { reglInstance, config, store, data, points } = this;\r\n        this.clearLevelsCommand = reglInstance({\r\n            frag: clearFrag,\r\n            vert: updateVert,\r\n            framebuffer: (_, props) => props.levelFbo,\r\n            primitive: 'triangle strip',\r\n            count: 4,\r\n            attributes: { quad: createQuadBuffer(reglInstance) },\r\n        });\r\n        this.calculateLevelsCommand = reglInstance({\r\n            frag: calculateLevelFrag,\r\n            vert: calculateLevelVert,\r\n            framebuffer: (_, props) => props.levelFbo,\r\n            primitive: 'points',\r\n            count: () => data.nodes.length,\r\n            attributes: { indexes: createIndexesBuffer(reglInstance, store.pointsTextureSize) },\r\n            uniforms: {\r\n                position: () => points === null || points === void 0 ? void 0 : points.previousPositionFbo,\r\n                pointsTextureSize: () => store.pointsTextureSize,\r\n                levelTextureSize: (_, props) => props.levelTextureSize,\r\n                cellSize: (_, props) => props.cellSize,\r\n            },\r\n            blend: {\r\n                enable: true,\r\n                func: {\r\n                    src: 'one',\r\n                    dst: 'one',\r\n                },\r\n                equation: {\r\n                    rgb: 'add',\r\n                    alpha: 'add',\r\n                },\r\n            },\r\n            depth: { enable: false, mask: false },\r\n            stencil: { enable: false },\r\n        });\r\n        this.forceCommand = reglInstance({\r\n            frag: forceFrag$2,\r\n            vert: updateVert,\r\n            framebuffer: () => points === null || points === void 0 ? void 0 : points.velocityFbo,\r\n            primitive: 'triangle strip',\r\n            count: 4,\r\n            attributes: { quad: createQuadBuffer(reglInstance) },\r\n            uniforms: {\r\n                position: () => points === null || points === void 0 ? void 0 : points.previousPositionFbo,\r\n                level: (_, props) => props.level,\r\n                levels: this.quadtreeLevels,\r\n                levelFbo: (_, props) => props.levelFbo,\r\n                levelTextureSize: (_, props) => props.levelTextureSize,\r\n                alpha: () => store.alpha,\r\n                repulsion: () => { var _a; return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsion; },\r\n                spaceSize: () => config.spaceSize,\r\n                theta: () => { var _a; return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsionTheta; },\r\n            },\r\n            blend: {\r\n                enable: true,\r\n                func: {\r\n                    src: 'one',\r\n                    dst: 'one',\r\n                },\r\n                equation: {\r\n                    rgb: 'add',\r\n                    alpha: 'add',\r\n                },\r\n            },\r\n            depth: { enable: false, mask: false },\r\n            stencil: { enable: false },\r\n        });\r\n        this.forceFromItsOwnCentermassCommand = reglInstance({\r\n            frag: forceCenterFrag,\r\n            vert: updateVert,\r\n            framebuffer: () => points === null || points === void 0 ? void 0 : points.velocityFbo,\r\n            primitive: 'triangle strip',\r\n            count: 4,\r\n            attributes: { quad: createQuadBuffer(reglInstance) },\r\n            uniforms: {\r\n                position: () => points === null || points === void 0 ? void 0 : points.previousPositionFbo,\r\n                randomValues: () => this.randomValuesFbo,\r\n                levelFbo: (_, props) => props.levelFbo,\r\n                levelTextureSize: (_, props) => props.levelTextureSize,\r\n                alpha: () => store.alpha,\r\n                repulsion: () => { var _a; return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsion; },\r\n                spaceSize: () => config.spaceSize,\r\n            },\r\n            blend: {\r\n                enable: true,\r\n                func: {\r\n                    src: 'one',\r\n                    dst: 'one',\r\n                },\r\n                equation: {\r\n                    rgb: 'add',\r\n                    alpha: 'add',\r\n                },\r\n            },\r\n            depth: { enable: false, mask: false },\r\n            stencil: { enable: false },\r\n        });\r\n        this.clearVelocityCommand = reglInstance({\r\n            frag: clearFrag,\r\n            vert: updateVert,\r\n            framebuffer: () => points === null || points === void 0 ? void 0 : points.velocityFbo,\r\n            primitive: 'triangle strip',\r\n            count: 4,\r\n            attributes: { quad: createQuadBuffer(reglInstance) },\r\n        });\r\n    }\r\n    run() {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        const { config } = this;\r\n        for (let i = 0; i < this.quadtreeLevels; i += 1) {\r\n            (_a = this.clearLevelsCommand) === null || _a === void 0 ? void 0 : _a.call(this, { levelFbo: this.levelsFbos.get(`level[${i}]`) });\r\n            const levelTextureSize = Math.pow(2, i + 1);\r\n            const cellSize = ((_b = config.spaceSize) !== null && _b !== void 0 ? _b : defaultConfigValues.spaceSize) / levelTextureSize;\r\n            (_c = this.calculateLevelsCommand) === null || _c === void 0 ? void 0 : _c.call(this, {\r\n                levelFbo: this.levelsFbos.get(`level[${i}]`),\r\n                levelTextureSize,\r\n                cellSize,\r\n            });\r\n        }\r\n        (_d = this.clearVelocityCommand) === null || _d === void 0 ? void 0 : _d.call(this);\r\n        for (let i = 0; i < this.quadtreeLevels; i += 1) {\r\n            const levelTextureSize = Math.pow(2, i + 1);\r\n            (_e = this.forceCommand) === null || _e === void 0 ? void 0 : _e.call(this, {\r\n                levelFbo: this.levelsFbos.get(`level[${i}]`),\r\n                levelTextureSize,\r\n                level: i,\r\n            });\r\n            if (i === this.quadtreeLevels - 1) {\r\n                (_f = this.forceFromItsOwnCentermassCommand) === null || _f === void 0 ? void 0 : _f.call(this, {\r\n                    levelFbo: this.levelsFbos.get(`level[${i}]`),\r\n                    levelTextureSize,\r\n                    level: i,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    destroy() {\r\n        var _a;\r\n        (_a = this.randomValuesFbo) === null || _a === void 0 ? void 0 : _a.destroy();\r\n        this.levelsFbos.forEach(fbo => {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            if (fbo === null || fbo === void 0 ? void 0 : fbo._framebuffer.framebuffer) {\r\n                fbo.destroy();\r\n            }\r\n        });\r\n        this.levelsFbos.clear();\r\n    }\r\n}\n\nfunction forceFrag$1(startLevel, maxLevels) {\r\n    startLevel = Math.min(startLevel, maxLevels);\r\n    const delta = maxLevels - startLevel;\r\n    const calcAdd = `\n    float dist = sqrt(l);\n    if (dist > 0.0) {\n      float c = alpha * repulsion * centermass.b;\n      addVelocity += calcAdd(vec2(x, y), l, c);\n      addVelocity += addVelocity * random.rg;\n    }\n  `;\r\n    function quad(level) {\r\n        if (level >= maxLevels) {\r\n            return calcAdd;\r\n        }\r\n        else {\r\n            const groupSize = Math.pow(2, level + 1);\r\n            const iEnding = new Array(level + 1 - delta).fill(0).map((_, l) => `pow(2.0, ${level - (l + delta)}.0) * i${l + delta}`).join('+');\r\n            const jEnding = new Array(level + 1 - delta).fill(0).map((_, l) => `pow(2.0, ${level - (l + delta)}.0) * j${l + delta}`).join('+');\r\n            return `\n      for (float ij${level} = 0.0; ij${level} < 4.0; ij${level} += 1.0) {\n        float i${level} = 0.0;\n        float j${level} = 0.0;\n        if (ij${level} == 1.0 || ij${level} == 3.0) i${level} = 1.0;\n        if (ij${level} == 2.0 || ij${level} == 3.0) j${level} = 1.0;\n        float i = pow(2.0, ${startLevel}.0) * n / width${level + 1} + ${iEnding};\n        float j = pow(2.0, ${startLevel}.0) * m / width${level + 1} + ${jEnding};\n        float groupPosX = (i + 0.5) / ${groupSize}.0;\n        float groupPosY = (j + 0.5) / ${groupSize}.0;\n        \n        vec4 centermass = texture2D(level[${level}], vec2(groupPosX, groupPosY));\n        if (centermass.r > 0.0 && centermass.g > 0.0 && centermass.b > 0.0) {\n          float x = centermass.r / centermass.b - pointPosition.r;\n          float y = centermass.g / centermass.b - pointPosition.g;\n          float l = x * x + y * y;\n          if ((width${level + 1} * width${level + 1}) / theta < l) {\n            ${calcAdd}\n          } else {\n            ${quad(level + 1)}\n          }\n        }\n      }\n      `;\r\n        }\r\n    }\r\n    return `\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform sampler2D position;\nuniform sampler2D randomValues;\nuniform float spaceSize;\nuniform float repulsion;\nuniform float theta;\nuniform float alpha;\nuniform sampler2D level[${maxLevels}];\nvarying vec2 index;\n\nvec2 calcAdd(vec2 xy, float l, float c) {\n  float distanceMin2 = 1.0;\n  if (l < distanceMin2) l = sqrt(distanceMin2 * l);\n  float add = c / l;\n  return add * xy;\n}\n\nvoid main() {\n  vec4 pointPosition = texture2D(position, index);\n  vec4 random = texture2D(randomValues, index);\n\n  float width0 = spaceSize;\n\n  vec2 velocity = vec2(0.0);\n  vec2 addVelocity = vec2(0.0);\n\n  ${new Array(maxLevels).fill(0).map((_, i) => `float width${i + 1} = width${i} / 2.0;`).join('\\n')}\n\n  for (float n = 0.0; n < pow(2.0, ${delta}.0); n += 1.0) {\n    for (float m = 0.0; m < pow(2.0, ${delta}.0); m += 1.0) {\n      ${quad(delta)}\n    }\n  }\n\n  velocity -= addVelocity;\n\n  gl_FragColor = vec4(velocity, 0.0, 0.0);\n}\n`;\r\n}\n\nclass ForceManyBodyQuadtree extends CoreModule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.levelsFbos = new Map();\r\n        this.quadtreeLevels = 0;\r\n    }\r\n    create() {\r\n        var _a;\r\n        const { reglInstance, config, store } = this;\r\n        this.quadtreeLevels = Math.log2((_a = config.spaceSize) !== null && _a !== void 0 ? _a : defaultConfigValues.spaceSize);\r\n        for (let i = 0; i < this.quadtreeLevels; i += 1) {\r\n            const levelTextureSize = Math.pow(2, i + 1);\r\n            this.levelsFbos.set(`level[${i}]`, reglInstance.framebuffer({\r\n                color: reglInstance.texture({\r\n                    data: new Float32Array(levelTextureSize * levelTextureSize * 4),\r\n                    shape: [levelTextureSize, levelTextureSize, 4],\r\n                    type: 'float',\r\n                }),\r\n                depth: false,\r\n                stencil: false,\r\n            }));\r\n        }\r\n        // Create random number to prevent point to stick together in one coordinate\r\n        const randomValuesState = new Float32Array(store.pointsTextureSize * store.pointsTextureSize * 4);\r\n        for (let i = 0; i < store.pointsTextureSize * store.pointsTextureSize; ++i) {\r\n            randomValuesState[i * 4] = store.getRandomFloat(-1, 1) * 0.00001;\r\n            randomValuesState[i * 4 + 1] = store.getRandomFloat(-1, 1) * 0.00001;\r\n        }\r\n        this.randomValuesFbo = reglInstance.framebuffer({\r\n            color: reglInstance.texture({\r\n                data: randomValuesState,\r\n                shape: [store.pointsTextureSize, store.pointsTextureSize, 4],\r\n                type: 'float',\r\n            }),\r\n            depth: false,\r\n            stencil: false,\r\n        });\r\n    }\r\n    initPrograms() {\r\n        var _a, _b;\r\n        const { reglInstance, config, store, data, points } = this;\r\n        this.clearLevelsCommand = reglInstance({\r\n            frag: clearFrag,\r\n            vert: updateVert,\r\n            framebuffer: (_, props) => props.levelFbo,\r\n            primitive: 'triangle strip',\r\n            count: 4,\r\n            attributes: { quad: createQuadBuffer(reglInstance) },\r\n        });\r\n        this.calculateLevelsCommand = reglInstance({\r\n            frag: calculateLevelFrag,\r\n            vert: calculateLevelVert,\r\n            framebuffer: (_, props) => props.levelFbo,\r\n            primitive: 'points',\r\n            count: () => data.nodes.length,\r\n            attributes: { indexes: createIndexesBuffer(reglInstance, store.pointsTextureSize) },\r\n            uniforms: {\r\n                position: () => points === null || points === void 0 ? void 0 : points.previousPositionFbo,\r\n                pointsTextureSize: () => store.pointsTextureSize,\r\n                levelTextureSize: (_, props) => props.levelTextureSize,\r\n                cellSize: (_, props) => props.cellSize,\r\n            },\r\n            blend: {\r\n                enable: true,\r\n                func: {\r\n                    src: 'one',\r\n                    dst: 'one',\r\n                },\r\n                equation: {\r\n                    rgb: 'add',\r\n                    alpha: 'add',\r\n                },\r\n            },\r\n            depth: { enable: false, mask: false },\r\n            stencil: { enable: false },\r\n        });\r\n        this.quadtreeCommand = reglInstance({\r\n            frag: forceFrag$1((_b = (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsionQuadtreeLevels) !== null && _b !== void 0 ? _b : this.quadtreeLevels, this.quadtreeLevels),\r\n            vert: updateVert,\r\n            framebuffer: () => points === null || points === void 0 ? void 0 : points.velocityFbo,\r\n            primitive: 'triangle strip',\r\n            count: 4,\r\n            attributes: { quad: createQuadBuffer(reglInstance) },\r\n            uniforms: {\r\n                position: () => points === null || points === void 0 ? void 0 : points.previousPositionFbo,\r\n                randomValues: () => this.randomValuesFbo,\r\n                spaceSize: () => config.spaceSize,\r\n                repulsion: () => { var _a; return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsion; },\r\n                theta: () => { var _a; return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsionTheta; },\r\n                alpha: () => store.alpha,\r\n                ...Object.fromEntries(this.levelsFbos),\r\n            },\r\n        });\r\n    }\r\n    run() {\r\n        var _a, _b, _c, _d;\r\n        const { config } = this;\r\n        for (let i = 0; i < this.quadtreeLevels; i += 1) {\r\n            (_a = this.clearLevelsCommand) === null || _a === void 0 ? void 0 : _a.call(this, { levelFbo: this.levelsFbos.get(`level[${i}]`) });\r\n            const levelTextureSize = Math.pow(2, i + 1);\r\n            const cellSize = ((_b = config.spaceSize) !== null && _b !== void 0 ? _b : defaultConfigValues.spaceSize) / levelTextureSize;\r\n            (_c = this.calculateLevelsCommand) === null || _c === void 0 ? void 0 : _c.call(this, {\r\n                levelFbo: this.levelsFbos.get(`level[${i}]`),\r\n                levelTextureSize,\r\n                cellSize,\r\n            });\r\n        }\r\n        (_d = this.quadtreeCommand) === null || _d === void 0 ? void 0 : _d.call(this);\r\n    }\r\n    destroy() {\r\n        var _a;\r\n        (_a = this.randomValuesFbo) === null || _a === void 0 ? void 0 : _a.destroy();\r\n        this.levelsFbos.forEach(fbo => {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            if (fbo === null || fbo === void 0 ? void 0 : fbo._framebuffer.framebuffer) {\r\n                fbo.destroy();\r\n            }\r\n        });\r\n        this.levelsFbos.clear();\r\n    }\r\n}\n\nvar forceFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform float repulsion;uniform vec2 mousePos;varying vec2 index;void main(){vec4 pointPosition=texture2D(position,index);vec4 velocity=vec4(0.0);vec2 mouse=mousePos;vec2 distVector=mouse-pointPosition.rg;float dist=sqrt(dot(distVector,distVector));dist=max(dist,10.0);float angle=atan(distVector.y,distVector.x);float addV=100.0*repulsion/(dist*dist);velocity.rg-=addV*vec2(cos(angle),sin(angle));gl_FragColor=velocity;}\"; // eslint-disable-line\n\nclass ForceMouse extends CoreModule {\r\n    initPrograms() {\r\n        const { reglInstance, config, store, points } = this;\r\n        this.runCommand = reglInstance({\r\n            frag: forceFrag,\r\n            vert: updateVert,\r\n            framebuffer: () => points === null || points === void 0 ? void 0 : points.velocityFbo,\r\n            primitive: 'triangle strip',\r\n            count: 4,\r\n            attributes: { quad: createQuadBuffer(reglInstance) },\r\n            uniforms: {\r\n                position: () => points === null || points === void 0 ? void 0 : points.previousPositionFbo,\r\n                mousePos: () => store.mousePosition,\r\n                repulsion: () => { var _a; return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsionFromMouse; },\r\n            },\r\n        });\r\n    }\r\n    run() {\r\n        var _a;\r\n        (_a = this.runCommand) === null || _a === void 0 ? void 0 : _a.call(this);\r\n    }\r\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nvar glBench = {exports: {}};\n\n(function (module, exports) {\n\t(function (global, factory) {\n\t  module.exports = factory() ;\n\t}(commonjsGlobal, (function () {\n\t  var UISVG = \"<div class=\\\"gl-box\\\">\\n  <svg viewBox=\\\"0 0 55 60\\\">\\n    <text x=\\\"27\\\" y=\\\"56\\\" class=\\\"gl-fps\\\">00 FPS</text>\\n    <text x=\\\"28\\\" y=\\\"8\\\" class=\\\"gl-mem\\\"></text>\\n    <rect x=\\\"0\\\" y=\\\"14\\\" rx=\\\"4\\\" ry=\\\"4\\\" width=\\\"55\\\" height=\\\"32\\\"></rect>\\n    <polyline class=\\\"gl-chart\\\"></polyline>\\n  </svg>\\n  <svg viewBox=\\\"0 0 14 60\\\" class=\\\"gl-cpu-svg\\\">\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"opacity\\\"/>\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"gl-cpu\\\" stroke-dasharray=\\\"0 27\\\"/>\\n    <path d=\\\"M5.35 43c-.464 0-.812.377-.812.812v1.16c-.783.1972-1.421.812-1.595 1.624h-1.16c-.435 0-.812.348-.812.812s.348.812.812.812h1.102v1.653H1.812c-.464 0-.812.377-.812.812 0 .464.377.812.812.812h1.131c.1943.783.812 1.392 1.595 1.595v1.131c0 .464.377.812.812.812.464 0 .812-.377.812-.812V53.15h1.653v1.073c0 .464.377.812.812.812.464 0 .812-.377.812-.812v-1.131c.783-.1943 1.392-.812 1.595-1.595h1.131c.464 0 .812-.377.812-.812 0-.464-.377-.812-.812-.812h-1.073V48.22h1.102c.435 0 .812-.348.812-.812s-.348-.812-.812-.812h-1.16c-.1885-.783-.812-1.421-1.595-1.624v-1.131c0-.464-.377-.812-.812-.812-.464 0-.812.377-.812.812v1.073H6.162v-1.073c0-.464-.377-.812-.812-.812zm.58 3.48h2.088c.754 0 1.363.609 1.363 1.363v2.088c0 .754-.609 1.363-1.363 1.363H5.93c-.754 0-1.363-.609-1.363-1.363v-2.088c0-.754.609-1.363 1.363-1.363z\\\"/>\\n  </svg>\\n  <svg viewBox=\\\"0 0 14 60\\\" class=\\\"gl-gpu-svg\\\">\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"opacity\\\"/>\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"gl-gpu\\\" stroke-dasharray=\\\"0 27\\\"/>\\n    <path d=\\\"M1.94775 43.3772a.736.736 0 10-.00416 1.472c.58535.00231.56465.1288.6348.3197.07015.18975.04933.43585.04933.43585l-.00653.05405v8.671a.736.736 0 101.472 0v-1.4145c.253.09522.52785.1495.81765.1495h5.267c1.2535 0 2.254-.9752 2.254-2.185v-3.105c0-1.2075-1.00625-2.185-2.254-2.185h-5.267c-.28865 0-.5635.05405-.8165.1495.01806-.16445.04209-.598-.1357-1.0787-.22425-.6072-.9499-1.2765-2.0125-1.2765zm2.9095 3.6455c.42435 0 .7659.36225.7659.8119v2.9785c0 .44965-.34155.8119-.7659.8119s-.7659-.36225-.7659-.8119v-2.9785c0-.44965.34155-.8119.7659-.8119zm4.117 0a2.3 2.3 0 012.3 2.3 2.3 2.3 0 01-2.3 2.3 2.3 2.3 0 01-2.3-2.3 2.3 2.3 0 012.3-2.3z\\\"/>\\n  </svg>\\n</div>\";\n\n\t  var UICSS = \"#gl-bench {\\n  position:absolute;\\n  left:0;\\n  top:0;\\n  z-index:1000;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  user-select: none;\\n}\\n\\n#gl-bench div {\\n  position: relative;\\n  display: block;\\n  margin: 4px;\\n  padding: 0 7px 0 10px;\\n  background: #6c6;\\n  border-radius: 15px;\\n  cursor: pointer;\\n  opacity: 0.9;\\n}\\n\\n#gl-bench svg {\\n  height: 60px;\\n  margin: 0 -1px;\\n}\\n\\n#gl-bench text {\\n  font-size: 12px;\\n  font-family: Helvetica,Arial,sans-serif;\\n  font-weight: 700;\\n  dominant-baseline: middle;\\n  text-anchor: middle;\\n}\\n\\n#gl-bench .gl-mem {\\n  font-size: 9px;\\n}\\n\\n#gl-bench line {\\n  stroke-width: 5;\\n  stroke: #112211;\\n  stroke-linecap: round;\\n}\\n\\n#gl-bench polyline {\\n  fill: none;\\n  stroke: #112211;\\n  stroke-linecap: round;\\n  stroke-linejoin: round;\\n  stroke-width: 3.5;\\n}\\n\\n#gl-bench rect {\\n  fill: #448844;\\n}\\n\\n#gl-bench .opacity {\\n  stroke: #448844;\\n}\\n\";\n\n\t  class GLBench {\n\n\t    /** GLBench constructor\n\t     * @param { WebGLRenderingContext | WebGL2RenderingContext } gl context\n\t     * @param { Object | undefined } settings additional settings\n\t     */\n\t    constructor(gl, settings = {}) {\n\t      this.css = UICSS;\n\t      this.svg = UISVG;\n\t      this.paramLogger = () => {};\n\t      this.chartLogger = () => {};\n\t      this.chartLen = 20;\n\t      this.chartHz = 20;\n\n\t      this.names = [];\n\t      this.cpuAccums = [];\n\t      this.gpuAccums = [];  \n\t      this.activeAccums = [];\n\t      this.chart = new Array(this.chartLen);\n\t      this.now = () => (performance && performance.now) ? performance.now() : Date.now();\n\t      this.updateUI = () => {\n\t        [].forEach.call(this.nodes['gl-gpu-svg'], node => {\n\t          node.style.display = this.trackGPU ? 'inline' : 'none';\n\t        });\n\t      };\n\n\t      Object.assign(this, settings);\n\t      this.detected = 0;\n\t      this.finished = [];\n\t      this.isFramebuffer = 0;\n\t      this.frameId = 0;\n\n\t      // 120hz device detection\n\t      let rafId, n = 0, t0;\n\t      let loop = (t) => {\n\t        if (++n < 20) {\n\t          rafId = requestAnimationFrame(loop);\n\t        } else {\n\t          this.detected = Math.ceil(1e3 * n / (t - t0) / 70);\n\t          cancelAnimationFrame(rafId);\n\t        }\n\t        if (!t0) t0 = t;\n\t      };\n\t      requestAnimationFrame(loop);\n\n\t      // attach gpu profilers\n\t      if (gl) {\n\t        const glFinish = async (t, activeAccums) =>\n\t          Promise.resolve(setTimeout(() => {\n\t            gl.getError();\n\t            const dt = this.now() - t;\n\t            activeAccums.forEach((active, i) => {\n\t              if (active) this.gpuAccums[i] += dt;\n\t            });\n\t          }, 0));\n\n\t        const addProfiler = (fn, self, target) => function() {\n\t          const t = self.now();\n\t          fn.apply(target, arguments);\n\t          if (self.trackGPU) self.finished.push(glFinish(t, self.activeAccums.slice(0)));\n\t        };\n\n\t        ['drawArrays', 'drawElements', 'drawArraysInstanced',\n\t          'drawBuffers', 'drawElementsInstanced', 'drawRangeElements']\n\t          .forEach(fn => { if (gl[fn]) gl[fn] = addProfiler(gl[fn], this, gl); });\n\n\t        gl.getExtension = ((fn, self) => function() {\n\t          let ext = fn.apply(gl, arguments);\n\t          if (ext) {\n\t            ['drawElementsInstancedANGLE', 'drawBuffersWEBGL']\n\t              .forEach(fn => { if (ext[fn]) ext[fn] = addProfiler(ext[fn], self, ext); });\n\t          }\n\t          return ext;\n\t        })(gl.getExtension, this);\n\t      }\n\n\t      // init ui and ui loggers\n\t      if (!this.withoutUI) {\n\t        if (!this.dom) this.dom = document.body;\n\t        let elm = document.createElement('div');\n\t        elm.id = 'gl-bench';\n\t        this.dom.appendChild(elm);\n\t        this.dom.insertAdjacentHTML('afterbegin', '<style id=\"gl-bench-style\">' + this.css + '</style>');\n\t        this.dom = elm;\n\t        this.dom.addEventListener('click', () => {\n\t          this.trackGPU = !this.trackGPU;\n\t          this.updateUI();\n\t        });\n\n\t        this.paramLogger = ((logger, dom, names) => {\n\t          const classes = ['gl-cpu', 'gl-gpu', 'gl-mem', 'gl-fps', 'gl-gpu-svg', 'gl-chart'];\n\t          const nodes = Object.assign({}, classes);\n\t          classes.forEach(c => nodes[c] = dom.getElementsByClassName(c));\n\t          this.nodes = nodes;\n\t          return (i, cpu, gpu, mem, fps, totalTime, frameId) => {\n\t            nodes['gl-cpu'][i].style.strokeDasharray = (cpu * 0.27).toFixed(0) + ' 100';\n\t            nodes['gl-gpu'][i].style.strokeDasharray = (gpu * 0.27).toFixed(0) + ' 100';\n\t            nodes['gl-mem'][i].innerHTML = names[i] ? names[i] : (mem ? 'mem: ' + mem.toFixed(0) + 'mb' : '');\n\t            nodes['gl-fps'][i].innerHTML = fps.toFixed(0) + ' FPS';\n\t            logger(names[i], cpu, gpu, mem, fps, totalTime, frameId);\n\t          }\n\t        })(this.paramLogger, this.dom, this.names);\n\n\t        this.chartLogger = ((logger, dom) => {\n\t          let nodes = { 'gl-chart': dom.getElementsByClassName('gl-chart') };\n\t          return (i, chart, circularId) => {\n\t            let points = '';\n\t            let len = chart.length;\n\t            for (let i = 0; i < len; i++) {\n\t              let id = (circularId + i + 1) % len;\n\t              if (chart[id] != undefined) {\n\t                points = points + ' ' + (55 * i / (len - 1)).toFixed(1) + ','\n\t                  + (45 - chart[id] * 22 / 60 / this.detected).toFixed(1);\n\t              }\n\t            }\n\t            nodes['gl-chart'][i].setAttribute('points', points);\n\t            logger(this.names[i], chart, circularId);\n\t          }\n\t        })(this.chartLogger, this.dom);\n\t      }\n\t    }\n\n\t    /**\n\t     * Explicit UI add\n\t     * @param { string | undefined } name \n\t     */\n\t    addUI(name) {\n\t      if (this.names.indexOf(name) == -1) {\n\t        this.names.push(name);\n\t        if (this.dom) {\n\t          this.dom.insertAdjacentHTML('beforeend', this.svg);\n\t          this.updateUI();\n\t        }\n\t        this.cpuAccums.push(0);\n\t        this.gpuAccums.push(0);\n\t        this.activeAccums.push(false);\n\t      }\n\t    }\n\n\t    /**\n\t     * Increase frameID\n\t     * @param { number | undefined } now\n\t     */\n\t    nextFrame(now) {\n\t      this.frameId++;\n\t      const t = now ? now : this.now();\n\n\t      // params\n\t      if (this.frameId <= 1) {\n\t        this.paramFrame = this.frameId;\n\t        this.paramTime = t;\n\t      } else {\n\t        let duration = t - this.paramTime;\n\t        if (duration >= 1e3) {\n\t          const frameCount = this.frameId - this.paramFrame;\n\t          const fps = frameCount / duration * 1e3;\n\t          for (let i = 0; i < this.names.length; i++) {\n\t            const cpu = this.cpuAccums[i] / duration * 100,\n\t              gpu = this.gpuAccums[i] / duration * 100,\n\t              mem = (performance && performance.memory) ? performance.memory.usedJSHeapSize / (1 << 20) : 0;\n\t            this.paramLogger(i, cpu, gpu, mem, fps, duration, frameCount);\n\t            this.cpuAccums[i] = 0;\n\t            Promise.all(this.finished).then(() => {\n\t              this.gpuAccums[i] = 0;\n\t              this.finished = [];\n\t            });\n\t          }\n\t          this.paramFrame = this.frameId;\n\t          this.paramTime = t;\n\t        }\n\t      }\n\n\t      // chart\n\t      if (!this.detected || !this.chartFrame) {\n\t        this.chartFrame = this.frameId;\n\t        this.chartTime = t;\n\t        this.circularId = 0;\n\t      } else {\n\t        let timespan = t - this.chartTime;\n\t        let hz = this.chartHz * timespan / 1e3;\n\t        while (--hz > 0 && this.detected) {\n\t          const frameCount = this.frameId - this.chartFrame;\n\t          const fps = frameCount / timespan * 1e3;\n\t          this.chart[this.circularId % this.chartLen] = fps;\n\t          for (let i = 0; i < this.names.length; i++) {\n\t            this.chartLogger(i, this.chart, this.circularId);\n\t          }\n\t          this.circularId++;\n\t          this.chartFrame = this.frameId;\n\t          this.chartTime = t;\n\t        }\n\t      }\n\t    }\n\n\t    /**\n\t     * Begin named measurement\n\t     * @param { string | undefined } name\n\t     */\n\t    begin(name) {\n\t      this.updateAccums(name);\n\t    }\n\n\t    /**\n\t     * End named measure\n\t     * @param { string | undefined } name\n\t     */\n\t    end(name) {\n\t      this.updateAccums(name);\n\t    }\n\n\t    updateAccums(name) {\n\t      let nameId = this.names.indexOf(name);\n\t      if (nameId == -1) {\n\t        nameId = this.names.length;\n\t        this.addUI(name);\n\t      }\n\n\t      const t = this.now();\n\t      const dt = t - this.t0;\n\t      for (let i = 0; i < nameId + 1; i++) {\n\t        if (this.activeAccums[i]) {\n\t          this.cpuAccums[i] += dt;\n\t        }\n\t      }    this.activeAccums[nameId] = !this.activeAccums[nameId];\n\t      this.t0 = t;\n\t    }\n\n\t  }\n\n\t  return GLBench;\n\n\t})));\n} (glBench));\n\nvar GLBench = glBench.exports;\n\nconst benchCSS = `\n  #gl-bench {\n    position:absolute;\n    right:0;\n    top:0;\n    z-index:1000;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  #gl-bench div {\n    position: relative;\n    display: block;\n    margin: 4px;\n    padding: 0 7px 0 10px;\n    background: #5f69de;\n    border-radius: 15px;\n    cursor: pointer;\n    opacity: 0.9;\n  }\n  #gl-bench svg {\n    height: 60px;\n    margin: 0 -1px;\n  }\n  #gl-bench text {\n    font-size: 12px;\n    font-family: Helvetica,Arial,sans-serif;\n    font-weight: 700;\n    dominant-baseline: middle;\n    text-anchor: middle;\n  }\n  #gl-bench .gl-mem {\n    font-size: 9px;\n  }\n  #gl-bench line {\n    stroke-width: 5;\n    stroke: #112211;\n    stroke-linecap: round;\n  }\n  #gl-bench polyline {\n    fill: none;\n    stroke: #112211;\n    stroke-linecap: round;\n    stroke-linejoin: round;\n    stroke-width: 3.5;\n  }\n  #gl-bench rect {\n    fill: #8288e4;\n  }\n  #gl-bench .opacity {\n    stroke: #8288e4;\n  }\n`;\n\nclass FPSMonitor {\r\n    constructor(canvas) {\r\n        this.destroy();\r\n        const gl = (canvas.getContext('webgl') || canvas.getContext('experimental-webgl'));\r\n        this.bench = new GLBench(gl, { css: benchCSS });\r\n    }\r\n    begin() {\r\n        var _a;\r\n        (_a = this.bench) === null || _a === void 0 ? void 0 : _a.begin('frame');\r\n    }\r\n    end(now) {\r\n        var _a, _b;\r\n        (_a = this.bench) === null || _a === void 0 ? void 0 : _a.end('frame');\r\n        (_b = this.bench) === null || _b === void 0 ? void 0 : _b.nextFrame(now);\r\n    }\r\n    destroy() {\r\n        this.bench = undefined;\r\n        select('#gl-bench').remove();\r\n    }\r\n}\n\nclass GraphData {\r\n    constructor() {\r\n        /** Links that have existing source and target nodes  */\r\n        this.completeLinks = new Set();\r\n        this.degree = [];\r\n        /** Mapping the source node index to a `Set` of target node indices connected to that node */\r\n        this.groupedSourceToTargetLinks = new Map();\r\n        /** Mapping the target node index to a `Set` of source node indices connected to that node */\r\n        this.groupedTargetToSourceLinks = new Map();\r\n        this._nodes = [];\r\n        this._links = [];\r\n        /** Mapping the original id to the original node */\r\n        this.idToNodeMap = new Map();\r\n        /** We want to display more important nodes (i.e. with the biggest number of connections)\r\n         * on top of the other. To render them in the right order,\r\n         * we create an array of node indices sorted by degree (number of connections)\r\n         * and and we store multiple maps that help us referencing the right data objects\r\n         * and other properties by original node index, sorted index, and id 👇. */\r\n        /** Mapping the sorted index to the original index */\r\n        this.sortedIndexToInputIndexMap = new Map();\r\n        /** Mapping the original index to the sorted index of the node */\r\n        this.inputIndexToSortedIndexMap = new Map();\r\n        /** Mapping the original id to the sorted index of the node */\r\n        this.idToSortedIndexMap = new Map();\r\n        /** Mapping the original index to the original id of the node */\r\n        this.inputIndexToIdMap = new Map();\r\n        /** Mapping the original id to the indegree value of the node */\r\n        this.idToIndegreeMap = new Map();\r\n        /** Mapping the original id to the outdegree value of the node */\r\n        this.idToOutdegreeMap = new Map();\r\n    }\r\n    get nodes() {\r\n        return this._nodes;\r\n    }\r\n    get links() {\r\n        return this._links;\r\n    }\r\n    get linksNumber() {\r\n        return this.completeLinks.size;\r\n    }\r\n    setData(inputNodes, inputLinks) {\r\n        this.idToNodeMap.clear();\r\n        this.idToSortedIndexMap.clear();\r\n        this.inputIndexToIdMap.clear();\r\n        this.idToIndegreeMap.clear();\r\n        this.idToOutdegreeMap.clear();\r\n        inputNodes.forEach((n, i) => {\r\n            this.idToNodeMap.set(n.id, n);\r\n            this.inputIndexToIdMap.set(i, n.id);\r\n            this.idToIndegreeMap.set(n.id, 0);\r\n            this.idToOutdegreeMap.set(n.id, 0);\r\n        });\r\n        // Calculate node outdegree/indegree values\r\n        // And filter links if source/target node does not exist\r\n        this.completeLinks.clear();\r\n        inputLinks.forEach(l => {\r\n            const sourceNode = this.idToNodeMap.get(l.source);\r\n            const targetNode = this.idToNodeMap.get(l.target);\r\n            if (sourceNode !== undefined && targetNode !== undefined) {\r\n                this.completeLinks.add(l);\r\n                const outdegree = this.idToOutdegreeMap.get(sourceNode.id);\r\n                if (outdegree !== undefined)\r\n                    this.idToOutdegreeMap.set(sourceNode.id, outdegree + 1);\r\n                const indegree = this.idToIndegreeMap.get(targetNode.id);\r\n                if (indegree !== undefined)\r\n                    this.idToIndegreeMap.set(targetNode.id, indegree + 1);\r\n            }\r\n        });\r\n        // Calculate node degree value\r\n        this.degree = new Array(inputNodes.length);\r\n        inputNodes.forEach((n, i) => {\r\n            const outdegree = this.idToOutdegreeMap.get(n.id);\r\n            const indegree = this.idToIndegreeMap.get(n.id);\r\n            this.degree[i] = (outdegree !== null && outdegree !== void 0 ? outdegree : 0) + (indegree !== null && indegree !== void 0 ? indegree : 0);\r\n        });\r\n        // Sort nodes by degree value\r\n        this.sortedIndexToInputIndexMap.clear();\r\n        this.inputIndexToSortedIndexMap.clear();\r\n        const sortedDegrees = Object.entries(this.degree).sort((a, b) => a[1] - b[1]);\r\n        sortedDegrees.forEach(([inputStringedIndex], sortedIndex) => {\r\n            const inputIndex = +inputStringedIndex;\r\n            this.sortedIndexToInputIndexMap.set(sortedIndex, inputIndex);\r\n            this.inputIndexToSortedIndexMap.set(inputIndex, sortedIndex);\r\n            this.idToSortedIndexMap.set(this.inputIndexToIdMap.get(inputIndex), sortedIndex);\r\n        });\r\n        this.groupedSourceToTargetLinks.clear();\r\n        this.groupedTargetToSourceLinks.clear();\r\n        inputLinks.forEach((l) => {\r\n            const sourceIndex = this.idToSortedIndexMap.get(l.source);\r\n            const targetIndex = this.idToSortedIndexMap.get(l.target);\r\n            if (sourceIndex !== undefined && targetIndex !== undefined) {\r\n                if (this.groupedSourceToTargetLinks.get(sourceIndex) === undefined)\r\n                    this.groupedSourceToTargetLinks.set(sourceIndex, new Set());\r\n                const targets = this.groupedSourceToTargetLinks.get(sourceIndex);\r\n                targets === null || targets === void 0 ? void 0 : targets.add(targetIndex);\r\n                if (this.groupedTargetToSourceLinks.get(targetIndex) === undefined)\r\n                    this.groupedTargetToSourceLinks.set(targetIndex, new Set());\r\n                const sources = this.groupedTargetToSourceLinks.get(targetIndex);\r\n                sources === null || sources === void 0 ? void 0 : sources.add(sourceIndex);\r\n            }\r\n        });\r\n        this._nodes = inputNodes;\r\n        this._links = inputLinks;\r\n    }\r\n    getNodeById(id) {\r\n        return this.idToNodeMap.get(id);\r\n    }\r\n    getNodeByIndex(index) {\r\n        return this._nodes[index];\r\n    }\r\n    getSortedIndexByInputIndex(index) {\r\n        return this.inputIndexToSortedIndexMap.get(index);\r\n    }\r\n    getInputIndexBySortedIndex(index) {\r\n        return this.sortedIndexToInputIndexMap.get(index);\r\n    }\r\n    getSortedIndexById(id) {\r\n        return id !== undefined ? this.idToSortedIndexMap.get(id) : undefined;\r\n    }\r\n    getAdjacentNodes(id) {\r\n        var _a, _b;\r\n        const index = this.getSortedIndexById(id);\r\n        if (index === undefined)\r\n            return undefined;\r\n        const outgoingSet = (_a = this.groupedSourceToTargetLinks.get(index)) !== null && _a !== void 0 ? _a : [];\r\n        const incomingSet = (_b = this.groupedTargetToSourceLinks.get(index)) !== null && _b !== void 0 ? _b : [];\r\n        return [...new Set([...outgoingSet, ...incomingSet])]\r\n            .map(index => this.getNodeByIndex(this.getInputIndexBySortedIndex(index)));\r\n    }\r\n}\n\nvar drawStraightFrag = \"precision highp float;\\n#define GLSLIFY 1\\nuniform bool useArrow;varying vec4 rgbaColor;varying vec2 pos;varying float arrowLength;varying float linkWidthArrowWidthRatio;varying float smoothWidthRatio;varying float targetPointSize;float map(float value,float min1,float max1,float min2,float max2){return min2+(value-min1)*(max2-min2)/(max1-min1);}void main(){float opacity=1.0;vec3 color=rgbaColor.rgb;float smoothDelta=smoothWidthRatio/2.0;if(useArrow){float end_arrow=0.5+arrowLength/2.0;float start_arrow=end_arrow-arrowLength;float arrowWidthDelta=linkWidthArrowWidthRatio/2.0;float linkOpacity=rgbaColor.a*smoothstep(0.5-arrowWidthDelta,0.5-arrowWidthDelta-smoothDelta,abs(pos.y));float arrowOpacity=1.0;if(pos.x>start_arrow&&pos.x<start_arrow+arrowLength){float xmapped=map(pos.x,start_arrow,end_arrow,0.0,1.0);arrowOpacity=rgbaColor.a*smoothstep(xmapped-smoothDelta,xmapped,map(abs(pos.y),0.5,0.0,0.0,1.0));if(linkOpacity!=arrowOpacity){linkOpacity+=arrowOpacity;}}opacity=linkOpacity;}else opacity=rgbaColor.a*smoothstep(0.5,0.5-smoothDelta,abs(pos.y));gl_FragColor=vec4(color,opacity);}\"; // eslint-disable-line\n\nvar drawStraightVert = \"precision highp float;\\n#define GLSLIFY 1\\nattribute vec2 position,pointA,pointB;attribute vec4 color;attribute float width;uniform sampler2D positions;uniform sampler2D particleSize;uniform sampler2D particleGreyoutStatus;uniform mat3 transform;uniform float pointsTextureSize;uniform float widthScale;uniform float nodeSizeScale;uniform bool useArrow;uniform float arrowSizeScale;uniform float spaceSize;uniform vec2 screenSize;uniform float ratio;uniform vec2 linkVisibilityDistanceRange;uniform float linkVisibilityMinTransparency;uniform float greyoutOpacity;uniform bool scaleNodesOnZoom;varying vec4 rgbaColor;varying vec2 pos;varying float arrowLength;varying float linkWidthArrowWidthRatio;varying float smoothWidthRatio;varying float targetPointSize;float map(float value,float min1,float max1,float min2,float max2){return min2+(value-min1)*(max2-min2)/(max1-min1);}float pointSize(float size){float pSize;if(scaleNodesOnZoom){pSize=size*ratio*transform[0][0];}else{pSize=size*ratio*min(5.0,max(1.0,transform[0][0]*0.01));}return pSize;}void main(){pos=position;vec2 pointTexturePosA=(pointA+0.5)/pointsTextureSize;vec2 pointTexturePosB=(pointB+0.5)/pointsTextureSize;vec4 greyoutStatusA=texture2D(particleGreyoutStatus,pointTexturePosA);vec4 greyoutStatusB=texture2D(particleGreyoutStatus,pointTexturePosB);targetPointSize=pointSize(texture2D(particleSize,pointTexturePosB).r*nodeSizeScale);vec4 pointPositionA=texture2D(positions,pointTexturePosA);vec4 pointPositionB=texture2D(positions,pointTexturePosB);vec2 a=pointPositionA.xy;vec2 b=pointPositionB.xy;vec2 xBasis=b-a;vec2 yBasis=normalize(vec2(-xBasis.y,xBasis.x));vec2 distVector=a-b;float linkDist=sqrt(dot(distVector,distVector));float linkDistPx=linkDist*transform[0][0];targetPointSize=(targetPointSize/(2.0*ratio))/linkDistPx;float linkWidth=width*widthScale;float k=2.0;float arrowWidth=max(5.0,linkWidth*k);arrowWidth*=arrowSizeScale;float arrowWidthPx=arrowWidth/transform[0][0];arrowLength=min(0.3,(0.866*arrowWidthPx*2.0)/linkDist);float smoothWidth=2.0;float arrowExtraWidth=arrowWidth-linkWidth;linkWidth+=smoothWidth/2.0;if(useArrow){linkWidth+=arrowExtraWidth;}smoothWidthRatio=smoothWidth/linkWidth;linkWidthArrowWidthRatio=arrowExtraWidth/linkWidth;float linkWidthPx=linkWidth/transform[0][0];vec3 rgbColor=color.rgb;float opacity=color.a*max(linkVisibilityMinTransparency,map(linkDistPx,linkVisibilityDistanceRange.g,linkVisibilityDistanceRange.r,0.0,1.0));if(greyoutStatusA.r>0.0||greyoutStatusB.r>0.0){opacity*=greyoutOpacity;}rgbaColor=vec4(rgbColor,opacity);vec2 point=a+xBasis*position.x+yBasis*linkWidthPx*position.y;vec2 p=2.0*point/spaceSize-1.0;p*=spaceSize/screenSize;vec3 final=transform*vec3(p,1);gl_Position=vec4(final.rg,0,1);}\"; // eslint-disable-line\n\nclass Lines extends CoreModule {\r\n    create() {\r\n        this.updateColor();\r\n        this.updateWidth();\r\n    }\r\n    initPrograms() {\r\n        const { reglInstance, config, store, data, points } = this;\r\n        const { pointsTextureSize } = store;\r\n        const geometryLinkBuffer = {\r\n            buffer: reglInstance.buffer([\r\n                [0, -0.5],\r\n                [1, -0.5],\r\n                [1, 0.5],\r\n                [0, -0.5],\r\n                [1, 0.5],\r\n                [0, 0.5],\r\n            ]),\r\n            divisor: 0,\r\n        };\r\n        const instancePoints = [];\r\n        data.completeLinks.forEach(l => {\r\n            const toIndex = data.getSortedIndexById(l.target);\r\n            const fromIndex = data.getSortedIndexById(l.source);\r\n            const fromX = fromIndex % pointsTextureSize;\r\n            const fromY = Math.floor(fromIndex / pointsTextureSize);\r\n            const toX = toIndex % pointsTextureSize;\r\n            const toY = Math.floor(toIndex / pointsTextureSize);\r\n            instancePoints.push([fromX, fromY]);\r\n            instancePoints.push([toX, toY]);\r\n        });\r\n        const pointsBuffer = reglInstance.buffer(instancePoints);\r\n        this.drawStraightCommand = reglInstance({\r\n            vert: drawStraightVert,\r\n            frag: drawStraightFrag,\r\n            attributes: {\r\n                position: geometryLinkBuffer,\r\n                pointA: {\r\n                    buffer: () => pointsBuffer,\r\n                    divisor: 1,\r\n                    offset: Float32Array.BYTES_PER_ELEMENT * 0,\r\n                    stride: Float32Array.BYTES_PER_ELEMENT * 4,\r\n                },\r\n                pointB: {\r\n                    buffer: () => pointsBuffer,\r\n                    divisor: 1,\r\n                    offset: Float32Array.BYTES_PER_ELEMENT * 2,\r\n                    stride: Float32Array.BYTES_PER_ELEMENT * 4,\r\n                },\r\n                color: {\r\n                    buffer: () => this.colorBuffer,\r\n                    divisor: 1,\r\n                    offset: Float32Array.BYTES_PER_ELEMENT * 0,\r\n                    stride: Float32Array.BYTES_PER_ELEMENT * 4,\r\n                },\r\n                width: {\r\n                    buffer: () => this.widthBuffer,\r\n                    divisor: 1,\r\n                    offset: Float32Array.BYTES_PER_ELEMENT * 0,\r\n                    stride: Float32Array.BYTES_PER_ELEMENT * 1,\r\n                },\r\n            },\r\n            uniforms: {\r\n                positions: () => points === null || points === void 0 ? void 0 : points.currentPositionFbo,\r\n                particleSize: () => points === null || points === void 0 ? void 0 : points.sizeFbo,\r\n                particleGreyoutStatus: () => points === null || points === void 0 ? void 0 : points.greyoutStatusFbo,\r\n                transform: () => store.transform,\r\n                pointsTextureSize: () => store.pointsTextureSize,\r\n                nodeSizeScale: () => config.nodeSizeScale,\r\n                widthScale: () => config.linkWidthScale,\r\n                useArrow: () => config.linkArrows,\r\n                arrowSizeScale: () => config.linkArrowsSizeScale,\r\n                spaceSize: () => config.spaceSize,\r\n                screenSize: () => store.screenSize,\r\n                ratio: () => config.pixelRatio,\r\n                linkVisibilityDistanceRange: () => config.linkVisibilityDistanceRange,\r\n                linkVisibilityMinTransparency: () => config.linkVisibilityMinTransparency,\r\n                greyoutOpacity: () => config.linkGreyoutOpacity,\r\n                scaleNodesOnZoom: () => config.scaleNodesOnZoom,\r\n            },\r\n            cull: {\r\n                enable: true,\r\n                face: 'back',\r\n            },\r\n            blend: {\r\n                enable: true,\r\n                func: {\r\n                    dstRGB: 'one minus src alpha',\r\n                    srcRGB: 'src alpha',\r\n                    dstAlpha: 'one minus src alpha',\r\n                    srcAlpha: 'one',\r\n                },\r\n                equation: {\r\n                    rgb: 'add',\r\n                    alpha: 'add',\r\n                },\r\n            },\r\n            depth: {\r\n                enable: false,\r\n                mask: false,\r\n            },\r\n            count: 6,\r\n            instances: () => data.linksNumber,\r\n        });\r\n    }\r\n    draw() {\r\n        var _a;\r\n        if (!this.colorBuffer || !this.widthBuffer)\r\n            return;\r\n        (_a = this.drawStraightCommand) === null || _a === void 0 ? void 0 : _a.call(this);\r\n    }\r\n    updateColor() {\r\n        const { reglInstance, config, data } = this;\r\n        const instancePoints = [];\r\n        data.completeLinks.forEach(l => {\r\n            var _a;\r\n            const c = (_a = getValue(l, config.linkColor)) !== null && _a !== void 0 ? _a : defaultLinkColor;\r\n            const rgba = getRgbaColor(c);\r\n            instancePoints.push(rgba);\r\n        });\r\n        this.colorBuffer = reglInstance.buffer(instancePoints);\r\n    }\r\n    updateWidth() {\r\n        const { reglInstance, config, data } = this;\r\n        const instancePoints = [];\r\n        data.completeLinks.forEach(l => {\r\n            const linkWidth = getValue(l, config.linkWidth);\r\n            instancePoints.push([linkWidth !== null && linkWidth !== void 0 ? linkWidth : defaultLinkWidth]);\r\n        });\r\n        this.widthBuffer = reglInstance.buffer(instancePoints);\r\n    }\r\n    destroy() {\r\n        var _a, _b;\r\n        (_a = this.colorBuffer) === null || _a === void 0 ? void 0 : _a.destroy();\r\n        (_b = this.widthBuffer) === null || _b === void 0 ? void 0 : _b.destroy();\r\n    }\r\n}\n\nfunction createColorBuffer(data, reglInstance, textureSize, colorAccessor) {\r\n    var _a;\r\n    const initialState = new Float32Array(textureSize * textureSize * 4);\r\n    for (let i = 0; i < data.nodes.length; ++i) {\r\n        const sortedIndex = data.getSortedIndexByInputIndex(i);\r\n        const node = data.nodes[i];\r\n        if (node && sortedIndex !== undefined) {\r\n            const c = (_a = getValue(node, colorAccessor)) !== null && _a !== void 0 ? _a : defaultNodeColor;\r\n            const rgba = getRgbaColor(c);\r\n            initialState[sortedIndex * 4 + 0] = rgba[0];\r\n            initialState[sortedIndex * 4 + 1] = rgba[1];\r\n            initialState[sortedIndex * 4 + 2] = rgba[2];\r\n            initialState[sortedIndex * 4 + 3] = rgba[3];\r\n        }\r\n    }\r\n    const initialTexture = reglInstance.texture({\r\n        data: initialState,\r\n        width: textureSize,\r\n        height: textureSize,\r\n        type: 'float',\r\n    });\r\n    return reglInstance.framebuffer({\r\n        color: initialTexture,\r\n        depth: false,\r\n        stencil: false,\r\n    });\r\n}\r\nfunction createGreyoutStatusBuffer(selectedIndices, reglInstance, textureSize) {\r\n    // Greyout status: 0 - false, highlighted or normal point; 1 - true, greyout point\r\n    const initialState = new Float32Array(textureSize * textureSize * 4)\r\n        .fill(selectedIndices ? 1 : 0);\r\n    if (selectedIndices) {\r\n        for (const selectedIndex of selectedIndices) {\r\n            initialState[selectedIndex * 4] = 0;\r\n        }\r\n    }\r\n    const initialTexture = reglInstance.texture({\r\n        data: initialState,\r\n        width: textureSize,\r\n        height: textureSize,\r\n        type: 'float',\r\n    });\r\n    return reglInstance.framebuffer({\r\n        color: initialTexture,\r\n        depth: false,\r\n        stencil: false,\r\n    });\r\n}\n\nvar drawPointsFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nvarying vec2 index;varying vec3 rgbColor;varying float alpha;const float smoothing=0.9;void main(){if(alpha==0.0){discard;}float r=0.0;float delta=0.0;vec2 cxy=2.0*gl_PointCoord-1.0;r=dot(cxy,cxy);float opacity=alpha*(1.0-smoothstep(smoothing,1.0,r));gl_FragColor=vec4(rgbColor,opacity);}\"; // eslint-disable-line\n\nvar drawPointsVert = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nattribute vec2 indexes;uniform sampler2D positions;uniform sampler2D particleColor;uniform sampler2D particleGreyoutStatus;uniform sampler2D particleSize;uniform float ratio;uniform mat3 transform;uniform float pointsTextureSize;uniform float sizeScale;uniform float spaceSize;uniform vec2 screenSize;uniform float greyoutOpacity;uniform bool scaleNodesOnZoom;varying vec2 index;varying vec3 rgbColor;varying float alpha;float pointSize(float size){float pSize;if(scaleNodesOnZoom){pSize=size*ratio*transform[0][0];}else{pSize=size*ratio*min(5.0,max(1.0,transform[0][0]*0.01));}return pSize;}void main(){index=indexes;vec4 pointPosition=texture2D(positions,(index+0.5)/pointsTextureSize);vec2 point=pointPosition.rg;vec2 p=2.0*point/spaceSize-1.0;p*=spaceSize/screenSize;vec3 final=transform*vec3(p,1);gl_Position=vec4(final.rg,0,1);vec4 pSize=texture2D(particleSize,(index+0.5)/pointsTextureSize);float size=pSize.r*sizeScale;vec4 pColor=texture2D(particleColor,(index+0.5)/pointsTextureSize);rgbColor=pColor.rgb;gl_PointSize=pointSize(size);alpha=pColor.a;vec4 greyoutStatus=texture2D(particleGreyoutStatus,(index+0.5)/pointsTextureSize);if(greyoutStatus.r>0.0){alpha*=greyoutOpacity;}}\"; // eslint-disable-line\n\nvar findPointsOnAreaSelectionFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform sampler2D particleSize;uniform float sizeScale;uniform float spaceSize;uniform vec2 screenSize;uniform float ratio;uniform mat3 transform;uniform vec2 selection[2];uniform bool scaleNodesOnZoom;uniform float maxPointSize;varying vec2 index;float pointSize(float size){float pSize;if(scaleNodesOnZoom){pSize=size*ratio*transform[0][0];}else{pSize=size*ratio*min(5.0,max(1.0,transform[0][0]*0.01));}return min(pSize,maxPointSize);}void main(){vec4 pointPosition=texture2D(position,index);vec2 p=2.0*pointPosition.rg/spaceSize-1.0;p*=spaceSize/screenSize;vec3 final=transform*vec3(p,1);vec4 pSize=texture2D(particleSize,index);float size=pSize.r*sizeScale;float left=2.0*(selection[0].x-0.5*pointSize(size))/screenSize.x-1.0;float right=2.0*(selection[1].x+0.5*pointSize(size))/screenSize.x-1.0;float top=2.0*(selection[0].y-0.5*pointSize(size))/screenSize.y-1.0;float bottom=2.0*(selection[1].y+0.5*pointSize(size))/screenSize.y-1.0;gl_FragColor=vec4(0.0,0.0,pointPosition.rg);if(final.x>=left&&final.x<=right&&final.y>=top&&final.y<=bottom){gl_FragColor.r=1.0;}}\"; // eslint-disable-line\n\nvar drawHighlightedFrag = \"precision mediump float;\\n#define GLSLIFY 1\\nuniform vec4 color;uniform float width;varying vec2 pos;const float smoothing=1.05;void main(){vec2 cxy=pos;float r=dot(cxy,cxy);float opacity=smoothstep(r,r*smoothing,1.0);float stroke=smoothstep(width,width*smoothing,r);gl_FragColor=vec4(color.rgb,opacity*stroke*color.a);}\"; // eslint-disable-line\n\nvar drawHighlightedVert = \"precision mediump float;\\n#define GLSLIFY 1\\nattribute vec2 quad;uniform sampler2D positions;uniform sampler2D particleSize;uniform mat3 transform;uniform float pointsTextureSize;uniform float sizeScale;uniform float spaceSize;uniform vec2 screenSize;uniform bool scaleNodesOnZoom;uniform float pointIndex;uniform float maxPointSize;uniform vec4 color;varying vec2 pos;float pointSize(float size){float pSize;if(scaleNodesOnZoom){pSize=size*transform[0][0];}else{pSize=size*min(5.0,max(1.0,transform[0][0]*0.01));}return min(pSize,maxPointSize);}const float relativeRingRadius=1.3;void main(){pos=quad;vec2 ij=vec2(mod(pointIndex,pointsTextureSize),floor(pointIndex/pointsTextureSize))+0.5;vec4 pointPosition=texture2D(positions,ij/pointsTextureSize);vec4 pSize=texture2D(particleSize,ij/pointsTextureSize);float size=(pointSize(pSize.r*sizeScale)*relativeRingRadius)/transform[0][0];float radius=size*0.5;vec2 a=pointPosition.xy;vec2 b=pointPosition.xy+vec2(0.0,radius);vec2 xBasis=b-a;vec2 yBasis=normalize(vec2(-xBasis.y,xBasis.x));vec2 point=a+xBasis*quad.x+yBasis*radius*quad.y;vec2 p=2.0*point/spaceSize-1.0;p*=spaceSize/screenSize;vec3 final=transform*vec3(p,1);gl_Position=vec4(final.rg,0,1);}\"; // eslint-disable-line\n\nvar findHoveredPointFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nvarying vec4 rgba;void main(){gl_FragColor=rgba;}\"; // eslint-disable-line\n\nvar findHoveredPointVert = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform float pointsTextureSize;uniform sampler2D particleSize;uniform float sizeScale;uniform float spaceSize;uniform vec2 screenSize;uniform float ratio;uniform mat3 transform;uniform vec2 mousePosition;uniform bool scaleNodesOnZoom;uniform float maxPointSize;attribute vec2 indexes;varying vec4 rgba;float pointSize(float size){float pSize;if(scaleNodesOnZoom){pSize=size*ratio*transform[0][0];}else{pSize=size*ratio*min(5.0,max(1.0,transform[0][0]*0.01));}return min(pSize,maxPointSize);}float euclideanDistance(float x1,float x2,float y1,float y2){return sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));}void main(){vec4 pointPosition=texture2D(position,(indexes+0.5)/pointsTextureSize);vec2 p=2.0*pointPosition.rg/spaceSize-1.0;p*=spaceSize/screenSize;vec3 final=transform*vec3(p,1);vec4 pSize=texture2D(particleSize,indexes/pointsTextureSize);float size=pSize.r*sizeScale;float pointRadius=0.5*pointSize(size);vec2 pointScreenPosition=(final.xy+1.0)*screenSize/2.0;rgba=vec4(0.0);gl_Position=vec4(0.5,0.5,0.0,1.0);if(euclideanDistance(pointScreenPosition.x,mousePosition.x,pointScreenPosition.y,mousePosition.y)<pointRadius){float index=indexes.g*pointsTextureSize+indexes.r;rgba=vec4(index,pSize.r,pointPosition.xy);gl_Position=vec4(-0.5,-0.5,0.0,1.0);}gl_PointSize=1.0;}\"; // eslint-disable-line\n\nfunction getNodeSize(node, sizeAccessor) {\r\n    const size = getValue(node, sizeAccessor);\r\n    return size !== null && size !== void 0 ? size : defaultNodeSize;\r\n}\r\nfunction createSizeBuffer(data, reglInstance, pointTextureSize, sizeAccessor) {\r\n    const numParticles = data.nodes.length;\r\n    const initialState = new Float32Array(pointTextureSize * pointTextureSize * 4);\r\n    for (let i = 0; i < numParticles; ++i) {\r\n        const sortedIndex = data.getSortedIndexByInputIndex(i);\r\n        const node = data.nodes[i];\r\n        if (node && sortedIndex !== undefined) {\r\n            initialState[sortedIndex * 4] = getNodeSize(node, sizeAccessor);\r\n        }\r\n    }\r\n    const initialTexture = reglInstance.texture({\r\n        data: initialState,\r\n        width: pointTextureSize,\r\n        height: pointTextureSize,\r\n        type: 'float',\r\n    });\r\n    return reglInstance.framebuffer({\r\n        color: initialTexture,\r\n        depth: false,\r\n        stencil: false,\r\n    });\r\n}\n\nvar updatePositionFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform sampler2D velocity;uniform float friction;uniform float spaceSize;varying vec2 index;void main(){vec4 pointPosition=texture2D(position,index);vec4 pointVelocity=texture2D(velocity,index);pointVelocity.rg*=friction;pointPosition.rg+=pointVelocity.rg;pointPosition.r=clamp(pointPosition.r,0.0,spaceSize);pointPosition.g=clamp(pointPosition.g,0.0,spaceSize);gl_FragColor=pointPosition;}\"; // eslint-disable-line\n\nfunction createTrackedPositionsBuffer(indices, reglInstance) {\r\n    const size = Math.ceil(Math.sqrt(indices.length));\r\n    return reglInstance.framebuffer({\r\n        shape: [size, size],\r\n        depth: false,\r\n        stencil: false,\r\n        colorType: 'float',\r\n    });\r\n}\r\nfunction createTrackedIndicesBuffer(indices, pointsTextureSize, reglInstance) {\r\n    const size = Math.ceil(Math.sqrt(indices.length));\r\n    const initialState = new Float32Array(size * size * 4).fill(-1);\r\n    for (const [i, sortedIndex] of indices.entries()) {\r\n        if (sortedIndex !== undefined) {\r\n            initialState[i * 4] = sortedIndex % pointsTextureSize;\r\n            initialState[i * 4 + 1] = Math.floor(sortedIndex / pointsTextureSize);\r\n            initialState[i * 4 + 2] = 0;\r\n            initialState[i * 4 + 3] = 0;\r\n        }\r\n    }\r\n    const initialTexture = reglInstance.texture({\r\n        data: initialState,\r\n        width: size,\r\n        height: size,\r\n        type: 'float',\r\n    });\r\n    return reglInstance.framebuffer({\r\n        color: initialTexture,\r\n        depth: false,\r\n        stencil: false,\r\n    });\r\n}\n\nvar trackPositionsFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform sampler2D trackedIndices;uniform float pointsTextureSize;varying vec2 index;void main(){vec4 trackedPointIndicies=texture2D(trackedIndices,index);if(trackedPointIndicies.r<0.0)discard;vec4 pointPosition=texture2D(position,(trackedPointIndicies.rg+0.5)/pointsTextureSize);gl_FragColor=vec4(pointPosition.rg,1.0,1.0);}\"; // eslint-disable-line\n\nclass Points extends CoreModule {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.trackedPositionsById = new Map();\r\n    }\r\n    create() {\r\n        var _a, _b;\r\n        const { reglInstance, config, store, data } = this;\r\n        const { spaceSize } = config;\r\n        const { pointsTextureSize } = store;\r\n        const numParticles = data.nodes.length;\r\n        const initialState = new Float32Array(pointsTextureSize * pointsTextureSize * 4);\r\n        for (let i = 0; i < numParticles; ++i) {\r\n            const sortedIndex = this.data.getSortedIndexByInputIndex(i);\r\n            const node = data.nodes[i];\r\n            if (node && sortedIndex !== undefined) {\r\n                const space = spaceSize !== null && spaceSize !== void 0 ? spaceSize : defaultConfigValues.spaceSize;\r\n                initialState[sortedIndex * 4 + 0] = (_a = node.x) !== null && _a !== void 0 ? _a : space * store.getRandomFloat(0.495, 0.505);\r\n                initialState[sortedIndex * 4 + 1] = (_b = node.y) !== null && _b !== void 0 ? _b : space * store.getRandomFloat(0.495, 0.505);\r\n            }\r\n        }\r\n        // Create position buffer\r\n        this.currentPositionFbo = reglInstance.framebuffer({\r\n            color: reglInstance.texture({\r\n                data: initialState,\r\n                shape: [pointsTextureSize, pointsTextureSize, 4],\r\n                type: 'float',\r\n            }),\r\n            depth: false,\r\n            stencil: false,\r\n        });\r\n        this.previousPositionFbo = reglInstance.framebuffer({\r\n            color: reglInstance.texture({\r\n                data: initialState,\r\n                shape: [pointsTextureSize, pointsTextureSize, 4],\r\n                type: 'float',\r\n            }),\r\n            depth: false,\r\n            stencil: false,\r\n        });\r\n        // Create velocity buffer\r\n        this.velocityFbo = reglInstance.framebuffer({\r\n            color: reglInstance.texture({\r\n                data: new Float32Array(pointsTextureSize * pointsTextureSize * 4).fill(0),\r\n                shape: [pointsTextureSize, pointsTextureSize, 4],\r\n                type: 'float',\r\n            }),\r\n            depth: false,\r\n            stencil: false,\r\n        });\r\n        // Create selected points buffer\r\n        this.selectedFbo = reglInstance.framebuffer({\r\n            color: reglInstance.texture({\r\n                data: initialState,\r\n                shape: [pointsTextureSize, pointsTextureSize, 4],\r\n                type: 'float',\r\n            }),\r\n            depth: false,\r\n            stencil: false,\r\n        });\r\n        this.hoveredFbo = reglInstance.framebuffer({\r\n            shape: [2, 2],\r\n            colorType: 'float',\r\n            depth: false,\r\n            stencil: false,\r\n        });\r\n        this.updateSize();\r\n        this.updateColor();\r\n        this.updateGreyoutStatus();\r\n    }\r\n    initPrograms() {\r\n        const { reglInstance, config, store, data } = this;\r\n        this.updatePositionCommand = reglInstance({\r\n            frag: updatePositionFrag,\r\n            vert: updateVert,\r\n            framebuffer: () => this.currentPositionFbo,\r\n            primitive: 'triangle strip',\r\n            count: 4,\r\n            attributes: { quad: createQuadBuffer(reglInstance) },\r\n            uniforms: {\r\n                position: () => this.previousPositionFbo,\r\n                velocity: () => this.velocityFbo,\r\n                friction: () => { var _a; return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.friction; },\r\n                spaceSize: () => config.spaceSize,\r\n            },\r\n        });\r\n        this.drawCommand = reglInstance({\r\n            frag: drawPointsFrag,\r\n            vert: drawPointsVert,\r\n            primitive: 'points',\r\n            count: () => data.nodes.length,\r\n            attributes: { indexes: createIndexesBuffer(reglInstance, store.pointsTextureSize) },\r\n            uniforms: {\r\n                positions: () => this.currentPositionFbo,\r\n                particleColor: () => this.colorFbo,\r\n                particleGreyoutStatus: () => this.greyoutStatusFbo,\r\n                particleSize: () => this.sizeFbo,\r\n                ratio: () => config.pixelRatio,\r\n                sizeScale: () => config.nodeSizeScale,\r\n                pointsTextureSize: () => store.pointsTextureSize,\r\n                transform: () => store.transform,\r\n                spaceSize: () => config.spaceSize,\r\n                screenSize: () => store.screenSize,\r\n                greyoutOpacity: () => config.nodeGreyoutOpacity,\r\n                scaleNodesOnZoom: () => config.scaleNodesOnZoom,\r\n            },\r\n            blend: {\r\n                enable: true,\r\n                func: {\r\n                    dstRGB: 'one minus src alpha',\r\n                    srcRGB: 'src alpha',\r\n                    dstAlpha: 'one minus src alpha',\r\n                    srcAlpha: 'one',\r\n                },\r\n                equation: {\r\n                    rgb: 'add',\r\n                    alpha: 'add',\r\n                },\r\n            },\r\n            depth: {\r\n                enable: false,\r\n                mask: false,\r\n            },\r\n        });\r\n        this.findPointsOnAreaSelectionCommand = reglInstance({\r\n            frag: findPointsOnAreaSelectionFrag,\r\n            vert: updateVert,\r\n            framebuffer: () => this.selectedFbo,\r\n            primitive: 'triangle strip',\r\n            count: 4,\r\n            attributes: { quad: createQuadBuffer(reglInstance) },\r\n            uniforms: {\r\n                position: () => this.currentPositionFbo,\r\n                particleSize: () => this.sizeFbo,\r\n                spaceSize: () => config.spaceSize,\r\n                screenSize: () => store.screenSize,\r\n                sizeScale: () => config.nodeSizeScale,\r\n                transform: () => store.transform,\r\n                ratio: () => config.pixelRatio,\r\n                'selection[0]': () => store.selectedArea[0],\r\n                'selection[1]': () => store.selectedArea[1],\r\n                scaleNodesOnZoom: () => config.scaleNodesOnZoom,\r\n                maxPointSize: () => store.maxPointSize,\r\n            },\r\n        });\r\n        this.clearHoveredFboCommand = reglInstance({\r\n            frag: clearFrag,\r\n            vert: updateVert,\r\n            framebuffer: this.hoveredFbo,\r\n            primitive: 'triangle strip',\r\n            count: 4,\r\n            attributes: { quad: createQuadBuffer(reglInstance) },\r\n        });\r\n        this.findHoveredPointCommand = reglInstance({\r\n            frag: findHoveredPointFrag,\r\n            vert: findHoveredPointVert,\r\n            primitive: 'points',\r\n            count: () => data.nodes.length,\r\n            framebuffer: () => this.hoveredFbo,\r\n            attributes: { indexes: createIndexesBuffer(reglInstance, store.pointsTextureSize) },\r\n            uniforms: {\r\n                position: () => this.currentPositionFbo,\r\n                particleSize: () => this.sizeFbo,\r\n                ratio: () => config.pixelRatio,\r\n                sizeScale: () => config.nodeSizeScale,\r\n                pointsTextureSize: () => store.pointsTextureSize,\r\n                transform: () => store.transform,\r\n                spaceSize: () => config.spaceSize,\r\n                screenSize: () => store.screenSize,\r\n                scaleNodesOnZoom: () => config.scaleNodesOnZoom,\r\n                mousePosition: () => store.screenMousePosition,\r\n                maxPointSize: () => store.maxPointSize,\r\n            },\r\n            depth: {\r\n                enable: false,\r\n                mask: false,\r\n            },\r\n        });\r\n        this.drawHighlightedCommand = reglInstance({\r\n            frag: drawHighlightedFrag,\r\n            vert: drawHighlightedVert,\r\n            attributes: { quad: createQuadBuffer(reglInstance) },\r\n            primitive: 'triangle strip',\r\n            count: 4,\r\n            uniforms: {\r\n                color: reglInstance.prop('color'),\r\n                width: reglInstance.prop('width'),\r\n                pointIndex: reglInstance.prop('pointIndex'),\r\n                positions: () => this.currentPositionFbo,\r\n                particleSize: () => this.sizeFbo,\r\n                sizeScale: () => config.nodeSizeScale,\r\n                pointsTextureSize: () => store.pointsTextureSize,\r\n                transform: () => store.transform,\r\n                spaceSize: () => config.spaceSize,\r\n                screenSize: () => store.screenSize,\r\n                scaleNodesOnZoom: () => config.scaleNodesOnZoom,\r\n                maxPointSize: () => store.maxPointSize,\r\n            },\r\n            blend: {\r\n                enable: true,\r\n                func: {\r\n                    dstRGB: 'one minus src alpha',\r\n                    srcRGB: 'src alpha',\r\n                    dstAlpha: 'one minus src alpha',\r\n                    srcAlpha: 'one',\r\n                },\r\n                equation: {\r\n                    rgb: 'add',\r\n                    alpha: 'add',\r\n                },\r\n            },\r\n            depth: {\r\n                enable: false,\r\n                mask: false,\r\n            },\r\n        });\r\n        this.trackPointsCommand = reglInstance({\r\n            frag: trackPositionsFrag,\r\n            vert: updateVert,\r\n            framebuffer: () => this.trackedPositionsFbo,\r\n            primitive: 'triangle strip',\r\n            count: 4,\r\n            attributes: { quad: createQuadBuffer(reglInstance) },\r\n            uniforms: {\r\n                position: () => this.currentPositionFbo,\r\n                trackedIndices: () => this.trackedIndicesFbo,\r\n                pointsTextureSize: () => store.pointsTextureSize,\r\n            },\r\n        });\r\n    }\r\n    updateColor() {\r\n        const { reglInstance, config, store, data } = this;\r\n        this.colorFbo = createColorBuffer(data, reglInstance, store.pointsTextureSize, config.nodeColor);\r\n    }\r\n    updateGreyoutStatus() {\r\n        const { reglInstance, store } = this;\r\n        this.greyoutStatusFbo = createGreyoutStatusBuffer(store.selectedIndices, reglInstance, store.pointsTextureSize);\r\n    }\r\n    updateSize() {\r\n        const { reglInstance, config, store, data } = this;\r\n        this.sizeFbo = createSizeBuffer(data, reglInstance, store.pointsTextureSize, config.nodeSize);\r\n    }\r\n    trackPoints() {\r\n        var _a;\r\n        if (!this.trackedIndicesFbo || !this.trackedPositionsFbo)\r\n            return;\r\n        (_a = this.trackPointsCommand) === null || _a === void 0 ? void 0 : _a.call(this);\r\n    }\r\n    draw() {\r\n        var _a, _b, _c;\r\n        (_a = this.drawCommand) === null || _a === void 0 ? void 0 : _a.call(this);\r\n        if (this.config.renderHighlightedNodeRing) {\r\n            if (this.store.hoveredNode) {\r\n                (_b = this.drawHighlightedCommand) === null || _b === void 0 ? void 0 : _b.call(this, {\r\n                    width: 0.85,\r\n                    color: this.store.hoveredNodeRingColor,\r\n                    pointIndex: this.store.hoveredNode.index,\r\n                });\r\n            }\r\n            if (this.store.focusedNode) {\r\n                (_c = this.drawHighlightedCommand) === null || _c === void 0 ? void 0 : _c.call(this, {\r\n                    width: 0.75,\r\n                    color: this.store.focusedNodeRingColor,\r\n                    pointIndex: this.store.focusedNode.index,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    updatePosition() {\r\n        var _a;\r\n        (_a = this.updatePositionCommand) === null || _a === void 0 ? void 0 : _a.call(this);\r\n        this.swapFbo();\r\n    }\r\n    findPointsOnAreaSelection() {\r\n        var _a;\r\n        (_a = this.findPointsOnAreaSelectionCommand) === null || _a === void 0 ? void 0 : _a.call(this);\r\n    }\r\n    findHoveredPoint() {\r\n        var _a, _b;\r\n        (_a = this.clearHoveredFboCommand) === null || _a === void 0 ? void 0 : _a.call(this);\r\n        (_b = this.findHoveredPointCommand) === null || _b === void 0 ? void 0 : _b.call(this);\r\n    }\r\n    getNodeRadius(node) {\r\n        const { nodeSize } = this.config;\r\n        return getNodeSize(node, nodeSize) / 2;\r\n    }\r\n    trackNodesByIds(ids) {\r\n        this.trackedIds = ids.length ? ids : undefined;\r\n        this.trackedPositionsById.clear();\r\n        const indices = ids.map(id => this.data.getSortedIndexById(id)).filter((d) => d !== undefined);\r\n        if (this.trackedIndicesFbo) {\r\n            this.trackedIndicesFbo.destroy();\r\n            this.trackedIndicesFbo = undefined;\r\n        }\r\n        if (this.trackedPositionsFbo) {\r\n            this.trackedPositionsFbo.destroy();\r\n            this.trackedPositionsFbo = undefined;\r\n        }\r\n        if (indices.length) {\r\n            this.trackedIndicesFbo = createTrackedIndicesBuffer(indices, this.store.pointsTextureSize, this.reglInstance);\r\n            this.trackedPositionsFbo = createTrackedPositionsBuffer(indices, this.reglInstance);\r\n        }\r\n        this.trackPoints();\r\n    }\r\n    getTrackedPositions() {\r\n        if (!this.trackedIds)\r\n            return this.trackedPositionsById;\r\n        const pixels = readPixels(this.reglInstance, this.trackedPositionsFbo);\r\n        this.trackedIds.forEach((id, i) => {\r\n            const x = pixels[i * 4];\r\n            const y = pixels[i * 4 + 1];\r\n            if (x !== undefined && y !== undefined)\r\n                this.trackedPositionsById.set(id, [x, y]);\r\n        });\r\n        return this.trackedPositionsById;\r\n    }\r\n    destroy() {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\r\n        (_a = this.currentPositionFbo) === null || _a === void 0 ? void 0 : _a.destroy();\r\n        (_b = this.previousPositionFbo) === null || _b === void 0 ? void 0 : _b.destroy();\r\n        (_c = this.velocityFbo) === null || _c === void 0 ? void 0 : _c.destroy();\r\n        (_d = this.selectedFbo) === null || _d === void 0 ? void 0 : _d.destroy();\r\n        (_e = this.colorFbo) === null || _e === void 0 ? void 0 : _e.destroy();\r\n        (_f = this.sizeFbo) === null || _f === void 0 ? void 0 : _f.destroy();\r\n        (_g = this.greyoutStatusFbo) === null || _g === void 0 ? void 0 : _g.destroy();\r\n        (_h = this.hoveredFbo) === null || _h === void 0 ? void 0 : _h.destroy();\r\n        (_j = this.trackedIndicesFbo) === null || _j === void 0 ? void 0 : _j.destroy();\r\n        (_k = this.trackedPositionsFbo) === null || _k === void 0 ? void 0 : _k.destroy();\r\n    }\r\n    swapFbo() {\r\n        const temp = this.previousPositionFbo;\r\n        this.previousPositionFbo = this.currentPositionFbo;\r\n        this.currentPositionFbo = temp;\r\n    }\r\n}\n\nconst ALPHA_MIN = 0.001;\r\nconst MAX_POINT_SIZE = 64;\r\nclass Store {\r\n    constructor() {\r\n        this.pointsTextureSize = 0;\r\n        this.linksTextureSize = 0;\r\n        this.alpha = 1;\r\n        this.transform = mat3.create();\r\n        this.backgroundColor = [0, 0, 0, 0];\r\n        this.screenSize = [0, 0];\r\n        this.mousePosition = [0, 0];\r\n        this.screenMousePosition = [0, 0];\r\n        this.selectedArea = [[0, 0], [0, 0]];\r\n        this.isSimulationRunning = false;\r\n        this.simulationProgress = 0;\r\n        this.selectedIndices = null;\r\n        this.maxPointSize = MAX_POINT_SIZE;\r\n        this.hoveredNode = undefined;\r\n        this.focusedNode = undefined;\r\n        this.hoveredNodeRingColor = [1, 1, 1, hoveredNodeRingOpacity];\r\n        this.focusedNodeRingColor = [1, 1, 1, focusedNodeRingOpacity];\r\n        this.alphaTarget = 0;\r\n        this.scaleNodeX = scaleLinear();\r\n        this.scaleNodeY = scaleLinear();\r\n        this.random = new Random();\r\n        this.alphaDecay = (decay) => 1 - Math.pow(ALPHA_MIN, 1 / decay);\r\n    }\r\n    addRandomSeed(seed) {\r\n        this.random = this.random.clone(seed);\r\n    }\r\n    getRandomFloat(min, max) {\r\n        return this.random.float(min, max);\r\n    }\r\n    updateScreenSize(width, height, spaceSize) {\r\n        this.screenSize = [width, height];\r\n        this.scaleNodeX\r\n            .domain([0, spaceSize])\r\n            .range([(width - spaceSize) / 2, (width + spaceSize) / 2]);\r\n        this.scaleNodeY\r\n            .domain([spaceSize, 0])\r\n            .range([(height - spaceSize) / 2, (height + spaceSize) / 2]);\r\n    }\r\n    scaleX(x) {\r\n        return this.scaleNodeX(x);\r\n    }\r\n    scaleY(y) {\r\n        return this.scaleNodeY(y);\r\n    }\r\n    setHighlightedNodeRingColor(color) {\r\n        const convertedRgba = getRgbaColor(color);\r\n        this.hoveredNodeRingColor[0] = convertedRgba[0];\r\n        this.hoveredNodeRingColor[1] = convertedRgba[1];\r\n        this.hoveredNodeRingColor[2] = convertedRgba[2];\r\n        this.focusedNodeRingColor[0] = convertedRgba[0];\r\n        this.focusedNodeRingColor[1] = convertedRgba[1];\r\n        this.focusedNodeRingColor[2] = convertedRgba[2];\r\n    }\r\n    setFocusedNode(node, index) {\r\n        if (node && index !== undefined) {\r\n            this.focusedNode = { node, index };\r\n        }\r\n        else\r\n            this.focusedNode = undefined;\r\n    }\r\n    addAlpha(decay) {\r\n        return (this.alphaTarget - this.alpha) * this.alphaDecay(decay);\r\n    }\r\n}\n\nclass Zoom {\r\n    constructor(store, config) {\r\n        this.eventTransform = zoomIdentity;\r\n        this.behavior = zoom()\r\n            .scaleExtent([0.001, Infinity])\r\n            .on('start', (e) => {\r\n            var _a, _b, _c;\r\n            this.isRunning = true;\r\n            const userDriven = !!e.sourceEvent;\r\n            (_c = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onZoomStart) === null || _c === void 0 ? void 0 : _c.call(_b, e, userDriven);\r\n        })\r\n            .on('zoom', (e) => {\r\n            var _a, _b, _c;\r\n            this.eventTransform = e.transform;\r\n            const { eventTransform: { x, y, k }, store: { transform, screenSize } } = this;\r\n            const w = screenSize[0];\r\n            const h = screenSize[1];\r\n            mat3.projection(transform, w, h);\r\n            mat3.translate(transform, transform, [x, y]);\r\n            mat3.scale(transform, transform, [k, k]);\r\n            mat3.translate(transform, transform, [w / 2, h / 2]);\r\n            mat3.scale(transform, transform, [w / 2, h / 2]);\r\n            mat3.scale(transform, transform, [1, -1]);\r\n            const userDriven = !!e.sourceEvent;\r\n            (_c = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onZoom) === null || _c === void 0 ? void 0 : _c.call(_b, e, userDriven);\r\n        })\r\n            .on('end', (e) => {\r\n            var _a, _b, _c;\r\n            this.isRunning = false;\r\n            const userDriven = !!e.sourceEvent;\r\n            (_c = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onZoomEnd) === null || _c === void 0 ? void 0 : _c.call(_b, e, userDriven);\r\n        });\r\n        this.isRunning = false;\r\n        this.store = store;\r\n        this.config = config;\r\n    }\r\n    getTransform(positions, scale) {\r\n        if (positions.length === 0)\r\n            return this.eventTransform;\r\n        const { store: { screenSize, maxPointSize } } = this;\r\n        const width = screenSize[0];\r\n        const height = screenSize[1];\r\n        const xExtent = extent(positions.map(d => d[0]));\r\n        const yExtent = extent(positions.map(d => d[1]));\r\n        xExtent[0] = this.store.scaleX(xExtent[0] - maxPointSize / 2);\r\n        xExtent[1] = this.store.scaleX(xExtent[1] + maxPointSize / 2);\r\n        yExtent[0] = this.store.scaleY(yExtent[0] - maxPointSize / 2);\r\n        yExtent[1] = this.store.scaleY(yExtent[1] + maxPointSize / 2);\r\n        const xScale = width / (xExtent[1] - xExtent[0]);\r\n        const yScale = height / (yExtent[0] - yExtent[1]);\r\n        const clampedScale = clamp(scale !== null && scale !== void 0 ? scale : Math.min(xScale, yScale), ...this.behavior.scaleExtent());\r\n        const xCenter = (xExtent[1] + xExtent[0]) / 2;\r\n        const yCenter = (yExtent[1] + yExtent[0]) / 2;\r\n        const translateX = width / 2 - xCenter * clampedScale;\r\n        const translateY = height / 2 - yCenter * clampedScale;\r\n        const transform = zoomIdentity\r\n            .translate(translateX, translateY)\r\n            .scale(clampedScale);\r\n        return transform;\r\n    }\r\n    getDistanceToPoint(position) {\r\n        const { x, y, k } = this.eventTransform;\r\n        const point = this.getTransform([position], k);\r\n        const dx = x - point.x;\r\n        const dy = y - point.y;\r\n        return Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n    getMiddlePointTransform(position) {\r\n        const { store: { screenSize }, eventTransform: { x, y, k } } = this;\r\n        const width = screenSize[0];\r\n        const height = screenSize[1];\r\n        const currX = (width / 2 - x) / k;\r\n        const currY = (height / 2 - y) / k;\r\n        const pointX = this.store.scaleX(position[0]);\r\n        const pointY = this.store.scaleY(position[1]);\r\n        const centerX = (currX + pointX) / 2;\r\n        const centerY = (currY + pointY) / 2;\r\n        const scale = 1;\r\n        const translateX = width / 2 - centerX * scale;\r\n        const translateY = height / 2 - centerY * scale;\r\n        return zoomIdentity\r\n            .translate(translateX, translateY)\r\n            .scale(scale);\r\n    }\r\n    convertSpaceToScreenPosition(spacePosition) {\r\n        const screenPointX = this.eventTransform.applyX(this.store.scaleX(spacePosition[0]));\r\n        const screenPointY = this.eventTransform.applyY(this.store.scaleY(spacePosition[1]));\r\n        return [screenPointX, screenPointY];\r\n    }\r\n    convertSpaceToScreenRadius(spaceRadius) {\r\n        const { config: { scaleNodesOnZoom }, store: { maxPointSize }, eventTransform: { k } } = this;\r\n        let size = spaceRadius * 2;\r\n        if (scaleNodesOnZoom) {\r\n            size *= k;\r\n        }\r\n        else {\r\n            size *= Math.min(5.0, Math.max(1.0, k * 0.01));\r\n        }\r\n        return Math.min(size, maxPointSize) / 2;\r\n    }\r\n}\n\nclass Graph {\r\n    constructor(canvas, config) {\r\n        var _a;\r\n        this.config = new GraphConfig();\r\n        this.requestAnimationFrameId = 0;\r\n        this.isRightClickMouse = false;\r\n        this.graph = new GraphData();\r\n        this.store = new Store();\r\n        this.zoomInstance = new Zoom(this.store, this.config);\r\n        this.hasBeenRecentlyDestroyed = false;\r\n        if (config)\r\n            this.config.init(config);\r\n        const w = canvas.clientWidth;\r\n        const h = canvas.clientHeight;\r\n        this.store.updateScreenSize(w, h, this.config.spaceSize);\r\n        canvas.width = w * this.config.pixelRatio;\r\n        canvas.height = h * this.config.pixelRatio;\r\n        // If the canvas element has no CSS width and height style, the clientWidth and the clientHeight will always\r\n        // be equal to the width and height canvas attribute.\r\n        // In order to prevent resize problem assume that canvas CSS style width and height has a value of 100%.\r\n        if (canvas.style.width === '' && canvas.style.height === '') {\r\n            select(canvas)\r\n                .style('width', '100%')\r\n                .style('height', '100%');\r\n        }\r\n        this.canvas = canvas;\r\n        this.canvasD3Selection = select(canvas);\r\n        this.zoomInstance.behavior\r\n            .on('start.detect', (e) => { this.currentEvent = e; })\r\n            .on('zoom.detect', (e) => {\r\n            const userDriven = !!e.sourceEvent;\r\n            if (userDriven)\r\n                this.updateMousePosition(e.sourceEvent);\r\n            this.currentEvent = e;\r\n        })\r\n            .on('end.detect', (e) => { this.currentEvent = e; });\r\n        this.canvasD3Selection\r\n            .call(this.zoomInstance.behavior)\r\n            .on('click', this.onClick.bind(this))\r\n            .on('mousemove', this.onMouseMove.bind(this))\r\n            .on('contextmenu', this.onRightClickMouse.bind(this));\r\n        this.reglInstance = regl({\r\n            canvas: this.canvas,\r\n            attributes: {\r\n                antialias: false,\r\n                preserveDrawingBuffer: true,\r\n                premultipliedAlpha: false,\r\n                alpha: false,\r\n            },\r\n            extensions: ['OES_texture_float', 'ANGLE_instanced_arrays'],\r\n        });\r\n        this.store.maxPointSize = ((_a = this.reglInstance.limits.pointSizeDims[1]) !== null && _a !== void 0 ? _a : MAX_POINT_SIZE) / this.config.pixelRatio;\r\n        this.points = new Points(this.reglInstance, this.config, this.store, this.graph);\r\n        this.lines = new Lines(this.reglInstance, this.config, this.store, this.graph, this.points);\r\n        this.forceGravity = new ForceGravity(this.reglInstance, this.config, this.store, this.graph, this.points);\r\n        this.forceCenter = new ForceCenter(this.reglInstance, this.config, this.store, this.graph, this.points);\r\n        this.forceManyBody = this.config.useQuadtree\r\n            ? new ForceManyBodyQuadtree(this.reglInstance, this.config, this.store, this.graph, this.points)\r\n            : new ForceManyBody(this.reglInstance, this.config, this.store, this.graph, this.points);\r\n        this.forceLinkIncoming = new ForceLink(this.reglInstance, this.config, this.store, this.graph, this.points);\r\n        this.forceLinkOutgoing = new ForceLink(this.reglInstance, this.config, this.store, this.graph, this.points);\r\n        this.forceMouse = new ForceMouse(this.reglInstance, this.config, this.store, this.graph, this.points);\r\n        this.store.backgroundColor = getRgbaColor(this.config.backgroundColor);\r\n        if (this.config.highlightedNodeRingColor)\r\n            this.store.setHighlightedNodeRingColor(this.config.highlightedNodeRingColor);\r\n        if (this.config.showFPSMonitor)\r\n            this.fpsMonitor = new FPSMonitor(this.canvas);\r\n        if (this.config.randomSeed !== undefined)\r\n            this.store.addRandomSeed(this.config.randomSeed);\r\n    }\r\n    get progress() {\r\n        return this.store.simulationProgress;\r\n    }\r\n    /**\r\n     * A value that gives information about the running simulation status.\r\n     */\r\n    get isSimulationRunning() {\r\n        return this.store.isSimulationRunning;\r\n    }\r\n    /**\r\n     * The maximum point size.\r\n     * This value is the maximum size of the `gl.POINTS` primitive that WebGL can render on the user's hardware.\r\n     */\r\n    get maxPointSize() {\r\n        return this.store.maxPointSize;\r\n    }\r\n    /**\r\n     * Set or update Cosmos configuration. The changes will be applied in real time.\r\n     * @param config Cosmos configuration object.\r\n     */\r\n    setConfig(config) {\r\n        var _a, _b;\r\n        const prevConfig = { ...this.config };\r\n        this.config.init(config);\r\n        if (prevConfig.linkColor !== this.config.linkColor)\r\n            this.lines.updateColor();\r\n        if (prevConfig.nodeColor !== this.config.nodeColor)\r\n            this.points.updateColor();\r\n        if (prevConfig.nodeSize !== this.config.nodeSize)\r\n            this.points.updateSize();\r\n        if (prevConfig.linkWidth !== this.config.linkWidth)\r\n            this.lines.updateWidth();\r\n        if (prevConfig.backgroundColor !== this.config.backgroundColor)\r\n            this.store.backgroundColor = getRgbaColor(this.config.backgroundColor);\r\n        if (prevConfig.highlightedNodeRingColor !== this.config.highlightedNodeRingColor) {\r\n            this.store.setHighlightedNodeRingColor(this.config.highlightedNodeRingColor);\r\n        }\r\n        if (prevConfig.spaceSize !== this.config.spaceSize ||\r\n            prevConfig.simulation.repulsionQuadtreeLevels !== this.config.simulation.repulsionQuadtreeLevels)\r\n            this.update(this.store.isSimulationRunning);\r\n        if (prevConfig.showFPSMonitor !== this.config.showFPSMonitor) {\r\n            if (this.config.showFPSMonitor) {\r\n                this.fpsMonitor = new FPSMonitor(this.canvas);\r\n            }\r\n            else {\r\n                (_a = this.fpsMonitor) === null || _a === void 0 ? void 0 : _a.destroy();\r\n                this.fpsMonitor = undefined;\r\n            }\r\n        }\r\n        if (prevConfig.pixelRatio !== this.config.pixelRatio) {\r\n            this.store.maxPointSize = ((_b = this.reglInstance.limits.pointSizeDims[1]) !== null && _b !== void 0 ? _b : MAX_POINT_SIZE) / this.config.pixelRatio;\r\n        }\r\n    }\r\n    /**\r\n     * Pass data to Cosmos.\r\n     * @param nodes Array of nodes.\r\n     * @param links Array of links.\r\n     * @param runSimulation When set to `false`, the simulation won't be started automatically (`true` by default).\r\n     */\r\n    setData(nodes, links, runSimulation = true) {\r\n        if (!nodes.length && !links.length) {\r\n            this.destroy();\r\n            this.reglInstance.clear({\r\n                color: this.store.backgroundColor,\r\n                depth: 1,\r\n                stencil: 0,\r\n            });\r\n            return;\r\n        }\r\n        this.graph.setData(nodes, links);\r\n        this.update(runSimulation);\r\n    }\r\n    /**\r\n     * Center the view on a node and zoom in, by node id.\r\n     * @param id Id of the node.\r\n     * @param duration Duration of the animation transition in milliseconds (`700` by default).\r\n     * @param scale Scale value to zoom in or out (`3` by default).\r\n     * @param canZoomOut Set to `false` to prevent zooming out from the node (`true` by default).\r\n     */\r\n    zoomToNodeById(id, duration = 700, scale = defaultScaleToZoom, canZoomOut = true) {\r\n        const node = this.graph.getNodeById(id);\r\n        if (!node)\r\n            return;\r\n        this.zoomToNode(node, duration, scale, canZoomOut);\r\n    }\r\n    /**\r\n     * Center the view on a node and zoom in, by node index.\r\n     * @param index The index of the node in the array of nodes.\r\n     * @param duration Duration of the animation transition in milliseconds (`700` by default).\r\n     * @param scale Scale value to zoom in or out (`3` by default).\r\n     * @param canZoomOut Set to `false` to prevent zooming out from the node (`true` by default).\r\n     */\r\n    zoomToNodeByIndex(index, duration = 700, scale = defaultScaleToZoom, canZoomOut = true) {\r\n        const node = this.graph.getNodeByIndex(index);\r\n        if (!node)\r\n            return;\r\n        this.zoomToNode(node, duration, scale, canZoomOut);\r\n    }\r\n    /**\r\n     * Zoom the view in or out to the specified zoom level.\r\n     * @param value Zoom level\r\n     * @param duration Duration of the zoom in/out transition.\r\n     */\r\n    zoom(value, duration = 0) {\r\n        this.setZoomLevel(value, duration);\r\n    }\r\n    /**\r\n     * Zoom the view in or out to the specified zoom level.\r\n     * @param value Zoom level\r\n     * @param duration Duration of the zoom in/out transition.\r\n     */\r\n    setZoomLevel(value, duration = 0) {\r\n        this.canvasD3Selection\r\n            .transition()\r\n            .duration(duration)\r\n            .call(this.zoomInstance.behavior.scaleTo, value);\r\n    }\r\n    /**\r\n     * Get zoom level.\r\n     * @returns Zoom level value of the view.\r\n     */\r\n    getZoomLevel() {\r\n        return this.zoomInstance.eventTransform.k;\r\n    }\r\n    /**\r\n     * Get current X and Y coordinates of the nodes.\r\n     * @returns Object where keys are the ids of the nodes and values are corresponding `{ x: number; y: number }` objects.\r\n     */\r\n    getNodePositions() {\r\n        if (this.hasBeenRecentlyDestroyed)\r\n            return {};\r\n        const particlePositionPixels = readPixels(this.reglInstance, this.points.currentPositionFbo);\r\n        return this.graph.nodes.reduce((acc, curr) => {\r\n            const index = this.graph.getSortedIndexById(curr.id);\r\n            const posX = particlePositionPixels[index * 4 + 0];\r\n            const posY = particlePositionPixels[index * 4 + 1];\r\n            if (posX !== undefined && posY !== undefined) {\r\n                acc[curr.id] = {\r\n                    x: posX,\r\n                    y: posY,\r\n                };\r\n            }\r\n            return acc;\r\n        }, {});\r\n    }\r\n    /**\r\n     * Get current X and Y coordinates of the nodes.\r\n     * @returns A Map object where keys are the ids of the nodes and values are their corresponding X and Y coordinates in the [number, number] format.\r\n     */\r\n    getNodePositionsMap() {\r\n        const positionMap = new Map();\r\n        if (this.hasBeenRecentlyDestroyed)\r\n            return positionMap;\r\n        const particlePositionPixels = readPixels(this.reglInstance, this.points.currentPositionFbo);\r\n        return this.graph.nodes.reduce((acc, curr) => {\r\n            const index = this.graph.getSortedIndexById(curr.id);\r\n            const posX = particlePositionPixels[index * 4 + 0];\r\n            const posY = particlePositionPixels[index * 4 + 1];\r\n            if (posX !== undefined && posY !== undefined) {\r\n                acc.set(curr.id, [posX, posY]);\r\n            }\r\n            return acc;\r\n        }, positionMap);\r\n    }\r\n    /**\r\n     * Get current X and Y coordinates of the nodes.\r\n     * @returns Array of `[x: number, y: number]` arrays.\r\n     */\r\n    getNodePositionsArray() {\r\n        const positions = [];\r\n        if (this.hasBeenRecentlyDestroyed)\r\n            return [];\r\n        const particlePositionPixels = readPixels(this.reglInstance, this.points.currentPositionFbo);\r\n        positions.length = this.graph.nodes.length;\r\n        for (let i = 0; i < this.graph.nodes.length; i += 1) {\r\n            const index = this.graph.getSortedIndexByInputIndex(i);\r\n            const posX = particlePositionPixels[index * 4 + 0];\r\n            const posY = particlePositionPixels[index * 4 + 1];\r\n            if (posX !== undefined && posY !== undefined) {\r\n                positions[i] = [posX, posY];\r\n            }\r\n        }\r\n        return positions;\r\n    }\r\n    /**\r\n     * Center and zoom in/out the view to fit all nodes in the scene.\r\n     * @param duration Duration of the center and zoom in/out animation in milliseconds (`250` by default).\r\n     */\r\n    fitView(duration = 250) {\r\n        this.setZoomTransformByNodePositions(this.getNodePositionsArray(), duration);\r\n    }\r\n    /**\r\n     * Center and zoom in/out the view to fit nodes by their ids in the scene.\r\n     * @param duration Duration of the center and zoom in/out animation in milliseconds (`250` by default).\r\n     */\r\n    fitViewByNodeIds(ids, duration = 250) {\r\n        const positionsMap = this.getNodePositionsMap();\r\n        const positions = ids.map(id => positionsMap.get(id)).filter((d) => d !== undefined);\r\n        this.setZoomTransformByNodePositions(positions, duration);\r\n    }\r\n    /** Select nodes inside a rectangular area.\r\n     * @param selection - Array of two corner points `[[left, top], [right, bottom]]`.\r\n     * The `left` and `right` coordinates should be from 0 to the width of the canvas.\r\n     * The `top` and `bottom` coordinates should be from 0 to the height of the canvas. */\r\n    selectNodesInRange(selection) {\r\n        if (selection) {\r\n            const h = this.store.screenSize[1];\r\n            this.store.selectedArea = [[selection[0][0], (h - selection[1][1])], [selection[1][0], (h - selection[0][1])]];\r\n            this.points.findPointsOnAreaSelection();\r\n            const pixels = readPixels(this.reglInstance, this.points.selectedFbo);\r\n            this.store.selectedIndices = pixels\r\n                .map((pixel, i) => {\r\n                if (i % 4 === 0 && pixel !== 0)\r\n                    return i / 4;\r\n                else\r\n                    return -1;\r\n            })\r\n                .filter(d => d !== -1);\r\n        }\r\n        else {\r\n            this.store.selectedIndices = null;\r\n        }\r\n        this.store.setFocusedNode();\r\n        this.points.updateGreyoutStatus();\r\n    }\r\n    /**\r\n     * Select a node by id. If you want the adjacent nodes to get selected too, provide `true` as the second argument.\r\n     * @param id Id of the node.\r\n     * @param selectAdjacentNodes When set to `true`, selects adjacent nodes (`false` by default).\r\n     */\r\n    selectNodeById(id, selectAdjacentNodes = false) {\r\n        var _a;\r\n        if (selectAdjacentNodes) {\r\n            const adjacentNodes = (_a = this.graph.getAdjacentNodes(id)) !== null && _a !== void 0 ? _a : [];\r\n            this.selectNodesByIds([id, ...adjacentNodes.map(d => d.id)]);\r\n        }\r\n        else\r\n            this.selectNodesByIds([id]);\r\n        this.store.setFocusedNode(this.graph.getNodeById(id), this.graph.getSortedIndexById(id));\r\n    }\r\n    /**\r\n     * Select a node by index. If you want the adjacent nodes to get selected too, provide `true` as the second argument.\r\n     * @param index The index of the node in the array of nodes.\r\n     * @param selectAdjacentNodes When set to `true`, selects adjacent nodes (`false` by default).\r\n     */\r\n    selectNodeByIndex(index, selectAdjacentNodes = false) {\r\n        const node = this.graph.getNodeByIndex(index);\r\n        if (node)\r\n            this.selectNodeById(node.id, selectAdjacentNodes);\r\n    }\r\n    /**\r\n     * Select multiples nodes by their ids.\r\n     * @param ids Array of nodes ids.\r\n     */\r\n    selectNodesByIds(ids) {\r\n        this.selectNodesByIndices(ids === null || ids === void 0 ? void 0 : ids.map(d => this.graph.getSortedIndexById(d)));\r\n    }\r\n    /**\r\n     * Select multiples nodes by their indices.\r\n     * @param indices Array of nodes indices.\r\n     */\r\n    selectNodesByIndices(indices) {\r\n        if (!indices) {\r\n            this.store.selectedIndices = null;\r\n        }\r\n        else if (indices.length === 0) {\r\n            this.store.selectedIndices = new Float32Array();\r\n        }\r\n        else {\r\n            this.store.selectedIndices = new Float32Array(indices.filter((d) => d !== undefined));\r\n        }\r\n        this.store.setFocusedNode();\r\n        this.points.updateGreyoutStatus();\r\n    }\r\n    /**\r\n     * Unselect all nodes.\r\n     */\r\n    unselectNodes() {\r\n        this.store.selectedIndices = null;\r\n        this.store.setFocusedNode();\r\n        this.points.updateGreyoutStatus();\r\n    }\r\n    /**\r\n     * Get nodes that are currently selected.\r\n     * @returns Array of selected nodes.\r\n     */\r\n    getSelectedNodes() {\r\n        const { selectedIndices } = this.store;\r\n        if (!selectedIndices)\r\n            return null;\r\n        const points = new Array(selectedIndices.length);\r\n        for (const [i, selectedIndex] of selectedIndices.entries()) {\r\n            if (selectedIndex !== undefined) {\r\n                const index = this.graph.getInputIndexBySortedIndex(selectedIndex);\r\n                if (index !== undefined)\r\n                    points[i] = this.graph.nodes[index];\r\n            }\r\n        }\r\n        return points;\r\n    }\r\n    /**\r\n     * Get nodes that are adjacent to a specific node by its id.\r\n     * @param id Id of the node.\r\n     * @returns Array of adjacent nodes.\r\n     */\r\n    getAdjacentNodes(id) {\r\n        return this.graph.getAdjacentNodes(id);\r\n    }\r\n    /**\r\n     * Converts the X and Y node coordinates from the space coordinate system to the screen coordinate system.\r\n     * @param spacePosition Array of x and y coordinates in the space coordinate system.\r\n     * @returns Array of x and y coordinates in the screen coordinate system.\r\n     */\r\n    spaceToScreenPosition(spacePosition) {\r\n        return this.zoomInstance.convertSpaceToScreenPosition(spacePosition);\r\n    }\r\n    /**\r\n     * Converts the node radius value from the space coordinate system to the screen coordinate system.\r\n     * @param spaceRadius Radius of Node in the space coordinate system.\r\n     * @returns Radius of Node in the screen coordinate system.\r\n     */\r\n    spaceToScreenRadius(spaceRadius) {\r\n        return this.zoomInstance.convertSpaceToScreenRadius(spaceRadius);\r\n    }\r\n    /**\r\n     * Get node radius by its index.\r\n     * @param index Index of the node.\r\n     * @returns Radius of the node.\r\n     */\r\n    getNodeRadiusByIndex(index) {\r\n        const node = this.graph.getNodeByIndex(index);\r\n        return node && this.points.getNodeRadius(node);\r\n    }\r\n    /**\r\n     * Get node radius by its id.\r\n     * @param id Id of the node.\r\n     * @returns Radius of the node.\r\n     */\r\n    getNodeRadiusById(id) {\r\n        const node = this.graph.getNodeById(id);\r\n        return node && this.points.getNodeRadius(node);\r\n    }\r\n    /**\r\n     * Track multiple node positions by their ids on each Cosmos tick.\r\n     * @param ids Array of nodes ids.\r\n     */\r\n    trackNodePositionsByIds(ids) {\r\n        this.points.trackNodesByIds(ids);\r\n    }\r\n    /**\r\n     * Track multiple node positions by their indices on each Cosmos tick.\r\n     * @param ids Array of nodes indices.\r\n     */\r\n    trackNodePositionsByIndices(indices) {\r\n        this.points.trackNodesByIds(indices.map(index => this.graph.getNodeByIndex(index))\r\n            .filter((d) => d !== undefined)\r\n            .map(d => d.id));\r\n    }\r\n    /**\r\n     * Get current X and Y coordinates of the tracked nodes.\r\n     * @returns A Map object where keys are the ids of the nodes and values are their corresponding X and Y coordinates in the [number, number] format.\r\n     */\r\n    getTrackedNodePositionsMap() {\r\n        return this.points.getTrackedPositions();\r\n    }\r\n    /**\r\n     * Start the simulation.\r\n     * @param alpha Value from 0 to 1. The higher the value, the more initial energy the simulation will get.\r\n     */\r\n    start(alpha = 1) {\r\n        var _a, _b;\r\n        if (!this.graph.nodes.length)\r\n            return;\r\n        this.store.isSimulationRunning = true;\r\n        this.store.alpha = alpha;\r\n        this.store.simulationProgress = 0;\r\n        (_b = (_a = this.config.simulation).onStart) === null || _b === void 0 ? void 0 : _b.call(_a);\r\n        this.stopFrames();\r\n        this.frame();\r\n    }\r\n    /**\r\n     * Pause the simulation.\r\n     */\r\n    pause() {\r\n        var _a, _b;\r\n        this.store.isSimulationRunning = false;\r\n        (_b = (_a = this.config.simulation).onPause) === null || _b === void 0 ? void 0 : _b.call(_a);\r\n    }\r\n    /**\r\n     * Restart the simulation.\r\n     */\r\n    restart() {\r\n        var _a, _b;\r\n        this.store.isSimulationRunning = true;\r\n        (_b = (_a = this.config.simulation).onRestart) === null || _b === void 0 ? void 0 : _b.call(_a);\r\n    }\r\n    /**\r\n     * Render only one frame of the simulation (stops the simulation if it was running).\r\n     */\r\n    step() {\r\n        this.store.isSimulationRunning = false;\r\n        this.stopFrames();\r\n        this.frame();\r\n    }\r\n    /**\r\n     * Destroy this Cosmos instance.\r\n     */\r\n    destroy() {\r\n        var _a;\r\n        this.stopFrames();\r\n        if (this.hasBeenRecentlyDestroyed)\r\n            return;\r\n        this.points.destroy();\r\n        this.lines.destroy();\r\n        this.forceCenter.destroy();\r\n        this.forceLinkIncoming.destroy();\r\n        this.forceLinkOutgoing.destroy();\r\n        (_a = this.forceManyBody) === null || _a === void 0 ? void 0 : _a.destroy();\r\n        this.reglInstance.destroy();\r\n        this.hasBeenRecentlyDestroyed = true;\r\n    }\r\n    /**\r\n     * Create new Cosmos instance.\r\n     */\r\n    create() {\r\n        var _a;\r\n        this.points.create();\r\n        this.lines.create();\r\n        (_a = this.forceManyBody) === null || _a === void 0 ? void 0 : _a.create();\r\n        this.forceLinkIncoming.create(LinkDirection.INCOMING);\r\n        this.forceLinkOutgoing.create(LinkDirection.OUTGOING);\r\n        this.forceCenter.create();\r\n        this.hasBeenRecentlyDestroyed = false;\r\n    }\r\n    update(runSimulation) {\r\n        const { graph } = this;\r\n        this.store.pointsTextureSize = Math.ceil(Math.sqrt(graph.nodes.length));\r\n        this.store.linksTextureSize = Math.ceil(Math.sqrt(graph.linksNumber * 2));\r\n        this.destroy();\r\n        this.create();\r\n        this.initPrograms();\r\n        if (runSimulation) {\r\n            this.start();\r\n        }\r\n        else {\r\n            this.step();\r\n        }\r\n    }\r\n    initPrograms() {\r\n        var _a;\r\n        this.points.initPrograms();\r\n        this.lines.initPrograms();\r\n        this.forceGravity.initPrograms();\r\n        this.forceLinkIncoming.initPrograms();\r\n        this.forceLinkOutgoing.initPrograms();\r\n        this.forceMouse.initPrograms();\r\n        (_a = this.forceManyBody) === null || _a === void 0 ? void 0 : _a.initPrograms();\r\n        this.forceCenter.initPrograms();\r\n    }\r\n    frame() {\r\n        const { config: { simulation, renderLinks }, store: { alpha, isSimulationRunning } } = this;\r\n        if (alpha < ALPHA_MIN && isSimulationRunning)\r\n            this.end();\r\n        this.requestAnimationFrameId = window.requestAnimationFrame((now) => {\r\n            var _a, _b, _c, _d, _e, _f;\r\n            (_a = this.fpsMonitor) === null || _a === void 0 ? void 0 : _a.begin();\r\n            this.resizeCanvas();\r\n            this.findHoveredPoint();\r\n            if (this.isRightClickMouse) {\r\n                if (!isSimulationRunning)\r\n                    this.start(0.1);\r\n                this.forceMouse.run();\r\n                this.points.updatePosition();\r\n            }\r\n            if ((isSimulationRunning && !this.zoomInstance.isRunning)) {\r\n                if (simulation.gravity) {\r\n                    this.forceGravity.run();\r\n                    this.points.updatePosition();\r\n                }\r\n                if (simulation.center) {\r\n                    this.forceCenter.run();\r\n                    this.points.updatePosition();\r\n                }\r\n                (_b = this.forceManyBody) === null || _b === void 0 ? void 0 : _b.run();\r\n                this.points.updatePosition();\r\n                this.forceLinkIncoming.run();\r\n                this.points.updatePosition();\r\n                this.forceLinkOutgoing.run();\r\n                this.points.updatePosition();\r\n                this.store.alpha += this.store.addAlpha((_c = this.config.simulation.decay) !== null && _c !== void 0 ? _c : defaultConfigValues.simulation.decay);\r\n                if (this.isRightClickMouse)\r\n                    this.store.alpha = Math.max(this.store.alpha, 0.1);\r\n                this.store.simulationProgress = Math.sqrt(Math.min(1, ALPHA_MIN / this.store.alpha));\r\n                (_e = (_d = this.config.simulation).onTick) === null || _e === void 0 ? void 0 : _e.call(_d, this.store.alpha);\r\n            }\r\n            this.points.trackPoints();\r\n            // Clear canvas\r\n            this.reglInstance.clear({\r\n                color: this.store.backgroundColor,\r\n                depth: 1,\r\n                stencil: 0,\r\n            });\r\n            if (renderLinks) {\r\n                this.lines.draw();\r\n            }\r\n            this.points.draw();\r\n            (_f = this.fpsMonitor) === null || _f === void 0 ? void 0 : _f.end(now);\r\n            this.currentEvent = undefined;\r\n            this.frame();\r\n        });\r\n    }\r\n    stopFrames() {\r\n        if (this.requestAnimationFrameId)\r\n            window.cancelAnimationFrame(this.requestAnimationFrameId);\r\n    }\r\n    end() {\r\n        var _a, _b;\r\n        this.store.isSimulationRunning = false;\r\n        this.store.simulationProgress = 1;\r\n        (_b = (_a = this.config.simulation).onEnd) === null || _b === void 0 ? void 0 : _b.call(_a);\r\n    }\r\n    onClick(event) {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        this.store.setFocusedNode((_a = this.store.hoveredNode) === null || _a === void 0 ? void 0 : _a.node, (_b = this.store.hoveredNode) === null || _b === void 0 ? void 0 : _b.index);\r\n        (_d = (_c = this.config.events).onClick) === null || _d === void 0 ? void 0 : _d.call(_c, (_e = this.store.hoveredNode) === null || _e === void 0 ? void 0 : _e.node, this.store.hoveredNode ? this.graph.getInputIndexBySortedIndex(this.store.hoveredNode.index) : undefined, (_f = this.store.hoveredNode) === null || _f === void 0 ? void 0 : _f.position, event);\r\n    }\r\n    updateMousePosition(event) {\r\n        if (!event || event.offsetX === undefined || event.offsetY === undefined)\r\n            return;\r\n        const { x, y, k } = this.zoomInstance.eventTransform;\r\n        const h = this.canvas.clientHeight;\r\n        const mouseX = event.offsetX;\r\n        const mouseY = event.offsetY;\r\n        const invertedX = (mouseX - x) / k;\r\n        const invertedY = (mouseY - y) / k;\r\n        this.store.mousePosition = [invertedX, (h - invertedY)];\r\n        this.store.mousePosition[0] -= (this.store.screenSize[0] - this.config.spaceSize) / 2;\r\n        this.store.mousePosition[1] -= (this.store.screenSize[1] - this.config.spaceSize) / 2;\r\n        this.store.screenMousePosition = [mouseX, (this.store.screenSize[1] - mouseY)];\r\n    }\r\n    onMouseMove(event) {\r\n        var _a, _b, _c, _d;\r\n        this.currentEvent = event;\r\n        this.updateMousePosition(event);\r\n        this.isRightClickMouse = event.which === 3;\r\n        (_b = (_a = this.config.events).onMouseMove) === null || _b === void 0 ? void 0 : _b.call(_a, (_c = this.store.hoveredNode) === null || _c === void 0 ? void 0 : _c.node, this.store.hoveredNode ? this.graph.getInputIndexBySortedIndex(this.store.hoveredNode.index) : undefined, (_d = this.store.hoveredNode) === null || _d === void 0 ? void 0 : _d.position, this.currentEvent);\r\n    }\r\n    onRightClickMouse(event) {\r\n        event.preventDefault();\r\n    }\r\n    resizeCanvas() {\r\n        const prevWidth = this.canvas.width;\r\n        const prevHeight = this.canvas.height;\r\n        const w = this.canvas.clientWidth;\r\n        const h = this.canvas.clientHeight;\r\n        if (prevWidth !== w * this.config.pixelRatio || prevHeight !== h * this.config.pixelRatio) {\r\n            this.store.updateScreenSize(w, h, this.config.spaceSize);\r\n            this.canvas.width = w * this.config.pixelRatio;\r\n            this.canvas.height = h * this.config.pixelRatio;\r\n            this.reglInstance.poll();\r\n            this.canvasD3Selection\r\n                .call(this.zoomInstance.behavior.transform, this.zoomInstance.eventTransform);\r\n        }\r\n    }\r\n    setZoomTransformByNodePositions(positions, duration = 250, scale) {\r\n        const transform = this.zoomInstance.getTransform(positions, scale);\r\n        this.canvasD3Selection\r\n            .transition()\r\n            .ease(easeQuadInOut)\r\n            .duration(duration)\r\n            .call(this.zoomInstance.behavior.transform, transform);\r\n    }\r\n    zoomToNode(node, duration, scale, canZoomOut) {\r\n        const { graph, store: { screenSize } } = this;\r\n        const positionPixels = readPixels(this.reglInstance, this.points.currentPositionFbo);\r\n        const nodeIndex = graph.getSortedIndexById(node.id);\r\n        if (nodeIndex === undefined)\r\n            return;\r\n        const posX = positionPixels[nodeIndex * 4 + 0];\r\n        const posY = positionPixels[nodeIndex * 4 + 1];\r\n        if (posX === undefined || posY === undefined)\r\n            return;\r\n        const distance = this.zoomInstance.getDistanceToPoint([posX, posY]);\r\n        const zoomLevel = canZoomOut ? scale : Math.max(this.getZoomLevel(), scale);\r\n        if (distance < Math.min(screenSize[0], screenSize[1])) {\r\n            this.setZoomTransformByNodePositions([[posX, posY]], duration, zoomLevel);\r\n        }\r\n        else {\r\n            const transform = this.zoomInstance.getTransform([[posX, posY]], zoomLevel);\r\n            const middle = this.zoomInstance.getMiddlePointTransform([posX, posY]);\r\n            this.canvasD3Selection\r\n                .transition()\r\n                .ease(easeQuadIn)\r\n                .duration(duration / 2)\r\n                .call(this.zoomInstance.behavior.transform, middle)\r\n                .transition()\r\n                .ease(easeQuadOut)\r\n                .duration(duration / 2)\r\n                .call(this.zoomInstance.behavior.transform, transform);\r\n        }\r\n    }\r\n    findHoveredPoint() {\r\n        var _a, _b, _c, _d, _e;\r\n        this.points.findHoveredPoint();\r\n        let isMouseover = false;\r\n        let isMouseout = false;\r\n        const pixels = readPixels(this.reglInstance, this.points.hoveredFbo);\r\n        const nodeSize = pixels[1];\r\n        if (nodeSize) {\r\n            const index = pixels[0];\r\n            const inputIndex = this.graph.getInputIndexBySortedIndex(index);\r\n            const hovered = inputIndex !== undefined ? this.graph.getNodeByIndex(inputIndex) : undefined;\r\n            if (((_a = this.store.hoveredNode) === null || _a === void 0 ? void 0 : _a.node) !== hovered)\r\n                isMouseover = true;\r\n            const pointX = pixels[2];\r\n            const pointY = pixels[3];\r\n            this.store.hoveredNode = hovered && {\r\n                node: hovered,\r\n                index,\r\n                position: [pointX, pointY],\r\n            };\r\n        }\r\n        else {\r\n            if (this.store.hoveredNode)\r\n                isMouseout = true;\r\n            this.store.hoveredNode = undefined;\r\n        }\r\n        if (isMouseover && this.store.hoveredNode) {\r\n            (_c = (_b = this.config.events).onNodeMouseOver) === null || _c === void 0 ? void 0 : _c.call(_b, this.store.hoveredNode.node, this.graph.getInputIndexBySortedIndex(this.graph.getSortedIndexById(this.store.hoveredNode.node.id)), this.store.hoveredNode.position, this.currentEvent);\r\n        }\r\n        if (isMouseout)\r\n            (_e = (_d = this.config.events).onNodeMouseOut) === null || _e === void 0 ? void 0 : _e.call(_d, this.currentEvent);\r\n    }\r\n}\n\nexport { Graph };\n//# sourceMappingURL=index.js.map\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.GLBench = factory());\n}(this, (function () { 'use strict';\n\n  var UISVG = \"<div class=\\\"gl-box\\\">\\n  <svg viewBox=\\\"0 0 55 60\\\">\\n    <text x=\\\"27\\\" y=\\\"56\\\" class=\\\"gl-fps\\\">00 FPS</text>\\n    <text x=\\\"28\\\" y=\\\"8\\\" class=\\\"gl-mem\\\"></text>\\n    <rect x=\\\"0\\\" y=\\\"14\\\" rx=\\\"4\\\" ry=\\\"4\\\" width=\\\"55\\\" height=\\\"32\\\"></rect>\\n    <polyline class=\\\"gl-chart\\\"></polyline>\\n  </svg>\\n  <svg viewBox=\\\"0 0 14 60\\\" class=\\\"gl-cpu-svg\\\">\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"opacity\\\"/>\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"gl-cpu\\\" stroke-dasharray=\\\"0 27\\\"/>\\n    <path d=\\\"M5.35 43c-.464 0-.812.377-.812.812v1.16c-.783.1972-1.421.812-1.595 1.624h-1.16c-.435 0-.812.348-.812.812s.348.812.812.812h1.102v1.653H1.812c-.464 0-.812.377-.812.812 0 .464.377.812.812.812h1.131c.1943.783.812 1.392 1.595 1.595v1.131c0 .464.377.812.812.812.464 0 .812-.377.812-.812V53.15h1.653v1.073c0 .464.377.812.812.812.464 0 .812-.377.812-.812v-1.131c.783-.1943 1.392-.812 1.595-1.595h1.131c.464 0 .812-.377.812-.812 0-.464-.377-.812-.812-.812h-1.073V48.22h1.102c.435 0 .812-.348.812-.812s-.348-.812-.812-.812h-1.16c-.1885-.783-.812-1.421-1.595-1.624v-1.131c0-.464-.377-.812-.812-.812-.464 0-.812.377-.812.812v1.073H6.162v-1.073c0-.464-.377-.812-.812-.812zm.58 3.48h2.088c.754 0 1.363.609 1.363 1.363v2.088c0 .754-.609 1.363-1.363 1.363H5.93c-.754 0-1.363-.609-1.363-1.363v-2.088c0-.754.609-1.363 1.363-1.363z\\\"/>\\n  </svg>\\n  <svg viewBox=\\\"0 0 14 60\\\" class=\\\"gl-gpu-svg\\\">\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"opacity\\\"/>\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"gl-gpu\\\" stroke-dasharray=\\\"0 27\\\"/>\\n    <path d=\\\"M1.94775 43.3772a.736.736 0 10-.00416 1.472c.58535.00231.56465.1288.6348.3197.07015.18975.04933.43585.04933.43585l-.00653.05405v8.671a.736.736 0 101.472 0v-1.4145c.253.09522.52785.1495.81765.1495h5.267c1.2535 0 2.254-.9752 2.254-2.185v-3.105c0-1.2075-1.00625-2.185-2.254-2.185h-5.267c-.28865 0-.5635.05405-.8165.1495.01806-.16445.04209-.598-.1357-1.0787-.22425-.6072-.9499-1.2765-2.0125-1.2765zm2.9095 3.6455c.42435 0 .7659.36225.7659.8119v2.9785c0 .44965-.34155.8119-.7659.8119s-.7659-.36225-.7659-.8119v-2.9785c0-.44965.34155-.8119.7659-.8119zm4.117 0a2.3 2.3 0 012.3 2.3 2.3 2.3 0 01-2.3 2.3 2.3 2.3 0 01-2.3-2.3 2.3 2.3 0 012.3-2.3z\\\"/>\\n  </svg>\\n</div>\";\n\n  var UICSS = \"#gl-bench {\\n  position:absolute;\\n  left:0;\\n  top:0;\\n  z-index:1000;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  user-select: none;\\n}\\n\\n#gl-bench div {\\n  position: relative;\\n  display: block;\\n  margin: 4px;\\n  padding: 0 7px 0 10px;\\n  background: #6c6;\\n  border-radius: 15px;\\n  cursor: pointer;\\n  opacity: 0.9;\\n}\\n\\n#gl-bench svg {\\n  height: 60px;\\n  margin: 0 -1px;\\n}\\n\\n#gl-bench text {\\n  font-size: 12px;\\n  font-family: Helvetica,Arial,sans-serif;\\n  font-weight: 700;\\n  dominant-baseline: middle;\\n  text-anchor: middle;\\n}\\n\\n#gl-bench .gl-mem {\\n  font-size: 9px;\\n}\\n\\n#gl-bench line {\\n  stroke-width: 5;\\n  stroke: #112211;\\n  stroke-linecap: round;\\n}\\n\\n#gl-bench polyline {\\n  fill: none;\\n  stroke: #112211;\\n  stroke-linecap: round;\\n  stroke-linejoin: round;\\n  stroke-width: 3.5;\\n}\\n\\n#gl-bench rect {\\n  fill: #448844;\\n}\\n\\n#gl-bench .opacity {\\n  stroke: #448844;\\n}\\n\";\n\n  class GLBench {\n\n    /** GLBench constructor\n     * @param { WebGLRenderingContext | WebGL2RenderingContext } gl context\n     * @param { Object | undefined } settings additional settings\n     */\n    constructor(gl, settings = {}) {\n      this.css = UICSS;\n      this.svg = UISVG;\n      this.paramLogger = () => {};\n      this.chartLogger = () => {};\n      this.chartLen = 20;\n      this.chartHz = 20;\n\n      this.names = [];\n      this.cpuAccums = [];\n      this.gpuAccums = [];  \n      this.activeAccums = [];\n      this.chart = new Array(this.chartLen);\n      this.now = () => (performance && performance.now) ? performance.now() : Date.now();\n      this.updateUI = () => {\n        [].forEach.call(this.nodes['gl-gpu-svg'], node => {\n          node.style.display = this.trackGPU ? 'inline' : 'none';\n        });\n      };\n\n      Object.assign(this, settings);\n      this.detected = 0;\n      this.finished = [];\n      this.isFramebuffer = 0;\n      this.frameId = 0;\n\n      // 120hz device detection\n      let rafId, n = 0, t0;\n      let loop = (t) => {\n        if (++n < 20) {\n          rafId = requestAnimationFrame(loop);\n        } else {\n          this.detected = Math.ceil(1e3 * n / (t - t0) / 70);\n          cancelAnimationFrame(rafId);\n        }\n        if (!t0) t0 = t;\n      };\n      requestAnimationFrame(loop);\n\n      // attach gpu profilers\n      if (gl) {\n        const glFinish = async (t, activeAccums) =>\n          Promise.resolve(setTimeout(() => {\n            gl.getError();\n            const dt = this.now() - t;\n            activeAccums.forEach((active, i) => {\n              if (active) this.gpuAccums[i] += dt;\n            });\n          }, 0));\n\n        const addProfiler = (fn, self, target) => function() {\n          const t = self.now();\n          fn.apply(target, arguments);\n          if (self.trackGPU) self.finished.push(glFinish(t, self.activeAccums.slice(0)));\n        };\n\n        ['drawArrays', 'drawElements', 'drawArraysInstanced',\n          'drawBuffers', 'drawElementsInstanced', 'drawRangeElements']\n          .forEach(fn => { if (gl[fn]) gl[fn] = addProfiler(gl[fn], this, gl); });\n\n        gl.getExtension = ((fn, self) => function() {\n          let ext = fn.apply(gl, arguments);\n          if (ext) {\n            ['drawElementsInstancedANGLE', 'drawBuffersWEBGL']\n              .forEach(fn => { if (ext[fn]) ext[fn] = addProfiler(ext[fn], self, ext); });\n          }\n          return ext;\n        })(gl.getExtension, this);\n      }\n\n      // init ui and ui loggers\n      if (!this.withoutUI) {\n        if (!this.dom) this.dom = document.body;\n        let elm = document.createElement('div');\n        elm.id = 'gl-bench';\n        this.dom.appendChild(elm);\n        this.dom.insertAdjacentHTML('afterbegin', '<style id=\"gl-bench-style\">' + this.css + '</style>');\n        this.dom = elm;\n        this.dom.addEventListener('click', () => {\n          this.trackGPU = !this.trackGPU;\n          this.updateUI();\n        });\n\n        this.paramLogger = ((logger, dom, names) => {\n          const classes = ['gl-cpu', 'gl-gpu', 'gl-mem', 'gl-fps', 'gl-gpu-svg', 'gl-chart'];\n          const nodes = Object.assign({}, classes);\n          classes.forEach(c => nodes[c] = dom.getElementsByClassName(c));\n          this.nodes = nodes;\n          return (i, cpu, gpu, mem, fps, totalTime, frameId) => {\n            nodes['gl-cpu'][i].style.strokeDasharray = (cpu * 0.27).toFixed(0) + ' 100';\n            nodes['gl-gpu'][i].style.strokeDasharray = (gpu * 0.27).toFixed(0) + ' 100';\n            nodes['gl-mem'][i].innerHTML = names[i] ? names[i] : (mem ? 'mem: ' + mem.toFixed(0) + 'mb' : '');\n            nodes['gl-fps'][i].innerHTML = fps.toFixed(0) + ' FPS';\n            logger(names[i], cpu, gpu, mem, fps, totalTime, frameId);\n          }\n        })(this.paramLogger, this.dom, this.names);\n\n        this.chartLogger = ((logger, dom) => {\n          let nodes = { 'gl-chart': dom.getElementsByClassName('gl-chart') };\n          return (i, chart, circularId) => {\n            let points = '';\n            let len = chart.length;\n            for (let i = 0; i < len; i++) {\n              let id = (circularId + i + 1) % len;\n              if (chart[id] != undefined) {\n                points = points + ' ' + (55 * i / (len - 1)).toFixed(1) + ','\n                  + (45 - chart[id] * 22 / 60 / this.detected).toFixed(1);\n              }\n            }\n            nodes['gl-chart'][i].setAttribute('points', points);\n            logger(this.names[i], chart, circularId);\n          }\n        })(this.chartLogger, this.dom);\n      }\n    }\n\n    /**\n     * Explicit UI add\n     * @param { string | undefined } name \n     */\n    addUI(name) {\n      if (this.names.indexOf(name) == -1) {\n        this.names.push(name);\n        if (this.dom) {\n          this.dom.insertAdjacentHTML('beforeend', this.svg);\n          this.updateUI();\n        }\n        this.cpuAccums.push(0);\n        this.gpuAccums.push(0);\n        this.activeAccums.push(false);\n      }\n    }\n\n    /**\n     * Increase frameID\n     * @param { number | undefined } now\n     */\n    nextFrame(now) {\n      this.frameId++;\n      const t = now ? now : this.now();\n\n      // params\n      if (this.frameId <= 1) {\n        this.paramFrame = this.frameId;\n        this.paramTime = t;\n      } else {\n        let duration = t - this.paramTime;\n        if (duration >= 1e3) {\n          const frameCount = this.frameId - this.paramFrame;\n          const fps = frameCount / duration * 1e3;\n          for (let i = 0; i < this.names.length; i++) {\n            const cpu = this.cpuAccums[i] / duration * 100,\n              gpu = this.gpuAccums[i] / duration * 100,\n              mem = (performance && performance.memory) ? performance.memory.usedJSHeapSize / (1 << 20) : 0;\n            this.paramLogger(i, cpu, gpu, mem, fps, duration, frameCount);\n            this.cpuAccums[i] = 0;\n            Promise.all(this.finished).then(() => {\n              this.gpuAccums[i] = 0;\n              this.finished = [];\n            });\n          }\n          this.paramFrame = this.frameId;\n          this.paramTime = t;\n        }\n      }\n\n      // chart\n      if (!this.detected || !this.chartFrame) {\n        this.chartFrame = this.frameId;\n        this.chartTime = t;\n        this.circularId = 0;\n      } else {\n        let timespan = t - this.chartTime;\n        let hz = this.chartHz * timespan / 1e3;\n        while (--hz > 0 && this.detected) {\n          const frameCount = this.frameId - this.chartFrame;\n          const fps = frameCount / timespan * 1e3;\n          this.chart[this.circularId % this.chartLen] = fps;\n          for (let i = 0; i < this.names.length; i++) {\n            this.chartLogger(i, this.chart, this.circularId);\n          }\n          this.circularId++;\n          this.chartFrame = this.frameId;\n          this.chartTime = t;\n        }\n      }\n    }\n\n    /**\n     * Begin named measurement\n     * @param { string | undefined } name\n     */\n    begin(name) {\n      this.updateAccums(name);\n    }\n\n    /**\n     * End named measure\n     * @param { string | undefined } name\n     */\n    end(name) {\n      this.updateAccums(name);\n    }\n\n    updateAccums(name) {\n      let nameId = this.names.indexOf(name);\n      if (nameId == -1) {\n        nameId = this.names.length;\n        this.addUI(name);\n      }\n\n      const t = this.now();\n      const dt = t - this.t0;\n      for (let i = 0; i < nameId + 1; i++) {\n        if (this.activeAccums[i]) {\n          this.cpuAccums[i] += dt;\n        }\n      }    this.activeAccums[nameId] = !this.activeAccums[nameId];\n      this.t0 = t;\n    }\n\n  }\n\n  return GLBench;\n\n})));\n","import {Selection, root} from \"./selection/index.js\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import selection_select from \"./select.js\";\nimport selection_selectAll from \"./selectAll.js\";\nimport selection_selectChild from \"./selectChild.js\";\nimport selection_selectChildren from \"./selectChildren.js\";\nimport selection_filter from \"./filter.js\";\nimport selection_data from \"./data.js\";\nimport selection_enter from \"./enter.js\";\nimport selection_exit from \"./exit.js\";\nimport selection_join from \"./join.js\";\nimport selection_merge from \"./merge.js\";\nimport selection_order from \"./order.js\";\nimport selection_sort from \"./sort.js\";\nimport selection_call from \"./call.js\";\nimport selection_nodes from \"./nodes.js\";\nimport selection_node from \"./node.js\";\nimport selection_size from \"./size.js\";\nimport selection_empty from \"./empty.js\";\nimport selection_each from \"./each.js\";\nimport selection_attr from \"./attr.js\";\nimport selection_style from \"./style.js\";\nimport selection_property from \"./property.js\";\nimport selection_classed from \"./classed.js\";\nimport selection_text from \"./text.js\";\nimport selection_html from \"./html.js\";\nimport selection_raise from \"./raise.js\";\nimport selection_lower from \"./lower.js\";\nimport selection_append from \"./append.js\";\nimport selection_insert from \"./insert.js\";\nimport selection_remove from \"./remove.js\";\nimport selection_clone from \"./clone.js\";\nimport selection_datum from \"./datum.js\";\nimport selection_on from \"./on.js\";\nimport selection_dispatch from \"./dispatch.js\";\nimport selection_iterator from \"./iterator.js\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nfunction selection_selection() {\n  return this;\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  selectChild: selection_selectChild,\n  selectChildren: selection_selectChildren,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  selection: selection_selection,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch,\n  [Symbol.iterator]: selection_iterator\n};\n\nexport default selection;\n","import {Selection} from \"./index.js\";\nimport selector from \"../selector.js\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","import {Selection} from \"./index.js\";\nimport array from \"../array.js\";\nimport selectorAll from \"../selectorAll.js\";\n\nfunction arrayAll(select) {\n  return function() {\n    return array(select.apply(this, arguments));\n  };\n}\n\nexport default function(select) {\n  if (typeof select === \"function\") select = arrayAll(select);\n  else select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","// Given something array like (or null), returns something that is strictly an\n// array. This is used to ensure that array-like objects passed to d3.selectAll\n// or selection.selectAll are converted into proper arrays when creating a\n// selection; we don’t ever want to create a selection backed by a live\n// HTMLCollection or NodeList. However, note that selection.selectAll will use a\n// static NodeList as a group, since it safely derived from querySelectorAll.\nexport default function array(x) {\n  return x == null ? [] : Array.isArray(x) ? x : Array.from(x);\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","import {childMatcher} from \"../matcher.js\";\n\nvar find = Array.prototype.find;\n\nfunction childFind(match) {\n  return function() {\n    return find.call(this.children, match);\n  };\n}\n\nfunction childFirst() {\n  return this.firstElementChild;\n}\n\nexport default function(match) {\n  return this.select(match == null ? childFirst\n      : childFind(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nexport function childMatcher(selector) {\n  return function(node) {\n    return node.matches(selector);\n  };\n}\n\n","import {childMatcher} from \"../matcher.js\";\n\nvar filter = Array.prototype.filter;\n\nfunction children() {\n  return Array.from(this.children);\n}\n\nfunction childrenFilter(match) {\n  return function() {\n    return filter.call(this.children, match);\n  };\n}\n\nexport default function(match) {\n  return this.selectAll(match == null ? children\n      : childrenFilter(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","import {Selection} from \"./index.js\";\nimport matcher from \"../matcher.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index.js\";\nimport {EnterNode} from \"./enter.js\";\nimport constant from \"../constant.js\";\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = new Map,\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + \"\";\n      if (nodeByKeyValue.has(keyValue)) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue.set(keyValue, node);\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = key.call(parent, data[i], i, data) + \"\";\n    if (node = nodeByKeyValue.get(keyValue)) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue.delete(keyValue);\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction datum(node) {\n  return node.__data__;\n}\n\nexport default function(value, key) {\n  if (!arguments.length) return Array.from(this, datum);\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = arraylike(value.call(parent, parent && parent.__data__, j, parents)),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\n// Given some data, this returns an array-like view of it: an object that\n// exposes a length property and allows numeric indexing. Note that unlike\n// selectAll, this isn’t worried about “live” collections because the resulting\n// array will only be used briefly while data is being bound. (It is possible to\n// cause the data to change while iterating by using a key function, but please\n// don’t; we’d rather avoid a gratuitous copy.)\nfunction arraylike(data) {\n  return typeof data === \"object\" && \"length\" in data\n    ? data // Array, TypedArray, NodeList, array-like\n    : Array.from(data); // Map, Set, iterable, string, or anything else\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(update) {\n  return new Array(update.length);\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  if (typeof onenter === \"function\") {\n    enter = onenter(enter);\n    if (enter) enter = enter.selection();\n  } else {\n    enter = enter.append(onenter + \"\");\n  }\n  if (onupdate != null) {\n    update = onupdate(update);\n    if (update) update = update.selection();\n  }\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(context) {\n  var selection = context.selection ? context.selection() : context;\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  let size = 0;\n  for (const node of this) ++size; // eslint-disable-line no-unused-vars\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","import namespace from \"../namespace.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","import namespaces from \"./namespaces.js\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import defaultView from \"../window.js\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator.js\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","import namespace from \"./namespace.js\";\nimport {xhtml} from \"./namespaces.js\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","import creator from \"../creator.js\";\nimport selector from \"../selector.js\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","function contextListener(listener) {\n  return function(event) {\n    listener.call(this, event, this.__data__);\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, options) {\n  return function() {\n    var on = this.__on, o, listener = contextListener(value);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n        this.addEventListener(o.type, o.listener = listener, o.options = options);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, options);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, options) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));\n  return this;\n}\n","import defaultView from \"../window.js\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","export default function*() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) yield node;\n    }\n  }\n}\n","import \"./selection/index.js\";\nexport {default as transition} from \"./transition/index.js\";\nexport {default as active} from \"./active.js\";\nexport {default as interrupt} from \"./interrupt.js\";\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt.js\";\nimport selection_transition from \"./transition.js\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt.js\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule.js\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {Timer} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(elapsed => {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Transition, newId} from \"../transition/index.js\";\nimport schedule from \"../transition/schedule.js\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      throw new Error(`transition ${id} not found`);\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr.js\";\nimport transition_attrTween from \"./attrTween.js\";\nimport transition_delay from \"./delay.js\";\nimport transition_duration from \"./duration.js\";\nimport transition_ease from \"./ease.js\";\nimport transition_easeVarying from \"./easeVarying.js\";\nimport transition_filter from \"./filter.js\";\nimport transition_merge from \"./merge.js\";\nimport transition_on from \"./on.js\";\nimport transition_remove from \"./remove.js\";\nimport transition_select from \"./select.js\";\nimport transition_selectAll from \"./selectAll.js\";\nimport transition_selection from \"./selection.js\";\nimport transition_style from \"./style.js\";\nimport transition_styleTween from \"./styleTween.js\";\nimport transition_text from \"./text.js\";\nimport transition_textTween from \"./textTween.js\";\nimport transition_transition from \"./transition.js\";\nimport transition_tween from \"./tween.js\";\nimport transition_end from \"./end.js\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  selectChild: selection_prototype.selectChild,\n  selectChildren: selection_prototype.selectChildren,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  textTween: transition_textTween,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  easeVarying: transition_easeVarying,\n  end: transition_end,\n  [Symbol.iterator]: selection_prototype[Symbol.iterator]\n};\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import number from \"../number.js\";\nimport {parseCss, parseSvg} from \"./parse.js\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","import decompose, {identity} from \"./decompose.js\";\n\nvar svgNode;\n\n/* eslint-disable no-undef */\nexport function parseCss(value) {\n  const m = new (typeof DOMMatrix === \"function\" ? DOMMatrix : WebKitCSSMatrix)(value + \"\");\n  return m.isIdentity ? identity : decompose(m.a, m.b, m.c, m.d, m.e, m.f);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {get, init} from \"./schedule.js\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule.js\";\n\nfunction easeVarying(id, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (typeof v !== \"function\") throw new Error;\n    set(this, id).ease = v;\n  };\n}\n\nexport default function(value) {\n  if (typeof value !== \"function\") throw new Error;\n  return this.each(easeVarying(this._id, value));\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index.js\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {get, set, init} from \"./schedule.js\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule.js\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {tweenValue} from \"./tween.js\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","function textInterpolate(i) {\n  return function(t) {\n    this.textContent = i.call(this, t);\n  };\n}\n\nfunction textTween(value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(value) {\n  var key = \"text\";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, textTween(value));\n}\n","import {Transition, newId} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {set} from \"./schedule.js\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n\n    // The selection was empty, resolve end immediately\n    if (size === 0) resolve();\n  });\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.createREGL = factory());\n}(this, (function () { 'use strict';\n\nvar isTypedArray = function (x) {\n  return (\n    x instanceof Uint8Array ||\n    x instanceof Uint16Array ||\n    x instanceof Uint32Array ||\n    x instanceof Int8Array ||\n    x instanceof Int16Array ||\n    x instanceof Int32Array ||\n    x instanceof Float32Array ||\n    x instanceof Float64Array ||\n    x instanceof Uint8ClampedArray\n  )\n}\n\nvar extend = function (base, opts) {\n  var keys = Object.keys(opts)\n  for (var i = 0; i < keys.length; ++i) {\n    base[keys[i]] = opts[keys[i]]\n  }\n  return base\n}\n\n// Error checking and parameter validation.\n//\n// Statements for the form `check.someProcedure(...)` get removed by\n// a browserify transform for optimized/minified bundles.\n//\n/* globals atob */\nvar endl = '\\n'\n\n// only used for extracting shader names.  if atob not present, then errors\n// will be slightly crappier\nfunction decodeB64 (str) {\n  if (typeof atob !== 'undefined') {\n    return atob(str)\n  }\n  return 'base64:' + str\n}\n\nfunction raise (message) {\n  var error = new Error('(regl) ' + message)\n  console.error(error)\n  throw error\n}\n\nfunction check (pred, message) {\n  if (!pred) {\n    raise(message)\n  }\n}\n\nfunction encolon (message) {\n  if (message) {\n    return ': ' + message\n  }\n  return ''\n}\n\nfunction checkParameter (param, possibilities, message) {\n  if (!(param in possibilities)) {\n    raise('unknown parameter (' + param + ')' + encolon(message) +\n          '. possible values: ' + Object.keys(possibilities).join())\n  }\n}\n\nfunction checkIsTypedArray (data, message) {\n  if (!isTypedArray(data)) {\n    raise(\n      'invalid parameter type' + encolon(message) +\n      '. must be a typed array')\n  }\n}\n\nfunction standardTypeEh (value, type) {\n  switch (type) {\n    case 'number': return typeof value === 'number'\n    case 'object': return typeof value === 'object'\n    case 'string': return typeof value === 'string'\n    case 'boolean': return typeof value === 'boolean'\n    case 'function': return typeof value === 'function'\n    case 'undefined': return typeof value === 'undefined'\n    case 'symbol': return typeof value === 'symbol'\n  }\n}\n\nfunction checkTypeOf (value, type, message) {\n  if (!standardTypeEh(value, type)) {\n    raise(\n      'invalid parameter type' + encolon(message) +\n      '. expected ' + type + ', got ' + (typeof value))\n  }\n}\n\nfunction checkNonNegativeInt (value, message) {\n  if (!((value >= 0) &&\n        ((value | 0) === value))) {\n    raise('invalid parameter type, (' + value + ')' + encolon(message) +\n          '. must be a nonnegative integer')\n  }\n}\n\nfunction checkOneOf (value, list, message) {\n  if (list.indexOf(value) < 0) {\n    raise('invalid value' + encolon(message) + '. must be one of: ' + list)\n  }\n}\n\nvar constructorKeys = [\n  'gl',\n  'canvas',\n  'container',\n  'attributes',\n  'pixelRatio',\n  'extensions',\n  'optionalExtensions',\n  'profile',\n  'onDone'\n]\n\nfunction checkConstructor (obj) {\n  Object.keys(obj).forEach(function (key) {\n    if (constructorKeys.indexOf(key) < 0) {\n      raise('invalid regl constructor argument \"' + key + '\". must be one of ' + constructorKeys)\n    }\n  })\n}\n\nfunction leftPad (str, n) {\n  str = str + ''\n  while (str.length < n) {\n    str = ' ' + str\n  }\n  return str\n}\n\nfunction ShaderFile () {\n  this.name = 'unknown'\n  this.lines = []\n  this.index = {}\n  this.hasErrors = false\n}\n\nfunction ShaderLine (number, line) {\n  this.number = number\n  this.line = line\n  this.errors = []\n}\n\nfunction ShaderError (fileNumber, lineNumber, message) {\n  this.file = fileNumber\n  this.line = lineNumber\n  this.message = message\n}\n\nfunction guessCommand () {\n  var error = new Error()\n  var stack = (error.stack || error).toString()\n  var pat = /compileProcedure.*\\n\\s*at.*\\((.*)\\)/.exec(stack)\n  if (pat) {\n    return pat[1]\n  }\n  var pat2 = /compileProcedure.*\\n\\s*at\\s+(.*)(\\n|$)/.exec(stack)\n  if (pat2) {\n    return pat2[1]\n  }\n  return 'unknown'\n}\n\nfunction guessCallSite () {\n  var error = new Error()\n  var stack = (error.stack || error).toString()\n  var pat = /at REGLCommand.*\\n\\s+at.*\\((.*)\\)/.exec(stack)\n  if (pat) {\n    return pat[1]\n  }\n  var pat2 = /at REGLCommand.*\\n\\s+at\\s+(.*)\\n/.exec(stack)\n  if (pat2) {\n    return pat2[1]\n  }\n  return 'unknown'\n}\n\nfunction parseSource (source, command) {\n  var lines = source.split('\\n')\n  var lineNumber = 1\n  var fileNumber = 0\n  var files = {\n    unknown: new ShaderFile(),\n    0: new ShaderFile()\n  }\n  files.unknown.name = files[0].name = command || guessCommand()\n  files.unknown.lines.push(new ShaderLine(0, ''))\n  for (var i = 0; i < lines.length; ++i) {\n    var line = lines[i]\n    var parts = /^\\s*#\\s*(\\w+)\\s+(.+)\\s*$/.exec(line)\n    if (parts) {\n      switch (parts[1]) {\n        case 'line':\n          var lineNumberInfo = /(\\d+)(\\s+\\d+)?/.exec(parts[2])\n          if (lineNumberInfo) {\n            lineNumber = lineNumberInfo[1] | 0\n            if (lineNumberInfo[2]) {\n              fileNumber = lineNumberInfo[2] | 0\n              if (!(fileNumber in files)) {\n                files[fileNumber] = new ShaderFile()\n              }\n            }\n          }\n          break\n        case 'define':\n          var nameInfo = /SHADER_NAME(_B64)?\\s+(.*)$/.exec(parts[2])\n          if (nameInfo) {\n            files[fileNumber].name = (nameInfo[1]\n              ? decodeB64(nameInfo[2])\n              : nameInfo[2])\n          }\n          break\n      }\n    }\n    files[fileNumber].lines.push(new ShaderLine(lineNumber++, line))\n  }\n  Object.keys(files).forEach(function (fileNumber) {\n    var file = files[fileNumber]\n    file.lines.forEach(function (line) {\n      file.index[line.number] = line\n    })\n  })\n  return files\n}\n\nfunction parseErrorLog (errLog) {\n  var result = []\n  errLog.split('\\n').forEach(function (errMsg) {\n    if (errMsg.length < 5) {\n      return\n    }\n    var parts = /^ERROR:\\s+(\\d+):(\\d+):\\s*(.*)$/.exec(errMsg)\n    if (parts) {\n      result.push(new ShaderError(\n        parts[1] | 0,\n        parts[2] | 0,\n        parts[3].trim()))\n    } else if (errMsg.length > 0) {\n      result.push(new ShaderError('unknown', 0, errMsg))\n    }\n  })\n  return result\n}\n\nfunction annotateFiles (files, errors) {\n  errors.forEach(function (error) {\n    var file = files[error.file]\n    if (file) {\n      var line = file.index[error.line]\n      if (line) {\n        line.errors.push(error)\n        file.hasErrors = true\n        return\n      }\n    }\n    files.unknown.hasErrors = true\n    files.unknown.lines[0].errors.push(error)\n  })\n}\n\nfunction checkShaderError (gl, shader, source, type, command) {\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    var errLog = gl.getShaderInfoLog(shader)\n    var typeName = type === gl.FRAGMENT_SHADER ? 'fragment' : 'vertex'\n    checkCommandType(source, 'string', typeName + ' shader source must be a string', command)\n    var files = parseSource(source, command)\n    var errors = parseErrorLog(errLog)\n    annotateFiles(files, errors)\n\n    Object.keys(files).forEach(function (fileNumber) {\n      var file = files[fileNumber]\n      if (!file.hasErrors) {\n        return\n      }\n\n      var strings = ['']\n      var styles = ['']\n\n      function push (str, style) {\n        strings.push(str)\n        styles.push(style || '')\n      }\n\n      push('file number ' + fileNumber + ': ' + file.name + '\\n', 'color:red;text-decoration:underline;font-weight:bold')\n\n      file.lines.forEach(function (line) {\n        if (line.errors.length > 0) {\n          push(leftPad(line.number, 4) + '|  ', 'background-color:yellow; font-weight:bold')\n          push(line.line + endl, 'color:red; background-color:yellow; font-weight:bold')\n\n          // try to guess token\n          var offset = 0\n          line.errors.forEach(function (error) {\n            var message = error.message\n            var token = /^\\s*'(.*)'\\s*:\\s*(.*)$/.exec(message)\n            if (token) {\n              var tokenPat = token[1]\n              message = token[2]\n              switch (tokenPat) {\n                case 'assign':\n                  tokenPat = '='\n                  break\n              }\n              offset = Math.max(line.line.indexOf(tokenPat, offset), 0)\n            } else {\n              offset = 0\n            }\n\n            push(leftPad('| ', 6))\n            push(leftPad('^^^', offset + 3) + endl, 'font-weight:bold')\n            push(leftPad('| ', 6))\n            push(message + endl, 'font-weight:bold')\n          })\n          push(leftPad('| ', 6) + endl)\n        } else {\n          push(leftPad(line.number, 4) + '|  ')\n          push(line.line + endl, 'color:red')\n        }\n      })\n      if (typeof document !== 'undefined' && !window.chrome) {\n        styles[0] = strings.join('%c')\n        console.log.apply(console, styles)\n      } else {\n        console.log(strings.join(''))\n      }\n    })\n\n    check.raise('Error compiling ' + typeName + ' shader, ' + files[0].name)\n  }\n}\n\nfunction checkLinkError (gl, program, fragShader, vertShader, command) {\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    var errLog = gl.getProgramInfoLog(program)\n    var fragParse = parseSource(fragShader, command)\n    var vertParse = parseSource(vertShader, command)\n\n    var header = 'Error linking program with vertex shader, \"' +\n      vertParse[0].name + '\", and fragment shader \"' + fragParse[0].name + '\"'\n\n    if (typeof document !== 'undefined') {\n      console.log('%c' + header + endl + '%c' + errLog,\n        'color:red;text-decoration:underline;font-weight:bold',\n        'color:red')\n    } else {\n      console.log(header + endl + errLog)\n    }\n    check.raise(header)\n  }\n}\n\nfunction saveCommandRef (object) {\n  object._commandRef = guessCommand()\n}\n\nfunction saveDrawCommandInfo (opts, uniforms, attributes, stringStore) {\n  saveCommandRef(opts)\n\n  function id (str) {\n    if (str) {\n      return stringStore.id(str)\n    }\n    return 0\n  }\n  opts._fragId = id(opts.static.frag)\n  opts._vertId = id(opts.static.vert)\n\n  function addProps (dict, set) {\n    Object.keys(set).forEach(function (u) {\n      dict[stringStore.id(u)] = true\n    })\n  }\n\n  var uniformSet = opts._uniformSet = {}\n  addProps(uniformSet, uniforms.static)\n  addProps(uniformSet, uniforms.dynamic)\n\n  var attributeSet = opts._attributeSet = {}\n  addProps(attributeSet, attributes.static)\n  addProps(attributeSet, attributes.dynamic)\n\n  opts._hasCount = (\n    'count' in opts.static ||\n    'count' in opts.dynamic ||\n    'elements' in opts.static ||\n    'elements' in opts.dynamic)\n}\n\nfunction commandRaise (message, command) {\n  var callSite = guessCallSite()\n  raise(message +\n    ' in command ' + (command || guessCommand()) +\n    (callSite === 'unknown' ? '' : ' called from ' + callSite))\n}\n\nfunction checkCommand (pred, message, command) {\n  if (!pred) {\n    commandRaise(message, command || guessCommand())\n  }\n}\n\nfunction checkParameterCommand (param, possibilities, message, command) {\n  if (!(param in possibilities)) {\n    commandRaise(\n      'unknown parameter (' + param + ')' + encolon(message) +\n      '. possible values: ' + Object.keys(possibilities).join(),\n      command || guessCommand())\n  }\n}\n\nfunction checkCommandType (value, type, message, command) {\n  if (!standardTypeEh(value, type)) {\n    commandRaise(\n      'invalid parameter type' + encolon(message) +\n      '. expected ' + type + ', got ' + (typeof value),\n      command || guessCommand())\n  }\n}\n\nfunction checkOptional (block) {\n  block()\n}\n\nfunction checkFramebufferFormat (attachment, texFormats, rbFormats) {\n  if (attachment.texture) {\n    checkOneOf(\n      attachment.texture._texture.internalformat,\n      texFormats,\n      'unsupported texture format for attachment')\n  } else {\n    checkOneOf(\n      attachment.renderbuffer._renderbuffer.format,\n      rbFormats,\n      'unsupported renderbuffer format for attachment')\n  }\n}\n\nvar GL_CLAMP_TO_EDGE = 0x812F\n\nvar GL_NEAREST = 0x2600\nvar GL_NEAREST_MIPMAP_NEAREST = 0x2700\nvar GL_LINEAR_MIPMAP_NEAREST = 0x2701\nvar GL_NEAREST_MIPMAP_LINEAR = 0x2702\nvar GL_LINEAR_MIPMAP_LINEAR = 0x2703\n\nvar GL_BYTE = 5120\nvar GL_UNSIGNED_BYTE = 5121\nvar GL_SHORT = 5122\nvar GL_UNSIGNED_SHORT = 5123\nvar GL_INT = 5124\nvar GL_UNSIGNED_INT = 5125\nvar GL_FLOAT = 5126\n\nvar GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033\nvar GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034\nvar GL_UNSIGNED_SHORT_5_6_5 = 0x8363\nvar GL_UNSIGNED_INT_24_8_WEBGL = 0x84FA\n\nvar GL_HALF_FLOAT_OES = 0x8D61\n\nvar TYPE_SIZE = {}\n\nTYPE_SIZE[GL_BYTE] =\nTYPE_SIZE[GL_UNSIGNED_BYTE] = 1\n\nTYPE_SIZE[GL_SHORT] =\nTYPE_SIZE[GL_UNSIGNED_SHORT] =\nTYPE_SIZE[GL_HALF_FLOAT_OES] =\nTYPE_SIZE[GL_UNSIGNED_SHORT_5_6_5] =\nTYPE_SIZE[GL_UNSIGNED_SHORT_4_4_4_4] =\nTYPE_SIZE[GL_UNSIGNED_SHORT_5_5_5_1] = 2\n\nTYPE_SIZE[GL_INT] =\nTYPE_SIZE[GL_UNSIGNED_INT] =\nTYPE_SIZE[GL_FLOAT] =\nTYPE_SIZE[GL_UNSIGNED_INT_24_8_WEBGL] = 4\n\nfunction pixelSize (type, channels) {\n  if (type === GL_UNSIGNED_SHORT_5_5_5_1 ||\n      type === GL_UNSIGNED_SHORT_4_4_4_4 ||\n      type === GL_UNSIGNED_SHORT_5_6_5) {\n    return 2\n  } else if (type === GL_UNSIGNED_INT_24_8_WEBGL) {\n    return 4\n  } else {\n    return TYPE_SIZE[type] * channels\n  }\n}\n\nfunction isPow2 (v) {\n  return !(v & (v - 1)) && (!!v)\n}\n\nfunction checkTexture2D (info, mipData, limits) {\n  var i\n  var w = mipData.width\n  var h = mipData.height\n  var c = mipData.channels\n\n  // Check texture shape\n  check(w > 0 && w <= limits.maxTextureSize &&\n        h > 0 && h <= limits.maxTextureSize,\n  'invalid texture shape')\n\n  // check wrap mode\n  if (info.wrapS !== GL_CLAMP_TO_EDGE || info.wrapT !== GL_CLAMP_TO_EDGE) {\n    check(isPow2(w) && isPow2(h),\n      'incompatible wrap mode for texture, both width and height must be power of 2')\n  }\n\n  if (mipData.mipmask === 1) {\n    if (w !== 1 && h !== 1) {\n      check(\n        info.minFilter !== GL_NEAREST_MIPMAP_NEAREST &&\n        info.minFilter !== GL_NEAREST_MIPMAP_LINEAR &&\n        info.minFilter !== GL_LINEAR_MIPMAP_NEAREST &&\n        info.minFilter !== GL_LINEAR_MIPMAP_LINEAR,\n        'min filter requires mipmap')\n    }\n  } else {\n    // texture must be power of 2\n    check(isPow2(w) && isPow2(h),\n      'texture must be a square power of 2 to support mipmapping')\n    check(mipData.mipmask === (w << 1) - 1,\n      'missing or incomplete mipmap data')\n  }\n\n  if (mipData.type === GL_FLOAT) {\n    if (limits.extensions.indexOf('oes_texture_float_linear') < 0) {\n      check(info.minFilter === GL_NEAREST && info.magFilter === GL_NEAREST,\n        'filter not supported, must enable oes_texture_float_linear')\n    }\n    check(!info.genMipmaps,\n      'mipmap generation not supported with float textures')\n  }\n\n  // check image complete\n  var mipimages = mipData.images\n  for (i = 0; i < 16; ++i) {\n    if (mipimages[i]) {\n      var mw = w >> i\n      var mh = h >> i\n      check(mipData.mipmask & (1 << i), 'missing mipmap data')\n\n      var img = mipimages[i]\n\n      check(\n        img.width === mw &&\n        img.height === mh,\n        'invalid shape for mip images')\n\n      check(\n        img.format === mipData.format &&\n        img.internalformat === mipData.internalformat &&\n        img.type === mipData.type,\n        'incompatible type for mip image')\n\n      if (img.compressed) {\n        // TODO: check size for compressed images\n      } else if (img.data) {\n        // check(img.data.byteLength === mw * mh *\n        // Math.max(pixelSize(img.type, c), img.unpackAlignment),\n        var rowSize = Math.ceil(pixelSize(img.type, c) * mw / img.unpackAlignment) * img.unpackAlignment\n        check(img.data.byteLength === rowSize * mh,\n          'invalid data for image, buffer size is inconsistent with image format')\n      } else if (img.element) {\n        // TODO: check element can be loaded\n      } else if (img.copy) {\n        // TODO: check compatible format and type\n      }\n    } else if (!info.genMipmaps) {\n      check((mipData.mipmask & (1 << i)) === 0, 'extra mipmap data')\n    }\n  }\n\n  if (mipData.compressed) {\n    check(!info.genMipmaps,\n      'mipmap generation for compressed images not supported')\n  }\n}\n\nfunction checkTextureCube (texture, info, faces, limits) {\n  var w = texture.width\n  var h = texture.height\n  var c = texture.channels\n\n  // Check texture shape\n  check(\n    w > 0 && w <= limits.maxTextureSize && h > 0 && h <= limits.maxTextureSize,\n    'invalid texture shape')\n  check(\n    w === h,\n    'cube map must be square')\n  check(\n    info.wrapS === GL_CLAMP_TO_EDGE && info.wrapT === GL_CLAMP_TO_EDGE,\n    'wrap mode not supported by cube map')\n\n  for (var i = 0; i < faces.length; ++i) {\n    var face = faces[i]\n    check(\n      face.width === w && face.height === h,\n      'inconsistent cube map face shape')\n\n    if (info.genMipmaps) {\n      check(!face.compressed,\n        'can not generate mipmap for compressed textures')\n      check(face.mipmask === 1,\n        'can not specify mipmaps and generate mipmaps')\n    } else {\n      // TODO: check mip and filter mode\n    }\n\n    var mipmaps = face.images\n    for (var j = 0; j < 16; ++j) {\n      var img = mipmaps[j]\n      if (img) {\n        var mw = w >> j\n        var mh = h >> j\n        check(face.mipmask & (1 << j), 'missing mipmap data')\n        check(\n          img.width === mw &&\n          img.height === mh,\n          'invalid shape for mip images')\n        check(\n          img.format === texture.format &&\n          img.internalformat === texture.internalformat &&\n          img.type === texture.type,\n          'incompatible type for mip image')\n\n        if (img.compressed) {\n          // TODO: check size for compressed images\n        } else if (img.data) {\n          check(img.data.byteLength === mw * mh *\n            Math.max(pixelSize(img.type, c), img.unpackAlignment),\n          'invalid data for image, buffer size is inconsistent with image format')\n        } else if (img.element) {\n          // TODO: check element can be loaded\n        } else if (img.copy) {\n          // TODO: check compatible format and type\n        }\n      }\n    }\n  }\n}\n\nvar check$1 = extend(check, {\n  optional: checkOptional,\n  raise: raise,\n  commandRaise: commandRaise,\n  command: checkCommand,\n  parameter: checkParameter,\n  commandParameter: checkParameterCommand,\n  constructor: checkConstructor,\n  type: checkTypeOf,\n  commandType: checkCommandType,\n  isTypedArray: checkIsTypedArray,\n  nni: checkNonNegativeInt,\n  oneOf: checkOneOf,\n  shaderError: checkShaderError,\n  linkError: checkLinkError,\n  callSite: guessCallSite,\n  saveCommandRef: saveCommandRef,\n  saveDrawInfo: saveDrawCommandInfo,\n  framebufferFormat: checkFramebufferFormat,\n  guessCommand: guessCommand,\n  texture2D: checkTexture2D,\n  textureCube: checkTextureCube\n});\n\nvar VARIABLE_COUNTER = 0\n\nvar DYN_FUNC = 0\nvar DYN_CONSTANT = 5\nvar DYN_ARRAY = 6\n\nfunction DynamicVariable (type, data) {\n  this.id = (VARIABLE_COUNTER++)\n  this.type = type\n  this.data = data\n}\n\nfunction escapeStr (str) {\n  return str.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')\n}\n\nfunction splitParts (str) {\n  if (str.length === 0) {\n    return []\n  }\n\n  var firstChar = str.charAt(0)\n  var lastChar = str.charAt(str.length - 1)\n\n  if (str.length > 1 &&\n      firstChar === lastChar &&\n      (firstChar === '\"' || firstChar === \"'\")) {\n    return ['\"' + escapeStr(str.substr(1, str.length - 2)) + '\"']\n  }\n\n  var parts = /\\[(false|true|null|\\d+|'[^']*'|\"[^\"]*\")\\]/.exec(str)\n  if (parts) {\n    return (\n      splitParts(str.substr(0, parts.index))\n        .concat(splitParts(parts[1]))\n        .concat(splitParts(str.substr(parts.index + parts[0].length)))\n    )\n  }\n\n  var subparts = str.split('.')\n  if (subparts.length === 1) {\n    return ['\"' + escapeStr(str) + '\"']\n  }\n\n  var result = []\n  for (var i = 0; i < subparts.length; ++i) {\n    result = result.concat(splitParts(subparts[i]))\n  }\n  return result\n}\n\nfunction toAccessorString (str) {\n  return '[' + splitParts(str).join('][') + ']'\n}\n\nfunction defineDynamic (type, data) {\n  return new DynamicVariable(type, toAccessorString(data + ''))\n}\n\nfunction isDynamic (x) {\n  return (typeof x === 'function' && !x._reglType) || (x instanceof DynamicVariable)\n}\n\nfunction unbox (x, path) {\n  if (typeof x === 'function') {\n    return new DynamicVariable(DYN_FUNC, x)\n  } else if (typeof x === 'number' || typeof x === 'boolean') {\n    return new DynamicVariable(DYN_CONSTANT, x)\n  } else if (Array.isArray(x)) {\n    return new DynamicVariable(DYN_ARRAY, x.map(function (y, i) { return unbox(y, path + '[' + i + ']') }))\n  } else if (x instanceof DynamicVariable) {\n    return x\n  }\n  check$1(false, 'invalid option type in uniform ' + path)\n}\n\nvar dynamic = {\n  DynamicVariable: DynamicVariable,\n  define: defineDynamic,\n  isDynamic: isDynamic,\n  unbox: unbox,\n  accessor: toAccessorString\n};\n\n/* globals requestAnimationFrame, cancelAnimationFrame */\nvar raf = {\n  next: typeof requestAnimationFrame === 'function'\n    ? function (cb) { return requestAnimationFrame(cb) }\n    : function (cb) { return setTimeout(cb, 16) },\n  cancel: typeof cancelAnimationFrame === 'function'\n    ? function (raf) { return cancelAnimationFrame(raf) }\n    : clearTimeout\n};\n\n/* globals performance */\nvar clock = (typeof performance !== 'undefined' && performance.now)\n    ? function () { return performance.now() }\n    : function () { return +(new Date()) };\n\nfunction createStringStore () {\n  var stringIds = { '': 0 }\n  var stringValues = ['']\n  return {\n    id: function (str) {\n      var result = stringIds[str]\n      if (result) {\n        return result\n      }\n      result = stringIds[str] = stringValues.length\n      stringValues.push(str)\n      return result\n    },\n\n    str: function (id) {\n      return stringValues[id]\n    }\n  }\n}\n\n// Context and canvas creation helper functions\nfunction createCanvas (element, onDone, pixelRatio) {\n  var canvas = document.createElement('canvas')\n  extend(canvas.style, {\n    border: 0,\n    margin: 0,\n    padding: 0,\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%'\n  })\n  element.appendChild(canvas)\n\n  if (element === document.body) {\n    canvas.style.position = 'absolute'\n    extend(element.style, {\n      margin: 0,\n      padding: 0\n    })\n  }\n\n  function resize () {\n    var w = window.innerWidth\n    var h = window.innerHeight\n    if (element !== document.body) {\n      var bounds = canvas.getBoundingClientRect()\n      w = bounds.right - bounds.left\n      h = bounds.bottom - bounds.top\n    }\n    canvas.width = pixelRatio * w\n    canvas.height = pixelRatio * h\n  }\n\n  var resizeObserver\n  if (element !== document.body && typeof ResizeObserver === 'function') {\n    // ignore 'ResizeObserver' is not defined\n    // eslint-disable-next-line\n    resizeObserver = new ResizeObserver(function () {\n      // setTimeout to avoid flicker\n      setTimeout(resize)\n    })\n    resizeObserver.observe(element)\n  } else {\n    window.addEventListener('resize', resize, false)\n  }\n\n  function onDestroy () {\n    if (resizeObserver) {\n      resizeObserver.disconnect()\n    } else {\n      window.removeEventListener('resize', resize)\n    }\n    element.removeChild(canvas)\n  }\n\n  resize()\n\n  return {\n    canvas: canvas,\n    onDestroy: onDestroy\n  }\n}\n\nfunction createContext (canvas, contextAttributes) {\n  function get (name) {\n    try {\n      return canvas.getContext(name, contextAttributes)\n    } catch (e) {\n      return null\n    }\n  }\n  return (\n    get('webgl') ||\n    get('experimental-webgl') ||\n    get('webgl-experimental')\n  )\n}\n\nfunction isHTMLElement (obj) {\n  return (\n    typeof obj.nodeName === 'string' &&\n    typeof obj.appendChild === 'function' &&\n    typeof obj.getBoundingClientRect === 'function'\n  )\n}\n\nfunction isWebGLContext (obj) {\n  return (\n    typeof obj.drawArrays === 'function' ||\n    typeof obj.drawElements === 'function'\n  )\n}\n\nfunction parseExtensions (input) {\n  if (typeof input === 'string') {\n    return input.split()\n  }\n  check$1(Array.isArray(input), 'invalid extension array')\n  return input\n}\n\nfunction getElement (desc) {\n  if (typeof desc === 'string') {\n    check$1(typeof document !== 'undefined', 'not supported outside of DOM')\n    return document.querySelector(desc)\n  }\n  return desc\n}\n\nfunction parseArgs (args_) {\n  var args = args_ || {}\n  var element, container, canvas, gl\n  var contextAttributes = {}\n  var extensions = []\n  var optionalExtensions = []\n  var pixelRatio = (typeof window === 'undefined' ? 1 : window.devicePixelRatio)\n  var profile = false\n  var onDone = function (err) {\n    if (err) {\n      check$1.raise(err)\n    }\n  }\n  var onDestroy = function () {}\n  if (typeof args === 'string') {\n    check$1(\n      typeof document !== 'undefined',\n      'selector queries only supported in DOM enviroments')\n    element = document.querySelector(args)\n    check$1(element, 'invalid query string for element')\n  } else if (typeof args === 'object') {\n    if (isHTMLElement(args)) {\n      element = args\n    } else if (isWebGLContext(args)) {\n      gl = args\n      canvas = gl.canvas\n    } else {\n      check$1.constructor(args)\n      if ('gl' in args) {\n        gl = args.gl\n      } else if ('canvas' in args) {\n        canvas = getElement(args.canvas)\n      } else if ('container' in args) {\n        container = getElement(args.container)\n      }\n      if ('attributes' in args) {\n        contextAttributes = args.attributes\n        check$1.type(contextAttributes, 'object', 'invalid context attributes')\n      }\n      if ('extensions' in args) {\n        extensions = parseExtensions(args.extensions)\n      }\n      if ('optionalExtensions' in args) {\n        optionalExtensions = parseExtensions(args.optionalExtensions)\n      }\n      if ('onDone' in args) {\n        check$1.type(\n          args.onDone, 'function',\n          'invalid or missing onDone callback')\n        onDone = args.onDone\n      }\n      if ('profile' in args) {\n        profile = !!args.profile\n      }\n      if ('pixelRatio' in args) {\n        pixelRatio = +args.pixelRatio\n        check$1(pixelRatio > 0, 'invalid pixel ratio')\n      }\n    }\n  } else {\n    check$1.raise('invalid arguments to regl')\n  }\n\n  if (element) {\n    if (element.nodeName.toLowerCase() === 'canvas') {\n      canvas = element\n    } else {\n      container = element\n    }\n  }\n\n  if (!gl) {\n    if (!canvas) {\n      check$1(\n        typeof document !== 'undefined',\n        'must manually specify webgl context outside of DOM environments')\n      var result = createCanvas(container || document.body, onDone, pixelRatio)\n      if (!result) {\n        return null\n      }\n      canvas = result.canvas\n      onDestroy = result.onDestroy\n    }\n    // workaround for chromium bug, premultiplied alpha value is platform dependent\n    if (contextAttributes.premultipliedAlpha === undefined) contextAttributes.premultipliedAlpha = true\n    gl = createContext(canvas, contextAttributes)\n  }\n\n  if (!gl) {\n    onDestroy()\n    onDone('webgl not supported, try upgrading your browser or graphics drivers http://get.webgl.org')\n    return null\n  }\n\n  return {\n    gl: gl,\n    canvas: canvas,\n    container: container,\n    extensions: extensions,\n    optionalExtensions: optionalExtensions,\n    pixelRatio: pixelRatio,\n    profile: profile,\n    onDone: onDone,\n    onDestroy: onDestroy\n  }\n}\n\nfunction createExtensionCache (gl, config) {\n  var extensions = {}\n\n  function tryLoadExtension (name_) {\n    check$1.type(name_, 'string', 'extension name must be string')\n    var name = name_.toLowerCase()\n    var ext\n    try {\n      ext = extensions[name] = gl.getExtension(name)\n    } catch (e) {}\n    return !!ext\n  }\n\n  for (var i = 0; i < config.extensions.length; ++i) {\n    var name = config.extensions[i]\n    if (!tryLoadExtension(name)) {\n      config.onDestroy()\n      config.onDone('\"' + name + '\" extension is not supported by the current WebGL context, try upgrading your system or a different browser')\n      return null\n    }\n  }\n\n  config.optionalExtensions.forEach(tryLoadExtension)\n\n  return {\n    extensions: extensions,\n    restore: function () {\n      Object.keys(extensions).forEach(function (name) {\n        if (extensions[name] && !tryLoadExtension(name)) {\n          throw new Error('(regl): error restoring extension ' + name)\n        }\n      })\n    }\n  }\n}\n\nfunction loop (n, f) {\n  var result = Array(n)\n  for (var i = 0; i < n; ++i) {\n    result[i] = f(i)\n  }\n  return result\n}\n\nvar GL_BYTE$1 = 5120\nvar GL_UNSIGNED_BYTE$2 = 5121\nvar GL_SHORT$1 = 5122\nvar GL_UNSIGNED_SHORT$1 = 5123\nvar GL_INT$1 = 5124\nvar GL_UNSIGNED_INT$1 = 5125\nvar GL_FLOAT$2 = 5126\n\nfunction nextPow16 (v) {\n  for (var i = 16; i <= (1 << 28); i *= 16) {\n    if (v <= i) {\n      return i\n    }\n  }\n  return 0\n}\n\nfunction log2 (v) {\n  var r, shift\n  r = (v > 0xFFFF) << 4\n  v >>>= r\n  shift = (v > 0xFF) << 3\n  v >>>= shift; r |= shift\n  shift = (v > 0xF) << 2\n  v >>>= shift; r |= shift\n  shift = (v > 0x3) << 1\n  v >>>= shift; r |= shift\n  return r | (v >> 1)\n}\n\nfunction createPool () {\n  var bufferPool = loop(8, function () {\n    return []\n  })\n\n  function alloc (n) {\n    var sz = nextPow16(n)\n    var bin = bufferPool[log2(sz) >> 2]\n    if (bin.length > 0) {\n      return bin.pop()\n    }\n    return new ArrayBuffer(sz)\n  }\n\n  function free (buf) {\n    bufferPool[log2(buf.byteLength) >> 2].push(buf)\n  }\n\n  function allocType (type, n) {\n    var result = null\n    switch (type) {\n      case GL_BYTE$1:\n        result = new Int8Array(alloc(n), 0, n)\n        break\n      case GL_UNSIGNED_BYTE$2:\n        result = new Uint8Array(alloc(n), 0, n)\n        break\n      case GL_SHORT$1:\n        result = new Int16Array(alloc(2 * n), 0, n)\n        break\n      case GL_UNSIGNED_SHORT$1:\n        result = new Uint16Array(alloc(2 * n), 0, n)\n        break\n      case GL_INT$1:\n        result = new Int32Array(alloc(4 * n), 0, n)\n        break\n      case GL_UNSIGNED_INT$1:\n        result = new Uint32Array(alloc(4 * n), 0, n)\n        break\n      case GL_FLOAT$2:\n        result = new Float32Array(alloc(4 * n), 0, n)\n        break\n      default:\n        return null\n    }\n    if (result.length !== n) {\n      return result.subarray(0, n)\n    }\n    return result\n  }\n\n  function freeType (array) {\n    free(array.buffer)\n  }\n\n  return {\n    alloc: alloc,\n    free: free,\n    allocType: allocType,\n    freeType: freeType\n  }\n}\n\nvar pool = createPool()\n\n// zero pool for initial zero data\npool.zero = createPool()\n\nvar GL_SUBPIXEL_BITS = 0x0D50\nvar GL_RED_BITS = 0x0D52\nvar GL_GREEN_BITS = 0x0D53\nvar GL_BLUE_BITS = 0x0D54\nvar GL_ALPHA_BITS = 0x0D55\nvar GL_DEPTH_BITS = 0x0D56\nvar GL_STENCIL_BITS = 0x0D57\n\nvar GL_ALIASED_POINT_SIZE_RANGE = 0x846D\nvar GL_ALIASED_LINE_WIDTH_RANGE = 0x846E\n\nvar GL_MAX_TEXTURE_SIZE = 0x0D33\nvar GL_MAX_VIEWPORT_DIMS = 0x0D3A\nvar GL_MAX_VERTEX_ATTRIBS = 0x8869\nvar GL_MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB\nvar GL_MAX_VARYING_VECTORS = 0x8DFC\nvar GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D\nvar GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C\nvar GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872\nvar GL_MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD\nvar GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C\nvar GL_MAX_RENDERBUFFER_SIZE = 0x84E8\n\nvar GL_VENDOR = 0x1F00\nvar GL_RENDERER = 0x1F01\nvar GL_VERSION = 0x1F02\nvar GL_SHADING_LANGUAGE_VERSION = 0x8B8C\n\nvar GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF\n\nvar GL_MAX_COLOR_ATTACHMENTS_WEBGL = 0x8CDF\nvar GL_MAX_DRAW_BUFFERS_WEBGL = 0x8824\n\nvar GL_TEXTURE_2D = 0x0DE1\nvar GL_TEXTURE_CUBE_MAP = 0x8513\nvar GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515\nvar GL_TEXTURE0 = 0x84C0\nvar GL_RGBA = 0x1908\nvar GL_FLOAT$1 = 0x1406\nvar GL_UNSIGNED_BYTE$1 = 0x1401\nvar GL_FRAMEBUFFER = 0x8D40\nvar GL_FRAMEBUFFER_COMPLETE = 0x8CD5\nvar GL_COLOR_ATTACHMENT0 = 0x8CE0\nvar GL_COLOR_BUFFER_BIT$1 = 0x4000\n\nvar wrapLimits = function (gl, extensions) {\n  var maxAnisotropic = 1\n  if (extensions.ext_texture_filter_anisotropic) {\n    maxAnisotropic = gl.getParameter(GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n  }\n\n  var maxDrawbuffers = 1\n  var maxColorAttachments = 1\n  if (extensions.webgl_draw_buffers) {\n    maxDrawbuffers = gl.getParameter(GL_MAX_DRAW_BUFFERS_WEBGL)\n    maxColorAttachments = gl.getParameter(GL_MAX_COLOR_ATTACHMENTS_WEBGL)\n  }\n\n  // detect if reading float textures is available (Safari doesn't support)\n  var readFloat = !!extensions.oes_texture_float\n  if (readFloat) {\n    var readFloatTexture = gl.createTexture()\n    gl.bindTexture(GL_TEXTURE_2D, readFloatTexture)\n    gl.texImage2D(GL_TEXTURE_2D, 0, GL_RGBA, 1, 1, 0, GL_RGBA, GL_FLOAT$1, null)\n\n    var fbo = gl.createFramebuffer()\n    gl.bindFramebuffer(GL_FRAMEBUFFER, fbo)\n    gl.framebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, readFloatTexture, 0)\n    gl.bindTexture(GL_TEXTURE_2D, null)\n\n    if (gl.checkFramebufferStatus(GL_FRAMEBUFFER) !== GL_FRAMEBUFFER_COMPLETE) readFloat = false\n\n    else {\n      gl.viewport(0, 0, 1, 1)\n      gl.clearColor(1.0, 0.0, 0.0, 1.0)\n      gl.clear(GL_COLOR_BUFFER_BIT$1)\n      var pixels = pool.allocType(GL_FLOAT$1, 4)\n      gl.readPixels(0, 0, 1, 1, GL_RGBA, GL_FLOAT$1, pixels)\n\n      if (gl.getError()) readFloat = false\n      else {\n        gl.deleteFramebuffer(fbo)\n        gl.deleteTexture(readFloatTexture)\n\n        readFloat = pixels[0] === 1.0\n      }\n\n      pool.freeType(pixels)\n    }\n  }\n\n  // detect non power of two cube textures support (IE doesn't support)\n  var isIE = typeof navigator !== 'undefined' && (/MSIE/.test(navigator.userAgent) || /Trident\\//.test(navigator.appVersion) || /Edge/.test(navigator.userAgent))\n\n  var npotTextureCube = true\n\n  if (!isIE) {\n    var cubeTexture = gl.createTexture()\n    var data = pool.allocType(GL_UNSIGNED_BYTE$1, 36)\n    gl.activeTexture(GL_TEXTURE0)\n    gl.bindTexture(GL_TEXTURE_CUBE_MAP, cubeTexture)\n    gl.texImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X, 0, GL_RGBA, 3, 3, 0, GL_RGBA, GL_UNSIGNED_BYTE$1, data)\n    pool.freeType(data)\n    gl.bindTexture(GL_TEXTURE_CUBE_MAP, null)\n    gl.deleteTexture(cubeTexture)\n    npotTextureCube = !gl.getError()\n  }\n\n  return {\n    // drawing buffer bit depth\n    colorBits: [\n      gl.getParameter(GL_RED_BITS),\n      gl.getParameter(GL_GREEN_BITS),\n      gl.getParameter(GL_BLUE_BITS),\n      gl.getParameter(GL_ALPHA_BITS)\n    ],\n    depthBits: gl.getParameter(GL_DEPTH_BITS),\n    stencilBits: gl.getParameter(GL_STENCIL_BITS),\n    subpixelBits: gl.getParameter(GL_SUBPIXEL_BITS),\n\n    // supported extensions\n    extensions: Object.keys(extensions).filter(function (ext) {\n      return !!extensions[ext]\n    }),\n\n    // max aniso samples\n    maxAnisotropic: maxAnisotropic,\n\n    // max draw buffers\n    maxDrawbuffers: maxDrawbuffers,\n    maxColorAttachments: maxColorAttachments,\n\n    // point and line size ranges\n    pointSizeDims: gl.getParameter(GL_ALIASED_POINT_SIZE_RANGE),\n    lineWidthDims: gl.getParameter(GL_ALIASED_LINE_WIDTH_RANGE),\n    maxViewportDims: gl.getParameter(GL_MAX_VIEWPORT_DIMS),\n    maxCombinedTextureUnits: gl.getParameter(GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS),\n    maxCubeMapSize: gl.getParameter(GL_MAX_CUBE_MAP_TEXTURE_SIZE),\n    maxRenderbufferSize: gl.getParameter(GL_MAX_RENDERBUFFER_SIZE),\n    maxTextureUnits: gl.getParameter(GL_MAX_TEXTURE_IMAGE_UNITS),\n    maxTextureSize: gl.getParameter(GL_MAX_TEXTURE_SIZE),\n    maxAttributes: gl.getParameter(GL_MAX_VERTEX_ATTRIBS),\n    maxVertexUniforms: gl.getParameter(GL_MAX_VERTEX_UNIFORM_VECTORS),\n    maxVertexTextureUnits: gl.getParameter(GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS),\n    maxVaryingVectors: gl.getParameter(GL_MAX_VARYING_VECTORS),\n    maxFragmentUniforms: gl.getParameter(GL_MAX_FRAGMENT_UNIFORM_VECTORS),\n\n    // vendor info\n    glsl: gl.getParameter(GL_SHADING_LANGUAGE_VERSION),\n    renderer: gl.getParameter(GL_RENDERER),\n    vendor: gl.getParameter(GL_VENDOR),\n    version: gl.getParameter(GL_VERSION),\n\n    // quirks\n    readFloat: readFloat,\n    npotTextureCube: npotTextureCube\n  }\n}\n\nfunction isNDArrayLike (obj) {\n  return (\n    !!obj &&\n    typeof obj === 'object' &&\n    Array.isArray(obj.shape) &&\n    Array.isArray(obj.stride) &&\n    typeof obj.offset === 'number' &&\n    obj.shape.length === obj.stride.length &&\n    (Array.isArray(obj.data) ||\n      isTypedArray(obj.data)))\n}\n\nvar values = function (obj) {\n  return Object.keys(obj).map(function (key) { return obj[key] })\n}\n\nvar flattenUtils = {\n  shape: arrayShape$1,\n  flatten: flattenArray\n};\n\nfunction flatten1D (array, nx, out) {\n  for (var i = 0; i < nx; ++i) {\n    out[i] = array[i]\n  }\n}\n\nfunction flatten2D (array, nx, ny, out) {\n  var ptr = 0\n  for (var i = 0; i < nx; ++i) {\n    var row = array[i]\n    for (var j = 0; j < ny; ++j) {\n      out[ptr++] = row[j]\n    }\n  }\n}\n\nfunction flatten3D (array, nx, ny, nz, out, ptr_) {\n  var ptr = ptr_\n  for (var i = 0; i < nx; ++i) {\n    var row = array[i]\n    for (var j = 0; j < ny; ++j) {\n      var col = row[j]\n      for (var k = 0; k < nz; ++k) {\n        out[ptr++] = col[k]\n      }\n    }\n  }\n}\n\nfunction flattenRec (array, shape, level, out, ptr) {\n  var stride = 1\n  for (var i = level + 1; i < shape.length; ++i) {\n    stride *= shape[i]\n  }\n  var n = shape[level]\n  if (shape.length - level === 4) {\n    var nx = shape[level + 1]\n    var ny = shape[level + 2]\n    var nz = shape[level + 3]\n    for (i = 0; i < n; ++i) {\n      flatten3D(array[i], nx, ny, nz, out, ptr)\n      ptr += stride\n    }\n  } else {\n    for (i = 0; i < n; ++i) {\n      flattenRec(array[i], shape, level + 1, out, ptr)\n      ptr += stride\n    }\n  }\n}\n\nfunction flattenArray (array, shape, type, out_) {\n  var sz = 1\n  if (shape.length) {\n    for (var i = 0; i < shape.length; ++i) {\n      sz *= shape[i]\n    }\n  } else {\n    sz = 0\n  }\n  var out = out_ || pool.allocType(type, sz)\n  switch (shape.length) {\n    case 0:\n      break\n    case 1:\n      flatten1D(array, shape[0], out)\n      break\n    case 2:\n      flatten2D(array, shape[0], shape[1], out)\n      break\n    case 3:\n      flatten3D(array, shape[0], shape[1], shape[2], out, 0)\n      break\n    default:\n      flattenRec(array, shape, 0, out, 0)\n  }\n  return out\n}\n\nfunction arrayShape$1 (array_) {\n  var shape = []\n  for (var array = array_; array.length; array = array[0]) {\n    shape.push(array.length)\n  }\n  return shape\n}\n\nvar arrayTypes =  {\n\t\"[object Int8Array]\": 5120,\n\t\"[object Int16Array]\": 5122,\n\t\"[object Int32Array]\": 5124,\n\t\"[object Uint8Array]\": 5121,\n\t\"[object Uint8ClampedArray]\": 5121,\n\t\"[object Uint16Array]\": 5123,\n\t\"[object Uint32Array]\": 5125,\n\t\"[object Float32Array]\": 5126,\n\t\"[object Float64Array]\": 5121,\n\t\"[object ArrayBuffer]\": 5121\n};\n\nvar int8 = 5120;\nvar int16 = 5122;\nvar int32 = 5124;\nvar uint8 = 5121;\nvar uint16 = 5123;\nvar uint32 = 5125;\nvar float = 5126;\nvar float32 = 5126;\nvar glTypes = {\n\tint8: int8,\n\tint16: int16,\n\tint32: int32,\n\tuint8: uint8,\n\tuint16: uint16,\n\tuint32: uint32,\n\tfloat: float,\n\tfloat32: float32\n};\n\nvar dynamic$1 = 35048;\nvar stream = 35040;\nvar usageTypes = {\n\tdynamic: dynamic$1,\n\tstream: stream,\n\t\"static\": 35044\n};\n\nvar arrayFlatten = flattenUtils.flatten\nvar arrayShape = flattenUtils.shape\n\nvar GL_STATIC_DRAW = 0x88E4\nvar GL_STREAM_DRAW = 0x88E0\n\nvar GL_UNSIGNED_BYTE$3 = 5121\nvar GL_FLOAT$3 = 5126\n\nvar DTYPES_SIZES = []\nDTYPES_SIZES[5120] = 1 // int8\nDTYPES_SIZES[5122] = 2 // int16\nDTYPES_SIZES[5124] = 4 // int32\nDTYPES_SIZES[5121] = 1 // uint8\nDTYPES_SIZES[5123] = 2 // uint16\nDTYPES_SIZES[5125] = 4 // uint32\nDTYPES_SIZES[5126] = 4 // float32\n\nfunction typedArrayCode (data) {\n  return arrayTypes[Object.prototype.toString.call(data)] | 0\n}\n\nfunction copyArray (out, inp) {\n  for (var i = 0; i < inp.length; ++i) {\n    out[i] = inp[i]\n  }\n}\n\nfunction transpose (\n  result, data, shapeX, shapeY, strideX, strideY, offset) {\n  var ptr = 0\n  for (var i = 0; i < shapeX; ++i) {\n    for (var j = 0; j < shapeY; ++j) {\n      result[ptr++] = data[strideX * i + strideY * j + offset]\n    }\n  }\n}\n\nfunction wrapBufferState (gl, stats, config, destroyBuffer) {\n  var bufferCount = 0\n  var bufferSet = {}\n\n  function REGLBuffer (type) {\n    this.id = bufferCount++\n    this.buffer = gl.createBuffer()\n    this.type = type\n    this.usage = GL_STATIC_DRAW\n    this.byteLength = 0\n    this.dimension = 1\n    this.dtype = GL_UNSIGNED_BYTE$3\n\n    this.persistentData = null\n\n    if (config.profile) {\n      this.stats = { size: 0 }\n    }\n  }\n\n  REGLBuffer.prototype.bind = function () {\n    gl.bindBuffer(this.type, this.buffer)\n  }\n\n  REGLBuffer.prototype.destroy = function () {\n    destroy(this)\n  }\n\n  var streamPool = []\n\n  function createStream (type, data) {\n    var buffer = streamPool.pop()\n    if (!buffer) {\n      buffer = new REGLBuffer(type)\n    }\n    buffer.bind()\n    initBufferFromData(buffer, data, GL_STREAM_DRAW, 0, 1, false)\n    return buffer\n  }\n\n  function destroyStream (stream$$1) {\n    streamPool.push(stream$$1)\n  }\n\n  function initBufferFromTypedArray (buffer, data, usage) {\n    buffer.byteLength = data.byteLength\n    gl.bufferData(buffer.type, data, usage)\n  }\n\n  function initBufferFromData (buffer, data, usage, dtype, dimension, persist) {\n    var shape\n    buffer.usage = usage\n    if (Array.isArray(data)) {\n      buffer.dtype = dtype || GL_FLOAT$3\n      if (data.length > 0) {\n        var flatData\n        if (Array.isArray(data[0])) {\n          shape = arrayShape(data)\n          var dim = 1\n          for (var i = 1; i < shape.length; ++i) {\n            dim *= shape[i]\n          }\n          buffer.dimension = dim\n          flatData = arrayFlatten(data, shape, buffer.dtype)\n          initBufferFromTypedArray(buffer, flatData, usage)\n          if (persist) {\n            buffer.persistentData = flatData\n          } else {\n            pool.freeType(flatData)\n          }\n        } else if (typeof data[0] === 'number') {\n          buffer.dimension = dimension\n          var typedData = pool.allocType(buffer.dtype, data.length)\n          copyArray(typedData, data)\n          initBufferFromTypedArray(buffer, typedData, usage)\n          if (persist) {\n            buffer.persistentData = typedData\n          } else {\n            pool.freeType(typedData)\n          }\n        } else if (isTypedArray(data[0])) {\n          buffer.dimension = data[0].length\n          buffer.dtype = dtype || typedArrayCode(data[0]) || GL_FLOAT$3\n          flatData = arrayFlatten(\n            data,\n            [data.length, data[0].length],\n            buffer.dtype)\n          initBufferFromTypedArray(buffer, flatData, usage)\n          if (persist) {\n            buffer.persistentData = flatData\n          } else {\n            pool.freeType(flatData)\n          }\n        } else {\n          check$1.raise('invalid buffer data')\n        }\n      }\n    } else if (isTypedArray(data)) {\n      buffer.dtype = dtype || typedArrayCode(data)\n      buffer.dimension = dimension\n      initBufferFromTypedArray(buffer, data, usage)\n      if (persist) {\n        buffer.persistentData = new Uint8Array(new Uint8Array(data.buffer))\n      }\n    } else if (isNDArrayLike(data)) {\n      shape = data.shape\n      var stride = data.stride\n      var offset = data.offset\n\n      var shapeX = 0\n      var shapeY = 0\n      var strideX = 0\n      var strideY = 0\n      if (shape.length === 1) {\n        shapeX = shape[0]\n        shapeY = 1\n        strideX = stride[0]\n        strideY = 0\n      } else if (shape.length === 2) {\n        shapeX = shape[0]\n        shapeY = shape[1]\n        strideX = stride[0]\n        strideY = stride[1]\n      } else {\n        check$1.raise('invalid shape')\n      }\n\n      buffer.dtype = dtype || typedArrayCode(data.data) || GL_FLOAT$3\n      buffer.dimension = shapeY\n\n      var transposeData = pool.allocType(buffer.dtype, shapeX * shapeY)\n      transpose(transposeData,\n        data.data,\n        shapeX, shapeY,\n        strideX, strideY,\n        offset)\n      initBufferFromTypedArray(buffer, transposeData, usage)\n      if (persist) {\n        buffer.persistentData = transposeData\n      } else {\n        pool.freeType(transposeData)\n      }\n    } else if (data instanceof ArrayBuffer) {\n      buffer.dtype = GL_UNSIGNED_BYTE$3\n      buffer.dimension = dimension\n      initBufferFromTypedArray(buffer, data, usage)\n      if (persist) {\n        buffer.persistentData = new Uint8Array(new Uint8Array(data))\n      }\n    } else {\n      check$1.raise('invalid buffer data')\n    }\n  }\n\n  function destroy (buffer) {\n    stats.bufferCount--\n\n    // remove attribute link\n    destroyBuffer(buffer)\n\n    var handle = buffer.buffer\n    check$1(handle, 'buffer must not be deleted already')\n    gl.deleteBuffer(handle)\n    buffer.buffer = null\n    delete bufferSet[buffer.id]\n  }\n\n  function createBuffer (options, type, deferInit, persistent) {\n    stats.bufferCount++\n\n    var buffer = new REGLBuffer(type)\n    bufferSet[buffer.id] = buffer\n\n    function reglBuffer (options) {\n      var usage = GL_STATIC_DRAW\n      var data = null\n      var byteLength = 0\n      var dtype = 0\n      var dimension = 1\n      if (Array.isArray(options) ||\n          isTypedArray(options) ||\n          isNDArrayLike(options) ||\n          options instanceof ArrayBuffer) {\n        data = options\n      } else if (typeof options === 'number') {\n        byteLength = options | 0\n      } else if (options) {\n        check$1.type(\n          options, 'object',\n          'buffer arguments must be an object, a number or an array')\n\n        if ('data' in options) {\n          check$1(\n            data === null ||\n            Array.isArray(data) ||\n            isTypedArray(data) ||\n            isNDArrayLike(data),\n            'invalid data for buffer')\n          data = options.data\n        }\n\n        if ('usage' in options) {\n          check$1.parameter(options.usage, usageTypes, 'invalid buffer usage')\n          usage = usageTypes[options.usage]\n        }\n\n        if ('type' in options) {\n          check$1.parameter(options.type, glTypes, 'invalid buffer type')\n          dtype = glTypes[options.type]\n        }\n\n        if ('dimension' in options) {\n          check$1.type(options.dimension, 'number', 'invalid dimension')\n          dimension = options.dimension | 0\n        }\n\n        if ('length' in options) {\n          check$1.nni(byteLength, 'buffer length must be a nonnegative integer')\n          byteLength = options.length | 0\n        }\n      }\n\n      buffer.bind()\n      if (!data) {\n        // #475\n        if (byteLength) gl.bufferData(buffer.type, byteLength, usage)\n        buffer.dtype = dtype || GL_UNSIGNED_BYTE$3\n        buffer.usage = usage\n        buffer.dimension = dimension\n        buffer.byteLength = byteLength\n      } else {\n        initBufferFromData(buffer, data, usage, dtype, dimension, persistent)\n      }\n\n      if (config.profile) {\n        buffer.stats.size = buffer.byteLength * DTYPES_SIZES[buffer.dtype]\n      }\n\n      return reglBuffer\n    }\n\n    function setSubData (data, offset) {\n      check$1(offset + data.byteLength <= buffer.byteLength,\n        'invalid buffer subdata call, buffer is too small. ' + ' Can\\'t write data of size ' + data.byteLength + ' starting from offset ' + offset + ' to a buffer of size ' + buffer.byteLength)\n\n      gl.bufferSubData(buffer.type, offset, data)\n    }\n\n    function subdata (data, offset_) {\n      var offset = (offset_ || 0) | 0\n      var shape\n      buffer.bind()\n      if (isTypedArray(data) || data instanceof ArrayBuffer) {\n        setSubData(data, offset)\n      } else if (Array.isArray(data)) {\n        if (data.length > 0) {\n          if (typeof data[0] === 'number') {\n            var converted = pool.allocType(buffer.dtype, data.length)\n            copyArray(converted, data)\n            setSubData(converted, offset)\n            pool.freeType(converted)\n          } else if (Array.isArray(data[0]) || isTypedArray(data[0])) {\n            shape = arrayShape(data)\n            var flatData = arrayFlatten(data, shape, buffer.dtype)\n            setSubData(flatData, offset)\n            pool.freeType(flatData)\n          } else {\n            check$1.raise('invalid buffer data')\n          }\n        }\n      } else if (isNDArrayLike(data)) {\n        shape = data.shape\n        var stride = data.stride\n\n        var shapeX = 0\n        var shapeY = 0\n        var strideX = 0\n        var strideY = 0\n        if (shape.length === 1) {\n          shapeX = shape[0]\n          shapeY = 1\n          strideX = stride[0]\n          strideY = 0\n        } else if (shape.length === 2) {\n          shapeX = shape[0]\n          shapeY = shape[1]\n          strideX = stride[0]\n          strideY = stride[1]\n        } else {\n          check$1.raise('invalid shape')\n        }\n        var dtype = Array.isArray(data.data)\n          ? buffer.dtype\n          : typedArrayCode(data.data)\n\n        var transposeData = pool.allocType(dtype, shapeX * shapeY)\n        transpose(transposeData,\n          data.data,\n          shapeX, shapeY,\n          strideX, strideY,\n          data.offset)\n        setSubData(transposeData, offset)\n        pool.freeType(transposeData)\n      } else {\n        check$1.raise('invalid data for buffer subdata')\n      }\n      return reglBuffer\n    }\n\n    if (!deferInit) {\n      reglBuffer(options)\n    }\n\n    reglBuffer._reglType = 'buffer'\n    reglBuffer._buffer = buffer\n    reglBuffer.subdata = subdata\n    if (config.profile) {\n      reglBuffer.stats = buffer.stats\n    }\n    reglBuffer.destroy = function () { destroy(buffer) }\n\n    return reglBuffer\n  }\n\n  function restoreBuffers () {\n    values(bufferSet).forEach(function (buffer) {\n      buffer.buffer = gl.createBuffer()\n      gl.bindBuffer(buffer.type, buffer.buffer)\n      gl.bufferData(\n        buffer.type, buffer.persistentData || buffer.byteLength, buffer.usage)\n    })\n  }\n\n  if (config.profile) {\n    stats.getTotalBufferSize = function () {\n      var total = 0\n      // TODO: Right now, the streams are not part of the total count.\n      Object.keys(bufferSet).forEach(function (key) {\n        total += bufferSet[key].stats.size\n      })\n      return total\n    }\n  }\n\n  return {\n    create: createBuffer,\n\n    createStream: createStream,\n    destroyStream: destroyStream,\n\n    clear: function () {\n      values(bufferSet).forEach(destroy)\n      streamPool.forEach(destroy)\n    },\n\n    getBuffer: function (wrapper) {\n      if (wrapper && wrapper._buffer instanceof REGLBuffer) {\n        return wrapper._buffer\n      }\n      return null\n    },\n\n    restore: restoreBuffers,\n\n    _initBuffer: initBufferFromData\n  }\n}\n\nvar points = 0;\nvar point = 0;\nvar lines = 1;\nvar line = 1;\nvar triangles = 4;\nvar triangle = 4;\nvar primTypes = {\n\tpoints: points,\n\tpoint: point,\n\tlines: lines,\n\tline: line,\n\ttriangles: triangles,\n\ttriangle: triangle,\n\t\"line loop\": 2,\n\t\"line strip\": 3,\n\t\"triangle strip\": 5,\n\t\"triangle fan\": 6\n};\n\nvar GL_POINTS = 0\nvar GL_LINES = 1\nvar GL_TRIANGLES = 4\n\nvar GL_BYTE$2 = 5120\nvar GL_UNSIGNED_BYTE$4 = 5121\nvar GL_SHORT$2 = 5122\nvar GL_UNSIGNED_SHORT$2 = 5123\nvar GL_INT$2 = 5124\nvar GL_UNSIGNED_INT$2 = 5125\n\nvar GL_ELEMENT_ARRAY_BUFFER = 34963\n\nvar GL_STREAM_DRAW$1 = 0x88E0\nvar GL_STATIC_DRAW$1 = 0x88E4\n\nfunction wrapElementsState (gl, extensions, bufferState, stats) {\n  var elementSet = {}\n  var elementCount = 0\n\n  var elementTypes = {\n    'uint8': GL_UNSIGNED_BYTE$4,\n    'uint16': GL_UNSIGNED_SHORT$2\n  }\n\n  if (extensions.oes_element_index_uint) {\n    elementTypes.uint32 = GL_UNSIGNED_INT$2\n  }\n\n  function REGLElementBuffer (buffer) {\n    this.id = elementCount++\n    elementSet[this.id] = this\n    this.buffer = buffer\n    this.primType = GL_TRIANGLES\n    this.vertCount = 0\n    this.type = 0\n  }\n\n  REGLElementBuffer.prototype.bind = function () {\n    this.buffer.bind()\n  }\n\n  var bufferPool = []\n\n  function createElementStream (data) {\n    var result = bufferPool.pop()\n    if (!result) {\n      result = new REGLElementBuffer(bufferState.create(\n        null,\n        GL_ELEMENT_ARRAY_BUFFER,\n        true,\n        false)._buffer)\n    }\n    initElements(result, data, GL_STREAM_DRAW$1, -1, -1, 0, 0)\n    return result\n  }\n\n  function destroyElementStream (elements) {\n    bufferPool.push(elements)\n  }\n\n  function initElements (\n    elements,\n    data,\n    usage,\n    prim,\n    count,\n    byteLength,\n    type) {\n    elements.buffer.bind()\n    var dtype\n    if (data) {\n      var predictedType = type\n      if (!type && (\n        !isTypedArray(data) ||\n         (isNDArrayLike(data) && !isTypedArray(data.data)))) {\n        predictedType = extensions.oes_element_index_uint\n          ? GL_UNSIGNED_INT$2\n          : GL_UNSIGNED_SHORT$2\n      }\n      bufferState._initBuffer(\n        elements.buffer,\n        data,\n        usage,\n        predictedType,\n        3)\n    } else {\n      gl.bufferData(GL_ELEMENT_ARRAY_BUFFER, byteLength, usage)\n      elements.buffer.dtype = dtype || GL_UNSIGNED_BYTE$4\n      elements.buffer.usage = usage\n      elements.buffer.dimension = 3\n      elements.buffer.byteLength = byteLength\n    }\n\n    dtype = type\n    if (!type) {\n      switch (elements.buffer.dtype) {\n        case GL_UNSIGNED_BYTE$4:\n        case GL_BYTE$2:\n          dtype = GL_UNSIGNED_BYTE$4\n          break\n\n        case GL_UNSIGNED_SHORT$2:\n        case GL_SHORT$2:\n          dtype = GL_UNSIGNED_SHORT$2\n          break\n\n        case GL_UNSIGNED_INT$2:\n        case GL_INT$2:\n          dtype = GL_UNSIGNED_INT$2\n          break\n\n        default:\n          check$1.raise('unsupported type for element array')\n      }\n      elements.buffer.dtype = dtype\n    }\n    elements.type = dtype\n\n    // Check oes_element_index_uint extension\n    check$1(\n      dtype !== GL_UNSIGNED_INT$2 ||\n      !!extensions.oes_element_index_uint,\n      '32 bit element buffers not supported, enable oes_element_index_uint first')\n\n    // try to guess default primitive type and arguments\n    var vertCount = count\n    if (vertCount < 0) {\n      vertCount = elements.buffer.byteLength\n      if (dtype === GL_UNSIGNED_SHORT$2) {\n        vertCount >>= 1\n      } else if (dtype === GL_UNSIGNED_INT$2) {\n        vertCount >>= 2\n      }\n    }\n    elements.vertCount = vertCount\n\n    // try to guess primitive type from cell dimension\n    var primType = prim\n    if (prim < 0) {\n      primType = GL_TRIANGLES\n      var dimension = elements.buffer.dimension\n      if (dimension === 1) primType = GL_POINTS\n      if (dimension === 2) primType = GL_LINES\n      if (dimension === 3) primType = GL_TRIANGLES\n    }\n    elements.primType = primType\n  }\n\n  function destroyElements (elements) {\n    stats.elementsCount--\n\n    check$1(elements.buffer !== null, 'must not double destroy elements')\n    delete elementSet[elements.id]\n    elements.buffer.destroy()\n    elements.buffer = null\n  }\n\n  function createElements (options, persistent) {\n    var buffer = bufferState.create(null, GL_ELEMENT_ARRAY_BUFFER, true)\n    var elements = new REGLElementBuffer(buffer._buffer)\n    stats.elementsCount++\n\n    function reglElements (options) {\n      if (!options) {\n        buffer()\n        elements.primType = GL_TRIANGLES\n        elements.vertCount = 0\n        elements.type = GL_UNSIGNED_BYTE$4\n      } else if (typeof options === 'number') {\n        buffer(options)\n        elements.primType = GL_TRIANGLES\n        elements.vertCount = options | 0\n        elements.type = GL_UNSIGNED_BYTE$4\n      } else {\n        var data = null\n        var usage = GL_STATIC_DRAW$1\n        var primType = -1\n        var vertCount = -1\n        var byteLength = 0\n        var dtype = 0\n        if (Array.isArray(options) ||\n            isTypedArray(options) ||\n            isNDArrayLike(options)) {\n          data = options\n        } else {\n          check$1.type(options, 'object', 'invalid arguments for elements')\n          if ('data' in options) {\n            data = options.data\n            check$1(\n              Array.isArray(data) ||\n                isTypedArray(data) ||\n                isNDArrayLike(data),\n              'invalid data for element buffer')\n          }\n          if ('usage' in options) {\n            check$1.parameter(\n              options.usage,\n              usageTypes,\n              'invalid element buffer usage')\n            usage = usageTypes[options.usage]\n          }\n          if ('primitive' in options) {\n            check$1.parameter(\n              options.primitive,\n              primTypes,\n              'invalid element buffer primitive')\n            primType = primTypes[options.primitive]\n          }\n          if ('count' in options) {\n            check$1(\n              typeof options.count === 'number' && options.count >= 0,\n              'invalid vertex count for elements')\n            vertCount = options.count | 0\n          }\n          if ('type' in options) {\n            check$1.parameter(\n              options.type,\n              elementTypes,\n              'invalid buffer type')\n            dtype = elementTypes[options.type]\n          }\n          if ('length' in options) {\n            byteLength = options.length | 0\n          } else {\n            byteLength = vertCount\n            if (dtype === GL_UNSIGNED_SHORT$2 || dtype === GL_SHORT$2) {\n              byteLength *= 2\n            } else if (dtype === GL_UNSIGNED_INT$2 || dtype === GL_INT$2) {\n              byteLength *= 4\n            }\n          }\n        }\n        initElements(\n          elements,\n          data,\n          usage,\n          primType,\n          vertCount,\n          byteLength,\n          dtype)\n      }\n\n      return reglElements\n    }\n\n    reglElements(options)\n\n    reglElements._reglType = 'elements'\n    reglElements._elements = elements\n    reglElements.subdata = function (data, offset) {\n      buffer.subdata(data, offset)\n      return reglElements\n    }\n    reglElements.destroy = function () {\n      destroyElements(elements)\n    }\n\n    return reglElements\n  }\n\n  return {\n    create: createElements,\n    createStream: createElementStream,\n    destroyStream: destroyElementStream,\n    getElements: function (elements) {\n      if (typeof elements === 'function' &&\n          elements._elements instanceof REGLElementBuffer) {\n        return elements._elements\n      }\n      return null\n    },\n    clear: function () {\n      values(elementSet).forEach(destroyElements)\n    }\n  }\n}\n\nvar FLOAT = new Float32Array(1)\nvar INT = new Uint32Array(FLOAT.buffer)\n\nvar GL_UNSIGNED_SHORT$4 = 5123\n\nfunction convertToHalfFloat (array) {\n  var ushorts = pool.allocType(GL_UNSIGNED_SHORT$4, array.length)\n\n  for (var i = 0; i < array.length; ++i) {\n    if (isNaN(array[i])) {\n      ushorts[i] = 0xffff\n    } else if (array[i] === Infinity) {\n      ushorts[i] = 0x7c00\n    } else if (array[i] === -Infinity) {\n      ushorts[i] = 0xfc00\n    } else {\n      FLOAT[0] = array[i]\n      var x = INT[0]\n\n      var sgn = (x >>> 31) << 15\n      var exp = ((x << 1) >>> 24) - 127\n      var frac = (x >> 13) & ((1 << 10) - 1)\n\n      if (exp < -24) {\n        // round non-representable denormals to 0\n        ushorts[i] = sgn\n      } else if (exp < -14) {\n        // handle denormals\n        var s = -14 - exp\n        ushorts[i] = sgn + ((frac + (1 << 10)) >> s)\n      } else if (exp > 15) {\n        // round overflow to +/- Infinity\n        ushorts[i] = sgn + 0x7c00\n      } else {\n        // otherwise convert directly\n        ushorts[i] = sgn + ((exp + 15) << 10) + frac\n      }\n    }\n  }\n\n  return ushorts\n}\n\nfunction isArrayLike (s) {\n  return Array.isArray(s) || isTypedArray(s)\n}\n\nvar isPow2$1 = function (v) {\n  return !(v & (v - 1)) && (!!v)\n}\n\nvar GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3\n\nvar GL_TEXTURE_2D$1 = 0x0DE1\nvar GL_TEXTURE_CUBE_MAP$1 = 0x8513\nvar GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 = 0x8515\n\nvar GL_RGBA$1 = 0x1908\nvar GL_ALPHA = 0x1906\nvar GL_RGB = 0x1907\nvar GL_LUMINANCE = 0x1909\nvar GL_LUMINANCE_ALPHA = 0x190A\n\nvar GL_RGBA4 = 0x8056\nvar GL_RGB5_A1 = 0x8057\nvar GL_RGB565 = 0x8D62\n\nvar GL_UNSIGNED_SHORT_4_4_4_4$1 = 0x8033\nvar GL_UNSIGNED_SHORT_5_5_5_1$1 = 0x8034\nvar GL_UNSIGNED_SHORT_5_6_5$1 = 0x8363\nvar GL_UNSIGNED_INT_24_8_WEBGL$1 = 0x84FA\n\nvar GL_DEPTH_COMPONENT = 0x1902\nvar GL_DEPTH_STENCIL = 0x84F9\n\nvar GL_SRGB_EXT = 0x8C40\nvar GL_SRGB_ALPHA_EXT = 0x8C42\n\nvar GL_HALF_FLOAT_OES$1 = 0x8D61\n\nvar GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0\nvar GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1\nvar GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2\nvar GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3\n\nvar GL_COMPRESSED_RGB_ATC_WEBGL = 0x8C92\nvar GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL = 0x8C93\nvar GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL = 0x87EE\n\nvar GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8C00\nvar GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8C01\nvar GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8C02\nvar GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8C03\n\nvar GL_COMPRESSED_RGB_ETC1_WEBGL = 0x8D64\n\nvar GL_UNSIGNED_BYTE$5 = 0x1401\nvar GL_UNSIGNED_SHORT$3 = 0x1403\nvar GL_UNSIGNED_INT$3 = 0x1405\nvar GL_FLOAT$4 = 0x1406\n\nvar GL_TEXTURE_WRAP_S = 0x2802\nvar GL_TEXTURE_WRAP_T = 0x2803\n\nvar GL_REPEAT = 0x2901\nvar GL_CLAMP_TO_EDGE$1 = 0x812F\nvar GL_MIRRORED_REPEAT = 0x8370\n\nvar GL_TEXTURE_MAG_FILTER = 0x2800\nvar GL_TEXTURE_MIN_FILTER = 0x2801\n\nvar GL_NEAREST$1 = 0x2600\nvar GL_LINEAR = 0x2601\nvar GL_NEAREST_MIPMAP_NEAREST$1 = 0x2700\nvar GL_LINEAR_MIPMAP_NEAREST$1 = 0x2701\nvar GL_NEAREST_MIPMAP_LINEAR$1 = 0x2702\nvar GL_LINEAR_MIPMAP_LINEAR$1 = 0x2703\n\nvar GL_GENERATE_MIPMAP_HINT = 0x8192\nvar GL_DONT_CARE = 0x1100\nvar GL_FASTEST = 0x1101\nvar GL_NICEST = 0x1102\n\nvar GL_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE\n\nvar GL_UNPACK_ALIGNMENT = 0x0CF5\nvar GL_UNPACK_FLIP_Y_WEBGL = 0x9240\nvar GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241\nvar GL_UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243\n\nvar GL_BROWSER_DEFAULT_WEBGL = 0x9244\n\nvar GL_TEXTURE0$1 = 0x84C0\n\nvar MIPMAP_FILTERS = [\n  GL_NEAREST_MIPMAP_NEAREST$1,\n  GL_NEAREST_MIPMAP_LINEAR$1,\n  GL_LINEAR_MIPMAP_NEAREST$1,\n  GL_LINEAR_MIPMAP_LINEAR$1\n]\n\nvar CHANNELS_FORMAT = [\n  0,\n  GL_LUMINANCE,\n  GL_LUMINANCE_ALPHA,\n  GL_RGB,\n  GL_RGBA$1\n]\n\nvar FORMAT_CHANNELS = {}\nFORMAT_CHANNELS[GL_LUMINANCE] =\nFORMAT_CHANNELS[GL_ALPHA] =\nFORMAT_CHANNELS[GL_DEPTH_COMPONENT] = 1\nFORMAT_CHANNELS[GL_DEPTH_STENCIL] =\nFORMAT_CHANNELS[GL_LUMINANCE_ALPHA] = 2\nFORMAT_CHANNELS[GL_RGB] =\nFORMAT_CHANNELS[GL_SRGB_EXT] = 3\nFORMAT_CHANNELS[GL_RGBA$1] =\nFORMAT_CHANNELS[GL_SRGB_ALPHA_EXT] = 4\n\nfunction objectName (str) {\n  return '[object ' + str + ']'\n}\n\nvar CANVAS_CLASS = objectName('HTMLCanvasElement')\nvar OFFSCREENCANVAS_CLASS = objectName('OffscreenCanvas')\nvar CONTEXT2D_CLASS = objectName('CanvasRenderingContext2D')\nvar BITMAP_CLASS = objectName('ImageBitmap')\nvar IMAGE_CLASS = objectName('HTMLImageElement')\nvar VIDEO_CLASS = objectName('HTMLVideoElement')\n\nvar PIXEL_CLASSES = Object.keys(arrayTypes).concat([\n  CANVAS_CLASS,\n  OFFSCREENCANVAS_CLASS,\n  CONTEXT2D_CLASS,\n  BITMAP_CLASS,\n  IMAGE_CLASS,\n  VIDEO_CLASS\n])\n\n// for every texture type, store\n// the size in bytes.\nvar TYPE_SIZES = []\nTYPE_SIZES[GL_UNSIGNED_BYTE$5] = 1\nTYPE_SIZES[GL_FLOAT$4] = 4\nTYPE_SIZES[GL_HALF_FLOAT_OES$1] = 2\n\nTYPE_SIZES[GL_UNSIGNED_SHORT$3] = 2\nTYPE_SIZES[GL_UNSIGNED_INT$3] = 4\n\nvar FORMAT_SIZES_SPECIAL = []\nFORMAT_SIZES_SPECIAL[GL_RGBA4] = 2\nFORMAT_SIZES_SPECIAL[GL_RGB5_A1] = 2\nFORMAT_SIZES_SPECIAL[GL_RGB565] = 2\nFORMAT_SIZES_SPECIAL[GL_DEPTH_STENCIL] = 4\n\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_S3TC_DXT1_EXT] = 0.5\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT1_EXT] = 0.5\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT3_EXT] = 1\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT5_EXT] = 1\n\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_ATC_WEBGL] = 0.5\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL] = 1\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL] = 1\n\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG] = 0.5\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG] = 0.25\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG] = 0.5\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG] = 0.25\n\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_ETC1_WEBGL] = 0.5\n\nfunction isNumericArray (arr) {\n  return (\n    Array.isArray(arr) &&\n    (arr.length === 0 ||\n    typeof arr[0] === 'number'))\n}\n\nfunction isRectArray (arr) {\n  if (!Array.isArray(arr)) {\n    return false\n  }\n  var width = arr.length\n  if (width === 0 || !isArrayLike(arr[0])) {\n    return false\n  }\n  return true\n}\n\nfunction classString (x) {\n  return Object.prototype.toString.call(x)\n}\n\nfunction isCanvasElement (object) {\n  return classString(object) === CANVAS_CLASS\n}\n\nfunction isOffscreenCanvas (object) {\n  return classString(object) === OFFSCREENCANVAS_CLASS\n}\n\nfunction isContext2D (object) {\n  return classString(object) === CONTEXT2D_CLASS\n}\n\nfunction isBitmap (object) {\n  return classString(object) === BITMAP_CLASS\n}\n\nfunction isImageElement (object) {\n  return classString(object) === IMAGE_CLASS\n}\n\nfunction isVideoElement (object) {\n  return classString(object) === VIDEO_CLASS\n}\n\nfunction isPixelData (object) {\n  if (!object) {\n    return false\n  }\n  var className = classString(object)\n  if (PIXEL_CLASSES.indexOf(className) >= 0) {\n    return true\n  }\n  return (\n    isNumericArray(object) ||\n    isRectArray(object) ||\n    isNDArrayLike(object))\n}\n\nfunction typedArrayCode$1 (data) {\n  return arrayTypes[Object.prototype.toString.call(data)] | 0\n}\n\nfunction convertData (result, data) {\n  var n = data.length\n  switch (result.type) {\n    case GL_UNSIGNED_BYTE$5:\n    case GL_UNSIGNED_SHORT$3:\n    case GL_UNSIGNED_INT$3:\n    case GL_FLOAT$4:\n      var converted = pool.allocType(result.type, n)\n      converted.set(data)\n      result.data = converted\n      break\n\n    case GL_HALF_FLOAT_OES$1:\n      result.data = convertToHalfFloat(data)\n      break\n\n    default:\n      check$1.raise('unsupported texture type, must specify a typed array')\n  }\n}\n\nfunction preConvert (image, n) {\n  return pool.allocType(\n    image.type === GL_HALF_FLOAT_OES$1\n      ? GL_FLOAT$4\n      : image.type, n)\n}\n\nfunction postConvert (image, data) {\n  if (image.type === GL_HALF_FLOAT_OES$1) {\n    image.data = convertToHalfFloat(data)\n    pool.freeType(data)\n  } else {\n    image.data = data\n  }\n}\n\nfunction transposeData (image, array, strideX, strideY, strideC, offset) {\n  var w = image.width\n  var h = image.height\n  var c = image.channels\n  var n = w * h * c\n  var data = preConvert(image, n)\n\n  var p = 0\n  for (var i = 0; i < h; ++i) {\n    for (var j = 0; j < w; ++j) {\n      for (var k = 0; k < c; ++k) {\n        data[p++] = array[strideX * j + strideY * i + strideC * k + offset]\n      }\n    }\n  }\n\n  postConvert(image, data)\n}\n\nfunction getTextureSize (format, type, width, height, isMipmap, isCube) {\n  var s\n  if (typeof FORMAT_SIZES_SPECIAL[format] !== 'undefined') {\n    // we have a special array for dealing with weird color formats such as RGB5A1\n    s = FORMAT_SIZES_SPECIAL[format]\n  } else {\n    s = FORMAT_CHANNELS[format] * TYPE_SIZES[type]\n  }\n\n  if (isCube) {\n    s *= 6\n  }\n\n  if (isMipmap) {\n    // compute the total size of all the mipmaps.\n    var total = 0\n\n    var w = width\n    while (w >= 1) {\n      // we can only use mipmaps on a square image,\n      // so we can simply use the width and ignore the height:\n      total += s * w * w\n      w /= 2\n    }\n    return total\n  } else {\n    return s * width * height\n  }\n}\n\nfunction createTextureSet (\n  gl, extensions, limits, reglPoll, contextState, stats, config) {\n  // -------------------------------------------------------\n  // Initialize constants and parameter tables here\n  // -------------------------------------------------------\n  var mipmapHint = {\n    \"don't care\": GL_DONT_CARE,\n    'dont care': GL_DONT_CARE,\n    'nice': GL_NICEST,\n    'fast': GL_FASTEST\n  }\n\n  var wrapModes = {\n    'repeat': GL_REPEAT,\n    'clamp': GL_CLAMP_TO_EDGE$1,\n    'mirror': GL_MIRRORED_REPEAT\n  }\n\n  var magFilters = {\n    'nearest': GL_NEAREST$1,\n    'linear': GL_LINEAR\n  }\n\n  var minFilters = extend({\n    'mipmap': GL_LINEAR_MIPMAP_LINEAR$1,\n    'nearest mipmap nearest': GL_NEAREST_MIPMAP_NEAREST$1,\n    'linear mipmap nearest': GL_LINEAR_MIPMAP_NEAREST$1,\n    'nearest mipmap linear': GL_NEAREST_MIPMAP_LINEAR$1,\n    'linear mipmap linear': GL_LINEAR_MIPMAP_LINEAR$1\n  }, magFilters)\n\n  var colorSpace = {\n    'none': 0,\n    'browser': GL_BROWSER_DEFAULT_WEBGL\n  }\n\n  var textureTypes = {\n    'uint8': GL_UNSIGNED_BYTE$5,\n    'rgba4': GL_UNSIGNED_SHORT_4_4_4_4$1,\n    'rgb565': GL_UNSIGNED_SHORT_5_6_5$1,\n    'rgb5 a1': GL_UNSIGNED_SHORT_5_5_5_1$1\n  }\n\n  var textureFormats = {\n    'alpha': GL_ALPHA,\n    'luminance': GL_LUMINANCE,\n    'luminance alpha': GL_LUMINANCE_ALPHA,\n    'rgb': GL_RGB,\n    'rgba': GL_RGBA$1,\n    'rgba4': GL_RGBA4,\n    'rgb5 a1': GL_RGB5_A1,\n    'rgb565': GL_RGB565\n  }\n\n  var compressedTextureFormats = {}\n\n  if (extensions.ext_srgb) {\n    textureFormats.srgb = GL_SRGB_EXT\n    textureFormats.srgba = GL_SRGB_ALPHA_EXT\n  }\n\n  if (extensions.oes_texture_float) {\n    textureTypes.float32 = textureTypes.float = GL_FLOAT$4\n  }\n\n  if (extensions.oes_texture_half_float) {\n    textureTypes['float16'] = textureTypes['half float'] = GL_HALF_FLOAT_OES$1\n  }\n\n  if (extensions.webgl_depth_texture) {\n    extend(textureFormats, {\n      'depth': GL_DEPTH_COMPONENT,\n      'depth stencil': GL_DEPTH_STENCIL\n    })\n\n    extend(textureTypes, {\n      'uint16': GL_UNSIGNED_SHORT$3,\n      'uint32': GL_UNSIGNED_INT$3,\n      'depth stencil': GL_UNSIGNED_INT_24_8_WEBGL$1\n    })\n  }\n\n  if (extensions.webgl_compressed_texture_s3tc) {\n    extend(compressedTextureFormats, {\n      'rgb s3tc dxt1': GL_COMPRESSED_RGB_S3TC_DXT1_EXT,\n      'rgba s3tc dxt1': GL_COMPRESSED_RGBA_S3TC_DXT1_EXT,\n      'rgba s3tc dxt3': GL_COMPRESSED_RGBA_S3TC_DXT3_EXT,\n      'rgba s3tc dxt5': GL_COMPRESSED_RGBA_S3TC_DXT5_EXT\n    })\n  }\n\n  if (extensions.webgl_compressed_texture_atc) {\n    extend(compressedTextureFormats, {\n      'rgb atc': GL_COMPRESSED_RGB_ATC_WEBGL,\n      'rgba atc explicit alpha': GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL,\n      'rgba atc interpolated alpha': GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL\n    })\n  }\n\n  if (extensions.webgl_compressed_texture_pvrtc) {\n    extend(compressedTextureFormats, {\n      'rgb pvrtc 4bppv1': GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG,\n      'rgb pvrtc 2bppv1': GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG,\n      'rgba pvrtc 4bppv1': GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,\n      'rgba pvrtc 2bppv1': GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG\n    })\n  }\n\n  if (extensions.webgl_compressed_texture_etc1) {\n    compressedTextureFormats['rgb etc1'] = GL_COMPRESSED_RGB_ETC1_WEBGL\n  }\n\n  // Copy over all texture formats\n  var supportedCompressedFormats = Array.prototype.slice.call(\n    gl.getParameter(GL_COMPRESSED_TEXTURE_FORMATS))\n  Object.keys(compressedTextureFormats).forEach(function (name) {\n    var format = compressedTextureFormats[name]\n    if (supportedCompressedFormats.indexOf(format) >= 0) {\n      textureFormats[name] = format\n    }\n  })\n\n  var supportedFormats = Object.keys(textureFormats)\n  limits.textureFormats = supportedFormats\n\n  // associate with every format string its\n  // corresponding GL-value.\n  var textureFormatsInvert = []\n  Object.keys(textureFormats).forEach(function (key) {\n    var val = textureFormats[key]\n    textureFormatsInvert[val] = key\n  })\n\n  // associate with every type string its\n  // corresponding GL-value.\n  var textureTypesInvert = []\n  Object.keys(textureTypes).forEach(function (key) {\n    var val = textureTypes[key]\n    textureTypesInvert[val] = key\n  })\n\n  var magFiltersInvert = []\n  Object.keys(magFilters).forEach(function (key) {\n    var val = magFilters[key]\n    magFiltersInvert[val] = key\n  })\n\n  var minFiltersInvert = []\n  Object.keys(minFilters).forEach(function (key) {\n    var val = minFilters[key]\n    minFiltersInvert[val] = key\n  })\n\n  var wrapModesInvert = []\n  Object.keys(wrapModes).forEach(function (key) {\n    var val = wrapModes[key]\n    wrapModesInvert[val] = key\n  })\n\n  // colorFormats[] gives the format (channels) associated to an\n  // internalformat\n  var colorFormats = supportedFormats.reduce(function (color, key) {\n    var glenum = textureFormats[key]\n    if (glenum === GL_LUMINANCE ||\n        glenum === GL_ALPHA ||\n        glenum === GL_LUMINANCE ||\n        glenum === GL_LUMINANCE_ALPHA ||\n        glenum === GL_DEPTH_COMPONENT ||\n        glenum === GL_DEPTH_STENCIL ||\n        (extensions.ext_srgb &&\n                (glenum === GL_SRGB_EXT ||\n                 glenum === GL_SRGB_ALPHA_EXT))) {\n      color[glenum] = glenum\n    } else if (glenum === GL_RGB5_A1 || key.indexOf('rgba') >= 0) {\n      color[glenum] = GL_RGBA$1\n    } else {\n      color[glenum] = GL_RGB\n    }\n    return color\n  }, {})\n\n  function TexFlags () {\n    // format info\n    this.internalformat = GL_RGBA$1\n    this.format = GL_RGBA$1\n    this.type = GL_UNSIGNED_BYTE$5\n    this.compressed = false\n\n    // pixel storage\n    this.premultiplyAlpha = false\n    this.flipY = false\n    this.unpackAlignment = 1\n    this.colorSpace = GL_BROWSER_DEFAULT_WEBGL\n\n    // shape info\n    this.width = 0\n    this.height = 0\n    this.channels = 0\n  }\n\n  function copyFlags (result, other) {\n    result.internalformat = other.internalformat\n    result.format = other.format\n    result.type = other.type\n    result.compressed = other.compressed\n\n    result.premultiplyAlpha = other.premultiplyAlpha\n    result.flipY = other.flipY\n    result.unpackAlignment = other.unpackAlignment\n    result.colorSpace = other.colorSpace\n\n    result.width = other.width\n    result.height = other.height\n    result.channels = other.channels\n  }\n\n  function parseFlags (flags, options) {\n    if (typeof options !== 'object' || !options) {\n      return\n    }\n\n    if ('premultiplyAlpha' in options) {\n      check$1.type(options.premultiplyAlpha, 'boolean',\n        'invalid premultiplyAlpha')\n      flags.premultiplyAlpha = options.premultiplyAlpha\n    }\n\n    if ('flipY' in options) {\n      check$1.type(options.flipY, 'boolean',\n        'invalid texture flip')\n      flags.flipY = options.flipY\n    }\n\n    if ('alignment' in options) {\n      check$1.oneOf(options.alignment, [1, 2, 4, 8],\n        'invalid texture unpack alignment')\n      flags.unpackAlignment = options.alignment\n    }\n\n    if ('colorSpace' in options) {\n      check$1.parameter(options.colorSpace, colorSpace,\n        'invalid colorSpace')\n      flags.colorSpace = colorSpace[options.colorSpace]\n    }\n\n    if ('type' in options) {\n      var type = options.type\n      check$1(extensions.oes_texture_float ||\n        !(type === 'float' || type === 'float32'),\n      'you must enable the OES_texture_float extension in order to use floating point textures.')\n      check$1(extensions.oes_texture_half_float ||\n        !(type === 'half float' || type === 'float16'),\n      'you must enable the OES_texture_half_float extension in order to use 16-bit floating point textures.')\n      check$1(extensions.webgl_depth_texture ||\n        !(type === 'uint16' || type === 'uint32' || type === 'depth stencil'),\n      'you must enable the WEBGL_depth_texture extension in order to use depth/stencil textures.')\n      check$1.parameter(type, textureTypes,\n        'invalid texture type')\n      flags.type = textureTypes[type]\n    }\n\n    var w = flags.width\n    var h = flags.height\n    var c = flags.channels\n    var hasChannels = false\n    if ('shape' in options) {\n      check$1(Array.isArray(options.shape) && options.shape.length >= 2,\n        'shape must be an array')\n      w = options.shape[0]\n      h = options.shape[1]\n      if (options.shape.length === 3) {\n        c = options.shape[2]\n        check$1(c > 0 && c <= 4, 'invalid number of channels')\n        hasChannels = true\n      }\n      check$1(w >= 0 && w <= limits.maxTextureSize, 'invalid width')\n      check$1(h >= 0 && h <= limits.maxTextureSize, 'invalid height')\n    } else {\n      if ('radius' in options) {\n        w = h = options.radius\n        check$1(w >= 0 && w <= limits.maxTextureSize, 'invalid radius')\n      }\n      if ('width' in options) {\n        w = options.width\n        check$1(w >= 0 && w <= limits.maxTextureSize, 'invalid width')\n      }\n      if ('height' in options) {\n        h = options.height\n        check$1(h >= 0 && h <= limits.maxTextureSize, 'invalid height')\n      }\n      if ('channels' in options) {\n        c = options.channels\n        check$1(c > 0 && c <= 4, 'invalid number of channels')\n        hasChannels = true\n      }\n    }\n    flags.width = w | 0\n    flags.height = h | 0\n    flags.channels = c | 0\n\n    var hasFormat = false\n    if ('format' in options) {\n      var formatStr = options.format\n      check$1(extensions.webgl_depth_texture ||\n        !(formatStr === 'depth' || formatStr === 'depth stencil'),\n      'you must enable the WEBGL_depth_texture extension in order to use depth/stencil textures.')\n      check$1.parameter(formatStr, textureFormats,\n        'invalid texture format')\n      var internalformat = flags.internalformat = textureFormats[formatStr]\n      flags.format = colorFormats[internalformat]\n      if (formatStr in textureTypes) {\n        if (!('type' in options)) {\n          flags.type = textureTypes[formatStr]\n        }\n      }\n      if (formatStr in compressedTextureFormats) {\n        flags.compressed = true\n      }\n      hasFormat = true\n    }\n\n    // Reconcile channels and format\n    if (!hasChannels && hasFormat) {\n      flags.channels = FORMAT_CHANNELS[flags.format]\n    } else if (hasChannels && !hasFormat) {\n      if (flags.channels !== CHANNELS_FORMAT[flags.format]) {\n        flags.format = flags.internalformat = CHANNELS_FORMAT[flags.channels]\n      }\n    } else if (hasFormat && hasChannels) {\n      check$1(\n        flags.channels === FORMAT_CHANNELS[flags.format],\n        'number of channels inconsistent with specified format')\n    }\n  }\n\n  function setFlags (flags) {\n    gl.pixelStorei(GL_UNPACK_FLIP_Y_WEBGL, flags.flipY)\n    gl.pixelStorei(GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL, flags.premultiplyAlpha)\n    gl.pixelStorei(GL_UNPACK_COLORSPACE_CONVERSION_WEBGL, flags.colorSpace)\n    gl.pixelStorei(GL_UNPACK_ALIGNMENT, flags.unpackAlignment)\n  }\n\n  // -------------------------------------------------------\n  // Tex image data\n  // -------------------------------------------------------\n  function TexImage () {\n    TexFlags.call(this)\n\n    this.xOffset = 0\n    this.yOffset = 0\n\n    // data\n    this.data = null\n    this.needsFree = false\n\n    // html element\n    this.element = null\n\n    // copyTexImage info\n    this.needsCopy = false\n  }\n\n  function parseImage (image, options) {\n    var data = null\n    if (isPixelData(options)) {\n      data = options\n    } else if (options) {\n      check$1.type(options, 'object', 'invalid pixel data type')\n      parseFlags(image, options)\n      if ('x' in options) {\n        image.xOffset = options.x | 0\n      }\n      if ('y' in options) {\n        image.yOffset = options.y | 0\n      }\n      if (isPixelData(options.data)) {\n        data = options.data\n      }\n    }\n\n    check$1(\n      !image.compressed ||\n      data instanceof Uint8Array,\n      'compressed texture data must be stored in a uint8array')\n\n    if (options.copy) {\n      check$1(!data, 'can not specify copy and data field for the same texture')\n      var viewW = contextState.viewportWidth\n      var viewH = contextState.viewportHeight\n      image.width = image.width || (viewW - image.xOffset)\n      image.height = image.height || (viewH - image.yOffset)\n      image.needsCopy = true\n      check$1(image.xOffset >= 0 && image.xOffset < viewW &&\n            image.yOffset >= 0 && image.yOffset < viewH &&\n            image.width > 0 && image.width <= viewW &&\n            image.height > 0 && image.height <= viewH,\n      'copy texture read out of bounds')\n    } else if (!data) {\n      image.width = image.width || 1\n      image.height = image.height || 1\n      image.channels = image.channels || 4\n    } else if (isTypedArray(data)) {\n      image.channels = image.channels || 4\n      image.data = data\n      if (!('type' in options) && image.type === GL_UNSIGNED_BYTE$5) {\n        image.type = typedArrayCode$1(data)\n      }\n    } else if (isNumericArray(data)) {\n      image.channels = image.channels || 4\n      convertData(image, data)\n      image.alignment = 1\n      image.needsFree = true\n    } else if (isNDArrayLike(data)) {\n      var array = data.data\n      if (!Array.isArray(array) && image.type === GL_UNSIGNED_BYTE$5) {\n        image.type = typedArrayCode$1(array)\n      }\n      var shape = data.shape\n      var stride = data.stride\n      var shapeX, shapeY, shapeC, strideX, strideY, strideC\n      if (shape.length === 3) {\n        shapeC = shape[2]\n        strideC = stride[2]\n      } else {\n        check$1(shape.length === 2, 'invalid ndarray pixel data, must be 2 or 3D')\n        shapeC = 1\n        strideC = 1\n      }\n      shapeX = shape[0]\n      shapeY = shape[1]\n      strideX = stride[0]\n      strideY = stride[1]\n      image.alignment = 1\n      image.width = shapeX\n      image.height = shapeY\n      image.channels = shapeC\n      image.format = image.internalformat = CHANNELS_FORMAT[shapeC]\n      image.needsFree = true\n      transposeData(image, array, strideX, strideY, strideC, data.offset)\n    } else if (isCanvasElement(data) || isOffscreenCanvas(data) || isContext2D(data)) {\n      if (isCanvasElement(data) || isOffscreenCanvas(data)) {\n        image.element = data\n      } else {\n        image.element = data.canvas\n      }\n      image.width = image.element.width\n      image.height = image.element.height\n      image.channels = 4\n    } else if (isBitmap(data)) {\n      image.element = data\n      image.width = data.width\n      image.height = data.height\n      image.channels = 4\n    } else if (isImageElement(data)) {\n      image.element = data\n      image.width = data.naturalWidth\n      image.height = data.naturalHeight\n      image.channels = 4\n    } else if (isVideoElement(data)) {\n      image.element = data\n      image.width = data.videoWidth\n      image.height = data.videoHeight\n      image.channels = 4\n    } else if (isRectArray(data)) {\n      var w = image.width || data[0].length\n      var h = image.height || data.length\n      var c = image.channels\n      if (isArrayLike(data[0][0])) {\n        c = c || data[0][0].length\n      } else {\n        c = c || 1\n      }\n      var arrayShape = flattenUtils.shape(data)\n      var n = 1\n      for (var dd = 0; dd < arrayShape.length; ++dd) {\n        n *= arrayShape[dd]\n      }\n      var allocData = preConvert(image, n)\n      flattenUtils.flatten(data, arrayShape, '', allocData)\n      postConvert(image, allocData)\n      image.alignment = 1\n      image.width = w\n      image.height = h\n      image.channels = c\n      image.format = image.internalformat = CHANNELS_FORMAT[c]\n      image.needsFree = true\n    }\n\n    if (image.type === GL_FLOAT$4) {\n      check$1(limits.extensions.indexOf('oes_texture_float') >= 0,\n        'oes_texture_float extension not enabled')\n    } else if (image.type === GL_HALF_FLOAT_OES$1) {\n      check$1(limits.extensions.indexOf('oes_texture_half_float') >= 0,\n        'oes_texture_half_float extension not enabled')\n    }\n\n    // do compressed texture  validation here.\n  }\n\n  function setImage (info, target, miplevel) {\n    var element = info.element\n    var data = info.data\n    var internalformat = info.internalformat\n    var format = info.format\n    var type = info.type\n    var width = info.width\n    var height = info.height\n\n    setFlags(info)\n\n    if (element) {\n      gl.texImage2D(target, miplevel, format, format, type, element)\n    } else if (info.compressed) {\n      gl.compressedTexImage2D(target, miplevel, internalformat, width, height, 0, data)\n    } else if (info.needsCopy) {\n      reglPoll()\n      gl.copyTexImage2D(\n        target, miplevel, format, info.xOffset, info.yOffset, width, height, 0)\n    } else {\n      gl.texImage2D(target, miplevel, format, width, height, 0, format, type, data || null)\n    }\n  }\n\n  function setSubImage (info, target, x, y, miplevel) {\n    var element = info.element\n    var data = info.data\n    var internalformat = info.internalformat\n    var format = info.format\n    var type = info.type\n    var width = info.width\n    var height = info.height\n\n    setFlags(info)\n\n    if (element) {\n      gl.texSubImage2D(\n        target, miplevel, x, y, format, type, element)\n    } else if (info.compressed) {\n      gl.compressedTexSubImage2D(\n        target, miplevel, x, y, internalformat, width, height, data)\n    } else if (info.needsCopy) {\n      reglPoll()\n      gl.copyTexSubImage2D(\n        target, miplevel, x, y, info.xOffset, info.yOffset, width, height)\n    } else {\n      gl.texSubImage2D(\n        target, miplevel, x, y, width, height, format, type, data)\n    }\n  }\n\n  // texImage pool\n  var imagePool = []\n\n  function allocImage () {\n    return imagePool.pop() || new TexImage()\n  }\n\n  function freeImage (image) {\n    if (image.needsFree) {\n      pool.freeType(image.data)\n    }\n    TexImage.call(image)\n    imagePool.push(image)\n  }\n\n  // -------------------------------------------------------\n  // Mip map\n  // -------------------------------------------------------\n  function MipMap () {\n    TexFlags.call(this)\n\n    this.genMipmaps = false\n    this.mipmapHint = GL_DONT_CARE\n    this.mipmask = 0\n    this.images = Array(16)\n  }\n\n  function parseMipMapFromShape (mipmap, width, height) {\n    var img = mipmap.images[0] = allocImage()\n    mipmap.mipmask = 1\n    img.width = mipmap.width = width\n    img.height = mipmap.height = height\n    img.channels = mipmap.channels = 4\n  }\n\n  function parseMipMapFromObject (mipmap, options) {\n    var imgData = null\n    if (isPixelData(options)) {\n      imgData = mipmap.images[0] = allocImage()\n      copyFlags(imgData, mipmap)\n      parseImage(imgData, options)\n      mipmap.mipmask = 1\n    } else {\n      parseFlags(mipmap, options)\n      if (Array.isArray(options.mipmap)) {\n        var mipData = options.mipmap\n        for (var i = 0; i < mipData.length; ++i) {\n          imgData = mipmap.images[i] = allocImage()\n          copyFlags(imgData, mipmap)\n          imgData.width >>= i\n          imgData.height >>= i\n          parseImage(imgData, mipData[i])\n          mipmap.mipmask |= (1 << i)\n        }\n      } else {\n        imgData = mipmap.images[0] = allocImage()\n        copyFlags(imgData, mipmap)\n        parseImage(imgData, options)\n        mipmap.mipmask = 1\n      }\n    }\n    copyFlags(mipmap, mipmap.images[0])\n\n    // For textures of the compressed format WEBGL_compressed_texture_s3tc\n    // we must have that\n    //\n    // \"When level equals zero width and height must be a multiple of 4.\n    // When level is greater than 0 width and height must be 0, 1, 2 or a multiple of 4. \"\n    //\n    // but we do not yet support having multiple mipmap levels for compressed textures,\n    // so we only test for level zero.\n\n    if (\n      mipmap.compressed &&\n      (\n        mipmap.internalformat === GL_COMPRESSED_RGB_S3TC_DXT1_EXT ||\n        mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT1_EXT ||\n        mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT3_EXT ||\n        mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT5_EXT\n      )\n    ) {\n      check$1(mipmap.width % 4 === 0 && mipmap.height % 4 === 0,\n        'for compressed texture formats, mipmap level 0 must have width and height that are a multiple of 4')\n    }\n  }\n\n  function setMipMap (mipmap, target) {\n    var images = mipmap.images\n    for (var i = 0; i < images.length; ++i) {\n      if (!images[i]) {\n        return\n      }\n      setImage(images[i], target, i)\n    }\n  }\n\n  var mipPool = []\n\n  function allocMipMap () {\n    var result = mipPool.pop() || new MipMap()\n    TexFlags.call(result)\n    result.mipmask = 0\n    for (var i = 0; i < 16; ++i) {\n      result.images[i] = null\n    }\n    return result\n  }\n\n  function freeMipMap (mipmap) {\n    var images = mipmap.images\n    for (var i = 0; i < images.length; ++i) {\n      if (images[i]) {\n        freeImage(images[i])\n      }\n      images[i] = null\n    }\n    mipPool.push(mipmap)\n  }\n\n  // -------------------------------------------------------\n  // Tex info\n  // -------------------------------------------------------\n  function TexInfo () {\n    this.minFilter = GL_NEAREST$1\n    this.magFilter = GL_NEAREST$1\n\n    this.wrapS = GL_CLAMP_TO_EDGE$1\n    this.wrapT = GL_CLAMP_TO_EDGE$1\n\n    this.anisotropic = 1\n\n    this.genMipmaps = false\n    this.mipmapHint = GL_DONT_CARE\n  }\n\n  function parseTexInfo (info, options) {\n    if ('min' in options) {\n      var minFilter = options.min\n      check$1.parameter(minFilter, minFilters)\n      info.minFilter = minFilters[minFilter]\n      if (MIPMAP_FILTERS.indexOf(info.minFilter) >= 0 && !('faces' in options)) {\n        info.genMipmaps = true\n      }\n    }\n\n    if ('mag' in options) {\n      var magFilter = options.mag\n      check$1.parameter(magFilter, magFilters)\n      info.magFilter = magFilters[magFilter]\n    }\n\n    var wrapS = info.wrapS\n    var wrapT = info.wrapT\n    if ('wrap' in options) {\n      var wrap = options.wrap\n      if (typeof wrap === 'string') {\n        check$1.parameter(wrap, wrapModes)\n        wrapS = wrapT = wrapModes[wrap]\n      } else if (Array.isArray(wrap)) {\n        check$1.parameter(wrap[0], wrapModes)\n        check$1.parameter(wrap[1], wrapModes)\n        wrapS = wrapModes[wrap[0]]\n        wrapT = wrapModes[wrap[1]]\n      }\n    } else {\n      if ('wrapS' in options) {\n        var optWrapS = options.wrapS\n        check$1.parameter(optWrapS, wrapModes)\n        wrapS = wrapModes[optWrapS]\n      }\n      if ('wrapT' in options) {\n        var optWrapT = options.wrapT\n        check$1.parameter(optWrapT, wrapModes)\n        wrapT = wrapModes[optWrapT]\n      }\n    }\n    info.wrapS = wrapS\n    info.wrapT = wrapT\n\n    if ('anisotropic' in options) {\n      var anisotropic = options.anisotropic\n      check$1(typeof anisotropic === 'number' &&\n         anisotropic >= 1 && anisotropic <= limits.maxAnisotropic,\n      'aniso samples must be between 1 and ')\n      info.anisotropic = options.anisotropic\n    }\n\n    if ('mipmap' in options) {\n      var hasMipMap = false\n      switch (typeof options.mipmap) {\n        case 'string':\n          check$1.parameter(options.mipmap, mipmapHint,\n            'invalid mipmap hint')\n          info.mipmapHint = mipmapHint[options.mipmap]\n          info.genMipmaps = true\n          hasMipMap = true\n          break\n\n        case 'boolean':\n          hasMipMap = info.genMipmaps = options.mipmap\n          break\n\n        case 'object':\n          check$1(Array.isArray(options.mipmap), 'invalid mipmap type')\n          info.genMipmaps = false\n          hasMipMap = true\n          break\n\n        default:\n          check$1.raise('invalid mipmap type')\n      }\n      if (hasMipMap && !('min' in options)) {\n        info.minFilter = GL_NEAREST_MIPMAP_NEAREST$1\n      }\n    }\n  }\n\n  function setTexInfo (info, target) {\n    gl.texParameteri(target, GL_TEXTURE_MIN_FILTER, info.minFilter)\n    gl.texParameteri(target, GL_TEXTURE_MAG_FILTER, info.magFilter)\n    gl.texParameteri(target, GL_TEXTURE_WRAP_S, info.wrapS)\n    gl.texParameteri(target, GL_TEXTURE_WRAP_T, info.wrapT)\n    if (extensions.ext_texture_filter_anisotropic) {\n      gl.texParameteri(target, GL_TEXTURE_MAX_ANISOTROPY_EXT, info.anisotropic)\n    }\n    if (info.genMipmaps) {\n      gl.hint(GL_GENERATE_MIPMAP_HINT, info.mipmapHint)\n      gl.generateMipmap(target)\n    }\n  }\n\n  // -------------------------------------------------------\n  // Full texture object\n  // -------------------------------------------------------\n  var textureCount = 0\n  var textureSet = {}\n  var numTexUnits = limits.maxTextureUnits\n  var textureUnits = Array(numTexUnits).map(function () {\n    return null\n  })\n\n  function REGLTexture (target) {\n    TexFlags.call(this)\n    this.mipmask = 0\n    this.internalformat = GL_RGBA$1\n\n    this.id = textureCount++\n\n    this.refCount = 1\n\n    this.target = target\n    this.texture = gl.createTexture()\n\n    this.unit = -1\n    this.bindCount = 0\n\n    this.texInfo = new TexInfo()\n\n    if (config.profile) {\n      this.stats = { size: 0 }\n    }\n  }\n\n  function tempBind (texture) {\n    gl.activeTexture(GL_TEXTURE0$1)\n    gl.bindTexture(texture.target, texture.texture)\n  }\n\n  function tempRestore () {\n    var prev = textureUnits[0]\n    if (prev) {\n      gl.bindTexture(prev.target, prev.texture)\n    } else {\n      gl.bindTexture(GL_TEXTURE_2D$1, null)\n    }\n  }\n\n  function destroy (texture) {\n    var handle = texture.texture\n    check$1(handle, 'must not double destroy texture')\n    var unit = texture.unit\n    var target = texture.target\n    if (unit >= 0) {\n      gl.activeTexture(GL_TEXTURE0$1 + unit)\n      gl.bindTexture(target, null)\n      textureUnits[unit] = null\n    }\n    gl.deleteTexture(handle)\n    texture.texture = null\n    texture.params = null\n    texture.pixels = null\n    texture.refCount = 0\n    delete textureSet[texture.id]\n    stats.textureCount--\n  }\n\n  extend(REGLTexture.prototype, {\n    bind: function () {\n      var texture = this\n      texture.bindCount += 1\n      var unit = texture.unit\n      if (unit < 0) {\n        for (var i = 0; i < numTexUnits; ++i) {\n          var other = textureUnits[i]\n          if (other) {\n            if (other.bindCount > 0) {\n              continue\n            }\n            other.unit = -1\n          }\n          textureUnits[i] = texture\n          unit = i\n          break\n        }\n        if (unit >= numTexUnits) {\n          check$1.raise('insufficient number of texture units')\n        }\n        if (config.profile && stats.maxTextureUnits < (unit + 1)) {\n          stats.maxTextureUnits = unit + 1 // +1, since the units are zero-based\n        }\n        texture.unit = unit\n        gl.activeTexture(GL_TEXTURE0$1 + unit)\n        gl.bindTexture(texture.target, texture.texture)\n      }\n      return unit\n    },\n\n    unbind: function () {\n      this.bindCount -= 1\n    },\n\n    decRef: function () {\n      if (--this.refCount <= 0) {\n        destroy(this)\n      }\n    }\n  })\n\n  function createTexture2D (a, b) {\n    var texture = new REGLTexture(GL_TEXTURE_2D$1)\n    textureSet[texture.id] = texture\n    stats.textureCount++\n\n    function reglTexture2D (a, b) {\n      var texInfo = texture.texInfo\n      TexInfo.call(texInfo)\n      var mipData = allocMipMap()\n\n      if (typeof a === 'number') {\n        if (typeof b === 'number') {\n          parseMipMapFromShape(mipData, a | 0, b | 0)\n        } else {\n          parseMipMapFromShape(mipData, a | 0, a | 0)\n        }\n      } else if (a) {\n        check$1.type(a, 'object', 'invalid arguments to regl.texture')\n        parseTexInfo(texInfo, a)\n        parseMipMapFromObject(mipData, a)\n      } else {\n        // empty textures get assigned a default shape of 1x1\n        parseMipMapFromShape(mipData, 1, 1)\n      }\n\n      if (texInfo.genMipmaps) {\n        mipData.mipmask = (mipData.width << 1) - 1\n      }\n      texture.mipmask = mipData.mipmask\n\n      copyFlags(texture, mipData)\n\n      check$1.texture2D(texInfo, mipData, limits)\n      texture.internalformat = mipData.internalformat\n\n      reglTexture2D.width = mipData.width\n      reglTexture2D.height = mipData.height\n\n      tempBind(texture)\n      setMipMap(mipData, GL_TEXTURE_2D$1)\n      setTexInfo(texInfo, GL_TEXTURE_2D$1)\n      tempRestore()\n\n      freeMipMap(mipData)\n\n      if (config.profile) {\n        texture.stats.size = getTextureSize(\n          texture.internalformat,\n          texture.type,\n          mipData.width,\n          mipData.height,\n          texInfo.genMipmaps,\n          false)\n      }\n      reglTexture2D.format = textureFormatsInvert[texture.internalformat]\n      reglTexture2D.type = textureTypesInvert[texture.type]\n\n      reglTexture2D.mag = magFiltersInvert[texInfo.magFilter]\n      reglTexture2D.min = minFiltersInvert[texInfo.minFilter]\n\n      reglTexture2D.wrapS = wrapModesInvert[texInfo.wrapS]\n      reglTexture2D.wrapT = wrapModesInvert[texInfo.wrapT]\n\n      return reglTexture2D\n    }\n\n    function subimage (image, x_, y_, level_) {\n      check$1(!!image, 'must specify image data')\n\n      var x = x_ | 0\n      var y = y_ | 0\n      var level = level_ | 0\n\n      var imageData = allocImage()\n      copyFlags(imageData, texture)\n      imageData.width = 0\n      imageData.height = 0\n      parseImage(imageData, image)\n      imageData.width = imageData.width || ((texture.width >> level) - x)\n      imageData.height = imageData.height || ((texture.height >> level) - y)\n\n      check$1(\n        texture.type === imageData.type &&\n        texture.format === imageData.format &&\n        texture.internalformat === imageData.internalformat,\n        'incompatible format for texture.subimage')\n      check$1(\n        x >= 0 && y >= 0 &&\n        x + imageData.width <= texture.width &&\n        y + imageData.height <= texture.height,\n        'texture.subimage write out of bounds')\n      check$1(\n        texture.mipmask & (1 << level),\n        'missing mipmap data')\n      check$1(\n        imageData.data || imageData.element || imageData.needsCopy,\n        'missing image data')\n\n      tempBind(texture)\n      setSubImage(imageData, GL_TEXTURE_2D$1, x, y, level)\n      tempRestore()\n\n      freeImage(imageData)\n\n      return reglTexture2D\n    }\n\n    function resize (w_, h_) {\n      var w = w_ | 0\n      var h = (h_ | 0) || w\n      if (w === texture.width && h === texture.height) {\n        return reglTexture2D\n      }\n\n      reglTexture2D.width = texture.width = w\n      reglTexture2D.height = texture.height = h\n\n      tempBind(texture)\n\n      for (var i = 0; texture.mipmask >> i; ++i) {\n        var _w = w >> i\n        var _h = h >> i\n        if (!_w || !_h) break\n        gl.texImage2D(\n          GL_TEXTURE_2D$1,\n          i,\n          texture.format,\n          _w,\n          _h,\n          0,\n          texture.format,\n          texture.type,\n          null)\n      }\n      tempRestore()\n\n      // also, recompute the texture size.\n      if (config.profile) {\n        texture.stats.size = getTextureSize(\n          texture.internalformat,\n          texture.type,\n          w,\n          h,\n          false,\n          false)\n      }\n\n      return reglTexture2D\n    }\n\n    reglTexture2D(a, b)\n\n    reglTexture2D.subimage = subimage\n    reglTexture2D.resize = resize\n    reglTexture2D._reglType = 'texture2d'\n    reglTexture2D._texture = texture\n    if (config.profile) {\n      reglTexture2D.stats = texture.stats\n    }\n    reglTexture2D.destroy = function () {\n      texture.decRef()\n    }\n\n    return reglTexture2D\n  }\n\n  function createTextureCube (a0, a1, a2, a3, a4, a5) {\n    var texture = new REGLTexture(GL_TEXTURE_CUBE_MAP$1)\n    textureSet[texture.id] = texture\n    stats.cubeCount++\n\n    var faces = new Array(6)\n\n    function reglTextureCube (a0, a1, a2, a3, a4, a5) {\n      var i\n      var texInfo = texture.texInfo\n      TexInfo.call(texInfo)\n      for (i = 0; i < 6; ++i) {\n        faces[i] = allocMipMap()\n      }\n\n      if (typeof a0 === 'number' || !a0) {\n        var s = (a0 | 0) || 1\n        for (i = 0; i < 6; ++i) {\n          parseMipMapFromShape(faces[i], s, s)\n        }\n      } else if (typeof a0 === 'object') {\n        if (a1) {\n          parseMipMapFromObject(faces[0], a0)\n          parseMipMapFromObject(faces[1], a1)\n          parseMipMapFromObject(faces[2], a2)\n          parseMipMapFromObject(faces[3], a3)\n          parseMipMapFromObject(faces[4], a4)\n          parseMipMapFromObject(faces[5], a5)\n        } else {\n          parseTexInfo(texInfo, a0)\n          parseFlags(texture, a0)\n          if ('faces' in a0) {\n            var faceInput = a0.faces\n            check$1(Array.isArray(faceInput) && faceInput.length === 6,\n              'cube faces must be a length 6 array')\n            for (i = 0; i < 6; ++i) {\n              check$1(typeof faceInput[i] === 'object' && !!faceInput[i],\n                'invalid input for cube map face')\n              copyFlags(faces[i], texture)\n              parseMipMapFromObject(faces[i], faceInput[i])\n            }\n          } else {\n            for (i = 0; i < 6; ++i) {\n              parseMipMapFromObject(faces[i], a0)\n            }\n          }\n        }\n      } else {\n        check$1.raise('invalid arguments to cube map')\n      }\n\n      copyFlags(texture, faces[0])\n      check$1.optional(function () {\n        if (!limits.npotTextureCube) {\n          check$1(isPow2$1(texture.width) && isPow2$1(texture.height), 'your browser does not support non power or two texture dimensions')\n        }\n      })\n\n      if (texInfo.genMipmaps) {\n        texture.mipmask = (faces[0].width << 1) - 1\n      } else {\n        texture.mipmask = faces[0].mipmask\n      }\n\n      check$1.textureCube(texture, texInfo, faces, limits)\n      texture.internalformat = faces[0].internalformat\n\n      reglTextureCube.width = faces[0].width\n      reglTextureCube.height = faces[0].height\n\n      tempBind(texture)\n      for (i = 0; i < 6; ++i) {\n        setMipMap(faces[i], GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + i)\n      }\n      setTexInfo(texInfo, GL_TEXTURE_CUBE_MAP$1)\n      tempRestore()\n\n      if (config.profile) {\n        texture.stats.size = getTextureSize(\n          texture.internalformat,\n          texture.type,\n          reglTextureCube.width,\n          reglTextureCube.height,\n          texInfo.genMipmaps,\n          true)\n      }\n\n      reglTextureCube.format = textureFormatsInvert[texture.internalformat]\n      reglTextureCube.type = textureTypesInvert[texture.type]\n\n      reglTextureCube.mag = magFiltersInvert[texInfo.magFilter]\n      reglTextureCube.min = minFiltersInvert[texInfo.minFilter]\n\n      reglTextureCube.wrapS = wrapModesInvert[texInfo.wrapS]\n      reglTextureCube.wrapT = wrapModesInvert[texInfo.wrapT]\n\n      for (i = 0; i < 6; ++i) {\n        freeMipMap(faces[i])\n      }\n\n      return reglTextureCube\n    }\n\n    function subimage (face, image, x_, y_, level_) {\n      check$1(!!image, 'must specify image data')\n      check$1(typeof face === 'number' && face === (face | 0) &&\n        face >= 0 && face < 6, 'invalid face')\n\n      var x = x_ | 0\n      var y = y_ | 0\n      var level = level_ | 0\n\n      var imageData = allocImage()\n      copyFlags(imageData, texture)\n      imageData.width = 0\n      imageData.height = 0\n      parseImage(imageData, image)\n      imageData.width = imageData.width || ((texture.width >> level) - x)\n      imageData.height = imageData.height || ((texture.height >> level) - y)\n\n      check$1(\n        texture.type === imageData.type &&\n        texture.format === imageData.format &&\n        texture.internalformat === imageData.internalformat,\n        'incompatible format for texture.subimage')\n      check$1(\n        x >= 0 && y >= 0 &&\n        x + imageData.width <= texture.width &&\n        y + imageData.height <= texture.height,\n        'texture.subimage write out of bounds')\n      check$1(\n        texture.mipmask & (1 << level),\n        'missing mipmap data')\n      check$1(\n        imageData.data || imageData.element || imageData.needsCopy,\n        'missing image data')\n\n      tempBind(texture)\n      setSubImage(imageData, GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + face, x, y, level)\n      tempRestore()\n\n      freeImage(imageData)\n\n      return reglTextureCube\n    }\n\n    function resize (radius_) {\n      var radius = radius_ | 0\n      if (radius === texture.width) {\n        return\n      }\n\n      reglTextureCube.width = texture.width = radius\n      reglTextureCube.height = texture.height = radius\n\n      tempBind(texture)\n      for (var i = 0; i < 6; ++i) {\n        for (var j = 0; texture.mipmask >> j; ++j) {\n          gl.texImage2D(\n            GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + i,\n            j,\n            texture.format,\n            radius >> j,\n            radius >> j,\n            0,\n            texture.format,\n            texture.type,\n            null)\n        }\n      }\n      tempRestore()\n\n      if (config.profile) {\n        texture.stats.size = getTextureSize(\n          texture.internalformat,\n          texture.type,\n          reglTextureCube.width,\n          reglTextureCube.height,\n          false,\n          true)\n      }\n\n      return reglTextureCube\n    }\n\n    reglTextureCube(a0, a1, a2, a3, a4, a5)\n\n    reglTextureCube.subimage = subimage\n    reglTextureCube.resize = resize\n    reglTextureCube._reglType = 'textureCube'\n    reglTextureCube._texture = texture\n    if (config.profile) {\n      reglTextureCube.stats = texture.stats\n    }\n    reglTextureCube.destroy = function () {\n      texture.decRef()\n    }\n\n    return reglTextureCube\n  }\n\n  // Called when regl is destroyed\n  function destroyTextures () {\n    for (var i = 0; i < numTexUnits; ++i) {\n      gl.activeTexture(GL_TEXTURE0$1 + i)\n      gl.bindTexture(GL_TEXTURE_2D$1, null)\n      textureUnits[i] = null\n    }\n    values(textureSet).forEach(destroy)\n\n    stats.cubeCount = 0\n    stats.textureCount = 0\n  }\n\n  if (config.profile) {\n    stats.getTotalTextureSize = function () {\n      var total = 0\n      Object.keys(textureSet).forEach(function (key) {\n        total += textureSet[key].stats.size\n      })\n      return total\n    }\n  }\n\n  function restoreTextures () {\n    for (var i = 0; i < numTexUnits; ++i) {\n      var tex = textureUnits[i]\n      if (tex) {\n        tex.bindCount = 0\n        tex.unit = -1\n        textureUnits[i] = null\n      }\n    }\n\n    values(textureSet).forEach(function (texture) {\n      texture.texture = gl.createTexture()\n      gl.bindTexture(texture.target, texture.texture)\n      for (var i = 0; i < 32; ++i) {\n        if ((texture.mipmask & (1 << i)) === 0) {\n          continue\n        }\n        if (texture.target === GL_TEXTURE_2D$1) {\n          gl.texImage2D(GL_TEXTURE_2D$1,\n            i,\n            texture.internalformat,\n            texture.width >> i,\n            texture.height >> i,\n            0,\n            texture.internalformat,\n            texture.type,\n            null)\n        } else {\n          for (var j = 0; j < 6; ++j) {\n            gl.texImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + j,\n              i,\n              texture.internalformat,\n              texture.width >> i,\n              texture.height >> i,\n              0,\n              texture.internalformat,\n              texture.type,\n              null)\n          }\n        }\n      }\n      setTexInfo(texture.texInfo, texture.target)\n    })\n  }\n\n  function refreshTextures () {\n    for (var i = 0; i < numTexUnits; ++i) {\n      var tex = textureUnits[i]\n      if (tex) {\n        tex.bindCount = 0\n        tex.unit = -1\n        textureUnits[i] = null\n      }\n      gl.activeTexture(GL_TEXTURE0$1 + i)\n      gl.bindTexture(GL_TEXTURE_2D$1, null)\n      gl.bindTexture(GL_TEXTURE_CUBE_MAP$1, null)\n    }\n  }\n\n  return {\n    create2D: createTexture2D,\n    createCube: createTextureCube,\n    clear: destroyTextures,\n    getTexture: function (wrapper) {\n      return null\n    },\n    restore: restoreTextures,\n    refresh: refreshTextures\n  }\n}\n\nvar GL_RENDERBUFFER = 0x8D41\n\nvar GL_RGBA4$1 = 0x8056\nvar GL_RGB5_A1$1 = 0x8057\nvar GL_RGB565$1 = 0x8D62\nvar GL_DEPTH_COMPONENT16 = 0x81A5\nvar GL_STENCIL_INDEX8 = 0x8D48\nvar GL_DEPTH_STENCIL$1 = 0x84F9\n\nvar GL_SRGB8_ALPHA8_EXT = 0x8C43\n\nvar GL_RGBA32F_EXT = 0x8814\n\nvar GL_RGBA16F_EXT = 0x881A\nvar GL_RGB16F_EXT = 0x881B\n\nvar FORMAT_SIZES = []\n\nFORMAT_SIZES[GL_RGBA4$1] = 2\nFORMAT_SIZES[GL_RGB5_A1$1] = 2\nFORMAT_SIZES[GL_RGB565$1] = 2\n\nFORMAT_SIZES[GL_DEPTH_COMPONENT16] = 2\nFORMAT_SIZES[GL_STENCIL_INDEX8] = 1\nFORMAT_SIZES[GL_DEPTH_STENCIL$1] = 4\n\nFORMAT_SIZES[GL_SRGB8_ALPHA8_EXT] = 4\nFORMAT_SIZES[GL_RGBA32F_EXT] = 16\nFORMAT_SIZES[GL_RGBA16F_EXT] = 8\nFORMAT_SIZES[GL_RGB16F_EXT] = 6\n\nfunction getRenderbufferSize (format, width, height) {\n  return FORMAT_SIZES[format] * width * height\n}\n\nvar wrapRenderbuffers = function (gl, extensions, limits, stats, config) {\n  var formatTypes = {\n    'rgba4': GL_RGBA4$1,\n    'rgb565': GL_RGB565$1,\n    'rgb5 a1': GL_RGB5_A1$1,\n    'depth': GL_DEPTH_COMPONENT16,\n    'stencil': GL_STENCIL_INDEX8,\n    'depth stencil': GL_DEPTH_STENCIL$1\n  }\n\n  if (extensions.ext_srgb) {\n    formatTypes['srgba'] = GL_SRGB8_ALPHA8_EXT\n  }\n\n  if (extensions.ext_color_buffer_half_float) {\n    formatTypes['rgba16f'] = GL_RGBA16F_EXT\n    formatTypes['rgb16f'] = GL_RGB16F_EXT\n  }\n\n  if (extensions.webgl_color_buffer_float) {\n    formatTypes['rgba32f'] = GL_RGBA32F_EXT\n  }\n\n  var formatTypesInvert = []\n  Object.keys(formatTypes).forEach(function (key) {\n    var val = formatTypes[key]\n    formatTypesInvert[val] = key\n  })\n\n  var renderbufferCount = 0\n  var renderbufferSet = {}\n\n  function REGLRenderbuffer (renderbuffer) {\n    this.id = renderbufferCount++\n    this.refCount = 1\n\n    this.renderbuffer = renderbuffer\n\n    this.format = GL_RGBA4$1\n    this.width = 0\n    this.height = 0\n\n    if (config.profile) {\n      this.stats = { size: 0 }\n    }\n  }\n\n  REGLRenderbuffer.prototype.decRef = function () {\n    if (--this.refCount <= 0) {\n      destroy(this)\n    }\n  }\n\n  function destroy (rb) {\n    var handle = rb.renderbuffer\n    check$1(handle, 'must not double destroy renderbuffer')\n    gl.bindRenderbuffer(GL_RENDERBUFFER, null)\n    gl.deleteRenderbuffer(handle)\n    rb.renderbuffer = null\n    rb.refCount = 0\n    delete renderbufferSet[rb.id]\n    stats.renderbufferCount--\n  }\n\n  function createRenderbuffer (a, b) {\n    var renderbuffer = new REGLRenderbuffer(gl.createRenderbuffer())\n    renderbufferSet[renderbuffer.id] = renderbuffer\n    stats.renderbufferCount++\n\n    function reglRenderbuffer (a, b) {\n      var w = 0\n      var h = 0\n      var format = GL_RGBA4$1\n\n      if (typeof a === 'object' && a) {\n        var options = a\n        if ('shape' in options) {\n          var shape = options.shape\n          check$1(Array.isArray(shape) && shape.length >= 2,\n            'invalid renderbuffer shape')\n          w = shape[0] | 0\n          h = shape[1] | 0\n        } else {\n          if ('radius' in options) {\n            w = h = options.radius | 0\n          }\n          if ('width' in options) {\n            w = options.width | 0\n          }\n          if ('height' in options) {\n            h = options.height | 0\n          }\n        }\n        if ('format' in options) {\n          check$1.parameter(options.format, formatTypes,\n            'invalid renderbuffer format')\n          format = formatTypes[options.format]\n        }\n      } else if (typeof a === 'number') {\n        w = a | 0\n        if (typeof b === 'number') {\n          h = b | 0\n        } else {\n          h = w\n        }\n      } else if (!a) {\n        w = h = 1\n      } else {\n        check$1.raise('invalid arguments to renderbuffer constructor')\n      }\n\n      // check shape\n      check$1(\n        w > 0 && h > 0 &&\n        w <= limits.maxRenderbufferSize && h <= limits.maxRenderbufferSize,\n        'invalid renderbuffer size')\n\n      if (w === renderbuffer.width &&\n          h === renderbuffer.height &&\n          format === renderbuffer.format) {\n        return\n      }\n\n      reglRenderbuffer.width = renderbuffer.width = w\n      reglRenderbuffer.height = renderbuffer.height = h\n      renderbuffer.format = format\n\n      gl.bindRenderbuffer(GL_RENDERBUFFER, renderbuffer.renderbuffer)\n      gl.renderbufferStorage(GL_RENDERBUFFER, format, w, h)\n\n      check$1(\n        gl.getError() === 0,\n        'invalid render buffer format')\n\n      if (config.profile) {\n        renderbuffer.stats.size = getRenderbufferSize(renderbuffer.format, renderbuffer.width, renderbuffer.height)\n      }\n      reglRenderbuffer.format = formatTypesInvert[renderbuffer.format]\n\n      return reglRenderbuffer\n    }\n\n    function resize (w_, h_) {\n      var w = w_ | 0\n      var h = (h_ | 0) || w\n\n      if (w === renderbuffer.width && h === renderbuffer.height) {\n        return reglRenderbuffer\n      }\n\n      // check shape\n      check$1(\n        w > 0 && h > 0 &&\n        w <= limits.maxRenderbufferSize && h <= limits.maxRenderbufferSize,\n        'invalid renderbuffer size')\n\n      reglRenderbuffer.width = renderbuffer.width = w\n      reglRenderbuffer.height = renderbuffer.height = h\n\n      gl.bindRenderbuffer(GL_RENDERBUFFER, renderbuffer.renderbuffer)\n      gl.renderbufferStorage(GL_RENDERBUFFER, renderbuffer.format, w, h)\n\n      check$1(\n        gl.getError() === 0,\n        'invalid render buffer format')\n\n      // also, recompute size.\n      if (config.profile) {\n        renderbuffer.stats.size = getRenderbufferSize(\n          renderbuffer.format, renderbuffer.width, renderbuffer.height)\n      }\n\n      return reglRenderbuffer\n    }\n\n    reglRenderbuffer(a, b)\n\n    reglRenderbuffer.resize = resize\n    reglRenderbuffer._reglType = 'renderbuffer'\n    reglRenderbuffer._renderbuffer = renderbuffer\n    if (config.profile) {\n      reglRenderbuffer.stats = renderbuffer.stats\n    }\n    reglRenderbuffer.destroy = function () {\n      renderbuffer.decRef()\n    }\n\n    return reglRenderbuffer\n  }\n\n  if (config.profile) {\n    stats.getTotalRenderbufferSize = function () {\n      var total = 0\n      Object.keys(renderbufferSet).forEach(function (key) {\n        total += renderbufferSet[key].stats.size\n      })\n      return total\n    }\n  }\n\n  function restoreRenderbuffers () {\n    values(renderbufferSet).forEach(function (rb) {\n      rb.renderbuffer = gl.createRenderbuffer()\n      gl.bindRenderbuffer(GL_RENDERBUFFER, rb.renderbuffer)\n      gl.renderbufferStorage(GL_RENDERBUFFER, rb.format, rb.width, rb.height)\n    })\n    gl.bindRenderbuffer(GL_RENDERBUFFER, null)\n  }\n\n  return {\n    create: createRenderbuffer,\n    clear: function () {\n      values(renderbufferSet).forEach(destroy)\n    },\n    restore: restoreRenderbuffers\n  }\n}\n\n// We store these constants so that the minifier can inline them\nvar GL_FRAMEBUFFER$1 = 0x8D40\nvar GL_RENDERBUFFER$1 = 0x8D41\n\nvar GL_TEXTURE_2D$2 = 0x0DE1\nvar GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 = 0x8515\n\nvar GL_COLOR_ATTACHMENT0$1 = 0x8CE0\nvar GL_DEPTH_ATTACHMENT = 0x8D00\nvar GL_STENCIL_ATTACHMENT = 0x8D20\nvar GL_DEPTH_STENCIL_ATTACHMENT = 0x821A\n\nvar GL_FRAMEBUFFER_COMPLETE$1 = 0x8CD5\nvar GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6\nvar GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7\nvar GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9\nvar GL_FRAMEBUFFER_UNSUPPORTED = 0x8CDD\n\nvar GL_HALF_FLOAT_OES$2 = 0x8D61\nvar GL_UNSIGNED_BYTE$6 = 0x1401\nvar GL_FLOAT$5 = 0x1406\n\nvar GL_RGB$1 = 0x1907\nvar GL_RGBA$2 = 0x1908\n\nvar GL_DEPTH_COMPONENT$1 = 0x1902\n\nvar colorTextureFormatEnums = [\n  GL_RGB$1,\n  GL_RGBA$2\n]\n\n// for every texture format, store\n// the number of channels\nvar textureFormatChannels = []\ntextureFormatChannels[GL_RGBA$2] = 4\ntextureFormatChannels[GL_RGB$1] = 3\n\n// for every texture type, store\n// the size in bytes.\nvar textureTypeSizes = []\ntextureTypeSizes[GL_UNSIGNED_BYTE$6] = 1\ntextureTypeSizes[GL_FLOAT$5] = 4\ntextureTypeSizes[GL_HALF_FLOAT_OES$2] = 2\n\nvar GL_RGBA4$2 = 0x8056\nvar GL_RGB5_A1$2 = 0x8057\nvar GL_RGB565$2 = 0x8D62\nvar GL_DEPTH_COMPONENT16$1 = 0x81A5\nvar GL_STENCIL_INDEX8$1 = 0x8D48\nvar GL_DEPTH_STENCIL$2 = 0x84F9\n\nvar GL_SRGB8_ALPHA8_EXT$1 = 0x8C43\n\nvar GL_RGBA32F_EXT$1 = 0x8814\n\nvar GL_RGBA16F_EXT$1 = 0x881A\nvar GL_RGB16F_EXT$1 = 0x881B\n\nvar colorRenderbufferFormatEnums = [\n  GL_RGBA4$2,\n  GL_RGB5_A1$2,\n  GL_RGB565$2,\n  GL_SRGB8_ALPHA8_EXT$1,\n  GL_RGBA16F_EXT$1,\n  GL_RGB16F_EXT$1,\n  GL_RGBA32F_EXT$1\n]\n\nvar statusCode = {}\nstatusCode[GL_FRAMEBUFFER_COMPLETE$1] = 'complete'\nstatusCode[GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT] = 'incomplete attachment'\nstatusCode[GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS] = 'incomplete dimensions'\nstatusCode[GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT] = 'incomplete, missing attachment'\nstatusCode[GL_FRAMEBUFFER_UNSUPPORTED] = 'unsupported'\n\nfunction wrapFBOState (\n  gl,\n  extensions,\n  limits,\n  textureState,\n  renderbufferState,\n  stats) {\n  var framebufferState = {\n    cur: null,\n    next: null,\n    dirty: false,\n    setFBO: null\n  }\n\n  var colorTextureFormats = ['rgba']\n  var colorRenderbufferFormats = ['rgba4', 'rgb565', 'rgb5 a1']\n\n  if (extensions.ext_srgb) {\n    colorRenderbufferFormats.push('srgba')\n  }\n\n  if (extensions.ext_color_buffer_half_float) {\n    colorRenderbufferFormats.push('rgba16f', 'rgb16f')\n  }\n\n  if (extensions.webgl_color_buffer_float) {\n    colorRenderbufferFormats.push('rgba32f')\n  }\n\n  var colorTypes = ['uint8']\n  if (extensions.oes_texture_half_float) {\n    colorTypes.push('half float', 'float16')\n  }\n  if (extensions.oes_texture_float) {\n    colorTypes.push('float', 'float32')\n  }\n\n  function FramebufferAttachment (target, texture, renderbuffer) {\n    this.target = target\n    this.texture = texture\n    this.renderbuffer = renderbuffer\n\n    var w = 0\n    var h = 0\n    if (texture) {\n      w = texture.width\n      h = texture.height\n    } else if (renderbuffer) {\n      w = renderbuffer.width\n      h = renderbuffer.height\n    }\n    this.width = w\n    this.height = h\n  }\n\n  function decRef (attachment) {\n    if (attachment) {\n      if (attachment.texture) {\n        attachment.texture._texture.decRef()\n      }\n      if (attachment.renderbuffer) {\n        attachment.renderbuffer._renderbuffer.decRef()\n      }\n    }\n  }\n\n  function incRefAndCheckShape (attachment, width, height) {\n    if (!attachment) {\n      return\n    }\n    if (attachment.texture) {\n      var texture = attachment.texture._texture\n      var tw = Math.max(1, texture.width)\n      var th = Math.max(1, texture.height)\n      check$1(tw === width && th === height,\n        'inconsistent width/height for supplied texture')\n      texture.refCount += 1\n    } else {\n      var renderbuffer = attachment.renderbuffer._renderbuffer\n      check$1(\n        renderbuffer.width === width && renderbuffer.height === height,\n        'inconsistent width/height for renderbuffer')\n      renderbuffer.refCount += 1\n    }\n  }\n\n  function attach (location, attachment) {\n    if (attachment) {\n      if (attachment.texture) {\n        gl.framebufferTexture2D(\n          GL_FRAMEBUFFER$1,\n          location,\n          attachment.target,\n          attachment.texture._texture.texture,\n          0)\n      } else {\n        gl.framebufferRenderbuffer(\n          GL_FRAMEBUFFER$1,\n          location,\n          GL_RENDERBUFFER$1,\n          attachment.renderbuffer._renderbuffer.renderbuffer)\n      }\n    }\n  }\n\n  function parseAttachment (attachment) {\n    var target = GL_TEXTURE_2D$2\n    var texture = null\n    var renderbuffer = null\n\n    var data = attachment\n    if (typeof attachment === 'object') {\n      data = attachment.data\n      if ('target' in attachment) {\n        target = attachment.target | 0\n      }\n    }\n\n    check$1.type(data, 'function', 'invalid attachment data')\n\n    var type = data._reglType\n    if (type === 'texture2d') {\n      texture = data\n      check$1(target === GL_TEXTURE_2D$2)\n    } else if (type === 'textureCube') {\n      texture = data\n      check$1(\n        target >= GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 &&\n        target < GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 + 6,\n        'invalid cube map target')\n    } else if (type === 'renderbuffer') {\n      renderbuffer = data\n      target = GL_RENDERBUFFER$1\n    } else {\n      check$1.raise('invalid regl object for attachment')\n    }\n\n    return new FramebufferAttachment(target, texture, renderbuffer)\n  }\n\n  function allocAttachment (\n    width,\n    height,\n    isTexture,\n    format,\n    type) {\n    if (isTexture) {\n      var texture = textureState.create2D({\n        width: width,\n        height: height,\n        format: format,\n        type: type\n      })\n      texture._texture.refCount = 0\n      return new FramebufferAttachment(GL_TEXTURE_2D$2, texture, null)\n    } else {\n      var rb = renderbufferState.create({\n        width: width,\n        height: height,\n        format: format\n      })\n      rb._renderbuffer.refCount = 0\n      return new FramebufferAttachment(GL_RENDERBUFFER$1, null, rb)\n    }\n  }\n\n  function unwrapAttachment (attachment) {\n    return attachment && (attachment.texture || attachment.renderbuffer)\n  }\n\n  function resizeAttachment (attachment, w, h) {\n    if (attachment) {\n      if (attachment.texture) {\n        attachment.texture.resize(w, h)\n      } else if (attachment.renderbuffer) {\n        attachment.renderbuffer.resize(w, h)\n      }\n      attachment.width = w\n      attachment.height = h\n    }\n  }\n\n  var framebufferCount = 0\n  var framebufferSet = {}\n\n  function REGLFramebuffer () {\n    this.id = framebufferCount++\n    framebufferSet[this.id] = this\n\n    this.framebuffer = gl.createFramebuffer()\n    this.width = 0\n    this.height = 0\n\n    this.colorAttachments = []\n    this.depthAttachment = null\n    this.stencilAttachment = null\n    this.depthStencilAttachment = null\n  }\n\n  function decFBORefs (framebuffer) {\n    framebuffer.colorAttachments.forEach(decRef)\n    decRef(framebuffer.depthAttachment)\n    decRef(framebuffer.stencilAttachment)\n    decRef(framebuffer.depthStencilAttachment)\n  }\n\n  function destroy (framebuffer) {\n    var handle = framebuffer.framebuffer\n    check$1(handle, 'must not double destroy framebuffer')\n    gl.deleteFramebuffer(handle)\n    framebuffer.framebuffer = null\n    stats.framebufferCount--\n    delete framebufferSet[framebuffer.id]\n  }\n\n  function updateFramebuffer (framebuffer) {\n    var i\n\n    gl.bindFramebuffer(GL_FRAMEBUFFER$1, framebuffer.framebuffer)\n    var colorAttachments = framebuffer.colorAttachments\n    for (i = 0; i < colorAttachments.length; ++i) {\n      attach(GL_COLOR_ATTACHMENT0$1 + i, colorAttachments[i])\n    }\n    for (i = colorAttachments.length; i < limits.maxColorAttachments; ++i) {\n      gl.framebufferTexture2D(\n        GL_FRAMEBUFFER$1,\n        GL_COLOR_ATTACHMENT0$1 + i,\n        GL_TEXTURE_2D$2,\n        null,\n        0)\n    }\n\n    gl.framebufferTexture2D(\n      GL_FRAMEBUFFER$1,\n      GL_DEPTH_STENCIL_ATTACHMENT,\n      GL_TEXTURE_2D$2,\n      null,\n      0)\n    gl.framebufferTexture2D(\n      GL_FRAMEBUFFER$1,\n      GL_DEPTH_ATTACHMENT,\n      GL_TEXTURE_2D$2,\n      null,\n      0)\n    gl.framebufferTexture2D(\n      GL_FRAMEBUFFER$1,\n      GL_STENCIL_ATTACHMENT,\n      GL_TEXTURE_2D$2,\n      null,\n      0)\n\n    attach(GL_DEPTH_ATTACHMENT, framebuffer.depthAttachment)\n    attach(GL_STENCIL_ATTACHMENT, framebuffer.stencilAttachment)\n    attach(GL_DEPTH_STENCIL_ATTACHMENT, framebuffer.depthStencilAttachment)\n\n    // Check status code\n    var status = gl.checkFramebufferStatus(GL_FRAMEBUFFER$1)\n    if (!gl.isContextLost() && status !== GL_FRAMEBUFFER_COMPLETE$1) {\n      check$1.raise('framebuffer configuration not supported, status = ' +\n        statusCode[status])\n    }\n\n    gl.bindFramebuffer(GL_FRAMEBUFFER$1, framebufferState.next ? framebufferState.next.framebuffer : null)\n    framebufferState.cur = framebufferState.next\n\n    // FIXME: Clear error code here.  This is a work around for a bug in\n    // headless-gl\n    gl.getError()\n  }\n\n  function createFBO (a0, a1) {\n    var framebuffer = new REGLFramebuffer()\n    stats.framebufferCount++\n\n    function reglFramebuffer (a, b) {\n      var i\n\n      check$1(framebufferState.next !== framebuffer,\n        'can not update framebuffer which is currently in use')\n\n      var width = 0\n      var height = 0\n\n      var needsDepth = true\n      var needsStencil = true\n\n      var colorBuffer = null\n      var colorTexture = true\n      var colorFormat = 'rgba'\n      var colorType = 'uint8'\n      var colorCount = 1\n\n      var depthBuffer = null\n      var stencilBuffer = null\n      var depthStencilBuffer = null\n      var depthStencilTexture = false\n\n      if (typeof a === 'number') {\n        width = a | 0\n        height = (b | 0) || width\n      } else if (!a) {\n        width = height = 1\n      } else {\n        check$1.type(a, 'object', 'invalid arguments for framebuffer')\n        var options = a\n\n        if ('shape' in options) {\n          var shape = options.shape\n          check$1(Array.isArray(shape) && shape.length >= 2,\n            'invalid shape for framebuffer')\n          width = shape[0]\n          height = shape[1]\n        } else {\n          if ('radius' in options) {\n            width = height = options.radius\n          }\n          if ('width' in options) {\n            width = options.width\n          }\n          if ('height' in options) {\n            height = options.height\n          }\n        }\n\n        if ('color' in options ||\n            'colors' in options) {\n          colorBuffer =\n            options.color ||\n            options.colors\n          if (Array.isArray(colorBuffer)) {\n            check$1(\n              colorBuffer.length === 1 || extensions.webgl_draw_buffers,\n              'multiple render targets not supported')\n          }\n        }\n\n        if (!colorBuffer) {\n          if ('colorCount' in options) {\n            colorCount = options.colorCount | 0\n            check$1(colorCount > 0, 'invalid color buffer count')\n          }\n\n          if ('colorTexture' in options) {\n            colorTexture = !!options.colorTexture\n            colorFormat = 'rgba4'\n          }\n\n          if ('colorType' in options) {\n            colorType = options.colorType\n            if (!colorTexture) {\n              if (colorType === 'half float' || colorType === 'float16') {\n                check$1(extensions.ext_color_buffer_half_float,\n                  'you must enable EXT_color_buffer_half_float to use 16-bit render buffers')\n                colorFormat = 'rgba16f'\n              } else if (colorType === 'float' || colorType === 'float32') {\n                check$1(extensions.webgl_color_buffer_float,\n                  'you must enable WEBGL_color_buffer_float in order to use 32-bit floating point renderbuffers')\n                colorFormat = 'rgba32f'\n              }\n            } else {\n              check$1(extensions.oes_texture_float ||\n                !(colorType === 'float' || colorType === 'float32'),\n              'you must enable OES_texture_float in order to use floating point framebuffer objects')\n              check$1(extensions.oes_texture_half_float ||\n                !(colorType === 'half float' || colorType === 'float16'),\n              'you must enable OES_texture_half_float in order to use 16-bit floating point framebuffer objects')\n            }\n            check$1.oneOf(colorType, colorTypes, 'invalid color type')\n          }\n\n          if ('colorFormat' in options) {\n            colorFormat = options.colorFormat\n            if (colorTextureFormats.indexOf(colorFormat) >= 0) {\n              colorTexture = true\n            } else if (colorRenderbufferFormats.indexOf(colorFormat) >= 0) {\n              colorTexture = false\n            } else {\n              check$1.optional(function () {\n                if (colorTexture) {\n                  check$1.oneOf(\n                    options.colorFormat, colorTextureFormats,\n                    'invalid color format for texture')\n                } else {\n                  check$1.oneOf(\n                    options.colorFormat, colorRenderbufferFormats,\n                    'invalid color format for renderbuffer')\n                }\n              })\n            }\n          }\n        }\n\n        if ('depthTexture' in options || 'depthStencilTexture' in options) {\n          depthStencilTexture = !!(options.depthTexture ||\n            options.depthStencilTexture)\n          check$1(!depthStencilTexture || extensions.webgl_depth_texture,\n            'webgl_depth_texture extension not supported')\n        }\n\n        if ('depth' in options) {\n          if (typeof options.depth === 'boolean') {\n            needsDepth = options.depth\n          } else {\n            depthBuffer = options.depth\n            needsStencil = false\n          }\n        }\n\n        if ('stencil' in options) {\n          if (typeof options.stencil === 'boolean') {\n            needsStencil = options.stencil\n          } else {\n            stencilBuffer = options.stencil\n            needsDepth = false\n          }\n        }\n\n        if ('depthStencil' in options) {\n          if (typeof options.depthStencil === 'boolean') {\n            needsDepth = needsStencil = options.depthStencil\n          } else {\n            depthStencilBuffer = options.depthStencil\n            needsDepth = false\n            needsStencil = false\n          }\n        }\n      }\n\n      // parse attachments\n      var colorAttachments = null\n      var depthAttachment = null\n      var stencilAttachment = null\n      var depthStencilAttachment = null\n\n      // Set up color attachments\n      if (Array.isArray(colorBuffer)) {\n        colorAttachments = colorBuffer.map(parseAttachment)\n      } else if (colorBuffer) {\n        colorAttachments = [parseAttachment(colorBuffer)]\n      } else {\n        colorAttachments = new Array(colorCount)\n        for (i = 0; i < colorCount; ++i) {\n          colorAttachments[i] = allocAttachment(\n            width,\n            height,\n            colorTexture,\n            colorFormat,\n            colorType)\n        }\n      }\n\n      check$1(extensions.webgl_draw_buffers || colorAttachments.length <= 1,\n        'you must enable the WEBGL_draw_buffers extension in order to use multiple color buffers.')\n      check$1(colorAttachments.length <= limits.maxColorAttachments,\n        'too many color attachments, not supported')\n\n      width = width || colorAttachments[0].width\n      height = height || colorAttachments[0].height\n\n      if (depthBuffer) {\n        depthAttachment = parseAttachment(depthBuffer)\n      } else if (needsDepth && !needsStencil) {\n        depthAttachment = allocAttachment(\n          width,\n          height,\n          depthStencilTexture,\n          'depth',\n          'uint32')\n      }\n\n      if (stencilBuffer) {\n        stencilAttachment = parseAttachment(stencilBuffer)\n      } else if (needsStencil && !needsDepth) {\n        stencilAttachment = allocAttachment(\n          width,\n          height,\n          false,\n          'stencil',\n          'uint8')\n      }\n\n      if (depthStencilBuffer) {\n        depthStencilAttachment = parseAttachment(depthStencilBuffer)\n      } else if (!depthBuffer && !stencilBuffer && needsStencil && needsDepth) {\n        depthStencilAttachment = allocAttachment(\n          width,\n          height,\n          depthStencilTexture,\n          'depth stencil',\n          'depth stencil')\n      }\n\n      check$1(\n        (!!depthBuffer) + (!!stencilBuffer) + (!!depthStencilBuffer) <= 1,\n        'invalid framebuffer configuration, can specify exactly one depth/stencil attachment')\n\n      var commonColorAttachmentSize = null\n\n      for (i = 0; i < colorAttachments.length; ++i) {\n        incRefAndCheckShape(colorAttachments[i], width, height)\n        check$1(!colorAttachments[i] ||\n          (colorAttachments[i].texture &&\n            colorTextureFormatEnums.indexOf(colorAttachments[i].texture._texture.format) >= 0) ||\n          (colorAttachments[i].renderbuffer &&\n            colorRenderbufferFormatEnums.indexOf(colorAttachments[i].renderbuffer._renderbuffer.format) >= 0),\n        'framebuffer color attachment ' + i + ' is invalid')\n\n        if (colorAttachments[i] && colorAttachments[i].texture) {\n          var colorAttachmentSize =\n              textureFormatChannels[colorAttachments[i].texture._texture.format] *\n              textureTypeSizes[colorAttachments[i].texture._texture.type]\n\n          if (commonColorAttachmentSize === null) {\n            commonColorAttachmentSize = colorAttachmentSize\n          } else {\n            // We need to make sure that all color attachments have the same number of bitplanes\n            // (that is, the same numer of bits per pixel)\n            // This is required by the GLES2.0 standard. See the beginning of Chapter 4 in that document.\n            check$1(commonColorAttachmentSize === colorAttachmentSize,\n              'all color attachments much have the same number of bits per pixel.')\n          }\n        }\n      }\n      incRefAndCheckShape(depthAttachment, width, height)\n      check$1(!depthAttachment ||\n        (depthAttachment.texture &&\n          depthAttachment.texture._texture.format === GL_DEPTH_COMPONENT$1) ||\n        (depthAttachment.renderbuffer &&\n          depthAttachment.renderbuffer._renderbuffer.format === GL_DEPTH_COMPONENT16$1),\n      'invalid depth attachment for framebuffer object')\n      incRefAndCheckShape(stencilAttachment, width, height)\n      check$1(!stencilAttachment ||\n        (stencilAttachment.renderbuffer &&\n          stencilAttachment.renderbuffer._renderbuffer.format === GL_STENCIL_INDEX8$1),\n      'invalid stencil attachment for framebuffer object')\n      incRefAndCheckShape(depthStencilAttachment, width, height)\n      check$1(!depthStencilAttachment ||\n        (depthStencilAttachment.texture &&\n          depthStencilAttachment.texture._texture.format === GL_DEPTH_STENCIL$2) ||\n        (depthStencilAttachment.renderbuffer &&\n          depthStencilAttachment.renderbuffer._renderbuffer.format === GL_DEPTH_STENCIL$2),\n      'invalid depth-stencil attachment for framebuffer object')\n\n      // decrement references\n      decFBORefs(framebuffer)\n\n      framebuffer.width = width\n      framebuffer.height = height\n\n      framebuffer.colorAttachments = colorAttachments\n      framebuffer.depthAttachment = depthAttachment\n      framebuffer.stencilAttachment = stencilAttachment\n      framebuffer.depthStencilAttachment = depthStencilAttachment\n\n      reglFramebuffer.color = colorAttachments.map(unwrapAttachment)\n      reglFramebuffer.depth = unwrapAttachment(depthAttachment)\n      reglFramebuffer.stencil = unwrapAttachment(stencilAttachment)\n      reglFramebuffer.depthStencil = unwrapAttachment(depthStencilAttachment)\n\n      reglFramebuffer.width = framebuffer.width\n      reglFramebuffer.height = framebuffer.height\n\n      updateFramebuffer(framebuffer)\n\n      return reglFramebuffer\n    }\n\n    function resize (w_, h_) {\n      check$1(framebufferState.next !== framebuffer,\n        'can not resize a framebuffer which is currently in use')\n\n      var w = Math.max(w_ | 0, 1)\n      var h = Math.max((h_ | 0) || w, 1)\n      if (w === framebuffer.width && h === framebuffer.height) {\n        return reglFramebuffer\n      }\n\n      // resize all buffers\n      var colorAttachments = framebuffer.colorAttachments\n      for (var i = 0; i < colorAttachments.length; ++i) {\n        resizeAttachment(colorAttachments[i], w, h)\n      }\n      resizeAttachment(framebuffer.depthAttachment, w, h)\n      resizeAttachment(framebuffer.stencilAttachment, w, h)\n      resizeAttachment(framebuffer.depthStencilAttachment, w, h)\n\n      framebuffer.width = reglFramebuffer.width = w\n      framebuffer.height = reglFramebuffer.height = h\n\n      updateFramebuffer(framebuffer)\n\n      return reglFramebuffer\n    }\n\n    reglFramebuffer(a0, a1)\n\n    return extend(reglFramebuffer, {\n      resize: resize,\n      _reglType: 'framebuffer',\n      _framebuffer: framebuffer,\n      destroy: function () {\n        destroy(framebuffer)\n        decFBORefs(framebuffer)\n      },\n      use: function (block) {\n        framebufferState.setFBO({\n          framebuffer: reglFramebuffer\n        }, block)\n      }\n    })\n  }\n\n  function createCubeFBO (options) {\n    var faces = Array(6)\n\n    function reglFramebufferCube (a) {\n      var i\n\n      check$1(faces.indexOf(framebufferState.next) < 0,\n        'can not update framebuffer which is currently in use')\n\n      var params = {\n        color: null\n      }\n\n      var radius = 0\n\n      var colorBuffer = null\n      var colorFormat = 'rgba'\n      var colorType = 'uint8'\n      var colorCount = 1\n\n      if (typeof a === 'number') {\n        radius = a | 0\n      } else if (!a) {\n        radius = 1\n      } else {\n        check$1.type(a, 'object', 'invalid arguments for framebuffer')\n        var options = a\n\n        if ('shape' in options) {\n          var shape = options.shape\n          check$1(\n            Array.isArray(shape) && shape.length >= 2,\n            'invalid shape for framebuffer')\n          check$1(\n            shape[0] === shape[1],\n            'cube framebuffer must be square')\n          radius = shape[0]\n        } else {\n          if ('radius' in options) {\n            radius = options.radius | 0\n          }\n          if ('width' in options) {\n            radius = options.width | 0\n            if ('height' in options) {\n              check$1(options.height === radius, 'must be square')\n            }\n          } else if ('height' in options) {\n            radius = options.height | 0\n          }\n        }\n\n        if ('color' in options ||\n            'colors' in options) {\n          colorBuffer =\n            options.color ||\n            options.colors\n          if (Array.isArray(colorBuffer)) {\n            check$1(\n              colorBuffer.length === 1 || extensions.webgl_draw_buffers,\n              'multiple render targets not supported')\n          }\n        }\n\n        if (!colorBuffer) {\n          if ('colorCount' in options) {\n            colorCount = options.colorCount | 0\n            check$1(colorCount > 0, 'invalid color buffer count')\n          }\n\n          if ('colorType' in options) {\n            check$1.oneOf(\n              options.colorType, colorTypes,\n              'invalid color type')\n            colorType = options.colorType\n          }\n\n          if ('colorFormat' in options) {\n            colorFormat = options.colorFormat\n            check$1.oneOf(\n              options.colorFormat, colorTextureFormats,\n              'invalid color format for texture')\n          }\n        }\n\n        if ('depth' in options) {\n          params.depth = options.depth\n        }\n\n        if ('stencil' in options) {\n          params.stencil = options.stencil\n        }\n\n        if ('depthStencil' in options) {\n          params.depthStencil = options.depthStencil\n        }\n      }\n\n      var colorCubes\n      if (colorBuffer) {\n        if (Array.isArray(colorBuffer)) {\n          colorCubes = []\n          for (i = 0; i < colorBuffer.length; ++i) {\n            colorCubes[i] = colorBuffer[i]\n          }\n        } else {\n          colorCubes = [ colorBuffer ]\n        }\n      } else {\n        colorCubes = Array(colorCount)\n        var cubeMapParams = {\n          radius: radius,\n          format: colorFormat,\n          type: colorType\n        }\n        for (i = 0; i < colorCount; ++i) {\n          colorCubes[i] = textureState.createCube(cubeMapParams)\n        }\n      }\n\n      // Check color cubes\n      params.color = Array(colorCubes.length)\n      for (i = 0; i < colorCubes.length; ++i) {\n        var cube = colorCubes[i]\n        check$1(\n          typeof cube === 'function' && cube._reglType === 'textureCube',\n          'invalid cube map')\n        radius = radius || cube.width\n        check$1(\n          cube.width === radius && cube.height === radius,\n          'invalid cube map shape')\n        params.color[i] = {\n          target: GL_TEXTURE_CUBE_MAP_POSITIVE_X$2,\n          data: colorCubes[i]\n        }\n      }\n\n      for (i = 0; i < 6; ++i) {\n        for (var j = 0; j < colorCubes.length; ++j) {\n          params.color[j].target = GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 + i\n        }\n        // reuse depth-stencil attachments across all cube maps\n        if (i > 0) {\n          params.depth = faces[0].depth\n          params.stencil = faces[0].stencil\n          params.depthStencil = faces[0].depthStencil\n        }\n        if (faces[i]) {\n          (faces[i])(params)\n        } else {\n          faces[i] = createFBO(params)\n        }\n      }\n\n      return extend(reglFramebufferCube, {\n        width: radius,\n        height: radius,\n        color: colorCubes\n      })\n    }\n\n    function resize (radius_) {\n      var i\n      var radius = radius_ | 0\n      check$1(radius > 0 && radius <= limits.maxCubeMapSize,\n        'invalid radius for cube fbo')\n\n      if (radius === reglFramebufferCube.width) {\n        return reglFramebufferCube\n      }\n\n      var colors = reglFramebufferCube.color\n      for (i = 0; i < colors.length; ++i) {\n        colors[i].resize(radius)\n      }\n\n      for (i = 0; i < 6; ++i) {\n        faces[i].resize(radius)\n      }\n\n      reglFramebufferCube.width = reglFramebufferCube.height = radius\n\n      return reglFramebufferCube\n    }\n\n    reglFramebufferCube(options)\n\n    return extend(reglFramebufferCube, {\n      faces: faces,\n      resize: resize,\n      _reglType: 'framebufferCube',\n      destroy: function () {\n        faces.forEach(function (f) {\n          f.destroy()\n        })\n      }\n    })\n  }\n\n  function restoreFramebuffers () {\n    framebufferState.cur = null\n    framebufferState.next = null\n    framebufferState.dirty = true\n    values(framebufferSet).forEach(function (fb) {\n      fb.framebuffer = gl.createFramebuffer()\n      updateFramebuffer(fb)\n    })\n  }\n\n  return extend(framebufferState, {\n    getFramebuffer: function (object) {\n      if (typeof object === 'function' && object._reglType === 'framebuffer') {\n        var fbo = object._framebuffer\n        if (fbo instanceof REGLFramebuffer) {\n          return fbo\n        }\n      }\n      return null\n    },\n    create: createFBO,\n    createCube: createCubeFBO,\n    clear: function () {\n      values(framebufferSet).forEach(destroy)\n    },\n    restore: restoreFramebuffers\n  })\n}\n\nvar GL_FLOAT$6 = 5126\nvar GL_ARRAY_BUFFER$1 = 34962\nvar GL_ELEMENT_ARRAY_BUFFER$1 = 34963\n\nvar VAO_OPTIONS = [\n  'attributes',\n  'elements',\n  'offset',\n  'count',\n  'primitive',\n  'instances'\n]\n\nfunction AttributeRecord () {\n  this.state = 0\n\n  this.x = 0.0\n  this.y = 0.0\n  this.z = 0.0\n  this.w = 0.0\n\n  this.buffer = null\n  this.size = 0\n  this.normalized = false\n  this.type = GL_FLOAT$6\n  this.offset = 0\n  this.stride = 0\n  this.divisor = 0\n}\n\nfunction wrapAttributeState (\n  gl,\n  extensions,\n  limits,\n  stats,\n  bufferState,\n  elementState,\n  drawState) {\n  var NUM_ATTRIBUTES = limits.maxAttributes\n  var attributeBindings = new Array(NUM_ATTRIBUTES)\n  for (var i = 0; i < NUM_ATTRIBUTES; ++i) {\n    attributeBindings[i] = new AttributeRecord()\n  }\n  var vaoCount = 0\n  var vaoSet = {}\n\n  var state = {\n    Record: AttributeRecord,\n    scope: {},\n    state: attributeBindings,\n    currentVAO: null,\n    targetVAO: null,\n    restore: extVAO() ? restoreVAO : function () {},\n    createVAO: createVAO,\n    getVAO: getVAO,\n    destroyBuffer: destroyBuffer,\n    setVAO: extVAO() ? setVAOEXT : setVAOEmulated,\n    clear: extVAO() ? destroyVAOEXT : function () {}\n  }\n\n  function destroyBuffer (buffer) {\n    for (var i = 0; i < attributeBindings.length; ++i) {\n      var record = attributeBindings[i]\n      if (record.buffer === buffer) {\n        gl.disableVertexAttribArray(i)\n        record.buffer = null\n      }\n    }\n  }\n\n  function extVAO () {\n    return extensions.oes_vertex_array_object\n  }\n\n  function extInstanced () {\n    return extensions.angle_instanced_arrays\n  }\n\n  function getVAO (vao) {\n    if (typeof vao === 'function' && vao._vao) {\n      return vao._vao\n    }\n    return null\n  }\n\n  function setVAOEXT (vao) {\n    if (vao === state.currentVAO) {\n      return\n    }\n    var ext = extVAO()\n    if (vao) {\n      ext.bindVertexArrayOES(vao.vao)\n    } else {\n      ext.bindVertexArrayOES(null)\n    }\n    state.currentVAO = vao\n  }\n\n  function setVAOEmulated (vao) {\n    if (vao === state.currentVAO) {\n      return\n    }\n    if (vao) {\n      vao.bindAttrs()\n    } else {\n      var exti = extInstanced()\n      for (var i = 0; i < attributeBindings.length; ++i) {\n        var binding = attributeBindings[i]\n        if (binding.buffer) {\n          gl.enableVertexAttribArray(i)\n          binding.buffer.bind()\n          gl.vertexAttribPointer(i, binding.size, binding.type, binding.normalized, binding.stride, binding.offfset)\n          if (exti && binding.divisor) {\n            exti.vertexAttribDivisorANGLE(i, binding.divisor)\n          }\n        } else {\n          gl.disableVertexAttribArray(i)\n          gl.vertexAttrib4f(i, binding.x, binding.y, binding.z, binding.w)\n        }\n      }\n      if (drawState.elements) {\n        gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, drawState.elements.buffer.buffer)\n      } else {\n        gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, null)\n      }\n    }\n    state.currentVAO = vao\n  }\n\n  function destroyVAOEXT () {\n    values(vaoSet).forEach(function (vao) {\n      vao.destroy()\n    })\n  }\n\n  function REGLVAO () {\n    this.id = ++vaoCount\n    this.attributes = []\n    this.elements = null\n    this.ownsElements = false\n    this.count = 0\n    this.offset = 0\n    this.instances = -1\n    this.primitive = 4\n    var extension = extVAO()\n    if (extension) {\n      this.vao = extension.createVertexArrayOES()\n    } else {\n      this.vao = null\n    }\n    vaoSet[this.id] = this\n    this.buffers = []\n  }\n\n  REGLVAO.prototype.bindAttrs = function () {\n    var exti = extInstanced()\n    var attributes = this.attributes\n    for (var i = 0; i < attributes.length; ++i) {\n      var attr = attributes[i]\n      if (attr.buffer) {\n        gl.enableVertexAttribArray(i)\n        gl.bindBuffer(GL_ARRAY_BUFFER$1, attr.buffer.buffer)\n        gl.vertexAttribPointer(i, attr.size, attr.type, attr.normalized, attr.stride, attr.offset)\n        if (exti && attr.divisor) {\n          exti.vertexAttribDivisorANGLE(i, attr.divisor)\n        }\n      } else {\n        gl.disableVertexAttribArray(i)\n        gl.vertexAttrib4f(i, attr.x, attr.y, attr.z, attr.w)\n      }\n    }\n    for (var j = attributes.length; j < NUM_ATTRIBUTES; ++j) {\n      gl.disableVertexAttribArray(j)\n    }\n    var elements = elementState.getElements(this.elements)\n    if (elements) {\n      gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, elements.buffer.buffer)\n    } else {\n      gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, null)\n    }\n  }\n\n  REGLVAO.prototype.refresh = function () {\n    var ext = extVAO()\n    if (ext) {\n      ext.bindVertexArrayOES(this.vao)\n      this.bindAttrs()\n      state.currentVAO = null\n      ext.bindVertexArrayOES(null)\n    }\n  }\n\n  REGLVAO.prototype.destroy = function () {\n    if (this.vao) {\n      var extension = extVAO()\n      if (this === state.currentVAO) {\n        state.currentVAO = null\n        extension.bindVertexArrayOES(null)\n      }\n      extension.deleteVertexArrayOES(this.vao)\n      this.vao = null\n    }\n    if (this.ownsElements) {\n      this.elements.destroy()\n      this.elements = null\n      this.ownsElements = false\n    }\n    if (vaoSet[this.id]) {\n      delete vaoSet[this.id]\n      stats.vaoCount -= 1\n    }\n  }\n\n  function restoreVAO () {\n    var ext = extVAO()\n    if (ext) {\n      values(vaoSet).forEach(function (vao) {\n        vao.refresh()\n      })\n    }\n  }\n\n  function createVAO (_attr) {\n    var vao = new REGLVAO()\n    stats.vaoCount += 1\n\n    function updateVAO (options) {\n      var attributes\n      if (Array.isArray(options)) {\n        attributes = options\n        if (vao.elements && vao.ownsElements) {\n          vao.elements.destroy()\n        }\n        vao.elements = null\n        vao.ownsElements = false\n        vao.offset = 0\n        vao.count = 0\n        vao.instances = -1\n        vao.primitive = 4\n      } else {\n        check$1(typeof options === 'object', 'invalid arguments for create vao')\n        check$1('attributes' in options, 'must specify attributes for vao')\n        if (options.elements) {\n          var elements = options.elements\n          if (vao.ownsElements) {\n            if (typeof elements === 'function' && elements._reglType === 'elements') {\n              vao.elements.destroy()\n              vao.ownsElements = false\n            } else {\n              vao.elements(elements)\n              vao.ownsElements = false\n            }\n          } else if (elementState.getElements(options.elements)) {\n            vao.elements = options.elements\n            vao.ownsElements = false\n          } else {\n            vao.elements = elementState.create(options.elements)\n            vao.ownsElements = true\n          }\n        } else {\n          vao.elements = null\n          vao.ownsElements = false\n        }\n        attributes = options.attributes\n\n        // set default vao\n        vao.offset = 0\n        vao.count = -1\n        vao.instances = -1\n        vao.primitive = 4\n\n        // copy element properties\n        if (vao.elements) {\n          vao.count = vao.elements._elements.vertCount\n          vao.primitive = vao.elements._elements.primType\n        }\n\n        if ('offset' in options) {\n          vao.offset = options.offset | 0\n        }\n        if ('count' in options) {\n          vao.count = options.count | 0\n        }\n        if ('instances' in options) {\n          vao.instances = options.instances | 0\n        }\n        if ('primitive' in options) {\n          check$1(options.primitive in primTypes, 'bad primitive type: ' + options.primitive)\n          vao.primitive = primTypes[options.primitive]\n        }\n\n        check$1.optional(() => {\n          var keys = Object.keys(options)\n          for (var i = 0; i < keys.length; ++i) {\n            check$1(VAO_OPTIONS.indexOf(keys[i]) >= 0, 'invalid option for vao: \"' + keys[i] + '\" valid options are ' + VAO_OPTIONS)\n          }\n        })\n        check$1(Array.isArray(attributes), 'attributes must be an array')\n      }\n\n      check$1(attributes.length < NUM_ATTRIBUTES, 'too many attributes')\n      check$1(attributes.length > 0, 'must specify at least one attribute')\n\n      var bufUpdated = {}\n      var nattributes = vao.attributes\n      nattributes.length = attributes.length\n      for (var i = 0; i < attributes.length; ++i) {\n        var spec = attributes[i]\n        var rec = nattributes[i] = new AttributeRecord()\n        var data = spec.data || spec\n        if (Array.isArray(data) || isTypedArray(data) || isNDArrayLike(data)) {\n          var buf\n          if (vao.buffers[i]) {\n            buf = vao.buffers[i]\n            if (isTypedArray(data) && buf._buffer.byteLength >= data.byteLength) {\n              buf.subdata(data)\n            } else {\n              buf.destroy()\n              vao.buffers[i] = null\n            }\n          }\n          if (!vao.buffers[i]) {\n            buf = vao.buffers[i] = bufferState.create(spec, GL_ARRAY_BUFFER$1, false, true)\n          }\n          rec.buffer = bufferState.getBuffer(buf)\n          rec.size = rec.buffer.dimension | 0\n          rec.normalized = false\n          rec.type = rec.buffer.dtype\n          rec.offset = 0\n          rec.stride = 0\n          rec.divisor = 0\n          rec.state = 1\n          bufUpdated[i] = 1\n        } else if (bufferState.getBuffer(spec)) {\n          rec.buffer = bufferState.getBuffer(spec)\n          rec.size = rec.buffer.dimension | 0\n          rec.normalized = false\n          rec.type = rec.buffer.dtype\n          rec.offset = 0\n          rec.stride = 0\n          rec.divisor = 0\n          rec.state = 1\n        } else if (bufferState.getBuffer(spec.buffer)) {\n          rec.buffer = bufferState.getBuffer(spec.buffer)\n          rec.size = ((+spec.size) || rec.buffer.dimension) | 0\n          rec.normalized = !!spec.normalized || false\n          if ('type' in spec) {\n            check$1.parameter(spec.type, glTypes, 'invalid buffer type')\n            rec.type = glTypes[spec.type]\n          } else {\n            rec.type = rec.buffer.dtype\n          }\n          rec.offset = (spec.offset || 0) | 0\n          rec.stride = (spec.stride || 0) | 0\n          rec.divisor = (spec.divisor || 0) | 0\n          rec.state = 1\n\n          check$1(rec.size >= 1 && rec.size <= 4, 'size must be between 1 and 4')\n          check$1(rec.offset >= 0, 'invalid offset')\n          check$1(rec.stride >= 0 && rec.stride <= 255, 'stride must be between 0 and 255')\n          check$1(rec.divisor >= 0, 'divisor must be positive')\n          check$1(!rec.divisor || !!extensions.angle_instanced_arrays, 'ANGLE_instanced_arrays must be enabled to use divisor')\n        } else if ('x' in spec) {\n          check$1(i > 0, 'first attribute must not be a constant')\n          rec.x = +spec.x || 0\n          rec.y = +spec.y || 0\n          rec.z = +spec.z || 0\n          rec.w = +spec.w || 0\n          rec.state = 2\n        } else {\n          check$1(false, 'invalid attribute spec for location ' + i)\n        }\n      }\n\n      // retire unused buffers\n      for (var j = 0; j < vao.buffers.length; ++j) {\n        if (!bufUpdated[j] && vao.buffers[j]) {\n          vao.buffers[j].destroy()\n          vao.buffers[j] = null\n        }\n      }\n\n      vao.refresh()\n      return updateVAO\n    }\n\n    updateVAO.destroy = function () {\n      for (var j = 0; j < vao.buffers.length; ++j) {\n        if (vao.buffers[j]) {\n          vao.buffers[j].destroy()\n        }\n      }\n      vao.buffers.length = 0\n\n      if (vao.ownsElements) {\n        vao.elements.destroy()\n        vao.elements = null\n        vao.ownsElements = false\n      }\n\n      vao.destroy()\n    }\n\n    updateVAO._vao = vao\n    updateVAO._reglType = 'vao'\n\n    return updateVAO(_attr)\n  }\n\n  return state\n}\n\nvar GL_FRAGMENT_SHADER = 35632\nvar GL_VERTEX_SHADER = 35633\n\nvar GL_ACTIVE_UNIFORMS = 0x8B86\nvar GL_ACTIVE_ATTRIBUTES = 0x8B89\n\nfunction wrapShaderState (gl, stringStore, stats, config) {\n  // ===================================================\n  // glsl compilation and linking\n  // ===================================================\n  var fragShaders = {}\n  var vertShaders = {}\n\n  function ActiveInfo (name, id, location, info) {\n    this.name = name\n    this.id = id\n    this.location = location\n    this.info = info\n  }\n\n  function insertActiveInfo (list, info) {\n    for (var i = 0; i < list.length; ++i) {\n      if (list[i].id === info.id) {\n        list[i].location = info.location\n        return\n      }\n    }\n    list.push(info)\n  }\n\n  function getShader (type, id, command) {\n    var cache = type === GL_FRAGMENT_SHADER ? fragShaders : vertShaders\n    var shader = cache[id]\n\n    if (!shader) {\n      var source = stringStore.str(id)\n      shader = gl.createShader(type)\n      gl.shaderSource(shader, source)\n      gl.compileShader(shader)\n      check$1.shaderError(gl, shader, source, type, command)\n      cache[id] = shader\n    }\n\n    return shader\n  }\n\n  // ===================================================\n  // program linking\n  // ===================================================\n  var programCache = {}\n  var programList = []\n\n  var PROGRAM_COUNTER = 0\n\n  function REGLProgram (fragId, vertId) {\n    this.id = PROGRAM_COUNTER++\n    this.fragId = fragId\n    this.vertId = vertId\n    this.program = null\n    this.uniforms = []\n    this.attributes = []\n    this.refCount = 1\n\n    if (config.profile) {\n      this.stats = {\n        uniformsCount: 0,\n        attributesCount: 0\n      }\n    }\n  }\n\n  function linkProgram (desc, command, attributeLocations) {\n    var i, info\n\n    // -------------------------------\n    // compile & link\n    // -------------------------------\n    var fragShader = getShader(GL_FRAGMENT_SHADER, desc.fragId)\n    var vertShader = getShader(GL_VERTEX_SHADER, desc.vertId)\n\n    var program = desc.program = gl.createProgram()\n    gl.attachShader(program, fragShader)\n    gl.attachShader(program, vertShader)\n    if (attributeLocations) {\n      for (i = 0; i < attributeLocations.length; ++i) {\n        var binding = attributeLocations[i]\n        gl.bindAttribLocation(program, binding[0], binding[1])\n      }\n    }\n\n    gl.linkProgram(program)\n    check$1.linkError(\n      gl,\n      program,\n      stringStore.str(desc.fragId),\n      stringStore.str(desc.vertId),\n      command)\n\n    // -------------------------------\n    // grab uniforms\n    // -------------------------------\n    var numUniforms = gl.getProgramParameter(program, GL_ACTIVE_UNIFORMS)\n    if (config.profile) {\n      desc.stats.uniformsCount = numUniforms\n    }\n    var uniforms = desc.uniforms\n    for (i = 0; i < numUniforms; ++i) {\n      info = gl.getActiveUniform(program, i)\n      if (info) {\n        if (info.size > 1) {\n          for (var j = 0; j < info.size; ++j) {\n            var name = info.name.replace('[0]', '[' + j + ']')\n            insertActiveInfo(uniforms, new ActiveInfo(\n              name,\n              stringStore.id(name),\n              gl.getUniformLocation(program, name),\n              info))\n          }\n        }\n        var uniName = info.name\n        if (info.size > 1) {\n          uniName = uniName.replace('[0]', '')\n        }\n        insertActiveInfo(uniforms, new ActiveInfo(\n          uniName,\n          stringStore.id(uniName),\n          gl.getUniformLocation(program, uniName),\n          info))\n      }\n    }\n\n    // -------------------------------\n    // grab attributes\n    // -------------------------------\n    var numAttributes = gl.getProgramParameter(program, GL_ACTIVE_ATTRIBUTES)\n    if (config.profile) {\n      desc.stats.attributesCount = numAttributes\n    }\n\n    var attributes = desc.attributes\n    for (i = 0; i < numAttributes; ++i) {\n      info = gl.getActiveAttrib(program, i)\n      if (info) {\n        insertActiveInfo(attributes, new ActiveInfo(\n          info.name,\n          stringStore.id(info.name),\n          gl.getAttribLocation(program, info.name),\n          info))\n      }\n    }\n  }\n\n  if (config.profile) {\n    stats.getMaxUniformsCount = function () {\n      var m = 0\n      programList.forEach(function (desc) {\n        if (desc.stats.uniformsCount > m) {\n          m = desc.stats.uniformsCount\n        }\n      })\n      return m\n    }\n\n    stats.getMaxAttributesCount = function () {\n      var m = 0\n      programList.forEach(function (desc) {\n        if (desc.stats.attributesCount > m) {\n          m = desc.stats.attributesCount\n        }\n      })\n      return m\n    }\n  }\n\n  function restoreShaders () {\n    fragShaders = {}\n    vertShaders = {}\n    for (var i = 0; i < programList.length; ++i) {\n      linkProgram(programList[i], null, programList[i].attributes.map(function (info) {\n        return [info.location, info.name]\n      }))\n    }\n  }\n\n  return {\n    clear: function () {\n      var deleteShader = gl.deleteShader.bind(gl)\n      values(fragShaders).forEach(deleteShader)\n      fragShaders = {}\n      values(vertShaders).forEach(deleteShader)\n      vertShaders = {}\n\n      programList.forEach(function (desc) {\n        gl.deleteProgram(desc.program)\n      })\n      programList.length = 0\n      programCache = {}\n\n      stats.shaderCount = 0\n    },\n\n    program: function (vertId, fragId, command, attribLocations) {\n      check$1.command(vertId >= 0, 'missing vertex shader', command)\n      check$1.command(fragId >= 0, 'missing fragment shader', command)\n\n      var cache = programCache[fragId]\n      if (!cache) {\n        cache = programCache[fragId] = {}\n      }\n      var prevProgram = cache[vertId]\n      if (prevProgram) {\n        prevProgram.refCount++\n        if (!attribLocations) {\n          return prevProgram\n        }\n      }\n      var program = new REGLProgram(fragId, vertId)\n      stats.shaderCount++\n      linkProgram(program, command, attribLocations)\n      if (!prevProgram) {\n        cache[vertId] = program\n      }\n      programList.push(program)\n      return extend(program, {\n        destroy: function () {\n          program.refCount--\n          if (program.refCount <= 0) {\n            gl.deleteProgram(program.program)\n            var idx = programList.indexOf(program)\n            programList.splice(idx, 1)\n            stats.shaderCount--\n          }\n          // no program is linked to this vert anymore\n          if (cache[program.vertId].refCount <= 0) {\n            gl.deleteShader(vertShaders[program.vertId])\n            delete vertShaders[program.vertId]\n            delete programCache[program.fragId][program.vertId]\n          }\n          // no program is linked to this frag anymore\n          if (!Object.keys(programCache[program.fragId]).length) {\n            gl.deleteShader(fragShaders[program.fragId])\n            delete fragShaders[program.fragId]\n            delete programCache[program.fragId]\n          }\n        }\n      })\n    },\n\n    restore: restoreShaders,\n\n    shader: getShader,\n\n    frag: -1,\n    vert: -1\n  }\n}\n\nvar GL_RGBA$3 = 6408\nvar GL_UNSIGNED_BYTE$7 = 5121\nvar GL_PACK_ALIGNMENT = 0x0D05\nvar GL_FLOAT$7 = 0x1406 // 5126\n\nfunction wrapReadPixels (\n  gl,\n  framebufferState,\n  reglPoll,\n  context,\n  glAttributes,\n  extensions,\n  limits) {\n  function readPixelsImpl (input) {\n    var type\n    if (framebufferState.next === null) {\n      check$1(\n        glAttributes.preserveDrawingBuffer,\n        'you must create a webgl context with \"preserveDrawingBuffer\":true in order to read pixels from the drawing buffer')\n      type = GL_UNSIGNED_BYTE$7\n    } else {\n      check$1(\n        framebufferState.next.colorAttachments[0].texture !== null,\n        'You cannot read from a renderbuffer')\n      type = framebufferState.next.colorAttachments[0].texture._texture.type\n\n      check$1.optional(function () {\n        if (extensions.oes_texture_float) {\n          check$1(\n            type === GL_UNSIGNED_BYTE$7 || type === GL_FLOAT$7,\n            'Reading from a framebuffer is only allowed for the types \\'uint8\\' and \\'float\\'')\n\n          if (type === GL_FLOAT$7) {\n            check$1(limits.readFloat, 'Reading \\'float\\' values is not permitted in your browser. For a fallback, please see: https://www.npmjs.com/package/glsl-read-float')\n          }\n        } else {\n          check$1(\n            type === GL_UNSIGNED_BYTE$7,\n            'Reading from a framebuffer is only allowed for the type \\'uint8\\'')\n        }\n      })\n    }\n\n    var x = 0\n    var y = 0\n    var width = context.framebufferWidth\n    var height = context.framebufferHeight\n    var data = null\n\n    if (isTypedArray(input)) {\n      data = input\n    } else if (input) {\n      check$1.type(input, 'object', 'invalid arguments to regl.read()')\n      x = input.x | 0\n      y = input.y | 0\n      check$1(\n        x >= 0 && x < context.framebufferWidth,\n        'invalid x offset for regl.read')\n      check$1(\n        y >= 0 && y < context.framebufferHeight,\n        'invalid y offset for regl.read')\n      width = (input.width || (context.framebufferWidth - x)) | 0\n      height = (input.height || (context.framebufferHeight - y)) | 0\n      data = input.data || null\n    }\n\n    // sanity check input.data\n    if (data) {\n      if (type === GL_UNSIGNED_BYTE$7) {\n        check$1(\n          data instanceof Uint8Array,\n          'buffer must be \\'Uint8Array\\' when reading from a framebuffer of type \\'uint8\\'')\n      } else if (type === GL_FLOAT$7) {\n        check$1(\n          data instanceof Float32Array,\n          'buffer must be \\'Float32Array\\' when reading from a framebuffer of type \\'float\\'')\n      }\n    }\n\n    check$1(\n      width > 0 && width + x <= context.framebufferWidth,\n      'invalid width for read pixels')\n    check$1(\n      height > 0 && height + y <= context.framebufferHeight,\n      'invalid height for read pixels')\n\n    // Update WebGL state\n    reglPoll()\n\n    // Compute size\n    var size = width * height * 4\n\n    // Allocate data\n    if (!data) {\n      if (type === GL_UNSIGNED_BYTE$7) {\n        data = new Uint8Array(size)\n      } else if (type === GL_FLOAT$7) {\n        data = data || new Float32Array(size)\n      }\n    }\n\n    // Type check\n    check$1.isTypedArray(data, 'data buffer for regl.read() must be a typedarray')\n    check$1(data.byteLength >= size, 'data buffer for regl.read() too small')\n\n    // Run read pixels\n    gl.pixelStorei(GL_PACK_ALIGNMENT, 4)\n    gl.readPixels(x, y, width, height, GL_RGBA$3,\n      type,\n      data)\n\n    return data\n  }\n\n  function readPixelsFBO (options) {\n    var result\n    framebufferState.setFBO({\n      framebuffer: options.framebuffer\n    }, function () {\n      result = readPixelsImpl(options)\n    })\n    return result\n  }\n\n  function readPixels (options) {\n    if (!options || !('framebuffer' in options)) {\n      return readPixelsImpl(options)\n    } else {\n      return readPixelsFBO(options)\n    }\n  }\n\n  return readPixels\n}\n\nfunction slice (x) {\n  return Array.prototype.slice.call(x)\n}\n\nfunction join (x) {\n  return slice(x).join('')\n}\n\nfunction createEnvironment () {\n  // Unique variable id counter\n  var varCounter = 0\n\n  // Linked values are passed from this scope into the generated code block\n  // Calling link() passes a value into the generated scope and returns\n  // the variable name which it is bound to\n  var linkedNames = []\n  var linkedValues = []\n  function link (value) {\n    for (var i = 0; i < linkedValues.length; ++i) {\n      if (linkedValues[i] === value) {\n        return linkedNames[i]\n      }\n    }\n\n    var name = 'g' + (varCounter++)\n    linkedNames.push(name)\n    linkedValues.push(value)\n    return name\n  }\n\n  // create a code block\n  function block () {\n    var code = []\n    function push () {\n      code.push.apply(code, slice(arguments))\n    }\n\n    var vars = []\n    function def () {\n      var name = 'v' + (varCounter++)\n      vars.push(name)\n\n      if (arguments.length > 0) {\n        code.push(name, '=')\n        code.push.apply(code, slice(arguments))\n        code.push(';')\n      }\n\n      return name\n    }\n\n    return extend(push, {\n      def: def,\n      toString: function () {\n        return join([\n          (vars.length > 0 ? 'var ' + vars.join(',') + ';' : ''),\n          join(code)\n        ])\n      }\n    })\n  }\n\n  function scope () {\n    var entry = block()\n    var exit = block()\n\n    var entryToString = entry.toString\n    var exitToString = exit.toString\n\n    function save (object, prop) {\n      exit(object, prop, '=', entry.def(object, prop), ';')\n    }\n\n    return extend(function () {\n      entry.apply(entry, slice(arguments))\n    }, {\n      def: entry.def,\n      entry: entry,\n      exit: exit,\n      save: save,\n      set: function (object, prop, value) {\n        save(object, prop)\n        entry(object, prop, '=', value, ';')\n      },\n      toString: function () {\n        return entryToString() + exitToString()\n      }\n    })\n  }\n\n  function conditional () {\n    var pred = join(arguments)\n    var thenBlock = scope()\n    var elseBlock = scope()\n\n    var thenToString = thenBlock.toString\n    var elseToString = elseBlock.toString\n\n    return extend(thenBlock, {\n      then: function () {\n        thenBlock.apply(thenBlock, slice(arguments))\n        return this\n      },\n      else: function () {\n        elseBlock.apply(elseBlock, slice(arguments))\n        return this\n      },\n      toString: function () {\n        var elseClause = elseToString()\n        if (elseClause) {\n          elseClause = 'else{' + elseClause + '}'\n        }\n        return join([\n          'if(', pred, '){',\n          thenToString(),\n          '}', elseClause\n        ])\n      }\n    })\n  }\n\n  // procedure list\n  var globalBlock = block()\n  var procedures = {}\n  function proc (name, count) {\n    var args = []\n    function arg () {\n      var name = 'a' + args.length\n      args.push(name)\n      return name\n    }\n\n    count = count || 0\n    for (var i = 0; i < count; ++i) {\n      arg()\n    }\n\n    var body = scope()\n    var bodyToString = body.toString\n\n    var result = procedures[name] = extend(body, {\n      arg: arg,\n      toString: function () {\n        return join([\n          'function(', args.join(), '){',\n          bodyToString(),\n          '}'\n        ])\n      }\n    })\n\n    return result\n  }\n\n  function compile () {\n    var code = ['\"use strict\";',\n      globalBlock,\n      'return {']\n    Object.keys(procedures).forEach(function (name) {\n      code.push('\"', name, '\":', procedures[name].toString(), ',')\n    })\n    code.push('}')\n    var src = join(code)\n      .replace(/;/g, ';\\n')\n      .replace(/}/g, '}\\n')\n      .replace(/{/g, '{\\n')\n    var proc = Function.apply(null, linkedNames.concat(src))\n    return proc.apply(null, linkedValues)\n  }\n\n  return {\n    global: globalBlock,\n    link: link,\n    block: block,\n    proc: proc,\n    scope: scope,\n    cond: conditional,\n    compile: compile\n  }\n}\n\n// \"cute\" names for vector components\nvar CUTE_COMPONENTS = 'xyzw'.split('')\n\nvar GL_UNSIGNED_BYTE$8 = 5121\n\nvar ATTRIB_STATE_POINTER = 1\nvar ATTRIB_STATE_CONSTANT = 2\n\nvar DYN_FUNC$1 = 0\nvar DYN_PROP$1 = 1\nvar DYN_CONTEXT$1 = 2\nvar DYN_STATE$1 = 3\nvar DYN_THUNK = 4\nvar DYN_CONSTANT$1 = 5\nvar DYN_ARRAY$1 = 6\n\nvar S_DITHER = 'dither'\nvar S_BLEND_ENABLE = 'blend.enable'\nvar S_BLEND_COLOR = 'blend.color'\nvar S_BLEND_EQUATION = 'blend.equation'\nvar S_BLEND_FUNC = 'blend.func'\nvar S_DEPTH_ENABLE = 'depth.enable'\nvar S_DEPTH_FUNC = 'depth.func'\nvar S_DEPTH_RANGE = 'depth.range'\nvar S_DEPTH_MASK = 'depth.mask'\nvar S_COLOR_MASK = 'colorMask'\nvar S_CULL_ENABLE = 'cull.enable'\nvar S_CULL_FACE = 'cull.face'\nvar S_FRONT_FACE = 'frontFace'\nvar S_LINE_WIDTH = 'lineWidth'\nvar S_POLYGON_OFFSET_ENABLE = 'polygonOffset.enable'\nvar S_POLYGON_OFFSET_OFFSET = 'polygonOffset.offset'\nvar S_SAMPLE_ALPHA = 'sample.alpha'\nvar S_SAMPLE_ENABLE = 'sample.enable'\nvar S_SAMPLE_COVERAGE = 'sample.coverage'\nvar S_STENCIL_ENABLE = 'stencil.enable'\nvar S_STENCIL_MASK = 'stencil.mask'\nvar S_STENCIL_FUNC = 'stencil.func'\nvar S_STENCIL_OPFRONT = 'stencil.opFront'\nvar S_STENCIL_OPBACK = 'stencil.opBack'\nvar S_SCISSOR_ENABLE = 'scissor.enable'\nvar S_SCISSOR_BOX = 'scissor.box'\nvar S_VIEWPORT = 'viewport'\n\nvar S_PROFILE = 'profile'\n\nvar S_FRAMEBUFFER = 'framebuffer'\nvar S_VERT = 'vert'\nvar S_FRAG = 'frag'\nvar S_ELEMENTS = 'elements'\nvar S_PRIMITIVE = 'primitive'\nvar S_COUNT = 'count'\nvar S_OFFSET = 'offset'\nvar S_INSTANCES = 'instances'\nvar S_VAO = 'vao'\n\nvar SUFFIX_WIDTH = 'Width'\nvar SUFFIX_HEIGHT = 'Height'\n\nvar S_FRAMEBUFFER_WIDTH = S_FRAMEBUFFER + SUFFIX_WIDTH\nvar S_FRAMEBUFFER_HEIGHT = S_FRAMEBUFFER + SUFFIX_HEIGHT\nvar S_VIEWPORT_WIDTH = S_VIEWPORT + SUFFIX_WIDTH\nvar S_VIEWPORT_HEIGHT = S_VIEWPORT + SUFFIX_HEIGHT\nvar S_DRAWINGBUFFER = 'drawingBuffer'\nvar S_DRAWINGBUFFER_WIDTH = S_DRAWINGBUFFER + SUFFIX_WIDTH\nvar S_DRAWINGBUFFER_HEIGHT = S_DRAWINGBUFFER + SUFFIX_HEIGHT\n\nvar NESTED_OPTIONS = [\n  S_BLEND_FUNC,\n  S_BLEND_EQUATION,\n  S_STENCIL_FUNC,\n  S_STENCIL_OPFRONT,\n  S_STENCIL_OPBACK,\n  S_SAMPLE_COVERAGE,\n  S_VIEWPORT,\n  S_SCISSOR_BOX,\n  S_POLYGON_OFFSET_OFFSET\n]\n\nvar GL_ARRAY_BUFFER$2 = 34962\nvar GL_ELEMENT_ARRAY_BUFFER$2 = 34963\n\nvar GL_FRAGMENT_SHADER$1 = 35632\nvar GL_VERTEX_SHADER$1 = 35633\n\nvar GL_TEXTURE_2D$3 = 0x0DE1\nvar GL_TEXTURE_CUBE_MAP$2 = 0x8513\n\nvar GL_CULL_FACE = 0x0B44\nvar GL_BLEND = 0x0BE2\nvar GL_DITHER = 0x0BD0\nvar GL_STENCIL_TEST = 0x0B90\nvar GL_DEPTH_TEST = 0x0B71\nvar GL_SCISSOR_TEST = 0x0C11\nvar GL_POLYGON_OFFSET_FILL = 0x8037\nvar GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E\nvar GL_SAMPLE_COVERAGE = 0x80A0\n\nvar GL_FLOAT$8 = 5126\nvar GL_FLOAT_VEC2 = 35664\nvar GL_FLOAT_VEC3 = 35665\nvar GL_FLOAT_VEC4 = 35666\nvar GL_INT$3 = 5124\nvar GL_INT_VEC2 = 35667\nvar GL_INT_VEC3 = 35668\nvar GL_INT_VEC4 = 35669\nvar GL_BOOL = 35670\nvar GL_BOOL_VEC2 = 35671\nvar GL_BOOL_VEC3 = 35672\nvar GL_BOOL_VEC4 = 35673\nvar GL_FLOAT_MAT2 = 35674\nvar GL_FLOAT_MAT3 = 35675\nvar GL_FLOAT_MAT4 = 35676\nvar GL_SAMPLER_2D = 35678\nvar GL_SAMPLER_CUBE = 35680\n\nvar GL_TRIANGLES$1 = 4\n\nvar GL_FRONT = 1028\nvar GL_BACK = 1029\nvar GL_CW = 0x0900\nvar GL_CCW = 0x0901\nvar GL_MIN_EXT = 0x8007\nvar GL_MAX_EXT = 0x8008\nvar GL_ALWAYS = 519\nvar GL_KEEP = 7680\nvar GL_ZERO = 0\nvar GL_ONE = 1\nvar GL_FUNC_ADD = 0x8006\nvar GL_LESS = 513\n\nvar GL_FRAMEBUFFER$2 = 0x8D40\nvar GL_COLOR_ATTACHMENT0$2 = 0x8CE0\n\nvar blendFuncs = {\n  '0': 0,\n  '1': 1,\n  'zero': 0,\n  'one': 1,\n  'src color': 768,\n  'one minus src color': 769,\n  'src alpha': 770,\n  'one minus src alpha': 771,\n  'dst color': 774,\n  'one minus dst color': 775,\n  'dst alpha': 772,\n  'one minus dst alpha': 773,\n  'constant color': 32769,\n  'one minus constant color': 32770,\n  'constant alpha': 32771,\n  'one minus constant alpha': 32772,\n  'src alpha saturate': 776\n}\n\n// There are invalid values for srcRGB and dstRGB. See:\n// https://www.khronos.org/registry/webgl/specs/1.0/#6.13\n// https://github.com/KhronosGroup/WebGL/blob/0d3201f5f7ec3c0060bc1f04077461541f1987b9/conformance-suites/1.0.3/conformance/misc/webgl-specific.html#L56\nvar invalidBlendCombinations = [\n  'constant color, constant alpha',\n  'one minus constant color, constant alpha',\n  'constant color, one minus constant alpha',\n  'one minus constant color, one minus constant alpha',\n  'constant alpha, constant color',\n  'constant alpha, one minus constant color',\n  'one minus constant alpha, constant color',\n  'one minus constant alpha, one minus constant color'\n]\n\nvar compareFuncs = {\n  'never': 512,\n  'less': 513,\n  '<': 513,\n  'equal': 514,\n  '=': 514,\n  '==': 514,\n  '===': 514,\n  'lequal': 515,\n  '<=': 515,\n  'greater': 516,\n  '>': 516,\n  'notequal': 517,\n  '!=': 517,\n  '!==': 517,\n  'gequal': 518,\n  '>=': 518,\n  'always': 519\n}\n\nvar stencilOps = {\n  '0': 0,\n  'zero': 0,\n  'keep': 7680,\n  'replace': 7681,\n  'increment': 7682,\n  'decrement': 7683,\n  'increment wrap': 34055,\n  'decrement wrap': 34056,\n  'invert': 5386\n}\n\nvar shaderType = {\n  'frag': GL_FRAGMENT_SHADER$1,\n  'vert': GL_VERTEX_SHADER$1\n}\n\nvar orientationType = {\n  'cw': GL_CW,\n  'ccw': GL_CCW\n}\n\nfunction isBufferArgs (x) {\n  return Array.isArray(x) ||\n    isTypedArray(x) ||\n    isNDArrayLike(x)\n}\n\n// Make sure viewport is processed first\nfunction sortState (state) {\n  return state.sort(function (a, b) {\n    if (a === S_VIEWPORT) {\n      return -1\n    } else if (b === S_VIEWPORT) {\n      return 1\n    }\n    return (a < b) ? -1 : 1\n  })\n}\n\nfunction Declaration (thisDep, contextDep, propDep, append) {\n  this.thisDep = thisDep\n  this.contextDep = contextDep\n  this.propDep = propDep\n  this.append = append\n}\n\nfunction isStatic (decl) {\n  return decl && !(decl.thisDep || decl.contextDep || decl.propDep)\n}\n\nfunction createStaticDecl (append) {\n  return new Declaration(false, false, false, append)\n}\n\nfunction createDynamicDecl (dyn, append) {\n  var type = dyn.type\n  if (type === DYN_FUNC$1) {\n    var numArgs = dyn.data.length\n    return new Declaration(\n      true,\n      numArgs >= 1,\n      numArgs >= 2,\n      append)\n  } else if (type === DYN_THUNK) {\n    var data = dyn.data\n    return new Declaration(\n      data.thisDep,\n      data.contextDep,\n      data.propDep,\n      append)\n  } else if (type === DYN_CONSTANT$1) {\n    return new Declaration(\n      false,\n      false,\n      false,\n      append)\n  } else if (type === DYN_ARRAY$1) {\n    var thisDep = false\n    var contextDep = false\n    var propDep = false\n    for (var i = 0; i < dyn.data.length; ++i) {\n      var subDyn = dyn.data[i]\n      if (subDyn.type === DYN_PROP$1) {\n        propDep = true\n      } else if (subDyn.type === DYN_CONTEXT$1) {\n        contextDep = true\n      } else if (subDyn.type === DYN_STATE$1) {\n        thisDep = true\n      } else if (subDyn.type === DYN_FUNC$1) {\n        thisDep = true\n        var subArgs = subDyn.data\n        if (subArgs >= 1) {\n          contextDep = true\n        }\n        if (subArgs >= 2) {\n          propDep = true\n        }\n      } else if (subDyn.type === DYN_THUNK) {\n        thisDep = thisDep || subDyn.data.thisDep\n        contextDep = contextDep || subDyn.data.contextDep\n        propDep = propDep || subDyn.data.propDep\n      }\n    }\n    return new Declaration(\n      thisDep,\n      contextDep,\n      propDep,\n      append)\n  } else {\n    return new Declaration(\n      type === DYN_STATE$1,\n      type === DYN_CONTEXT$1,\n      type === DYN_PROP$1,\n      append)\n  }\n}\n\nvar SCOPE_DECL = new Declaration(false, false, false, function () {})\n\nfunction reglCore (\n  gl,\n  stringStore,\n  extensions,\n  limits,\n  bufferState,\n  elementState,\n  textureState,\n  framebufferState,\n  uniformState,\n  attributeState,\n  shaderState,\n  drawState,\n  contextState,\n  timer,\n  config) {\n  var AttributeRecord = attributeState.Record\n\n  var blendEquations = {\n    'add': 32774,\n    'subtract': 32778,\n    'reverse subtract': 32779\n  }\n  if (extensions.ext_blend_minmax) {\n    blendEquations.min = GL_MIN_EXT\n    blendEquations.max = GL_MAX_EXT\n  }\n\n  var extInstancing = extensions.angle_instanced_arrays\n  var extDrawBuffers = extensions.webgl_draw_buffers\n  var extVertexArrays = extensions.oes_vertex_array_object\n\n  // ===================================================\n  // ===================================================\n  // WEBGL STATE\n  // ===================================================\n  // ===================================================\n  var currentState = {\n    dirty: true,\n    profile: config.profile\n  }\n  var nextState = {}\n  var GL_STATE_NAMES = []\n  var GL_FLAGS = {}\n  var GL_VARIABLES = {}\n\n  function propName (name) {\n    return name.replace('.', '_')\n  }\n\n  function stateFlag (sname, cap, init) {\n    var name = propName(sname)\n    GL_STATE_NAMES.push(sname)\n    nextState[name] = currentState[name] = !!init\n    GL_FLAGS[name] = cap\n  }\n\n  function stateVariable (sname, func, init) {\n    var name = propName(sname)\n    GL_STATE_NAMES.push(sname)\n    if (Array.isArray(init)) {\n      currentState[name] = init.slice()\n      nextState[name] = init.slice()\n    } else {\n      currentState[name] = nextState[name] = init\n    }\n    GL_VARIABLES[name] = func\n  }\n\n  // Dithering\n  stateFlag(S_DITHER, GL_DITHER)\n\n  // Blending\n  stateFlag(S_BLEND_ENABLE, GL_BLEND)\n  stateVariable(S_BLEND_COLOR, 'blendColor', [0, 0, 0, 0])\n  stateVariable(S_BLEND_EQUATION, 'blendEquationSeparate',\n    [GL_FUNC_ADD, GL_FUNC_ADD])\n  stateVariable(S_BLEND_FUNC, 'blendFuncSeparate',\n    [GL_ONE, GL_ZERO, GL_ONE, GL_ZERO])\n\n  // Depth\n  stateFlag(S_DEPTH_ENABLE, GL_DEPTH_TEST, true)\n  stateVariable(S_DEPTH_FUNC, 'depthFunc', GL_LESS)\n  stateVariable(S_DEPTH_RANGE, 'depthRange', [0, 1])\n  stateVariable(S_DEPTH_MASK, 'depthMask', true)\n\n  // Color mask\n  stateVariable(S_COLOR_MASK, S_COLOR_MASK, [true, true, true, true])\n\n  // Face culling\n  stateFlag(S_CULL_ENABLE, GL_CULL_FACE)\n  stateVariable(S_CULL_FACE, 'cullFace', GL_BACK)\n\n  // Front face orientation\n  stateVariable(S_FRONT_FACE, S_FRONT_FACE, GL_CCW)\n\n  // Line width\n  stateVariable(S_LINE_WIDTH, S_LINE_WIDTH, 1)\n\n  // Polygon offset\n  stateFlag(S_POLYGON_OFFSET_ENABLE, GL_POLYGON_OFFSET_FILL)\n  stateVariable(S_POLYGON_OFFSET_OFFSET, 'polygonOffset', [0, 0])\n\n  // Sample coverage\n  stateFlag(S_SAMPLE_ALPHA, GL_SAMPLE_ALPHA_TO_COVERAGE)\n  stateFlag(S_SAMPLE_ENABLE, GL_SAMPLE_COVERAGE)\n  stateVariable(S_SAMPLE_COVERAGE, 'sampleCoverage', [1, false])\n\n  // Stencil\n  stateFlag(S_STENCIL_ENABLE, GL_STENCIL_TEST)\n  stateVariable(S_STENCIL_MASK, 'stencilMask', -1)\n  stateVariable(S_STENCIL_FUNC, 'stencilFunc', [GL_ALWAYS, 0, -1])\n  stateVariable(S_STENCIL_OPFRONT, 'stencilOpSeparate',\n    [GL_FRONT, GL_KEEP, GL_KEEP, GL_KEEP])\n  stateVariable(S_STENCIL_OPBACK, 'stencilOpSeparate',\n    [GL_BACK, GL_KEEP, GL_KEEP, GL_KEEP])\n\n  // Scissor\n  stateFlag(S_SCISSOR_ENABLE, GL_SCISSOR_TEST)\n  stateVariable(S_SCISSOR_BOX, 'scissor',\n    [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight])\n\n  // Viewport\n  stateVariable(S_VIEWPORT, S_VIEWPORT,\n    [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight])\n\n  // ===================================================\n  // ===================================================\n  // ENVIRONMENT\n  // ===================================================\n  // ===================================================\n  var sharedState = {\n    gl: gl,\n    context: contextState,\n    strings: stringStore,\n    next: nextState,\n    current: currentState,\n    draw: drawState,\n    elements: elementState,\n    buffer: bufferState,\n    shader: shaderState,\n    attributes: attributeState.state,\n    vao: attributeState,\n    uniforms: uniformState,\n    framebuffer: framebufferState,\n    extensions: extensions,\n\n    timer: timer,\n    isBufferArgs: isBufferArgs\n  }\n\n  var sharedConstants = {\n    primTypes: primTypes,\n    compareFuncs: compareFuncs,\n    blendFuncs: blendFuncs,\n    blendEquations: blendEquations,\n    stencilOps: stencilOps,\n    glTypes: glTypes,\n    orientationType: orientationType\n  }\n\n  check$1.optional(function () {\n    sharedState.isArrayLike = isArrayLike\n  })\n\n  if (extDrawBuffers) {\n    sharedConstants.backBuffer = [GL_BACK]\n    sharedConstants.drawBuffer = loop(limits.maxDrawbuffers, function (i) {\n      if (i === 0) {\n        return [0]\n      }\n      return loop(i, function (j) {\n        return GL_COLOR_ATTACHMENT0$2 + j\n      })\n    })\n  }\n\n  var drawCallCounter = 0\n  function createREGLEnvironment () {\n    var env = createEnvironment()\n    var link = env.link\n    var global = env.global\n    env.id = drawCallCounter++\n\n    env.batchId = '0'\n\n    // link shared state\n    var SHARED = link(sharedState)\n    var shared = env.shared = {\n      props: 'a0'\n    }\n    Object.keys(sharedState).forEach(function (prop) {\n      shared[prop] = global.def(SHARED, '.', prop)\n    })\n\n    // Inject runtime assertion stuff for debug builds\n    check$1.optional(function () {\n      env.CHECK = link(check$1)\n      env.commandStr = check$1.guessCommand()\n      env.command = link(env.commandStr)\n      env.assert = function (block, pred, message) {\n        block(\n          'if(!(', pred, '))',\n          this.CHECK, '.commandRaise(', link(message), ',', this.command, ');')\n      }\n\n      sharedConstants.invalidBlendCombinations = invalidBlendCombinations\n    })\n\n    // Copy GL state variables over\n    var nextVars = env.next = {}\n    var currentVars = env.current = {}\n    Object.keys(GL_VARIABLES).forEach(function (variable) {\n      if (Array.isArray(currentState[variable])) {\n        nextVars[variable] = global.def(shared.next, '.', variable)\n        currentVars[variable] = global.def(shared.current, '.', variable)\n      }\n    })\n\n    // Initialize shared constants\n    var constants = env.constants = {}\n    Object.keys(sharedConstants).forEach(function (name) {\n      constants[name] = global.def(JSON.stringify(sharedConstants[name]))\n    })\n\n    // Helper function for calling a block\n    env.invoke = function (block, x) {\n      switch (x.type) {\n        case DYN_FUNC$1:\n          var argList = [\n            'this',\n            shared.context,\n            shared.props,\n            env.batchId\n          ]\n          return block.def(\n            link(x.data), '.call(',\n            argList.slice(0, Math.max(x.data.length + 1, 4)),\n            ')')\n        case DYN_PROP$1:\n          return block.def(shared.props, x.data)\n        case DYN_CONTEXT$1:\n          return block.def(shared.context, x.data)\n        case DYN_STATE$1:\n          return block.def('this', x.data)\n        case DYN_THUNK:\n          x.data.append(env, block)\n          return x.data.ref\n        case DYN_CONSTANT$1:\n          return x.data.toString()\n        case DYN_ARRAY$1:\n          return x.data.map(function (y) {\n            return env.invoke(block, y)\n          })\n      }\n    }\n\n    env.attribCache = {}\n\n    var scopeAttribs = {}\n    env.scopeAttrib = function (name) {\n      var id = stringStore.id(name)\n      if (id in scopeAttribs) {\n        return scopeAttribs[id]\n      }\n      var binding = attributeState.scope[id]\n      if (!binding) {\n        binding = attributeState.scope[id] = new AttributeRecord()\n      }\n      var result = scopeAttribs[id] = link(binding)\n      return result\n    }\n\n    return env\n  }\n\n  // ===================================================\n  // ===================================================\n  // PARSING\n  // ===================================================\n  // ===================================================\n  function parseProfile (options) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    var profileEnable\n    if (S_PROFILE in staticOptions) {\n      var value = !!staticOptions[S_PROFILE]\n      profileEnable = createStaticDecl(function (env, scope) {\n        return value\n      })\n      profileEnable.enable = value\n    } else if (S_PROFILE in dynamicOptions) {\n      var dyn = dynamicOptions[S_PROFILE]\n      profileEnable = createDynamicDecl(dyn, function (env, scope) {\n        return env.invoke(scope, dyn)\n      })\n    }\n\n    return profileEnable\n  }\n\n  function parseFramebuffer (options, env) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    if (S_FRAMEBUFFER in staticOptions) {\n      var framebuffer = staticOptions[S_FRAMEBUFFER]\n      if (framebuffer) {\n        framebuffer = framebufferState.getFramebuffer(framebuffer)\n        check$1.command(framebuffer, 'invalid framebuffer object')\n        return createStaticDecl(function (env, block) {\n          var FRAMEBUFFER = env.link(framebuffer)\n          var shared = env.shared\n          block.set(\n            shared.framebuffer,\n            '.next',\n            FRAMEBUFFER)\n          var CONTEXT = shared.context\n          block.set(\n            CONTEXT,\n            '.' + S_FRAMEBUFFER_WIDTH,\n            FRAMEBUFFER + '.width')\n          block.set(\n            CONTEXT,\n            '.' + S_FRAMEBUFFER_HEIGHT,\n            FRAMEBUFFER + '.height')\n          return FRAMEBUFFER\n        })\n      } else {\n        return createStaticDecl(function (env, scope) {\n          var shared = env.shared\n          scope.set(\n            shared.framebuffer,\n            '.next',\n            'null')\n          var CONTEXT = shared.context\n          scope.set(\n            CONTEXT,\n            '.' + S_FRAMEBUFFER_WIDTH,\n            CONTEXT + '.' + S_DRAWINGBUFFER_WIDTH)\n          scope.set(\n            CONTEXT,\n            '.' + S_FRAMEBUFFER_HEIGHT,\n            CONTEXT + '.' + S_DRAWINGBUFFER_HEIGHT)\n          return 'null'\n        })\n      }\n    } else if (S_FRAMEBUFFER in dynamicOptions) {\n      var dyn = dynamicOptions[S_FRAMEBUFFER]\n      return createDynamicDecl(dyn, function (env, scope) {\n        var FRAMEBUFFER_FUNC = env.invoke(scope, dyn)\n        var shared = env.shared\n        var FRAMEBUFFER_STATE = shared.framebuffer\n        var FRAMEBUFFER = scope.def(\n          FRAMEBUFFER_STATE, '.getFramebuffer(', FRAMEBUFFER_FUNC, ')')\n\n        check$1.optional(function () {\n          env.assert(scope,\n            '!' + FRAMEBUFFER_FUNC + '||' + FRAMEBUFFER,\n            'invalid framebuffer object')\n        })\n\n        scope.set(\n          FRAMEBUFFER_STATE,\n          '.next',\n          FRAMEBUFFER)\n        var CONTEXT = shared.context\n        scope.set(\n          CONTEXT,\n          '.' + S_FRAMEBUFFER_WIDTH,\n          FRAMEBUFFER + '?' + FRAMEBUFFER + '.width:' +\n          CONTEXT + '.' + S_DRAWINGBUFFER_WIDTH)\n        scope.set(\n          CONTEXT,\n          '.' + S_FRAMEBUFFER_HEIGHT,\n          FRAMEBUFFER +\n          '?' + FRAMEBUFFER + '.height:' +\n          CONTEXT + '.' + S_DRAWINGBUFFER_HEIGHT)\n        return FRAMEBUFFER\n      })\n    } else {\n      return null\n    }\n  }\n\n  function parseViewportScissor (options, framebuffer, env) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    function parseBox (param) {\n      if (param in staticOptions) {\n        var box = staticOptions[param]\n        check$1.commandType(box, 'object', 'invalid ' + param, env.commandStr)\n\n        var isStatic = true\n        var x = box.x | 0\n        var y = box.y | 0\n        var w, h\n        if ('width' in box) {\n          w = box.width | 0\n          check$1.command(w >= 0, 'invalid ' + param, env.commandStr)\n        } else {\n          isStatic = false\n        }\n        if ('height' in box) {\n          h = box.height | 0\n          check$1.command(h >= 0, 'invalid ' + param, env.commandStr)\n        } else {\n          isStatic = false\n        }\n\n        return new Declaration(\n          !isStatic && framebuffer && framebuffer.thisDep,\n          !isStatic && framebuffer && framebuffer.contextDep,\n          !isStatic && framebuffer && framebuffer.propDep,\n          function (env, scope) {\n            var CONTEXT = env.shared.context\n            var BOX_W = w\n            if (!('width' in box)) {\n              BOX_W = scope.def(CONTEXT, '.', S_FRAMEBUFFER_WIDTH, '-', x)\n            }\n            var BOX_H = h\n            if (!('height' in box)) {\n              BOX_H = scope.def(CONTEXT, '.', S_FRAMEBUFFER_HEIGHT, '-', y)\n            }\n            return [x, y, BOX_W, BOX_H]\n          })\n      } else if (param in dynamicOptions) {\n        var dynBox = dynamicOptions[param]\n        var result = createDynamicDecl(dynBox, function (env, scope) {\n          var BOX = env.invoke(scope, dynBox)\n\n          check$1.optional(function () {\n            env.assert(scope,\n              BOX + '&&typeof ' + BOX + '===\"object\"',\n              'invalid ' + param)\n          })\n\n          var CONTEXT = env.shared.context\n          var BOX_X = scope.def(BOX, '.x|0')\n          var BOX_Y = scope.def(BOX, '.y|0')\n          var BOX_W = scope.def(\n            '\"width\" in ', BOX, '?', BOX, '.width|0:',\n            '(', CONTEXT, '.', S_FRAMEBUFFER_WIDTH, '-', BOX_X, ')')\n          var BOX_H = scope.def(\n            '\"height\" in ', BOX, '?', BOX, '.height|0:',\n            '(', CONTEXT, '.', S_FRAMEBUFFER_HEIGHT, '-', BOX_Y, ')')\n\n          check$1.optional(function () {\n            env.assert(scope,\n              BOX_W + '>=0&&' +\n              BOX_H + '>=0',\n              'invalid ' + param)\n          })\n\n          return [BOX_X, BOX_Y, BOX_W, BOX_H]\n        })\n        if (framebuffer) {\n          result.thisDep = result.thisDep || framebuffer.thisDep\n          result.contextDep = result.contextDep || framebuffer.contextDep\n          result.propDep = result.propDep || framebuffer.propDep\n        }\n        return result\n      } else if (framebuffer) {\n        return new Declaration(\n          framebuffer.thisDep,\n          framebuffer.contextDep,\n          framebuffer.propDep,\n          function (env, scope) {\n            var CONTEXT = env.shared.context\n            return [\n              0, 0,\n              scope.def(CONTEXT, '.', S_FRAMEBUFFER_WIDTH),\n              scope.def(CONTEXT, '.', S_FRAMEBUFFER_HEIGHT)]\n          })\n      } else {\n        return null\n      }\n    }\n\n    var viewport = parseBox(S_VIEWPORT)\n\n    if (viewport) {\n      var prevViewport = viewport\n      viewport = new Declaration(\n        viewport.thisDep,\n        viewport.contextDep,\n        viewport.propDep,\n        function (env, scope) {\n          var VIEWPORT = prevViewport.append(env, scope)\n          var CONTEXT = env.shared.context\n          scope.set(\n            CONTEXT,\n            '.' + S_VIEWPORT_WIDTH,\n            VIEWPORT[2])\n          scope.set(\n            CONTEXT,\n            '.' + S_VIEWPORT_HEIGHT,\n            VIEWPORT[3])\n          return VIEWPORT\n        })\n    }\n\n    return {\n      viewport: viewport,\n      scissor_box: parseBox(S_SCISSOR_BOX)\n    }\n  }\n\n  function parseAttribLocations (options, attributes) {\n    var staticOptions = options.static\n    var staticProgram =\n      typeof staticOptions[S_FRAG] === 'string' &&\n      typeof staticOptions[S_VERT] === 'string'\n    if (staticProgram) {\n      if (Object.keys(attributes.dynamic).length > 0) {\n        return null\n      }\n      var staticAttributes = attributes.static\n      var sAttributes = Object.keys(staticAttributes)\n      if (sAttributes.length > 0 && typeof staticAttributes[sAttributes[0]] === 'number') {\n        var bindings = []\n        for (var i = 0; i < sAttributes.length; ++i) {\n          check$1(typeof staticAttributes[sAttributes[i]] === 'number', 'must specify all vertex attribute locations when using vaos')\n          bindings.push([staticAttributes[sAttributes[i]] | 0, sAttributes[i]])\n        }\n        return bindings\n      }\n    }\n    return null\n  }\n\n  function parseProgram (options, env, attribLocations) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    function parseShader (name) {\n      if (name in staticOptions) {\n        var id = stringStore.id(staticOptions[name])\n        check$1.optional(function () {\n          shaderState.shader(shaderType[name], id, check$1.guessCommand())\n        })\n        var result = createStaticDecl(function () {\n          return id\n        })\n        result.id = id\n        return result\n      } else if (name in dynamicOptions) {\n        var dyn = dynamicOptions[name]\n        return createDynamicDecl(dyn, function (env, scope) {\n          var str = env.invoke(scope, dyn)\n          var id = scope.def(env.shared.strings, '.id(', str, ')')\n          check$1.optional(function () {\n            scope(\n              env.shared.shader, '.shader(',\n              shaderType[name], ',',\n              id, ',',\n              env.command, ');')\n          })\n          return id\n        })\n      }\n      return null\n    }\n\n    var frag = parseShader(S_FRAG)\n    var vert = parseShader(S_VERT)\n\n    var program = null\n    var progVar\n    if (isStatic(frag) && isStatic(vert)) {\n      program = shaderState.program(vert.id, frag.id, null, attribLocations)\n      progVar = createStaticDecl(function (env, scope) {\n        return env.link(program)\n      })\n    } else {\n      progVar = new Declaration(\n        (frag && frag.thisDep) || (vert && vert.thisDep),\n        (frag && frag.contextDep) || (vert && vert.contextDep),\n        (frag && frag.propDep) || (vert && vert.propDep),\n        function (env, scope) {\n          var SHADER_STATE = env.shared.shader\n          var fragId\n          if (frag) {\n            fragId = frag.append(env, scope)\n          } else {\n            fragId = scope.def(SHADER_STATE, '.', S_FRAG)\n          }\n          var vertId\n          if (vert) {\n            vertId = vert.append(env, scope)\n          } else {\n            vertId = scope.def(SHADER_STATE, '.', S_VERT)\n          }\n          var progDef = SHADER_STATE + '.program(' + vertId + ',' + fragId\n          check$1.optional(function () {\n            progDef += ',' + env.command\n          })\n          return scope.def(progDef + ')')\n        })\n    }\n\n    return {\n      frag: frag,\n      vert: vert,\n      progVar: progVar,\n      program: program\n    }\n  }\n\n  function parseDraw (options, env) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    // TODO: should use VAO to get default values for offset properties\n    // should move vao parse into here and out of the old stuff\n\n    var staticDraw = {}\n    var vaoActive = false\n\n    function parseVAO () {\n      if (S_VAO in staticOptions) {\n        var vao = staticOptions[S_VAO]\n        if (vao !== null && attributeState.getVAO(vao) === null) {\n          vao = attributeState.createVAO(vao)\n        }\n\n        vaoActive = true\n        staticDraw.vao = vao\n\n        return createStaticDecl(function (env) {\n          var vaoRef = attributeState.getVAO(vao)\n          if (vaoRef) {\n            return env.link(vaoRef)\n          } else {\n            return 'null'\n          }\n        })\n      } else if (S_VAO in dynamicOptions) {\n        vaoActive = true\n        var dyn = dynamicOptions[S_VAO]\n        return createDynamicDecl(dyn, function (env, scope) {\n          var vaoRef = env.invoke(scope, dyn)\n          return scope.def(env.shared.vao + '.getVAO(' + vaoRef + ')')\n        })\n      }\n      return null\n    }\n\n    var vao = parseVAO()\n\n    var elementsActive = false\n\n    function parseElements () {\n      if (S_ELEMENTS in staticOptions) {\n        var elements = staticOptions[S_ELEMENTS]\n        staticDraw.elements = elements\n        if (isBufferArgs(elements)) {\n          var e = staticDraw.elements = elementState.create(elements, true)\n          elements = elementState.getElements(e)\n          elementsActive = true\n        } else if (elements) {\n          elements = elementState.getElements(elements)\n          elementsActive = true\n          check$1.command(elements, 'invalid elements', env.commandStr)\n        }\n\n        var result = createStaticDecl(function (env, scope) {\n          if (elements) {\n            var result = env.link(elements)\n            env.ELEMENTS = result\n            return result\n          }\n          env.ELEMENTS = null\n          return null\n        })\n        result.value = elements\n        return result\n      } else if (S_ELEMENTS in dynamicOptions) {\n        elementsActive = true\n\n        var dyn = dynamicOptions[S_ELEMENTS]\n        return createDynamicDecl(dyn, function (env, scope) {\n          var shared = env.shared\n\n          var IS_BUFFER_ARGS = shared.isBufferArgs\n          var ELEMENT_STATE = shared.elements\n\n          var elementDefn = env.invoke(scope, dyn)\n          var elements = scope.def('null')\n          var elementStream = scope.def(IS_BUFFER_ARGS, '(', elementDefn, ')')\n\n          var ifte = env.cond(elementStream)\n            .then(elements, '=', ELEMENT_STATE, '.createStream(', elementDefn, ');')\n            .else(elements, '=', ELEMENT_STATE, '.getElements(', elementDefn, ');')\n\n          check$1.optional(function () {\n            env.assert(ifte.else,\n              '!' + elementDefn + '||' + elements,\n              'invalid elements')\n          })\n\n          scope.entry(ifte)\n          scope.exit(\n            env.cond(elementStream)\n              .then(ELEMENT_STATE, '.destroyStream(', elements, ');'))\n\n          env.ELEMENTS = elements\n\n          return elements\n        })\n      } else if (vaoActive) {\n        return new Declaration(\n          vao.thisDep,\n          vao.contextDep,\n          vao.propDep,\n          function (env, scope) {\n            return scope.def(env.shared.vao + '.currentVAO?' + env.shared.elements + '.getElements(' + env.shared.vao + '.currentVAO.elements):null')\n          })\n      }\n      return null\n    }\n\n    var elements = parseElements()\n\n    function parsePrimitive () {\n      if (S_PRIMITIVE in staticOptions) {\n        var primitive = staticOptions[S_PRIMITIVE]\n        staticDraw.primitive = primitive\n        check$1.commandParameter(primitive, primTypes, 'invalid primitve', env.commandStr)\n        return createStaticDecl(function (env, scope) {\n          return primTypes[primitive]\n        })\n      } else if (S_PRIMITIVE in dynamicOptions) {\n        var dynPrimitive = dynamicOptions[S_PRIMITIVE]\n        return createDynamicDecl(dynPrimitive, function (env, scope) {\n          var PRIM_TYPES = env.constants.primTypes\n          var prim = env.invoke(scope, dynPrimitive)\n          check$1.optional(function () {\n            env.assert(scope,\n              prim + ' in ' + PRIM_TYPES,\n              'invalid primitive, must be one of ' + Object.keys(primTypes))\n          })\n          return scope.def(PRIM_TYPES, '[', prim, ']')\n        })\n      } else if (elementsActive) {\n        if (isStatic(elements)) {\n          if (elements.value) {\n            return createStaticDecl(function (env, scope) {\n              return scope.def(env.ELEMENTS, '.primType')\n            })\n          } else {\n            return createStaticDecl(function () {\n              return GL_TRIANGLES$1\n            })\n          }\n        } else {\n          return new Declaration(\n            elements.thisDep,\n            elements.contextDep,\n            elements.propDep,\n            function (env, scope) {\n              var elements = env.ELEMENTS\n              return scope.def(elements, '?', elements, '.primType:', GL_TRIANGLES$1)\n            })\n        }\n      } else if (vaoActive) {\n        return new Declaration(\n          vao.thisDep,\n          vao.contextDep,\n          vao.propDep,\n          function (env, scope) {\n            return scope.def(env.shared.vao + '.currentVAO?' + env.shared.vao + '.currentVAO.primitive:' + GL_TRIANGLES$1)\n          })\n      }\n      return null\n    }\n\n    function parseParam (param, isOffset) {\n      if (param in staticOptions) {\n        var value = staticOptions[param] | 0\n        if (isOffset) {\n          staticDraw.offset = value\n        } else {\n          staticDraw.instances = value\n        }\n        check$1.command(!isOffset || value >= 0, 'invalid ' + param, env.commandStr)\n        return createStaticDecl(function (env, scope) {\n          if (isOffset) {\n            env.OFFSET = value\n          }\n          return value\n        })\n      } else if (param in dynamicOptions) {\n        var dynValue = dynamicOptions[param]\n        return createDynamicDecl(dynValue, function (env, scope) {\n          var result = env.invoke(scope, dynValue)\n          if (isOffset) {\n            env.OFFSET = result\n            check$1.optional(function () {\n              env.assert(scope,\n                result + '>=0',\n                'invalid ' + param)\n            })\n          }\n          return result\n        })\n      } else if (isOffset) {\n        if (elementsActive) {\n          return createStaticDecl(function (env, scope) {\n            env.OFFSET = 0\n            return 0\n          })\n        } else if (vaoActive) {\n          return new Declaration(\n            vao.thisDep,\n            vao.contextDep,\n            vao.propDep,\n            function (env, scope) {\n              return scope.def(env.shared.vao + '.currentVAO?' + env.shared.vao + '.currentVAO.offset:0')\n            })\n        }\n      } else if (vaoActive) {\n        return new Declaration(\n          vao.thisDep,\n          vao.contextDep,\n          vao.propDep,\n          function (env, scope) {\n            return scope.def(env.shared.vao + '.currentVAO?' + env.shared.vao + '.currentVAO.instances:-1')\n          })\n      }\n      return null\n    }\n\n    var OFFSET = parseParam(S_OFFSET, true)\n\n    function parseVertCount () {\n      if (S_COUNT in staticOptions) {\n        var count = staticOptions[S_COUNT] | 0\n        staticDraw.count = count\n        check$1.command(\n          typeof count === 'number' && count >= 0, 'invalid vertex count', env.commandStr)\n        return createStaticDecl(function () {\n          return count\n        })\n      } else if (S_COUNT in dynamicOptions) {\n        var dynCount = dynamicOptions[S_COUNT]\n        return createDynamicDecl(dynCount, function (env, scope) {\n          var result = env.invoke(scope, dynCount)\n          check$1.optional(function () {\n            env.assert(scope,\n              'typeof ' + result + '===\"number\"&&' +\n              result + '>=0&&' +\n              result + '===(' + result + '|0)',\n              'invalid vertex count')\n          })\n          return result\n        })\n      } else if (elementsActive) {\n        if (isStatic(elements)) {\n          if (elements) {\n            if (OFFSET) {\n              return new Declaration(\n                OFFSET.thisDep,\n                OFFSET.contextDep,\n                OFFSET.propDep,\n                function (env, scope) {\n                  var result = scope.def(\n                    env.ELEMENTS, '.vertCount-', env.OFFSET)\n\n                  check$1.optional(function () {\n                    env.assert(scope,\n                      result + '>=0',\n                      'invalid vertex offset/element buffer too small')\n                  })\n\n                  return result\n                })\n            } else {\n              return createStaticDecl(function (env, scope) {\n                return scope.def(env.ELEMENTS, '.vertCount')\n              })\n            }\n          } else {\n            var result = createStaticDecl(function () {\n              return -1\n            })\n            check$1.optional(function () {\n              result.MISSING = true\n            })\n            return result\n          }\n        } else {\n          var variable = new Declaration(\n            elements.thisDep || OFFSET.thisDep,\n            elements.contextDep || OFFSET.contextDep,\n            elements.propDep || OFFSET.propDep,\n            function (env, scope) {\n              var elements = env.ELEMENTS\n              if (env.OFFSET) {\n                return scope.def(elements, '?', elements, '.vertCount-',\n                  env.OFFSET, ':-1')\n              }\n              return scope.def(elements, '?', elements, '.vertCount:-1')\n            })\n          check$1.optional(function () {\n            variable.DYNAMIC = true\n          })\n          return variable\n        }\n      } else if (vaoActive) {\n        var countVariable = new Declaration(\n          vao.thisDep,\n          vao.contextDep,\n          vao.propDep,\n          function (env, scope) {\n            return scope.def(env.shared.vao, '.currentVAO?', env.shared.vao, '.currentVAO.count:-1')\n          })\n        return countVariable\n      }\n      return null\n    }\n\n    var primitive = parsePrimitive()\n    var count = parseVertCount()\n    var instances = parseParam(S_INSTANCES, false)\n\n    return {\n      elements: elements,\n      primitive: primitive,\n      count: count,\n      instances: instances,\n      offset: OFFSET,\n      vao: vao,\n\n      vaoActive: vaoActive,\n      elementsActive: elementsActive,\n\n      // static draw props\n      static: staticDraw\n    }\n  }\n\n  function parseGLState (options, env) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    var STATE = {}\n\n    GL_STATE_NAMES.forEach(function (prop) {\n      var param = propName(prop)\n\n      function parseParam (parseStatic, parseDynamic) {\n        if (prop in staticOptions) {\n          var value = parseStatic(staticOptions[prop])\n          STATE[param] = createStaticDecl(function () {\n            return value\n          })\n        } else if (prop in dynamicOptions) {\n          var dyn = dynamicOptions[prop]\n          STATE[param] = createDynamicDecl(dyn, function (env, scope) {\n            return parseDynamic(env, scope, env.invoke(scope, dyn))\n          })\n        }\n      }\n\n      switch (prop) {\n        case S_CULL_ENABLE:\n        case S_BLEND_ENABLE:\n        case S_DITHER:\n        case S_STENCIL_ENABLE:\n        case S_DEPTH_ENABLE:\n        case S_SCISSOR_ENABLE:\n        case S_POLYGON_OFFSET_ENABLE:\n        case S_SAMPLE_ALPHA:\n        case S_SAMPLE_ENABLE:\n        case S_DEPTH_MASK:\n          return parseParam(\n            function (value) {\n              check$1.commandType(value, 'boolean', prop, env.commandStr)\n              return value\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  'typeof ' + value + '===\"boolean\"',\n                  'invalid flag ' + prop, env.commandStr)\n              })\n              return value\n            })\n\n        case S_DEPTH_FUNC:\n          return parseParam(\n            function (value) {\n              check$1.commandParameter(value, compareFuncs, 'invalid ' + prop, env.commandStr)\n              return compareFuncs[value]\n            },\n            function (env, scope, value) {\n              var COMPARE_FUNCS = env.constants.compareFuncs\n              check$1.optional(function () {\n                env.assert(scope,\n                  value + ' in ' + COMPARE_FUNCS,\n                  'invalid ' + prop + ', must be one of ' + Object.keys(compareFuncs))\n              })\n              return scope.def(COMPARE_FUNCS, '[', value, ']')\n            })\n\n        case S_DEPTH_RANGE:\n          return parseParam(\n            function (value) {\n              check$1.command(\n                isArrayLike(value) &&\n                value.length === 2 &&\n                typeof value[0] === 'number' &&\n                typeof value[1] === 'number' &&\n                value[0] <= value[1],\n                'depth range is 2d array',\n                env.commandStr)\n              return value\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  env.shared.isArrayLike + '(' + value + ')&&' +\n                  value + '.length===2&&' +\n                  'typeof ' + value + '[0]===\"number\"&&' +\n                  'typeof ' + value + '[1]===\"number\"&&' +\n                  value + '[0]<=' + value + '[1]',\n                  'depth range must be a 2d array')\n              })\n\n              var Z_NEAR = scope.def('+', value, '[0]')\n              var Z_FAR = scope.def('+', value, '[1]')\n              return [Z_NEAR, Z_FAR]\n            })\n\n        case S_BLEND_FUNC:\n          return parseParam(\n            function (value) {\n              check$1.commandType(value, 'object', 'blend.func', env.commandStr)\n              var srcRGB = ('srcRGB' in value ? value.srcRGB : value.src)\n              var srcAlpha = ('srcAlpha' in value ? value.srcAlpha : value.src)\n              var dstRGB = ('dstRGB' in value ? value.dstRGB : value.dst)\n              var dstAlpha = ('dstAlpha' in value ? value.dstAlpha : value.dst)\n              check$1.commandParameter(srcRGB, blendFuncs, param + '.srcRGB', env.commandStr)\n              check$1.commandParameter(srcAlpha, blendFuncs, param + '.srcAlpha', env.commandStr)\n              check$1.commandParameter(dstRGB, blendFuncs, param + '.dstRGB', env.commandStr)\n              check$1.commandParameter(dstAlpha, blendFuncs, param + '.dstAlpha', env.commandStr)\n\n              check$1.command(\n                (invalidBlendCombinations.indexOf(srcRGB + ', ' + dstRGB) === -1),\n                'unallowed blending combination (srcRGB, dstRGB) = (' + srcRGB + ', ' + dstRGB + ')', env.commandStr)\n\n              return [\n                blendFuncs[srcRGB],\n                blendFuncs[dstRGB],\n                blendFuncs[srcAlpha],\n                blendFuncs[dstAlpha]\n              ]\n            },\n            function (env, scope, value) {\n              var BLEND_FUNCS = env.constants.blendFuncs\n\n              check$1.optional(function () {\n                env.assert(scope,\n                  value + '&&typeof ' + value + '===\"object\"',\n                  'invalid blend func, must be an object')\n              })\n\n              function read (prefix, suffix) {\n                var func = scope.def(\n                  '\"', prefix, suffix, '\" in ', value,\n                  '?', value, '.', prefix, suffix,\n                  ':', value, '.', prefix)\n\n                check$1.optional(function () {\n                  env.assert(scope,\n                    func + ' in ' + BLEND_FUNCS,\n                    'invalid ' + prop + '.' + prefix + suffix + ', must be one of ' + Object.keys(blendFuncs))\n                })\n\n                return func\n              }\n\n              var srcRGB = read('src', 'RGB')\n              var dstRGB = read('dst', 'RGB')\n\n              check$1.optional(function () {\n                var INVALID_BLEND_COMBINATIONS = env.constants.invalidBlendCombinations\n\n                env.assert(scope,\n                  INVALID_BLEND_COMBINATIONS +\n                           '.indexOf(' + srcRGB + '+\", \"+' + dstRGB + ') === -1 ',\n                  'unallowed blending combination for (srcRGB, dstRGB)'\n                )\n              })\n\n              var SRC_RGB = scope.def(BLEND_FUNCS, '[', srcRGB, ']')\n              var SRC_ALPHA = scope.def(BLEND_FUNCS, '[', read('src', 'Alpha'), ']')\n              var DST_RGB = scope.def(BLEND_FUNCS, '[', dstRGB, ']')\n              var DST_ALPHA = scope.def(BLEND_FUNCS, '[', read('dst', 'Alpha'), ']')\n\n              return [SRC_RGB, DST_RGB, SRC_ALPHA, DST_ALPHA]\n            })\n\n        case S_BLEND_EQUATION:\n          return parseParam(\n            function (value) {\n              if (typeof value === 'string') {\n                check$1.commandParameter(value, blendEquations, 'invalid ' + prop, env.commandStr)\n                return [\n                  blendEquations[value],\n                  blendEquations[value]\n                ]\n              } else if (typeof value === 'object') {\n                check$1.commandParameter(\n                  value.rgb, blendEquations, prop + '.rgb', env.commandStr)\n                check$1.commandParameter(\n                  value.alpha, blendEquations, prop + '.alpha', env.commandStr)\n                return [\n                  blendEquations[value.rgb],\n                  blendEquations[value.alpha]\n                ]\n              } else {\n                check$1.commandRaise('invalid blend.equation', env.commandStr)\n              }\n            },\n            function (env, scope, value) {\n              var BLEND_EQUATIONS = env.constants.blendEquations\n\n              var RGB = scope.def()\n              var ALPHA = scope.def()\n\n              var ifte = env.cond('typeof ', value, '===\"string\"')\n\n              check$1.optional(function () {\n                function checkProp (block, name, value) {\n                  env.assert(block,\n                    value + ' in ' + BLEND_EQUATIONS,\n                    'invalid ' + name + ', must be one of ' + Object.keys(blendEquations))\n                }\n                checkProp(ifte.then, prop, value)\n\n                env.assert(ifte.else,\n                  value + '&&typeof ' + value + '===\"object\"',\n                  'invalid ' + prop)\n                checkProp(ifte.else, prop + '.rgb', value + '.rgb')\n                checkProp(ifte.else, prop + '.alpha', value + '.alpha')\n              })\n\n              ifte.then(\n                RGB, '=', ALPHA, '=', BLEND_EQUATIONS, '[', value, '];')\n              ifte.else(\n                RGB, '=', BLEND_EQUATIONS, '[', value, '.rgb];',\n                ALPHA, '=', BLEND_EQUATIONS, '[', value, '.alpha];')\n\n              scope(ifte)\n\n              return [RGB, ALPHA]\n            })\n\n        case S_BLEND_COLOR:\n          return parseParam(\n            function (value) {\n              check$1.command(\n                isArrayLike(value) &&\n                value.length === 4,\n                'blend.color must be a 4d array', env.commandStr)\n              return loop(4, function (i) {\n                return +value[i]\n              })\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  env.shared.isArrayLike + '(' + value + ')&&' +\n                  value + '.length===4',\n                  'blend.color must be a 4d array')\n              })\n              return loop(4, function (i) {\n                return scope.def('+', value, '[', i, ']')\n              })\n            })\n\n        case S_STENCIL_MASK:\n          return parseParam(\n            function (value) {\n              check$1.commandType(value, 'number', param, env.commandStr)\n              return value | 0\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  'typeof ' + value + '===\"number\"',\n                  'invalid stencil.mask')\n              })\n              return scope.def(value, '|0')\n            })\n\n        case S_STENCIL_FUNC:\n          return parseParam(\n            function (value) {\n              check$1.commandType(value, 'object', param, env.commandStr)\n              var cmp = value.cmp || 'keep'\n              var ref = value.ref || 0\n              var mask = 'mask' in value ? value.mask : -1\n              check$1.commandParameter(cmp, compareFuncs, prop + '.cmp', env.commandStr)\n              check$1.commandType(ref, 'number', prop + '.ref', env.commandStr)\n              check$1.commandType(mask, 'number', prop + '.mask', env.commandStr)\n              return [\n                compareFuncs[cmp],\n                ref,\n                mask\n              ]\n            },\n            function (env, scope, value) {\n              var COMPARE_FUNCS = env.constants.compareFuncs\n              check$1.optional(function () {\n                function assert () {\n                  env.assert(scope,\n                    Array.prototype.join.call(arguments, ''),\n                    'invalid stencil.func')\n                }\n                assert(value + '&&typeof ', value, '===\"object\"')\n                assert('!(\"cmp\" in ', value, ')||(',\n                  value, '.cmp in ', COMPARE_FUNCS, ')')\n              })\n              var cmp = scope.def(\n                '\"cmp\" in ', value,\n                '?', COMPARE_FUNCS, '[', value, '.cmp]',\n                ':', GL_KEEP)\n              var ref = scope.def(value, '.ref|0')\n              var mask = scope.def(\n                '\"mask\" in ', value,\n                '?', value, '.mask|0:-1')\n              return [cmp, ref, mask]\n            })\n\n        case S_STENCIL_OPFRONT:\n        case S_STENCIL_OPBACK:\n          return parseParam(\n            function (value) {\n              check$1.commandType(value, 'object', param, env.commandStr)\n              var fail = value.fail || 'keep'\n              var zfail = value.zfail || 'keep'\n              var zpass = value.zpass || 'keep'\n              check$1.commandParameter(fail, stencilOps, prop + '.fail', env.commandStr)\n              check$1.commandParameter(zfail, stencilOps, prop + '.zfail', env.commandStr)\n              check$1.commandParameter(zpass, stencilOps, prop + '.zpass', env.commandStr)\n              return [\n                prop === S_STENCIL_OPBACK ? GL_BACK : GL_FRONT,\n                stencilOps[fail],\n                stencilOps[zfail],\n                stencilOps[zpass]\n              ]\n            },\n            function (env, scope, value) {\n              var STENCIL_OPS = env.constants.stencilOps\n\n              check$1.optional(function () {\n                env.assert(scope,\n                  value + '&&typeof ' + value + '===\"object\"',\n                  'invalid ' + prop)\n              })\n\n              function read (name) {\n                check$1.optional(function () {\n                  env.assert(scope,\n                    '!(\"' + name + '\" in ' + value + ')||' +\n                    '(' + value + '.' + name + ' in ' + STENCIL_OPS + ')',\n                    'invalid ' + prop + '.' + name + ', must be one of ' + Object.keys(stencilOps))\n                })\n\n                return scope.def(\n                  '\"', name, '\" in ', value,\n                  '?', STENCIL_OPS, '[', value, '.', name, ']:',\n                  GL_KEEP)\n              }\n\n              return [\n                prop === S_STENCIL_OPBACK ? GL_BACK : GL_FRONT,\n                read('fail'),\n                read('zfail'),\n                read('zpass')\n              ]\n            })\n\n        case S_POLYGON_OFFSET_OFFSET:\n          return parseParam(\n            function (value) {\n              check$1.commandType(value, 'object', param, env.commandStr)\n              var factor = value.factor | 0\n              var units = value.units | 0\n              check$1.commandType(factor, 'number', param + '.factor', env.commandStr)\n              check$1.commandType(units, 'number', param + '.units', env.commandStr)\n              return [factor, units]\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  value + '&&typeof ' + value + '===\"object\"',\n                  'invalid ' + prop)\n              })\n\n              var FACTOR = scope.def(value, '.factor|0')\n              var UNITS = scope.def(value, '.units|0')\n\n              return [FACTOR, UNITS]\n            })\n\n        case S_CULL_FACE:\n          return parseParam(\n            function (value) {\n              var face = 0\n              if (value === 'front') {\n                face = GL_FRONT\n              } else if (value === 'back') {\n                face = GL_BACK\n              }\n              check$1.command(!!face, param, env.commandStr)\n              return face\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  value + '===\"front\"||' +\n                  value + '===\"back\"',\n                  'invalid cull.face')\n              })\n              return scope.def(value, '===\"front\"?', GL_FRONT, ':', GL_BACK)\n            })\n\n        case S_LINE_WIDTH:\n          return parseParam(\n            function (value) {\n              check$1.command(\n                typeof value === 'number' &&\n                value >= limits.lineWidthDims[0] &&\n                value <= limits.lineWidthDims[1],\n                'invalid line width, must be a positive number between ' +\n                limits.lineWidthDims[0] + ' and ' + limits.lineWidthDims[1], env.commandStr)\n              return value\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  'typeof ' + value + '===\"number\"&&' +\n                  value + '>=' + limits.lineWidthDims[0] + '&&' +\n                  value + '<=' + limits.lineWidthDims[1],\n                  'invalid line width')\n              })\n\n              return value\n            })\n\n        case S_FRONT_FACE:\n          return parseParam(\n            function (value) {\n              check$1.commandParameter(value, orientationType, param, env.commandStr)\n              return orientationType[value]\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  value + '===\"cw\"||' +\n                  value + '===\"ccw\"',\n                  'invalid frontFace, must be one of cw,ccw')\n              })\n              return scope.def(value + '===\"cw\"?' + GL_CW + ':' + GL_CCW)\n            })\n\n        case S_COLOR_MASK:\n          return parseParam(\n            function (value) {\n              check$1.command(\n                isArrayLike(value) && value.length === 4,\n                'color.mask must be length 4 array', env.commandStr)\n              return value.map(function (v) { return !!v })\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  env.shared.isArrayLike + '(' + value + ')&&' +\n                  value + '.length===4',\n                  'invalid color.mask')\n              })\n              return loop(4, function (i) {\n                return '!!' + value + '[' + i + ']'\n              })\n            })\n\n        case S_SAMPLE_COVERAGE:\n          return parseParam(\n            function (value) {\n              check$1.command(typeof value === 'object' && value, param, env.commandStr)\n              var sampleValue = 'value' in value ? value.value : 1\n              var sampleInvert = !!value.invert\n              check$1.command(\n                typeof sampleValue === 'number' &&\n                sampleValue >= 0 && sampleValue <= 1,\n                'sample.coverage.value must be a number between 0 and 1', env.commandStr)\n              return [sampleValue, sampleInvert]\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  value + '&&typeof ' + value + '===\"object\"',\n                  'invalid sample.coverage')\n              })\n              var VALUE = scope.def(\n                '\"value\" in ', value, '?+', value, '.value:1')\n              var INVERT = scope.def('!!', value, '.invert')\n              return [VALUE, INVERT]\n            })\n      }\n    })\n\n    return STATE\n  }\n\n  function parseUniforms (uniforms, env) {\n    var staticUniforms = uniforms.static\n    var dynamicUniforms = uniforms.dynamic\n\n    var UNIFORMS = {}\n\n    Object.keys(staticUniforms).forEach(function (name) {\n      var value = staticUniforms[name]\n      var result\n      if (typeof value === 'number' ||\n          typeof value === 'boolean') {\n        result = createStaticDecl(function () {\n          return value\n        })\n      } else if (typeof value === 'function') {\n        var reglType = value._reglType\n        if (reglType === 'texture2d' ||\n            reglType === 'textureCube') {\n          result = createStaticDecl(function (env) {\n            return env.link(value)\n          })\n        } else if (reglType === 'framebuffer' ||\n                   reglType === 'framebufferCube') {\n          check$1.command(value.color.length > 0,\n            'missing color attachment for framebuffer sent to uniform \"' + name + '\"', env.commandStr)\n          result = createStaticDecl(function (env) {\n            return env.link(value.color[0])\n          })\n        } else {\n          check$1.commandRaise('invalid data for uniform \"' + name + '\"', env.commandStr)\n        }\n      } else if (isArrayLike(value)) {\n        result = createStaticDecl(function (env) {\n          var ITEM = env.global.def('[',\n            loop(value.length, function (i) {\n              check$1.command(\n                typeof value[i] === 'number' ||\n                typeof value[i] === 'boolean',\n                'invalid uniform ' + name, env.commandStr)\n              return value[i]\n            }), ']')\n          return ITEM\n        })\n      } else {\n        check$1.commandRaise('invalid or missing data for uniform \"' + name + '\"', env.commandStr)\n      }\n      result.value = value\n      UNIFORMS[name] = result\n    })\n\n    Object.keys(dynamicUniforms).forEach(function (key) {\n      var dyn = dynamicUniforms[key]\n      UNIFORMS[key] = createDynamicDecl(dyn, function (env, scope) {\n        return env.invoke(scope, dyn)\n      })\n    })\n\n    return UNIFORMS\n  }\n\n  function parseAttributes (attributes, env) {\n    var staticAttributes = attributes.static\n    var dynamicAttributes = attributes.dynamic\n\n    var attributeDefs = {}\n\n    Object.keys(staticAttributes).forEach(function (attribute) {\n      var value = staticAttributes[attribute]\n      var id = stringStore.id(attribute)\n\n      var record = new AttributeRecord()\n      if (isBufferArgs(value)) {\n        record.state = ATTRIB_STATE_POINTER\n        record.buffer = bufferState.getBuffer(\n          bufferState.create(value, GL_ARRAY_BUFFER$2, false, true))\n        record.type = 0\n      } else {\n        var buffer = bufferState.getBuffer(value)\n        if (buffer) {\n          record.state = ATTRIB_STATE_POINTER\n          record.buffer = buffer\n          record.type = 0\n        } else {\n          check$1.command(typeof value === 'object' && value,\n            'invalid data for attribute ' + attribute, env.commandStr)\n          if ('constant' in value) {\n            var constant = value.constant\n            record.buffer = 'null'\n            record.state = ATTRIB_STATE_CONSTANT\n            if (typeof constant === 'number') {\n              record.x = constant\n            } else {\n              check$1.command(\n                isArrayLike(constant) &&\n                constant.length > 0 &&\n                constant.length <= 4,\n                'invalid constant for attribute ' + attribute, env.commandStr)\n              CUTE_COMPONENTS.forEach(function (c, i) {\n                if (i < constant.length) {\n                  record[c] = constant[i]\n                }\n              })\n            }\n          } else {\n            if (isBufferArgs(value.buffer)) {\n              buffer = bufferState.getBuffer(\n                bufferState.create(value.buffer, GL_ARRAY_BUFFER$2, false, true))\n            } else {\n              buffer = bufferState.getBuffer(value.buffer)\n            }\n            check$1.command(!!buffer, 'missing buffer for attribute \"' + attribute + '\"', env.commandStr)\n\n            var offset = value.offset | 0\n            check$1.command(offset >= 0,\n              'invalid offset for attribute \"' + attribute + '\"', env.commandStr)\n\n            var stride = value.stride | 0\n            check$1.command(stride >= 0 && stride < 256,\n              'invalid stride for attribute \"' + attribute + '\", must be integer betweeen [0, 255]', env.commandStr)\n\n            var size = value.size | 0\n            check$1.command(!('size' in value) || (size > 0 && size <= 4),\n              'invalid size for attribute \"' + attribute + '\", must be 1,2,3,4', env.commandStr)\n\n            var normalized = !!value.normalized\n\n            var type = 0\n            if ('type' in value) {\n              check$1.commandParameter(\n                value.type, glTypes,\n                'invalid type for attribute ' + attribute, env.commandStr)\n              type = glTypes[value.type]\n            }\n\n            var divisor = value.divisor | 0\n            check$1.optional(function () {\n              if ('divisor' in value) {\n                check$1.command(divisor === 0 || extInstancing,\n                  'cannot specify divisor for attribute \"' + attribute + '\", instancing not supported', env.commandStr)\n                check$1.command(divisor >= 0,\n                  'invalid divisor for attribute \"' + attribute + '\"', env.commandStr)\n              }\n\n              var command = env.commandStr\n\n              var VALID_KEYS = [\n                'buffer',\n                'offset',\n                'divisor',\n                'normalized',\n                'type',\n                'size',\n                'stride'\n              ]\n\n              Object.keys(value).forEach(function (prop) {\n                check$1.command(\n                  VALID_KEYS.indexOf(prop) >= 0,\n                  'unknown parameter \"' + prop + '\" for attribute pointer \"' + attribute + '\" (valid parameters are ' + VALID_KEYS + ')',\n                  command)\n              })\n            })\n\n            record.buffer = buffer\n            record.state = ATTRIB_STATE_POINTER\n            record.size = size\n            record.normalized = normalized\n            record.type = type || buffer.dtype\n            record.offset = offset\n            record.stride = stride\n            record.divisor = divisor\n          }\n        }\n      }\n\n      attributeDefs[attribute] = createStaticDecl(function (env, scope) {\n        var cache = env.attribCache\n        if (id in cache) {\n          return cache[id]\n        }\n        var result = {\n          isStream: false\n        }\n        Object.keys(record).forEach(function (key) {\n          result[key] = record[key]\n        })\n        if (record.buffer) {\n          result.buffer = env.link(record.buffer)\n          result.type = result.type || (result.buffer + '.dtype')\n        }\n        cache[id] = result\n        return result\n      })\n    })\n\n    Object.keys(dynamicAttributes).forEach(function (attribute) {\n      var dyn = dynamicAttributes[attribute]\n\n      function appendAttributeCode (env, block) {\n        var VALUE = env.invoke(block, dyn)\n\n        var shared = env.shared\n        var constants = env.constants\n\n        var IS_BUFFER_ARGS = shared.isBufferArgs\n        var BUFFER_STATE = shared.buffer\n\n        // Perform validation on attribute\n        check$1.optional(function () {\n          env.assert(block,\n            VALUE + '&&(typeof ' + VALUE + '===\"object\"||typeof ' +\n            VALUE + '===\"function\")&&(' +\n            IS_BUFFER_ARGS + '(' + VALUE + ')||' +\n            BUFFER_STATE + '.getBuffer(' + VALUE + ')||' +\n            BUFFER_STATE + '.getBuffer(' + VALUE + '.buffer)||' +\n            IS_BUFFER_ARGS + '(' + VALUE + '.buffer)||' +\n            '(\"constant\" in ' + VALUE +\n            '&&(typeof ' + VALUE + '.constant===\"number\"||' +\n            shared.isArrayLike + '(' + VALUE + '.constant))))',\n            'invalid dynamic attribute \"' + attribute + '\"')\n        })\n\n        // allocate names for result\n        var result = {\n          isStream: block.def(false)\n        }\n        var defaultRecord = new AttributeRecord()\n        defaultRecord.state = ATTRIB_STATE_POINTER\n        Object.keys(defaultRecord).forEach(function (key) {\n          result[key] = block.def('' + defaultRecord[key])\n        })\n\n        var BUFFER = result.buffer\n        var TYPE = result.type\n        block(\n          'if(', IS_BUFFER_ARGS, '(', VALUE, ')){',\n          result.isStream, '=true;',\n          BUFFER, '=', BUFFER_STATE, '.createStream(', GL_ARRAY_BUFFER$2, ',', VALUE, ');',\n          TYPE, '=', BUFFER, '.dtype;',\n          '}else{',\n          BUFFER, '=', BUFFER_STATE, '.getBuffer(', VALUE, ');',\n          'if(', BUFFER, '){',\n          TYPE, '=', BUFFER, '.dtype;',\n          '}else if(\"constant\" in ', VALUE, '){',\n          result.state, '=', ATTRIB_STATE_CONSTANT, ';',\n          'if(typeof ' + VALUE + '.constant === \"number\"){',\n          result[CUTE_COMPONENTS[0]], '=', VALUE, '.constant;',\n          CUTE_COMPONENTS.slice(1).map(function (n) {\n            return result[n]\n          }).join('='), '=0;',\n          '}else{',\n          CUTE_COMPONENTS.map(function (name, i) {\n            return (\n              result[name] + '=' + VALUE + '.constant.length>' + i +\n              '?' + VALUE + '.constant[' + i + ']:0;'\n            )\n          }).join(''),\n          '}}else{',\n          'if(', IS_BUFFER_ARGS, '(', VALUE, '.buffer)){',\n          BUFFER, '=', BUFFER_STATE, '.createStream(', GL_ARRAY_BUFFER$2, ',', VALUE, '.buffer);',\n          '}else{',\n          BUFFER, '=', BUFFER_STATE, '.getBuffer(', VALUE, '.buffer);',\n          '}',\n          TYPE, '=\"type\" in ', VALUE, '?',\n          constants.glTypes, '[', VALUE, '.type]:', BUFFER, '.dtype;',\n          result.normalized, '=!!', VALUE, '.normalized;')\n        function emitReadRecord (name) {\n          block(result[name], '=', VALUE, '.', name, '|0;')\n        }\n        emitReadRecord('size')\n        emitReadRecord('offset')\n        emitReadRecord('stride')\n        emitReadRecord('divisor')\n\n        block('}}')\n\n        block.exit(\n          'if(', result.isStream, '){',\n          BUFFER_STATE, '.destroyStream(', BUFFER, ');',\n          '}')\n\n        return result\n      }\n\n      attributeDefs[attribute] = createDynamicDecl(dyn, appendAttributeCode)\n    })\n\n    return attributeDefs\n  }\n\n  function parseContext (context) {\n    var staticContext = context.static\n    var dynamicContext = context.dynamic\n    var result = {}\n\n    Object.keys(staticContext).forEach(function (name) {\n      var value = staticContext[name]\n      result[name] = createStaticDecl(function (env, scope) {\n        if (typeof value === 'number' || typeof value === 'boolean') {\n          return '' + value\n        } else {\n          return env.link(value)\n        }\n      })\n    })\n\n    Object.keys(dynamicContext).forEach(function (name) {\n      var dyn = dynamicContext[name]\n      result[name] = createDynamicDecl(dyn, function (env, scope) {\n        return env.invoke(scope, dyn)\n      })\n    })\n\n    return result\n  }\n\n  function parseArguments (options, attributes, uniforms, context, env) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    check$1.optional(function () {\n      var KEY_NAMES = [\n        S_FRAMEBUFFER,\n        S_VERT,\n        S_FRAG,\n        S_ELEMENTS,\n        S_PRIMITIVE,\n        S_OFFSET,\n        S_COUNT,\n        S_INSTANCES,\n        S_PROFILE,\n        S_VAO\n      ].concat(GL_STATE_NAMES)\n\n      function checkKeys (dict) {\n        Object.keys(dict).forEach(function (key) {\n          check$1.command(\n            KEY_NAMES.indexOf(key) >= 0,\n            'unknown parameter \"' + key + '\"',\n            env.commandStr)\n        })\n      }\n\n      checkKeys(staticOptions)\n      checkKeys(dynamicOptions)\n    })\n\n    var attribLocations = parseAttribLocations(options, attributes)\n\n    var framebuffer = parseFramebuffer(options, env)\n    var viewportAndScissor = parseViewportScissor(options, framebuffer, env)\n    var draw = parseDraw(options, env)\n    var state = parseGLState(options, env)\n    var shader = parseProgram(options, env, attribLocations)\n\n    function copyBox (name) {\n      var defn = viewportAndScissor[name]\n      if (defn) {\n        state[name] = defn\n      }\n    }\n    copyBox(S_VIEWPORT)\n    copyBox(propName(S_SCISSOR_BOX))\n\n    var dirty = Object.keys(state).length > 0\n\n    var result = {\n      framebuffer: framebuffer,\n      draw: draw,\n      shader: shader,\n      state: state,\n      dirty: dirty,\n      scopeVAO: null,\n      drawVAO: null,\n      useVAO: false,\n      attributes: {}\n    }\n\n    result.profile = parseProfile(options, env)\n    result.uniforms = parseUniforms(uniforms, env)\n    result.drawVAO = result.scopeVAO = draw.vao\n    // special case: check if we can statically allocate a vertex array object for this program\n    if (!result.drawVAO &&\n      shader.program &&\n      !attribLocations &&\n      extensions.angle_instanced_arrays &&\n      draw.static.elements) {\n      var useVAO = true\n      var staticBindings = shader.program.attributes.map(function (attr) {\n        var binding = attributes.static[attr]\n        useVAO = useVAO && !!binding\n        return binding\n      })\n      if (useVAO && staticBindings.length > 0) {\n        var vao = attributeState.getVAO(attributeState.createVAO({\n          attributes: staticBindings,\n          elements: draw.static.elements\n        }))\n        result.drawVAO = new Declaration(null, null, null, function (env, scope) {\n          return env.link(vao)\n        })\n        result.useVAO = true\n      }\n    }\n    if (attribLocations) {\n      result.useVAO = true\n    } else {\n      result.attributes = parseAttributes(attributes, env)\n    }\n    result.context = parseContext(context, env)\n    return result\n  }\n\n  // ===================================================\n  // ===================================================\n  // COMMON UPDATE FUNCTIONS\n  // ===================================================\n  // ===================================================\n  function emitContext (env, scope, context) {\n    var shared = env.shared\n    var CONTEXT = shared.context\n\n    var contextEnter = env.scope()\n\n    Object.keys(context).forEach(function (name) {\n      scope.save(CONTEXT, '.' + name)\n      var defn = context[name]\n      var value = defn.append(env, scope)\n      if (Array.isArray(value)) {\n        contextEnter(CONTEXT, '.', name, '=[', value.join(), '];')\n      } else {\n        contextEnter(CONTEXT, '.', name, '=', value, ';')\n      }\n    })\n\n    scope(contextEnter)\n  }\n\n  // ===================================================\n  // ===================================================\n  // COMMON DRAWING FUNCTIONS\n  // ===================================================\n  // ===================================================\n  function emitPollFramebuffer (env, scope, framebuffer, skipCheck) {\n    var shared = env.shared\n\n    var GL = shared.gl\n    var FRAMEBUFFER_STATE = shared.framebuffer\n    var EXT_DRAW_BUFFERS\n    if (extDrawBuffers) {\n      EXT_DRAW_BUFFERS = scope.def(shared.extensions, '.webgl_draw_buffers')\n    }\n\n    var constants = env.constants\n\n    var DRAW_BUFFERS = constants.drawBuffer\n    var BACK_BUFFER = constants.backBuffer\n\n    var NEXT\n    if (framebuffer) {\n      NEXT = framebuffer.append(env, scope)\n    } else {\n      NEXT = scope.def(FRAMEBUFFER_STATE, '.next')\n    }\n\n    if (!skipCheck) {\n      scope('if(', NEXT, '!==', FRAMEBUFFER_STATE, '.cur){')\n    }\n    scope(\n      'if(', NEXT, '){',\n      GL, '.bindFramebuffer(', GL_FRAMEBUFFER$2, ',', NEXT, '.framebuffer);')\n    if (extDrawBuffers) {\n      scope(EXT_DRAW_BUFFERS, '.drawBuffersWEBGL(',\n        DRAW_BUFFERS, '[', NEXT, '.colorAttachments.length]);')\n    }\n    scope('}else{',\n      GL, '.bindFramebuffer(', GL_FRAMEBUFFER$2, ',null);')\n    if (extDrawBuffers) {\n      scope(EXT_DRAW_BUFFERS, '.drawBuffersWEBGL(', BACK_BUFFER, ');')\n    }\n    scope(\n      '}',\n      FRAMEBUFFER_STATE, '.cur=', NEXT, ';')\n    if (!skipCheck) {\n      scope('}')\n    }\n  }\n\n  function emitPollState (env, scope, args) {\n    var shared = env.shared\n\n    var GL = shared.gl\n\n    var CURRENT_VARS = env.current\n    var NEXT_VARS = env.next\n    var CURRENT_STATE = shared.current\n    var NEXT_STATE = shared.next\n\n    var block = env.cond(CURRENT_STATE, '.dirty')\n\n    GL_STATE_NAMES.forEach(function (prop) {\n      var param = propName(prop)\n      if (param in args.state) {\n        return\n      }\n\n      var NEXT, CURRENT\n      if (param in NEXT_VARS) {\n        NEXT = NEXT_VARS[param]\n        CURRENT = CURRENT_VARS[param]\n        var parts = loop(currentState[param].length, function (i) {\n          return block.def(NEXT, '[', i, ']')\n        })\n        block(env.cond(parts.map(function (p, i) {\n          return p + '!==' + CURRENT + '[' + i + ']'\n        }).join('||'))\n          .then(\n            GL, '.', GL_VARIABLES[param], '(', parts, ');',\n            parts.map(function (p, i) {\n              return CURRENT + '[' + i + ']=' + p\n            }).join(';'), ';'))\n      } else {\n        NEXT = block.def(NEXT_STATE, '.', param)\n        var ifte = env.cond(NEXT, '!==', CURRENT_STATE, '.', param)\n        block(ifte)\n        if (param in GL_FLAGS) {\n          ifte(\n            env.cond(NEXT)\n              .then(GL, '.enable(', GL_FLAGS[param], ');')\n              .else(GL, '.disable(', GL_FLAGS[param], ');'),\n            CURRENT_STATE, '.', param, '=', NEXT, ';')\n        } else {\n          ifte(\n            GL, '.', GL_VARIABLES[param], '(', NEXT, ');',\n            CURRENT_STATE, '.', param, '=', NEXT, ';')\n        }\n      }\n    })\n    if (Object.keys(args.state).length === 0) {\n      block(CURRENT_STATE, '.dirty=false;')\n    }\n    scope(block)\n  }\n\n  function emitSetOptions (env, scope, options, filter) {\n    var shared = env.shared\n    var CURRENT_VARS = env.current\n    var CURRENT_STATE = shared.current\n    var GL = shared.gl\n    sortState(Object.keys(options)).forEach(function (param) {\n      var defn = options[param]\n      if (filter && !filter(defn)) {\n        return\n      }\n      var variable = defn.append(env, scope)\n      if (GL_FLAGS[param]) {\n        var flag = GL_FLAGS[param]\n        if (isStatic(defn)) {\n          if (variable) {\n            scope(GL, '.enable(', flag, ');')\n          } else {\n            scope(GL, '.disable(', flag, ');')\n          }\n        } else {\n          scope(env.cond(variable)\n            .then(GL, '.enable(', flag, ');')\n            .else(GL, '.disable(', flag, ');'))\n        }\n        scope(CURRENT_STATE, '.', param, '=', variable, ';')\n      } else if (isArrayLike(variable)) {\n        var CURRENT = CURRENT_VARS[param]\n        scope(\n          GL, '.', GL_VARIABLES[param], '(', variable, ');',\n          variable.map(function (v, i) {\n            return CURRENT + '[' + i + ']=' + v\n          }).join(';'), ';')\n      } else {\n        scope(\n          GL, '.', GL_VARIABLES[param], '(', variable, ');',\n          CURRENT_STATE, '.', param, '=', variable, ';')\n      }\n    })\n  }\n\n  function injectExtensions (env, scope) {\n    if (extInstancing) {\n      env.instancing = scope.def(\n        env.shared.extensions, '.angle_instanced_arrays')\n    }\n  }\n\n  function emitProfile (env, scope, args, useScope, incrementCounter) {\n    var shared = env.shared\n    var STATS = env.stats\n    var CURRENT_STATE = shared.current\n    var TIMER = shared.timer\n    var profileArg = args.profile\n\n    function perfCounter () {\n      if (typeof performance === 'undefined') {\n        return 'Date.now()'\n      } else {\n        return 'performance.now()'\n      }\n    }\n\n    var CPU_START, QUERY_COUNTER\n    function emitProfileStart (block) {\n      CPU_START = scope.def()\n      block(CPU_START, '=', perfCounter(), ';')\n      if (typeof incrementCounter === 'string') {\n        block(STATS, '.count+=', incrementCounter, ';')\n      } else {\n        block(STATS, '.count++;')\n      }\n      if (timer) {\n        if (useScope) {\n          QUERY_COUNTER = scope.def()\n          block(QUERY_COUNTER, '=', TIMER, '.getNumPendingQueries();')\n        } else {\n          block(TIMER, '.beginQuery(', STATS, ');')\n        }\n      }\n    }\n\n    function emitProfileEnd (block) {\n      block(STATS, '.cpuTime+=', perfCounter(), '-', CPU_START, ';')\n      if (timer) {\n        if (useScope) {\n          block(TIMER, '.pushScopeStats(',\n            QUERY_COUNTER, ',',\n            TIMER, '.getNumPendingQueries(),',\n            STATS, ');')\n        } else {\n          block(TIMER, '.endQuery();')\n        }\n      }\n    }\n\n    function scopeProfile (value) {\n      var prev = scope.def(CURRENT_STATE, '.profile')\n      scope(CURRENT_STATE, '.profile=', value, ';')\n      scope.exit(CURRENT_STATE, '.profile=', prev, ';')\n    }\n\n    var USE_PROFILE\n    if (profileArg) {\n      if (isStatic(profileArg)) {\n        if (profileArg.enable) {\n          emitProfileStart(scope)\n          emitProfileEnd(scope.exit)\n          scopeProfile('true')\n        } else {\n          scopeProfile('false')\n        }\n        return\n      }\n      USE_PROFILE = profileArg.append(env, scope)\n      scopeProfile(USE_PROFILE)\n    } else {\n      USE_PROFILE = scope.def(CURRENT_STATE, '.profile')\n    }\n\n    var start = env.block()\n    emitProfileStart(start)\n    scope('if(', USE_PROFILE, '){', start, '}')\n    var end = env.block()\n    emitProfileEnd(end)\n    scope.exit('if(', USE_PROFILE, '){', end, '}')\n  }\n\n  function emitAttributes (env, scope, args, attributes, filter) {\n    var shared = env.shared\n\n    function typeLength (x) {\n      switch (x) {\n        case GL_FLOAT_VEC2:\n        case GL_INT_VEC2:\n        case GL_BOOL_VEC2:\n          return 2\n        case GL_FLOAT_VEC3:\n        case GL_INT_VEC3:\n        case GL_BOOL_VEC3:\n          return 3\n        case GL_FLOAT_VEC4:\n        case GL_INT_VEC4:\n        case GL_BOOL_VEC4:\n          return 4\n        default:\n          return 1\n      }\n    }\n\n    function emitBindAttribute (ATTRIBUTE, size, record) {\n      var GL = shared.gl\n\n      var LOCATION = scope.def(ATTRIBUTE, '.location')\n      var BINDING = scope.def(shared.attributes, '[', LOCATION, ']')\n\n      var STATE = record.state\n      var BUFFER = record.buffer\n      var CONST_COMPONENTS = [\n        record.x,\n        record.y,\n        record.z,\n        record.w\n      ]\n\n      var COMMON_KEYS = [\n        'buffer',\n        'normalized',\n        'offset',\n        'stride'\n      ]\n\n      function emitBuffer () {\n        scope(\n          'if(!', BINDING, '.buffer){',\n          GL, '.enableVertexAttribArray(', LOCATION, ');}')\n\n        var TYPE = record.type\n        var SIZE\n        if (!record.size) {\n          SIZE = size\n        } else {\n          SIZE = scope.def(record.size, '||', size)\n        }\n\n        scope('if(',\n          BINDING, '.type!==', TYPE, '||',\n          BINDING, '.size!==', SIZE, '||',\n          COMMON_KEYS.map(function (key) {\n            return BINDING + '.' + key + '!==' + record[key]\n          }).join('||'),\n          '){',\n          GL, '.bindBuffer(', GL_ARRAY_BUFFER$2, ',', BUFFER, '.buffer);',\n          GL, '.vertexAttribPointer(', [\n            LOCATION,\n            SIZE,\n            TYPE,\n            record.normalized,\n            record.stride,\n            record.offset\n          ], ');',\n          BINDING, '.type=', TYPE, ';',\n          BINDING, '.size=', SIZE, ';',\n          COMMON_KEYS.map(function (key) {\n            return BINDING + '.' + key + '=' + record[key] + ';'\n          }).join(''),\n          '}')\n\n        if (extInstancing) {\n          var DIVISOR = record.divisor\n          scope(\n            'if(', BINDING, '.divisor!==', DIVISOR, '){',\n            env.instancing, '.vertexAttribDivisorANGLE(', [LOCATION, DIVISOR], ');',\n            BINDING, '.divisor=', DIVISOR, ';}')\n        }\n      }\n\n      function emitConstant () {\n        scope(\n          'if(', BINDING, '.buffer){',\n          GL, '.disableVertexAttribArray(', LOCATION, ');',\n          BINDING, '.buffer=null;',\n          '}if(', CUTE_COMPONENTS.map(function (c, i) {\n            return BINDING + '.' + c + '!==' + CONST_COMPONENTS[i]\n          }).join('||'), '){',\n          GL, '.vertexAttrib4f(', LOCATION, ',', CONST_COMPONENTS, ');',\n          CUTE_COMPONENTS.map(function (c, i) {\n            return BINDING + '.' + c + '=' + CONST_COMPONENTS[i] + ';'\n          }).join(''),\n          '}')\n      }\n\n      if (STATE === ATTRIB_STATE_POINTER) {\n        emitBuffer()\n      } else if (STATE === ATTRIB_STATE_CONSTANT) {\n        emitConstant()\n      } else {\n        scope('if(', STATE, '===', ATTRIB_STATE_POINTER, '){')\n        emitBuffer()\n        scope('}else{')\n        emitConstant()\n        scope('}')\n      }\n    }\n\n    attributes.forEach(function (attribute) {\n      var name = attribute.name\n      var arg = args.attributes[name]\n      var record\n      if (arg) {\n        if (!filter(arg)) {\n          return\n        }\n        record = arg.append(env, scope)\n      } else {\n        if (!filter(SCOPE_DECL)) {\n          return\n        }\n        var scopeAttrib = env.scopeAttrib(name)\n        check$1.optional(function () {\n          env.assert(scope,\n            scopeAttrib + '.state',\n            'missing attribute ' + name)\n        })\n        record = {}\n        Object.keys(new AttributeRecord()).forEach(function (key) {\n          record[key] = scope.def(scopeAttrib, '.', key)\n        })\n      }\n      emitBindAttribute(\n        env.link(attribute), typeLength(attribute.info.type), record)\n    })\n  }\n\n  function emitUniforms (env, scope, args, uniforms, filter, isBatchInnerLoop) {\n    var shared = env.shared\n    var GL = shared.gl\n\n    var definedArrUniforms = {}\n    var infix\n    for (var i = 0; i < uniforms.length; ++i) {\n      var uniform = uniforms[i]\n      var name = uniform.name\n      var type = uniform.info.type\n      var size = uniform.info.size\n      var arg = args.uniforms[name]\n      if (size > 1) {\n        // either foo[n] or foos, avoid define both\n        if (!arg) {\n          continue\n        }\n        var arrUniformName = name.replace('[0]', '')\n        if (definedArrUniforms[arrUniformName]) {\n          continue\n        }\n        definedArrUniforms[arrUniformName] = 1\n      }\n      var UNIFORM = env.link(uniform)\n      var LOCATION = UNIFORM + '.location'\n\n      var VALUE\n      if (arg) {\n        if (!filter(arg)) {\n          continue\n        }\n        if (isStatic(arg)) {\n          var value = arg.value\n          check$1.command(\n            value !== null && typeof value !== 'undefined',\n            'missing uniform \"' + name + '\"', env.commandStr)\n          if (type === GL_SAMPLER_2D || type === GL_SAMPLER_CUBE) {\n            check$1.command(\n              typeof value === 'function' &&\n              ((type === GL_SAMPLER_2D &&\n                (value._reglType === 'texture2d' ||\n                value._reglType === 'framebuffer')) ||\n              (type === GL_SAMPLER_CUBE &&\n                (value._reglType === 'textureCube' ||\n                value._reglType === 'framebufferCube'))),\n              'invalid texture for uniform ' + name, env.commandStr)\n            var TEX_VALUE = env.link(value._texture || value.color[0]._texture)\n            scope(GL, '.uniform1i(', LOCATION, ',', TEX_VALUE + '.bind());')\n            scope.exit(TEX_VALUE, '.unbind();')\n          } else if (\n            type === GL_FLOAT_MAT2 ||\n            type === GL_FLOAT_MAT3 ||\n            type === GL_FLOAT_MAT4) {\n            check$1.optional(function () {\n              check$1.command(isArrayLike(value),\n                'invalid matrix for uniform ' + name, env.commandStr)\n              check$1.command(\n                (type === GL_FLOAT_MAT2 && value.length === 4) ||\n                (type === GL_FLOAT_MAT3 && value.length === 9) ||\n                (type === GL_FLOAT_MAT4 && value.length === 16),\n                'invalid length for matrix uniform ' + name, env.commandStr)\n            })\n            var MAT_VALUE = env.global.def('new Float32Array([' +\n              Array.prototype.slice.call(value) + '])')\n            var dim = 2\n            if (type === GL_FLOAT_MAT3) {\n              dim = 3\n            } else if (type === GL_FLOAT_MAT4) {\n              dim = 4\n            }\n            scope(\n              GL, '.uniformMatrix', dim, 'fv(',\n              LOCATION, ',false,', MAT_VALUE, ');')\n          } else {\n            switch (type) {\n              case GL_FLOAT$8:\n                if (size === 1) {\n                  check$1.commandType(value, 'number', 'uniform ' + name, env.commandStr)\n                } else {\n                  check$1.command(\n                    isArrayLike(value) && (value.length === size),\n                    'uniform ' + name, env.commandStr)\n                }\n                infix = '1f'\n                break\n              case GL_FLOAT_VEC2:\n                check$1.command(\n                  isArrayLike(value) && (value.length && value.length % 2 === 0 && value.length <= size * 2),\n                  'uniform ' + name, env.commandStr)\n                infix = '2f'\n                break\n              case GL_FLOAT_VEC3:\n                check$1.command(\n                  isArrayLike(value) && (value.length && value.length % 3 === 0 && value.length <= size * 3),\n                  'uniform ' + name, env.commandStr)\n                infix = '3f'\n                break\n              case GL_FLOAT_VEC4:\n                check$1.command(\n                  isArrayLike(value) && (value.length && value.length % 4 === 0 && value.length <= size * 4),\n                  'uniform ' + name, env.commandStr)\n                infix = '4f'\n                break\n              case GL_BOOL:\n                if (size === 1) {\n                  check$1.commandType(value, 'boolean', 'uniform ' + name, env.commandStr)\n                } else {\n                  check$1.command(\n                    isArrayLike(value) && (value.length === size),\n                    'uniform ' + name, env.commandStr)\n                }\n                infix = '1i'\n                break\n              case GL_INT$3:\n                if (size === 1) {\n                  check$1.commandType(value, 'number', 'uniform ' + name, env.commandStr)\n                } else {\n                  check$1.command(\n                    isArrayLike(value) && (value.length === size),\n                    'uniform ' + name, env.commandStr)\n                }\n                infix = '1i'\n                break\n              case GL_BOOL_VEC2:\n                check$1.command(\n                  isArrayLike(value) && (value.length && value.length % 2 === 0 && value.length <= size * 2),\n                  'uniform ' + name, env.commandStr)\n                infix = '2i'\n                break\n              case GL_INT_VEC2:\n                check$1.command(\n                  isArrayLike(value) && (value.length && value.length % 2 === 0 && value.length <= size * 2),\n                  'uniform ' + name, env.commandStr)\n                infix = '2i'\n                break\n              case GL_BOOL_VEC3:\n                check$1.command(\n                  isArrayLike(value) && (value.length && value.length % 3 === 0 && value.length <= size * 3),\n                  'uniform ' + name, env.commandStr)\n                infix = '3i'\n                break\n              case GL_INT_VEC3:\n                check$1.command(\n                  isArrayLike(value) && (value.length && value.length % 3 === 0 && value.length <= size * 3),\n                  'uniform ' + name, env.commandStr)\n                infix = '3i'\n                break\n              case GL_BOOL_VEC4:\n                check$1.command(\n                  isArrayLike(value) && (value.length && value.length % 4 === 0 && value.length <= size * 4),\n                  'uniform ' + name, env.commandStr)\n                infix = '4i'\n                break\n              case GL_INT_VEC4:\n                check$1.command(\n                  isArrayLike(value) && (value.length && value.length % 4 === 0 && value.length <= size * 4),\n                  'uniform ' + name, env.commandStr)\n                infix = '4i'\n                break\n            }\n            if (size > 1) {\n              infix += 'v'\n              value = env.global.def('[' +\n              Array.prototype.slice.call(value) + ']')\n            } else {\n              value = isArrayLike(value) ? Array.prototype.slice.call(value) : value\n            }\n            scope(GL, '.uniform', infix, '(', LOCATION, ',',\n              value,\n              ');')\n          }\n          continue\n        } else {\n          VALUE = arg.append(env, scope)\n        }\n      } else {\n        if (!filter(SCOPE_DECL)) {\n          continue\n        }\n        VALUE = scope.def(shared.uniforms, '[', stringStore.id(name), ']')\n      }\n\n      if (type === GL_SAMPLER_2D) {\n        check$1(!Array.isArray(VALUE), 'must specify a scalar prop for textures')\n        scope(\n          'if(', VALUE, '&&', VALUE, '._reglType===\"framebuffer\"){',\n          VALUE, '=', VALUE, '.color[0];',\n          '}')\n      } else if (type === GL_SAMPLER_CUBE) {\n        check$1(!Array.isArray(VALUE), 'must specify a scalar prop for cube maps')\n        scope(\n          'if(', VALUE, '&&', VALUE, '._reglType===\"framebufferCube\"){',\n          VALUE, '=', VALUE, '.color[0];',\n          '}')\n      }\n\n      // perform type validation\n      check$1.optional(function () {\n        function emitCheck (pred, message) {\n          env.assert(scope, pred,\n            'bad data or missing for uniform \"' + name + '\".  ' + message)\n        }\n\n        function checkType (type, size) {\n          if (size === 1) {\n            check$1(!Array.isArray(VALUE), 'must not specify an array type for uniform')\n          }\n          emitCheck(\n            'Array.isArray(' + VALUE + ') && typeof ' + VALUE + '[0]===\" ' + type + '\"' +\n            ' || typeof ' + VALUE + '===\"' + type + '\"',\n            'invalid type, expected ' + type)\n        }\n\n        function checkVector (n, type, size) {\n          if (Array.isArray(VALUE)) {\n            check$1(VALUE.length && VALUE.length % n === 0 && VALUE.length <= n * size, 'must have length of ' + (size === 1 ? '' : 'n * ') + n)\n          } else {\n            emitCheck(\n              shared.isArrayLike + '(' + VALUE + ')&&' + VALUE + '.length && ' + VALUE + '.length % ' + n + ' === 0' +\n              ' && ' + VALUE + '.length<=' + n * size,\n              'invalid vector, should have length of ' + (size === 1 ? '' : 'n * ') + n, env.commandStr)\n          }\n        }\n\n        function checkTexture (target) {\n          check$1(!Array.isArray(VALUE), 'must not specify a value type')\n          emitCheck(\n            'typeof ' + VALUE + '===\"function\"&&' +\n            VALUE + '._reglType===\"texture' +\n            (target === GL_TEXTURE_2D$3 ? '2d' : 'Cube') + '\"',\n            'invalid texture type', env.commandStr)\n        }\n\n        switch (type) {\n          case GL_INT$3:\n            checkType('number', size)\n            break\n          case GL_INT_VEC2:\n            checkVector(2, 'number', size)\n            break\n          case GL_INT_VEC3:\n            checkVector(3, 'number', size)\n            break\n          case GL_INT_VEC4:\n            checkVector(4, 'number', size)\n            break\n          case GL_FLOAT$8:\n            checkType('number', size)\n            break\n          case GL_FLOAT_VEC2:\n            checkVector(2, 'number', size)\n            break\n          case GL_FLOAT_VEC3:\n            checkVector(3, 'number', size)\n            break\n          case GL_FLOAT_VEC4:\n            checkVector(4, 'number', size)\n            break\n          case GL_BOOL:\n            checkType('boolean', size)\n            break\n          case GL_BOOL_VEC2:\n            checkVector(2, 'boolean', size)\n            break\n          case GL_BOOL_VEC3:\n            checkVector(3, 'boolean', size)\n            break\n          case GL_BOOL_VEC4:\n            checkVector(4, 'boolean', size)\n            break\n          case GL_FLOAT_MAT2:\n            checkVector(4, 'number', size)\n            break\n          case GL_FLOAT_MAT3:\n            checkVector(9, 'number', size)\n            break\n          case GL_FLOAT_MAT4:\n            checkVector(16, 'number', size)\n            break\n          case GL_SAMPLER_2D:\n            checkTexture(GL_TEXTURE_2D$3)\n            break\n          case GL_SAMPLER_CUBE:\n            checkTexture(GL_TEXTURE_CUBE_MAP$2)\n            break\n        }\n      })\n\n      var unroll = 1\n      switch (type) {\n        case GL_SAMPLER_2D:\n        case GL_SAMPLER_CUBE:\n          var TEX = scope.def(VALUE, '._texture')\n          scope(GL, '.uniform1i(', LOCATION, ',', TEX, '.bind());')\n          scope.exit(TEX, '.unbind();')\n          continue\n\n        case GL_INT$3:\n        case GL_BOOL:\n          infix = '1i'\n          break\n\n        case GL_INT_VEC2:\n        case GL_BOOL_VEC2:\n          infix = '2i'\n          unroll = 2\n          break\n\n        case GL_INT_VEC3:\n        case GL_BOOL_VEC3:\n          infix = '3i'\n          unroll = 3\n          break\n\n        case GL_INT_VEC4:\n        case GL_BOOL_VEC4:\n          infix = '4i'\n          unroll = 4\n          break\n\n        case GL_FLOAT$8:\n          infix = '1f'\n          break\n\n        case GL_FLOAT_VEC2:\n          infix = '2f'\n          unroll = 2\n          break\n\n        case GL_FLOAT_VEC3:\n          infix = '3f'\n          unroll = 3\n          break\n\n        case GL_FLOAT_VEC4:\n          infix = '4f'\n          unroll = 4\n          break\n\n        case GL_FLOAT_MAT2:\n          infix = 'Matrix2fv'\n          break\n\n        case GL_FLOAT_MAT3:\n          infix = 'Matrix3fv'\n          break\n\n        case GL_FLOAT_MAT4:\n          infix = 'Matrix4fv'\n          break\n      }\n\n      if (infix.indexOf('Matrix') === -1 && size > 1) {\n        infix += 'v'\n        unroll = 1\n      }\n\n      if (infix.charAt(0) === 'M') {\n        scope(GL, '.uniform', infix, '(', LOCATION, ',')\n        var matSize = Math.pow(type - GL_FLOAT_MAT2 + 2, 2)\n        var STORAGE = env.global.def('new Float32Array(', matSize, ')')\n        if (Array.isArray(VALUE)) {\n          scope(\n            'false,(',\n            loop(matSize, function (i) {\n              return STORAGE + '[' + i + ']=' + VALUE[i]\n            }), ',', STORAGE, ')')\n        } else {\n          scope(\n            'false,(Array.isArray(', VALUE, ')||', VALUE, ' instanceof Float32Array)?', VALUE, ':(',\n            loop(matSize, function (i) {\n              return STORAGE + '[' + i + ']=' + VALUE + '[' + i + ']'\n            }), ',', STORAGE, ')')\n        }\n        scope(');')\n      } else if (unroll > 1) {\n        var prev = []\n        var cur = []\n        for (var j = 0; j < unroll; ++j) {\n          if (Array.isArray(VALUE)) {\n            cur.push(VALUE[j])\n          } else {\n            cur.push(scope.def(VALUE + '[' + j + ']'))\n          }\n          if (isBatchInnerLoop) {\n            prev.push(scope.def())\n          }\n        }\n        if (isBatchInnerLoop) {\n          scope('if(!', env.batchId, '||', prev.map(function (p, i) {\n            return p + '!==' + cur[i]\n          }).join('||'), '){', prev.map(function (p, i) {\n            return p + '=' + cur[i] + ';'\n          }).join(''))\n        }\n        scope(GL, '.uniform', infix, '(', LOCATION, ',', cur.join(','), ');')\n        if (isBatchInnerLoop) {\n          scope('}')\n        }\n      } else {\n        check$1(!Array.isArray(VALUE), 'uniform value must not be an array')\n        if (isBatchInnerLoop) {\n          var prevS = scope.def()\n          scope('if(!', env.batchId, '||', prevS, '!==', VALUE, '){',\n            prevS, '=', VALUE, ';')\n        }\n        scope(GL, '.uniform', infix, '(', LOCATION, ',', VALUE, ');')\n        if (isBatchInnerLoop) {\n          scope('}')\n        }\n      }\n    }\n  }\n\n  function emitDraw (env, outer, inner, args) {\n    var shared = env.shared\n    var GL = shared.gl\n    var DRAW_STATE = shared.draw\n\n    var drawOptions = args.draw\n\n    function emitElements () {\n      var defn = drawOptions.elements\n      var ELEMENTS\n      var scope = outer\n      if (defn) {\n        if ((defn.contextDep && args.contextDynamic) || defn.propDep) {\n          scope = inner\n        }\n        ELEMENTS = defn.append(env, scope)\n        if (drawOptions.elementsActive) {\n          scope(\n            'if(' + ELEMENTS + ')' +\n            GL + '.bindBuffer(' + GL_ELEMENT_ARRAY_BUFFER$2 + ',' + ELEMENTS + '.buffer.buffer);')\n        }\n      } else {\n        ELEMENTS = scope.def()\n        scope(\n          ELEMENTS, '=', DRAW_STATE, '.', S_ELEMENTS, ';',\n          'if(', ELEMENTS, '){',\n          GL, '.bindBuffer(', GL_ELEMENT_ARRAY_BUFFER$2, ',', ELEMENTS, '.buffer.buffer);}',\n          'else if(', shared.vao, '.currentVAO){',\n          ELEMENTS, '=', env.shared.elements + '.getElements(' + shared.vao, '.currentVAO.elements);',\n          (!extVertexArrays ? 'if(' + ELEMENTS + ')' + GL + '.bindBuffer(' + GL_ELEMENT_ARRAY_BUFFER$2 + ',' + ELEMENTS + '.buffer.buffer);' : ''),\n          '}')\n      }\n      return ELEMENTS\n    }\n\n    function emitCount () {\n      var defn = drawOptions.count\n      var COUNT\n      var scope = outer\n      if (defn) {\n        if ((defn.contextDep && args.contextDynamic) || defn.propDep) {\n          scope = inner\n        }\n        COUNT = defn.append(env, scope)\n        check$1.optional(function () {\n          if (defn.MISSING) {\n            env.assert(outer, 'false', 'missing vertex count')\n          }\n          if (defn.DYNAMIC) {\n            env.assert(scope, COUNT + '>=0', 'missing vertex count')\n          }\n        })\n      } else {\n        COUNT = scope.def(DRAW_STATE, '.', S_COUNT)\n        check$1.optional(function () {\n          env.assert(scope, COUNT + '>=0', 'missing vertex count')\n        })\n      }\n      return COUNT\n    }\n\n    var ELEMENTS = emitElements()\n    function emitValue (name) {\n      var defn = drawOptions[name]\n      if (defn) {\n        if ((defn.contextDep && args.contextDynamic) || defn.propDep) {\n          return defn.append(env, inner)\n        } else {\n          return defn.append(env, outer)\n        }\n      } else {\n        return outer.def(DRAW_STATE, '.', name)\n      }\n    }\n\n    var PRIMITIVE = emitValue(S_PRIMITIVE)\n    var OFFSET = emitValue(S_OFFSET)\n\n    var COUNT = emitCount()\n    if (typeof COUNT === 'number') {\n      if (COUNT === 0) {\n        return\n      }\n    } else {\n      inner('if(', COUNT, '){')\n      inner.exit('}')\n    }\n\n    var INSTANCES, EXT_INSTANCING\n    if (extInstancing) {\n      INSTANCES = emitValue(S_INSTANCES)\n      EXT_INSTANCING = env.instancing\n    }\n\n    var ELEMENT_TYPE = ELEMENTS + '.type'\n\n    var elementsStatic = drawOptions.elements && isStatic(drawOptions.elements) && !drawOptions.vaoActive\n\n    function emitInstancing () {\n      function drawElements () {\n        inner(EXT_INSTANCING, '.drawElementsInstancedANGLE(', [\n          PRIMITIVE,\n          COUNT,\n          ELEMENT_TYPE,\n          OFFSET + '<<((' + ELEMENT_TYPE + '-' + GL_UNSIGNED_BYTE$8 + ')>>1)',\n          INSTANCES\n        ], ');')\n      }\n\n      function drawArrays () {\n        inner(EXT_INSTANCING, '.drawArraysInstancedANGLE(',\n          [PRIMITIVE, OFFSET, COUNT, INSTANCES], ');')\n      }\n\n      if (ELEMENTS && ELEMENTS !== 'null') {\n        if (!elementsStatic) {\n          inner('if(', ELEMENTS, '){')\n          drawElements()\n          inner('}else{')\n          drawArrays()\n          inner('}')\n        } else {\n          drawElements()\n        }\n      } else {\n        drawArrays()\n      }\n    }\n\n    function emitRegular () {\n      function drawElements () {\n        inner(GL + '.drawElements(' + [\n          PRIMITIVE,\n          COUNT,\n          ELEMENT_TYPE,\n          OFFSET + '<<((' + ELEMENT_TYPE + '-' + GL_UNSIGNED_BYTE$8 + ')>>1)'\n        ] + ');')\n      }\n\n      function drawArrays () {\n        inner(GL + '.drawArrays(' + [PRIMITIVE, OFFSET, COUNT] + ');')\n      }\n\n      if (ELEMENTS && ELEMENTS !== 'null') {\n        if (!elementsStatic) {\n          inner('if(', ELEMENTS, '){')\n          drawElements()\n          inner('}else{')\n          drawArrays()\n          inner('}')\n        } else {\n          drawElements()\n        }\n      } else {\n        drawArrays()\n      }\n    }\n\n    if (extInstancing && (typeof INSTANCES !== 'number' || INSTANCES >= 0)) {\n      if (typeof INSTANCES === 'string') {\n        inner('if(', INSTANCES, '>0){')\n        emitInstancing()\n        inner('}else if(', INSTANCES, '<0){')\n        emitRegular()\n        inner('}')\n      } else {\n        emitInstancing()\n      }\n    } else {\n      emitRegular()\n    }\n  }\n\n  function createBody (emitBody, parentEnv, args, program, count) {\n    var env = createREGLEnvironment()\n    var scope = env.proc('body', count)\n    check$1.optional(function () {\n      env.commandStr = parentEnv.commandStr\n      env.command = env.link(parentEnv.commandStr)\n    })\n    if (extInstancing) {\n      env.instancing = scope.def(\n        env.shared.extensions, '.angle_instanced_arrays')\n    }\n    emitBody(env, scope, args, program)\n    return env.compile().body\n  }\n\n  // ===================================================\n  // ===================================================\n  // DRAW PROC\n  // ===================================================\n  // ===================================================\n  function emitDrawBody (env, draw, args, program) {\n    injectExtensions(env, draw)\n    if (args.useVAO) {\n      if (args.drawVAO) {\n        draw(env.shared.vao, '.setVAO(', args.drawVAO.append(env, draw), ');')\n      } else {\n        draw(env.shared.vao, '.setVAO(', env.shared.vao, '.targetVAO);')\n      }\n    } else {\n      draw(env.shared.vao, '.setVAO(null);')\n      emitAttributes(env, draw, args, program.attributes, function () {\n        return true\n      })\n    }\n    emitUniforms(env, draw, args, program.uniforms, function () {\n      return true\n    }, false)\n    emitDraw(env, draw, draw, args)\n  }\n\n  function emitDrawProc (env, args) {\n    var draw = env.proc('draw', 1)\n\n    injectExtensions(env, draw)\n\n    emitContext(env, draw, args.context)\n    emitPollFramebuffer(env, draw, args.framebuffer)\n\n    emitPollState(env, draw, args)\n    emitSetOptions(env, draw, args.state)\n\n    emitProfile(env, draw, args, false, true)\n\n    var program = args.shader.progVar.append(env, draw)\n    draw(env.shared.gl, '.useProgram(', program, '.program);')\n\n    if (args.shader.program) {\n      emitDrawBody(env, draw, args, args.shader.program)\n    } else {\n      draw(env.shared.vao, '.setVAO(null);')\n      var drawCache = env.global.def('{}')\n      var PROG_ID = draw.def(program, '.id')\n      var CACHED_PROC = draw.def(drawCache, '[', PROG_ID, ']')\n      draw(\n        env.cond(CACHED_PROC)\n          .then(CACHED_PROC, '.call(this,a0);')\n          .else(\n            CACHED_PROC, '=', drawCache, '[', PROG_ID, ']=',\n            env.link(function (program) {\n              return createBody(emitDrawBody, env, args, program, 1)\n            }), '(', program, ');',\n            CACHED_PROC, '.call(this,a0);'))\n    }\n\n    if (Object.keys(args.state).length > 0) {\n      draw(env.shared.current, '.dirty=true;')\n    }\n    if (env.shared.vao) {\n      draw(env.shared.vao, '.setVAO(null);')\n    }\n  }\n\n  // ===================================================\n  // ===================================================\n  // BATCH PROC\n  // ===================================================\n  // ===================================================\n\n  function emitBatchDynamicShaderBody (env, scope, args, program) {\n    env.batchId = 'a1'\n\n    injectExtensions(env, scope)\n\n    function all () {\n      return true\n    }\n\n    emitAttributes(env, scope, args, program.attributes, all)\n    emitUniforms(env, scope, args, program.uniforms, all, false)\n    emitDraw(env, scope, scope, args)\n  }\n\n  function emitBatchBody (env, scope, args, program) {\n    injectExtensions(env, scope)\n\n    var contextDynamic = args.contextDep\n\n    var BATCH_ID = scope.def()\n    var PROP_LIST = 'a0'\n    var NUM_PROPS = 'a1'\n    var PROPS = scope.def()\n    env.shared.props = PROPS\n    env.batchId = BATCH_ID\n\n    var outer = env.scope()\n    var inner = env.scope()\n\n    scope(\n      outer.entry,\n      'for(', BATCH_ID, '=0;', BATCH_ID, '<', NUM_PROPS, ';++', BATCH_ID, '){',\n      PROPS, '=', PROP_LIST, '[', BATCH_ID, '];',\n      inner,\n      '}',\n      outer.exit)\n\n    function isInnerDefn (defn) {\n      return ((defn.contextDep && contextDynamic) || defn.propDep)\n    }\n\n    function isOuterDefn (defn) {\n      return !isInnerDefn(defn)\n    }\n\n    if (args.needsContext) {\n      emitContext(env, inner, args.context)\n    }\n    if (args.needsFramebuffer) {\n      emitPollFramebuffer(env, inner, args.framebuffer)\n    }\n    emitSetOptions(env, inner, args.state, isInnerDefn)\n\n    if (args.profile && isInnerDefn(args.profile)) {\n      emitProfile(env, inner, args, false, true)\n    }\n\n    if (!program) {\n      var progCache = env.global.def('{}')\n      var PROGRAM = args.shader.progVar.append(env, inner)\n      var PROG_ID = inner.def(PROGRAM, '.id')\n      var CACHED_PROC = inner.def(progCache, '[', PROG_ID, ']')\n      inner(\n        env.shared.gl, '.useProgram(', PROGRAM, '.program);',\n        'if(!', CACHED_PROC, '){',\n        CACHED_PROC, '=', progCache, '[', PROG_ID, ']=',\n        env.link(function (program) {\n          return createBody(\n            emitBatchDynamicShaderBody, env, args, program, 2)\n        }), '(', PROGRAM, ');}',\n        CACHED_PROC, '.call(this,a0[', BATCH_ID, '],', BATCH_ID, ');')\n    } else {\n      if (args.useVAO) {\n        if (args.drawVAO) {\n          if (isInnerDefn(args.drawVAO)) {\n            // vao is a prop\n            inner(env.shared.vao, '.setVAO(', args.drawVAO.append(env, inner), ');')\n          } else {\n            // vao is invariant\n            outer(env.shared.vao, '.setVAO(', args.drawVAO.append(env, outer), ');')\n          }\n        } else {\n          // scoped vao binding\n          outer(env.shared.vao, '.setVAO(', env.shared.vao, '.targetVAO);')\n        }\n      } else {\n        outer(env.shared.vao, '.setVAO(null);')\n        emitAttributes(env, outer, args, program.attributes, isOuterDefn)\n        emitAttributes(env, inner, args, program.attributes, isInnerDefn)\n      }\n      emitUniforms(env, outer, args, program.uniforms, isOuterDefn, false)\n      emitUniforms(env, inner, args, program.uniforms, isInnerDefn, true)\n      emitDraw(env, outer, inner, args)\n    }\n  }\n\n  function emitBatchProc (env, args) {\n    var batch = env.proc('batch', 2)\n    env.batchId = '0'\n\n    injectExtensions(env, batch)\n\n    // Check if any context variables depend on props\n    var contextDynamic = false\n    var needsContext = true\n    Object.keys(args.context).forEach(function (name) {\n      contextDynamic = contextDynamic || args.context[name].propDep\n    })\n    if (!contextDynamic) {\n      emitContext(env, batch, args.context)\n      needsContext = false\n    }\n\n    // framebuffer state affects framebufferWidth/height context vars\n    var framebuffer = args.framebuffer\n    var needsFramebuffer = false\n    if (framebuffer) {\n      if (framebuffer.propDep) {\n        contextDynamic = needsFramebuffer = true\n      } else if (framebuffer.contextDep && contextDynamic) {\n        needsFramebuffer = true\n      }\n      if (!needsFramebuffer) {\n        emitPollFramebuffer(env, batch, framebuffer)\n      }\n    } else {\n      emitPollFramebuffer(env, batch, null)\n    }\n\n    // viewport is weird because it can affect context vars\n    if (args.state.viewport && args.state.viewport.propDep) {\n      contextDynamic = true\n    }\n\n    function isInnerDefn (defn) {\n      return (defn.contextDep && contextDynamic) || defn.propDep\n    }\n\n    // set webgl options\n    emitPollState(env, batch, args)\n    emitSetOptions(env, batch, args.state, function (defn) {\n      return !isInnerDefn(defn)\n    })\n\n    if (!args.profile || !isInnerDefn(args.profile)) {\n      emitProfile(env, batch, args, false, 'a1')\n    }\n\n    // Save these values to args so that the batch body routine can use them\n    args.contextDep = contextDynamic\n    args.needsContext = needsContext\n    args.needsFramebuffer = needsFramebuffer\n\n    // determine if shader is dynamic\n    var progDefn = args.shader.progVar\n    if ((progDefn.contextDep && contextDynamic) || progDefn.propDep) {\n      emitBatchBody(\n        env,\n        batch,\n        args,\n        null)\n    } else {\n      var PROGRAM = progDefn.append(env, batch)\n      batch(env.shared.gl, '.useProgram(', PROGRAM, '.program);')\n      if (args.shader.program) {\n        emitBatchBody(\n          env,\n          batch,\n          args,\n          args.shader.program)\n      } else {\n        batch(env.shared.vao, '.setVAO(null);')\n        var batchCache = env.global.def('{}')\n        var PROG_ID = batch.def(PROGRAM, '.id')\n        var CACHED_PROC = batch.def(batchCache, '[', PROG_ID, ']')\n        batch(\n          env.cond(CACHED_PROC)\n            .then(CACHED_PROC, '.call(this,a0,a1);')\n            .else(\n              CACHED_PROC, '=', batchCache, '[', PROG_ID, ']=',\n              env.link(function (program) {\n                return createBody(emitBatchBody, env, args, program, 2)\n              }), '(', PROGRAM, ');',\n              CACHED_PROC, '.call(this,a0,a1);'))\n      }\n    }\n\n    if (Object.keys(args.state).length > 0) {\n      batch(env.shared.current, '.dirty=true;')\n    }\n\n    if (env.shared.vao) {\n      batch(env.shared.vao, '.setVAO(null);')\n    }\n  }\n\n  // ===================================================\n  // ===================================================\n  // SCOPE COMMAND\n  // ===================================================\n  // ===================================================\n  function emitScopeProc (env, args) {\n    var scope = env.proc('scope', 3)\n    env.batchId = 'a2'\n\n    var shared = env.shared\n    var CURRENT_STATE = shared.current\n\n    emitContext(env, scope, args.context)\n\n    if (args.framebuffer) {\n      args.framebuffer.append(env, scope)\n    }\n\n    sortState(Object.keys(args.state)).forEach(function (name) {\n      var defn = args.state[name]\n      var value = defn.append(env, scope)\n      if (isArrayLike(value)) {\n        value.forEach(function (v, i) {\n          scope.set(env.next[name], '[' + i + ']', v)\n        })\n      } else {\n        scope.set(shared.next, '.' + name, value)\n      }\n    })\n\n    emitProfile(env, scope, args, true, true)\n\n    ;[S_ELEMENTS, S_OFFSET, S_COUNT, S_INSTANCES, S_PRIMITIVE].forEach(\n      function (opt) {\n        var variable = args.draw[opt]\n        if (!variable) {\n          return\n        }\n        scope.set(shared.draw, '.' + opt, '' + variable.append(env, scope))\n      })\n\n    Object.keys(args.uniforms).forEach(function (opt) {\n      var value = args.uniforms[opt].append(env, scope)\n      if (Array.isArray(value)) {\n        value = '[' + value.join() + ']'\n      }\n      scope.set(\n        shared.uniforms,\n        '[' + stringStore.id(opt) + ']',\n        value)\n    })\n\n    Object.keys(args.attributes).forEach(function (name) {\n      var record = args.attributes[name].append(env, scope)\n      var scopeAttrib = env.scopeAttrib(name)\n      Object.keys(new AttributeRecord()).forEach(function (prop) {\n        scope.set(scopeAttrib, '.' + prop, record[prop])\n      })\n    })\n\n    if (args.scopeVAO) {\n      scope.set(shared.vao, '.targetVAO', args.scopeVAO.append(env, scope))\n    }\n\n    function saveShader (name) {\n      var shader = args.shader[name]\n      if (shader) {\n        scope.set(shared.shader, '.' + name, shader.append(env, scope))\n      }\n    }\n    saveShader(S_VERT)\n    saveShader(S_FRAG)\n\n    if (Object.keys(args.state).length > 0) {\n      scope(CURRENT_STATE, '.dirty=true;')\n      scope.exit(CURRENT_STATE, '.dirty=true;')\n    }\n\n    scope('a1(', env.shared.context, ',a0,', env.batchId, ');')\n  }\n\n  function isDynamicObject (object) {\n    if (typeof object !== 'object' || isArrayLike(object)) {\n      return\n    }\n    var props = Object.keys(object)\n    for (var i = 0; i < props.length; ++i) {\n      if (dynamic.isDynamic(object[props[i]])) {\n        return true\n      }\n    }\n    return false\n  }\n\n  function splatObject (env, options, name) {\n    var object = options.static[name]\n    if (!object || !isDynamicObject(object)) {\n      return\n    }\n\n    var globals = env.global\n    var keys = Object.keys(object)\n    var thisDep = false\n    var contextDep = false\n    var propDep = false\n    var objectRef = env.global.def('{}')\n    keys.forEach(function (key) {\n      var value = object[key]\n      if (dynamic.isDynamic(value)) {\n        if (typeof value === 'function') {\n          value = object[key] = dynamic.unbox(value)\n        }\n        var deps = createDynamicDecl(value, null)\n        thisDep = thisDep || deps.thisDep\n        propDep = propDep || deps.propDep\n        contextDep = contextDep || deps.contextDep\n      } else {\n        globals(objectRef, '.', key, '=')\n        switch (typeof value) {\n          case 'number':\n            globals(value)\n            break\n          case 'string':\n            globals('\"', value, '\"')\n            break\n          case 'object':\n            if (Array.isArray(value)) {\n              globals('[', value.join(), ']')\n            }\n            break\n          default:\n            globals(env.link(value))\n            break\n        }\n        globals(';')\n      }\n    })\n\n    function appendBlock (env, block) {\n      keys.forEach(function (key) {\n        var value = object[key]\n        if (!dynamic.isDynamic(value)) {\n          return\n        }\n        var ref = env.invoke(block, value)\n        block(objectRef, '.', key, '=', ref, ';')\n      })\n    }\n\n    options.dynamic[name] = new dynamic.DynamicVariable(DYN_THUNK, {\n      thisDep: thisDep,\n      contextDep: contextDep,\n      propDep: propDep,\n      ref: objectRef,\n      append: appendBlock\n    })\n    delete options.static[name]\n  }\n\n  // ===========================================================================\n  // ===========================================================================\n  // MAIN DRAW COMMAND\n  // ===========================================================================\n  // ===========================================================================\n  function compileCommand (options, attributes, uniforms, context, stats) {\n    var env = createREGLEnvironment()\n\n    // link stats, so that we can easily access it in the program.\n    env.stats = env.link(stats)\n\n    // splat options and attributes to allow for dynamic nested properties\n    Object.keys(attributes.static).forEach(function (key) {\n      splatObject(env, attributes, key)\n    })\n    NESTED_OPTIONS.forEach(function (name) {\n      splatObject(env, options, name)\n    })\n\n    var args = parseArguments(options, attributes, uniforms, context, env)\n\n    emitDrawProc(env, args)\n    emitScopeProc(env, args)\n    emitBatchProc(env, args)\n\n    return extend(env.compile(), {\n      destroy: function () {\n        args.shader.program.destroy()\n      }\n    })\n  }\n\n  // ===========================================================================\n  // ===========================================================================\n  // POLL / REFRESH\n  // ===========================================================================\n  // ===========================================================================\n  return {\n    next: nextState,\n    current: currentState,\n    procs: (function () {\n      var env = createREGLEnvironment()\n      var poll = env.proc('poll')\n      var refresh = env.proc('refresh')\n      var common = env.block()\n      poll(common)\n      refresh(common)\n\n      var shared = env.shared\n      var GL = shared.gl\n      var NEXT_STATE = shared.next\n      var CURRENT_STATE = shared.current\n\n      common(CURRENT_STATE, '.dirty=false;')\n\n      emitPollFramebuffer(env, poll)\n      emitPollFramebuffer(env, refresh, null, true)\n\n      // Refresh updates all attribute state changes\n      var INSTANCING\n      if (extInstancing) {\n        INSTANCING = env.link(extInstancing)\n      }\n\n      // update vertex array bindings\n      if (extensions.oes_vertex_array_object) {\n        refresh(env.link(extensions.oes_vertex_array_object), '.bindVertexArrayOES(null);')\n      }\n      for (var i = 0; i < limits.maxAttributes; ++i) {\n        var BINDING = refresh.def(shared.attributes, '[', i, ']')\n        var ifte = env.cond(BINDING, '.buffer')\n        ifte.then(\n          GL, '.enableVertexAttribArray(', i, ');',\n          GL, '.bindBuffer(',\n          GL_ARRAY_BUFFER$2, ',',\n          BINDING, '.buffer.buffer);',\n          GL, '.vertexAttribPointer(',\n          i, ',',\n          BINDING, '.size,',\n          BINDING, '.type,',\n          BINDING, '.normalized,',\n          BINDING, '.stride,',\n          BINDING, '.offset);'\n        ).else(\n          GL, '.disableVertexAttribArray(', i, ');',\n          GL, '.vertexAttrib4f(',\n          i, ',',\n          BINDING, '.x,',\n          BINDING, '.y,',\n          BINDING, '.z,',\n          BINDING, '.w);',\n          BINDING, '.buffer=null;')\n        refresh(ifte)\n        if (extInstancing) {\n          refresh(\n            INSTANCING, '.vertexAttribDivisorANGLE(',\n            i, ',',\n            BINDING, '.divisor);')\n        }\n      }\n      refresh(\n        env.shared.vao, '.currentVAO=null;',\n        env.shared.vao, '.setVAO(', env.shared.vao, '.targetVAO);')\n\n      Object.keys(GL_FLAGS).forEach(function (flag) {\n        var cap = GL_FLAGS[flag]\n        var NEXT = common.def(NEXT_STATE, '.', flag)\n        var block = env.block()\n        block('if(', NEXT, '){',\n          GL, '.enable(', cap, ')}else{',\n          GL, '.disable(', cap, ')}',\n          CURRENT_STATE, '.', flag, '=', NEXT, ';')\n        refresh(block)\n        poll(\n          'if(', NEXT, '!==', CURRENT_STATE, '.', flag, '){',\n          block,\n          '}')\n      })\n\n      Object.keys(GL_VARIABLES).forEach(function (name) {\n        var func = GL_VARIABLES[name]\n        var init = currentState[name]\n        var NEXT, CURRENT\n        var block = env.block()\n        block(GL, '.', func, '(')\n        if (isArrayLike(init)) {\n          var n = init.length\n          NEXT = env.global.def(NEXT_STATE, '.', name)\n          CURRENT = env.global.def(CURRENT_STATE, '.', name)\n          block(\n            loop(n, function (i) {\n              return NEXT + '[' + i + ']'\n            }), ');',\n            loop(n, function (i) {\n              return CURRENT + '[' + i + ']=' + NEXT + '[' + i + '];'\n            }).join(''))\n          poll(\n            'if(', loop(n, function (i) {\n              return NEXT + '[' + i + ']!==' + CURRENT + '[' + i + ']'\n            }).join('||'), '){',\n            block,\n            '}')\n        } else {\n          NEXT = common.def(NEXT_STATE, '.', name)\n          CURRENT = common.def(CURRENT_STATE, '.', name)\n          block(\n            NEXT, ');',\n            CURRENT_STATE, '.', name, '=', NEXT, ';')\n          poll(\n            'if(', NEXT, '!==', CURRENT, '){',\n            block,\n            '}')\n        }\n        refresh(block)\n      })\n\n      return env.compile()\n    })(),\n    compile: compileCommand\n  }\n}\n\nfunction stats () {\n  return {\n    vaoCount: 0,\n    bufferCount: 0,\n    elementsCount: 0,\n    framebufferCount: 0,\n    shaderCount: 0,\n    textureCount: 0,\n    cubeCount: 0,\n    renderbufferCount: 0,\n    maxTextureUnits: 0\n  }\n}\n\nvar GL_QUERY_RESULT_EXT = 0x8866\nvar GL_QUERY_RESULT_AVAILABLE_EXT = 0x8867\nvar GL_TIME_ELAPSED_EXT = 0x88BF\n\nvar createTimer = function (gl, extensions) {\n  if (!extensions.ext_disjoint_timer_query) {\n    return null\n  }\n\n  // QUERY POOL BEGIN\n  var queryPool = []\n  function allocQuery () {\n    return queryPool.pop() || extensions.ext_disjoint_timer_query.createQueryEXT()\n  }\n  function freeQuery (query) {\n    queryPool.push(query)\n  }\n  // QUERY POOL END\n\n  var pendingQueries = []\n  function beginQuery (stats) {\n    var query = allocQuery()\n    extensions.ext_disjoint_timer_query.beginQueryEXT(GL_TIME_ELAPSED_EXT, query)\n    pendingQueries.push(query)\n    pushScopeStats(pendingQueries.length - 1, pendingQueries.length, stats)\n  }\n\n  function endQuery () {\n    extensions.ext_disjoint_timer_query.endQueryEXT(GL_TIME_ELAPSED_EXT)\n  }\n\n  //\n  // Pending stats pool.\n  //\n  function PendingStats () {\n    this.startQueryIndex = -1\n    this.endQueryIndex = -1\n    this.sum = 0\n    this.stats = null\n  }\n  var pendingStatsPool = []\n  function allocPendingStats () {\n    return pendingStatsPool.pop() || new PendingStats()\n  }\n  function freePendingStats (pendingStats) {\n    pendingStatsPool.push(pendingStats)\n  }\n  // Pending stats pool end\n\n  var pendingStats = []\n  function pushScopeStats (start, end, stats) {\n    var ps = allocPendingStats()\n    ps.startQueryIndex = start\n    ps.endQueryIndex = end\n    ps.sum = 0\n    ps.stats = stats\n    pendingStats.push(ps)\n  }\n\n  // we should call this at the beginning of the frame,\n  // in order to update gpuTime\n  var timeSum = []\n  var queryPtr = []\n  function update () {\n    var ptr, i\n\n    var n = pendingQueries.length\n    if (n === 0) {\n      return\n    }\n\n    // Reserve space\n    queryPtr.length = Math.max(queryPtr.length, n + 1)\n    timeSum.length = Math.max(timeSum.length, n + 1)\n    timeSum[0] = 0\n    queryPtr[0] = 0\n\n    // Update all pending timer queries\n    var queryTime = 0\n    ptr = 0\n    for (i = 0; i < pendingQueries.length; ++i) {\n      var query = pendingQueries[i]\n      if (extensions.ext_disjoint_timer_query.getQueryObjectEXT(query, GL_QUERY_RESULT_AVAILABLE_EXT)) {\n        queryTime += extensions.ext_disjoint_timer_query.getQueryObjectEXT(query, GL_QUERY_RESULT_EXT)\n        freeQuery(query)\n      } else {\n        pendingQueries[ptr++] = query\n      }\n      timeSum[i + 1] = queryTime\n      queryPtr[i + 1] = ptr\n    }\n    pendingQueries.length = ptr\n\n    // Update all pending stat queries\n    ptr = 0\n    for (i = 0; i < pendingStats.length; ++i) {\n      var stats = pendingStats[i]\n      var start = stats.startQueryIndex\n      var end = stats.endQueryIndex\n      stats.sum += timeSum[end] - timeSum[start]\n      var startPtr = queryPtr[start]\n      var endPtr = queryPtr[end]\n      if (endPtr === startPtr) {\n        stats.stats.gpuTime += stats.sum / 1e6\n        freePendingStats(stats)\n      } else {\n        stats.startQueryIndex = startPtr\n        stats.endQueryIndex = endPtr\n        pendingStats[ptr++] = stats\n      }\n    }\n    pendingStats.length = ptr\n  }\n\n  return {\n    beginQuery: beginQuery,\n    endQuery: endQuery,\n    pushScopeStats: pushScopeStats,\n    update: update,\n    getNumPendingQueries: function () {\n      return pendingQueries.length\n    },\n    clear: function () {\n      queryPool.push.apply(queryPool, pendingQueries)\n      for (var i = 0; i < queryPool.length; i++) {\n        extensions.ext_disjoint_timer_query.deleteQueryEXT(queryPool[i])\n      }\n      pendingQueries.length = 0\n      queryPool.length = 0\n    },\n    restore: function () {\n      pendingQueries.length = 0\n      queryPool.length = 0\n    }\n  }\n}\n\nvar GL_COLOR_BUFFER_BIT = 16384\nvar GL_DEPTH_BUFFER_BIT = 256\nvar GL_STENCIL_BUFFER_BIT = 1024\n\nvar GL_ARRAY_BUFFER = 34962\n\nvar CONTEXT_LOST_EVENT = 'webglcontextlost'\nvar CONTEXT_RESTORED_EVENT = 'webglcontextrestored'\n\nvar DYN_PROP = 1\nvar DYN_CONTEXT = 2\nvar DYN_STATE = 3\n\nfunction find (haystack, needle) {\n  for (var i = 0; i < haystack.length; ++i) {\n    if (haystack[i] === needle) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction wrapREGL (args) {\n  var config = parseArgs(args)\n  if (!config) {\n    return null\n  }\n\n  var gl = config.gl\n  var glAttributes = gl.getContextAttributes()\n  var contextLost = gl.isContextLost()\n\n  var extensionState = createExtensionCache(gl, config)\n  if (!extensionState) {\n    return null\n  }\n\n  var stringStore = createStringStore()\n  var stats$$1 = stats()\n  var extensions = extensionState.extensions\n  var timer = createTimer(gl, extensions)\n\n  var START_TIME = clock()\n  var WIDTH = gl.drawingBufferWidth\n  var HEIGHT = gl.drawingBufferHeight\n\n  var contextState = {\n    tick: 0,\n    time: 0,\n    viewportWidth: WIDTH,\n    viewportHeight: HEIGHT,\n    framebufferWidth: WIDTH,\n    framebufferHeight: HEIGHT,\n    drawingBufferWidth: WIDTH,\n    drawingBufferHeight: HEIGHT,\n    pixelRatio: config.pixelRatio\n  }\n  var uniformState = {}\n  var drawState = {\n    elements: null,\n    primitive: 4, // GL_TRIANGLES\n    count: -1,\n    offset: 0,\n    instances: -1\n  }\n\n  var limits = wrapLimits(gl, extensions)\n  var bufferState = wrapBufferState(\n    gl,\n    stats$$1,\n    config,\n    destroyBuffer)\n  var elementState = wrapElementsState(gl, extensions, bufferState, stats$$1)\n  var attributeState = wrapAttributeState(\n    gl,\n    extensions,\n    limits,\n    stats$$1,\n    bufferState,\n    elementState,\n    drawState)\n  function destroyBuffer (buffer) {\n    return attributeState.destroyBuffer(buffer)\n  }\n  var shaderState = wrapShaderState(gl, stringStore, stats$$1, config)\n  var textureState = createTextureSet(\n    gl,\n    extensions,\n    limits,\n    function () { core.procs.poll() },\n    contextState,\n    stats$$1,\n    config)\n  var renderbufferState = wrapRenderbuffers(gl, extensions, limits, stats$$1, config)\n  var framebufferState = wrapFBOState(\n    gl,\n    extensions,\n    limits,\n    textureState,\n    renderbufferState,\n    stats$$1)\n  var core = reglCore(\n    gl,\n    stringStore,\n    extensions,\n    limits,\n    bufferState,\n    elementState,\n    textureState,\n    framebufferState,\n    uniformState,\n    attributeState,\n    shaderState,\n    drawState,\n    contextState,\n    timer,\n    config)\n  var readPixels = wrapReadPixels(\n    gl,\n    framebufferState,\n    core.procs.poll,\n    contextState,\n    glAttributes, extensions, limits)\n\n  var nextState = core.next\n  var canvas = gl.canvas\n\n  var rafCallbacks = []\n  var lossCallbacks = []\n  var restoreCallbacks = []\n  var destroyCallbacks = [config.onDestroy]\n\n  var activeRAF = null\n  function handleRAF () {\n    if (rafCallbacks.length === 0) {\n      if (timer) {\n        timer.update()\n      }\n      activeRAF = null\n      return\n    }\n\n    // schedule next animation frame\n    activeRAF = raf.next(handleRAF)\n\n    // poll for changes\n    poll()\n\n    // fire a callback for all pending rafs\n    for (var i = rafCallbacks.length - 1; i >= 0; --i) {\n      var cb = rafCallbacks[i]\n      if (cb) {\n        cb(contextState, null, 0)\n      }\n    }\n\n    // flush all pending webgl calls\n    gl.flush()\n\n    // poll GPU timers *after* gl.flush so we don't delay command dispatch\n    if (timer) {\n      timer.update()\n    }\n  }\n\n  function startRAF () {\n    if (!activeRAF && rafCallbacks.length > 0) {\n      activeRAF = raf.next(handleRAF)\n    }\n  }\n\n  function stopRAF () {\n    if (activeRAF) {\n      raf.cancel(handleRAF)\n      activeRAF = null\n    }\n  }\n\n  function handleContextLoss (event) {\n    event.preventDefault()\n\n    // set context lost flag\n    contextLost = true\n\n    // pause request animation frame\n    stopRAF()\n\n    // lose context\n    lossCallbacks.forEach(function (cb) {\n      cb()\n    })\n  }\n\n  function handleContextRestored (event) {\n    // clear error code\n    gl.getError()\n\n    // clear context lost flag\n    contextLost = false\n\n    // refresh state\n    extensionState.restore()\n    shaderState.restore()\n    bufferState.restore()\n    textureState.restore()\n    renderbufferState.restore()\n    framebufferState.restore()\n    attributeState.restore()\n    if (timer) {\n      timer.restore()\n    }\n\n    // refresh state\n    core.procs.refresh()\n\n    // restart RAF\n    startRAF()\n\n    // restore context\n    restoreCallbacks.forEach(function (cb) {\n      cb()\n    })\n  }\n\n  if (canvas) {\n    canvas.addEventListener(CONTEXT_LOST_EVENT, handleContextLoss, false)\n    canvas.addEventListener(CONTEXT_RESTORED_EVENT, handleContextRestored, false)\n  }\n\n  function destroy () {\n    rafCallbacks.length = 0\n    stopRAF()\n\n    if (canvas) {\n      canvas.removeEventListener(CONTEXT_LOST_EVENT, handleContextLoss)\n      canvas.removeEventListener(CONTEXT_RESTORED_EVENT, handleContextRestored)\n    }\n\n    shaderState.clear()\n    framebufferState.clear()\n    renderbufferState.clear()\n    attributeState.clear()\n    textureState.clear()\n    elementState.clear()\n    bufferState.clear()\n\n    if (timer) {\n      timer.clear()\n    }\n\n    destroyCallbacks.forEach(function (cb) {\n      cb()\n    })\n  }\n\n  function compileProcedure (options) {\n    check$1(!!options, 'invalid args to regl({...})')\n    check$1.type(options, 'object', 'invalid args to regl({...})')\n\n    function flattenNestedOptions (options) {\n      var result = extend({}, options)\n      delete result.uniforms\n      delete result.attributes\n      delete result.context\n      delete result.vao\n\n      if ('stencil' in result && result.stencil.op) {\n        result.stencil.opBack = result.stencil.opFront = result.stencil.op\n        delete result.stencil.op\n      }\n\n      function merge (name) {\n        if (name in result) {\n          var child = result[name]\n          delete result[name]\n          Object.keys(child).forEach(function (prop) {\n            result[name + '.' + prop] = child[prop]\n          })\n        }\n      }\n      merge('blend')\n      merge('depth')\n      merge('cull')\n      merge('stencil')\n      merge('polygonOffset')\n      merge('scissor')\n      merge('sample')\n\n      if ('vao' in options) {\n        result.vao = options.vao\n      }\n\n      return result\n    }\n\n    function separateDynamic (object, useArrays) {\n      var staticItems = {}\n      var dynamicItems = {}\n      Object.keys(object).forEach(function (option) {\n        var value = object[option]\n        if (dynamic.isDynamic(value)) {\n          dynamicItems[option] = dynamic.unbox(value, option)\n          return\n        } else if (useArrays && Array.isArray(value)) {\n          for (var i = 0; i < value.length; ++i) {\n            if (dynamic.isDynamic(value[i])) {\n              dynamicItems[option] = dynamic.unbox(value, option)\n              return\n            }\n          }\n        }\n        staticItems[option] = value\n      })\n      return {\n        dynamic: dynamicItems,\n        static: staticItems\n      }\n    }\n\n    // Treat context variables separate from other dynamic variables\n    var context = separateDynamic(options.context || {}, true)\n    var uniforms = separateDynamic(options.uniforms || {}, true)\n    var attributes = separateDynamic(options.attributes || {}, false)\n    var opts = separateDynamic(flattenNestedOptions(options), false)\n\n    var stats$$1 = {\n      gpuTime: 0.0,\n      cpuTime: 0.0,\n      count: 0\n    }\n\n    var compiled = core.compile(opts, attributes, uniforms, context, stats$$1)\n\n    var draw = compiled.draw\n    var batch = compiled.batch\n    var scope = compiled.scope\n\n    // FIXME: we should modify code generation for batch commands so this\n    // isn't necessary\n    var EMPTY_ARRAY = []\n    function reserve (count) {\n      while (EMPTY_ARRAY.length < count) {\n        EMPTY_ARRAY.push(null)\n      }\n      return EMPTY_ARRAY\n    }\n\n    function REGLCommand (args, body) {\n      var i\n      if (contextLost) {\n        check$1.raise('context lost')\n      }\n      if (typeof args === 'function') {\n        return scope.call(this, null, args, 0)\n      } else if (typeof body === 'function') {\n        if (typeof args === 'number') {\n          for (i = 0; i < args; ++i) {\n            scope.call(this, null, body, i)\n          }\n        } else if (Array.isArray(args)) {\n          for (i = 0; i < args.length; ++i) {\n            scope.call(this, args[i], body, i)\n          }\n        } else {\n          return scope.call(this, args, body, 0)\n        }\n      } else if (typeof args === 'number') {\n        if (args > 0) {\n          return batch.call(this, reserve(args | 0), args | 0)\n        }\n      } else if (Array.isArray(args)) {\n        if (args.length) {\n          return batch.call(this, args, args.length)\n        }\n      } else {\n        return draw.call(this, args)\n      }\n    }\n\n    return extend(REGLCommand, {\n      stats: stats$$1,\n      destroy: function () {\n        compiled.destroy()\n      }\n    })\n  }\n\n  var setFBO = framebufferState.setFBO = compileProcedure({\n    framebuffer: dynamic.define.call(null, DYN_PROP, 'framebuffer')\n  })\n\n  function clearImpl (_, options) {\n    var clearFlags = 0\n    core.procs.poll()\n\n    var c = options.color\n    if (c) {\n      gl.clearColor(+c[0] || 0, +c[1] || 0, +c[2] || 0, +c[3] || 0)\n      clearFlags |= GL_COLOR_BUFFER_BIT\n    }\n    if ('depth' in options) {\n      gl.clearDepth(+options.depth)\n      clearFlags |= GL_DEPTH_BUFFER_BIT\n    }\n    if ('stencil' in options) {\n      gl.clearStencil(options.stencil | 0)\n      clearFlags |= GL_STENCIL_BUFFER_BIT\n    }\n\n    check$1(!!clearFlags, 'called regl.clear with no buffer specified')\n    gl.clear(clearFlags)\n  }\n\n  function clear (options) {\n    check$1(\n      typeof options === 'object' && options,\n      'regl.clear() takes an object as input')\n    if ('framebuffer' in options) {\n      if (options.framebuffer &&\n          options.framebuffer_reglType === 'framebufferCube') {\n        for (var i = 0; i < 6; ++i) {\n          setFBO(extend({\n            framebuffer: options.framebuffer.faces[i]\n          }, options), clearImpl)\n        }\n      } else {\n        setFBO(options, clearImpl)\n      }\n    } else {\n      clearImpl(null, options)\n    }\n  }\n\n  function frame (cb) {\n    check$1.type(cb, 'function', 'regl.frame() callback must be a function')\n    rafCallbacks.push(cb)\n\n    function cancel () {\n      // FIXME:  should we check something other than equals cb here?\n      // what if a user calls frame twice with the same callback...\n      //\n      var i = find(rafCallbacks, cb)\n      check$1(i >= 0, 'cannot cancel a frame twice')\n      function pendingCancel () {\n        var index = find(rafCallbacks, pendingCancel)\n        rafCallbacks[index] = rafCallbacks[rafCallbacks.length - 1]\n        rafCallbacks.length -= 1\n        if (rafCallbacks.length <= 0) {\n          stopRAF()\n        }\n      }\n      rafCallbacks[i] = pendingCancel\n    }\n\n    startRAF()\n\n    return {\n      cancel: cancel\n    }\n  }\n\n  // poll viewport\n  function pollViewport () {\n    var viewport = nextState.viewport\n    var scissorBox = nextState.scissor_box\n    viewport[0] = viewport[1] = scissorBox[0] = scissorBox[1] = 0\n    contextState.viewportWidth =\n      contextState.framebufferWidth =\n      contextState.drawingBufferWidth =\n      viewport[2] =\n      scissorBox[2] = gl.drawingBufferWidth\n    contextState.viewportHeight =\n      contextState.framebufferHeight =\n      contextState.drawingBufferHeight =\n      viewport[3] =\n      scissorBox[3] = gl.drawingBufferHeight\n  }\n\n  function poll () {\n    contextState.tick += 1\n    contextState.time = now()\n    pollViewport()\n    core.procs.poll()\n  }\n\n  function refresh () {\n    textureState.refresh()\n    pollViewport()\n    core.procs.refresh()\n    if (timer) {\n      timer.update()\n    }\n  }\n\n  function now () {\n    return (clock() - START_TIME) / 1000.0\n  }\n\n  refresh()\n\n  function addListener (event, callback) {\n    check$1.type(callback, 'function', 'listener callback must be a function')\n\n    var callbacks\n    switch (event) {\n      case 'frame':\n        return frame(callback)\n      case 'lost':\n        callbacks = lossCallbacks\n        break\n      case 'restore':\n        callbacks = restoreCallbacks\n        break\n      case 'destroy':\n        callbacks = destroyCallbacks\n        break\n      default:\n        check$1.raise('invalid event, must be one of frame,lost,restore,destroy')\n    }\n\n    callbacks.push(callback)\n    return {\n      cancel: function () {\n        for (var i = 0; i < callbacks.length; ++i) {\n          if (callbacks[i] === callback) {\n            callbacks[i] = callbacks[callbacks.length - 1]\n            callbacks.pop()\n            return\n          }\n        }\n      }\n    }\n  }\n\n  var regl = extend(compileProcedure, {\n    // Clear current FBO\n    clear: clear,\n\n    // Short cuts for dynamic variables\n    prop: dynamic.define.bind(null, DYN_PROP),\n    context: dynamic.define.bind(null, DYN_CONTEXT),\n    this: dynamic.define.bind(null, DYN_STATE),\n\n    // executes an empty draw command\n    draw: compileProcedure({}),\n\n    // Resources\n    buffer: function (options) {\n      return bufferState.create(options, GL_ARRAY_BUFFER, false, false)\n    },\n    elements: function (options) {\n      return elementState.create(options, false)\n    },\n    texture: textureState.create2D,\n    cube: textureState.createCube,\n    renderbuffer: renderbufferState.create,\n    framebuffer: framebufferState.create,\n    framebufferCube: framebufferState.createCube,\n    vao: attributeState.createVAO,\n\n    // Expose context attributes\n    attributes: glAttributes,\n\n    // Frame rendering\n    frame: frame,\n    on: addListener,\n\n    // System limits\n    limits: limits,\n    hasExtension: function (name) {\n      return limits.extensions.indexOf(name.toLowerCase()) >= 0\n    },\n\n    // Read pixels\n    read: readPixels,\n\n    // Destroy regl and all associated resources\n    destroy: destroy,\n\n    // Direct GL state manipulation\n    _gl: gl,\n    _refresh: refresh,\n\n    poll: function () {\n      poll()\n      if (timer) {\n        timer.update()\n      }\n    },\n\n    // Current time\n    now: now,\n\n    // regl Statistics Information\n    stats: stats$$1\n  })\n\n  config.onDone(null, regl)\n\n  return regl\n}\n\nreturn wrapREGL;\n\n})));\n//# sourceMappingURL=regl.js.map\n","import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import seedrandom from 'seedrandom';\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nvar RNG = /*#__PURE__*/function () {\n  function RNG() {}\n  var _proto = RNG.prototype;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _proto._seed = function _seed(seed, _opts) {\n    // TODO: add entropy and stuff\n    if (seed === (seed || 0)) {\n      return seed;\n    } else {\n      var strSeed = '' + seed;\n      var s = 0;\n      for (var k = 0; k < strSeed.length; ++k) {\n        s ^= strSeed.charCodeAt(k) | 0;\n      }\n      return s;\n    }\n  };\n  return RNG;\n}();\n\nvar RNGFunction = /*#__PURE__*/function (_RNG) {\n  _inheritsLoose(RNGFunction, _RNG);\n  function RNGFunction(thunk, opts) {\n    var _this;\n    _this = _RNG.call(this) || this;\n    _this._rng = void 0;\n    _this.seed(thunk, opts);\n    return _this;\n  }\n  var _proto = RNGFunction.prototype;\n  _proto.next = function next() {\n    return this._rng();\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ;\n  _proto.seed = function seed(thunk, _opts) {\n    this._rng = thunk;\n  };\n  _proto.clone = function clone(_, opts) {\n    return new RNGFunction(this._rng, opts);\n  };\n  _createClass(RNGFunction, [{\n    key: \"name\",\n    get: function get() {\n      return 'function';\n    }\n  }]);\n  return RNGFunction;\n}(RNG);\n\n/**\r\n * Construct an RNG with variable inputs. Used in calls to Random constructor\r\n * @param {...*} args - Distribution-specific arguments\r\n * @return RNG\r\n *\r\n * @example\r\n * new Random(RNGFactory(...args))\r\n */\nvar RNGFactory = (function () {\n  var args = [].slice.call(arguments);\n  var _args = args,\n    _args$ = _args[0],\n    arg0 = _args$ === void 0 ? 'default' : _args$;\n  switch (typeof arg0) {\n    case 'object':\n      if (arg0 instanceof RNG) {\n        return arg0;\n      }\n      break;\n    case 'function':\n      return new RNGFunction(arg0);\n    case 'number':\n    case 'string':\n    default:\n      return new RNGFunction(seedrandom.apply(void 0, args));\n  }\n  throw new Error(\"invalid RNG \\\"\" + arg0 + \"\\\"\");\n});\n\nvar uniform = (function (random, min, max) {\n  if (min === void 0) {\n    min = 0;\n  }\n  if (max === void 0) {\n    max = 1;\n  }\n  return function () {\n    return random.next() * (max - min) + min;\n  };\n});\n\nfunction numberValidator(num) {\n  return new NumberValidator(num);\n}\nvar NumberValidator = function NumberValidator(num) {\n  var _this = this;\n  this.n = void 0;\n  this.isInt = function () {\n    if (Number.isInteger(_this.n)) {\n      return _this;\n    }\n    throw new Error(\"Expected number to be an integer, got \" + _this.n);\n  };\n  this.isPositive = function () {\n    if (_this.n > 0) {\n      return _this;\n    }\n    throw new Error(\"Expected number to be positive, got \" + _this.n);\n  };\n  this.lessThan = function (v) {\n    if (_this.n < v) {\n      return _this;\n    }\n    throw new Error(\"Expected number to be less than \" + v + \", got \" + _this.n);\n  };\n  this.greaterThanOrEqual = function (v) {\n    if (_this.n >= v) {\n      return _this;\n    }\n    throw new Error(\"Expected number to be greater than or equal to \" + v + \", got \" + _this.n);\n  };\n  this.greaterThan = function (v) {\n    if (_this.n > v) {\n      return _this;\n    }\n    throw new Error(\"Expected number to be greater than \" + v + \", got \" + _this.n);\n  };\n  this.n = num;\n};\n\nvar uniformInt = (function (random, min, max) {\n  if (min === void 0) {\n    min = 0;\n  }\n  if (max === void 0) {\n    max = 1;\n  }\n  if (max === undefined) {\n    max = min === undefined ? 1 : min;\n    min = 0;\n  }\n  numberValidator(min).isInt();\n  numberValidator(max).isInt();\n  return function () {\n    return Math.floor(random.next() * (max - min + 1) + min);\n  };\n});\n\nvar uniformBoolean = (function (random) {\n  return function () {\n    return random.next() >= 0.5;\n  };\n});\n\nvar normal = (function (random, mu, sigma) {\n  if (mu === void 0) {\n    mu = 0;\n  }\n  if (sigma === void 0) {\n    sigma = 1;\n  }\n  return function () {\n    var x, y, r;\n    do {\n      x = random.next() * 2 - 1;\n      y = random.next() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n});\n\nvar logNormal = (function (random, mu, sigma) {\n  if (mu === void 0) {\n    mu = 0;\n  }\n  if (sigma === void 0) {\n    sigma = 1;\n  }\n  var normal = random.normal(mu, sigma);\n  return function () {\n    return Math.exp(normal());\n  };\n});\n\nvar bernoulli = (function (random, p) {\n  if (p === void 0) {\n    p = 0.5;\n  }\n  numberValidator(p).greaterThanOrEqual(0).lessThan(1);\n  return function () {\n    return Math.floor(random.next() + p);\n  };\n});\n\nvar binomial = (function (random, n, p) {\n  if (n === void 0) {\n    n = 1;\n  }\n  if (p === void 0) {\n    p = 0.5;\n  }\n  numberValidator(n).isInt().isPositive();\n  numberValidator(p).greaterThanOrEqual(0).lessThan(1);\n  return function () {\n    var i = 0;\n    var x = 0;\n    while (i++ < n) {\n      if (random.next() < p) {\n        x++;\n      }\n    }\n    return x;\n  };\n});\n\nvar geometric = (function (random, p) {\n  if (p === void 0) {\n    p = 0.5;\n  }\n  numberValidator(p).greaterThan(0).lessThan(1);\n  var invLogP = 1.0 / Math.log(1.0 - p);\n  return function () {\n    return Math.floor(1 + Math.log(random.next()) * invLogP);\n  };\n});\n\nvar logFactorialTable = [0.0, 0.0, 0.69314718055994529, 1.791759469228055, 3.1780538303479458, 4.7874917427820458, 6.5792512120101012, 8.5251613610654147, 10.604602902745251, 12.801827480081469];\nvar logFactorial = function logFactorial(k) {\n  return logFactorialTable[k];\n};\nvar logSqrt2PI = 0.91893853320467267;\nvar poisson = (function (random, lambda) {\n  if (lambda === void 0) {\n    lambda = 1;\n  }\n  numberValidator(lambda).isPositive();\n  if (lambda < 10) {\n    // inversion method\n    var expMean = Math.exp(-lambda);\n    return function () {\n      var p = expMean;\n      var x = 0;\n      var u = random.next();\n      while (u > p) {\n        u = u - p;\n        p = lambda * p / ++x;\n      }\n      return x;\n    };\n  } else {\n    // generative method\n    var smu = Math.sqrt(lambda);\n    var b = 0.931 + 2.53 * smu;\n    var a = -0.059 + 0.02483 * b;\n    var invAlpha = 1.1239 + 1.1328 / (b - 3.4);\n    var vR = 0.9277 - 3.6224 / (b - 2);\n    return function () {\n      while (true) {\n        var u = void 0;\n        var v = random.next();\n        if (v <= 0.86 * vR) {\n          u = v / vR - 0.43;\n          return Math.floor((2 * a / (0.5 - Math.abs(u)) + b) * u + lambda + 0.445);\n        }\n        if (v >= vR) {\n          u = random.next() - 0.5;\n        } else {\n          u = v / vR - 0.93;\n          u = (u < 0 ? -0.5 : 0.5) - u;\n          v = random.next() * vR;\n        }\n        var us = 0.5 - Math.abs(u);\n        if (us < 0.013 && v > us) {\n          continue;\n        }\n        var k = Math.floor((2 * a / us + b) * u + lambda + 0.445);\n        v = v * invAlpha / (a / (us * us) + b);\n        if (k >= 10) {\n          var t = (k + 0.5) * Math.log(lambda / k) - lambda - logSqrt2PI + k - (1 / 12.0 - (1 / 360.0 - 1 / (1260.0 * k * k)) / (k * k)) / k;\n          if (Math.log(v * smu) <= t) {\n            return k;\n          }\n        } else if (k >= 0) {\n          var _logFactorial;\n          var f = (_logFactorial = logFactorial(k)) != null ? _logFactorial : 0;\n          if (Math.log(v) <= k * Math.log(lambda) - lambda - f) {\n            return k;\n          }\n        }\n      }\n    };\n  }\n});\n\nvar exponential = (function (random, lambda) {\n  if (lambda === void 0) {\n    lambda = 1;\n  }\n  numberValidator(lambda).isPositive();\n  return function () {\n    return -Math.log(1 - random.next()) / lambda;\n  };\n});\n\nvar irwinHall = (function (random, n) {\n  if (n === void 0) {\n    n = 1;\n  }\n  numberValidator(n).isInt().greaterThanOrEqual(0);\n  return function () {\n    var sum = 0;\n    for (var i = 0; i < n; ++i) {\n      sum += random.next();\n    }\n    return sum;\n  };\n});\n\nvar bates = (function (random, n) {\n  if (n === void 0) {\n    n = 1;\n  }\n  numberValidator(n).isInt().isPositive();\n  var irwinHall = random.irwinHall(n);\n  return function () {\n    return irwinHall() / n;\n  };\n});\n\nvar pareto = (function (random, alpha) {\n  if (alpha === void 0) {\n    alpha = 1;\n  }\n  numberValidator(alpha).greaterThanOrEqual(0);\n  var invAlpha = 1.0 / alpha;\n  return function () {\n    return 1.0 / Math.pow(1.0 - random.next(), invAlpha);\n  };\n});\n\nvar RNGMathRandom = /*#__PURE__*/function (_RNG) {\n  _inheritsLoose(RNGMathRandom, _RNG);\n  function RNGMathRandom() {\n    return _RNG.apply(this, arguments) || this;\n  }\n  var _proto = RNGMathRandom.prototype;\n  _proto.next = function next() {\n    return Math.random();\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ;\n  _proto.seed = function seed(_seed, _opts) {\n    // intentionally empty\n  };\n  _proto.clone = function clone() {\n    return new RNGMathRandom();\n  };\n  _createClass(RNGMathRandom, [{\n    key: \"name\",\n    get: function get() {\n      return 'default';\n    }\n  }]);\n  return RNGMathRandom;\n}(RNG);\n\n/**\r\n * Seedable random number generator supporting many common distributions.\r\n *\r\n * Defaults to Math.random as its underlying pseudorandom number generator.\r\n *\r\n * @name Random\r\n * @class\r\n *\r\n * @param {RNG|function} [rng=Math.random] - Underlying pseudorandom number generator.\r\n */\nvar Random = /*#__PURE__*/function () {\n  function Random(rng) {\n    var _this = this;\n    this._rng = void 0;\n    this._patch = void 0;\n    this._cache = {};\n    this.next = function () {\n      return _this._rng.next();\n    };\n    this[\"float\"] = function (min, max) {\n      return _this.uniform(min, max)();\n    };\n    this[\"int\"] = function (min, max) {\n      return _this.uniformInt(min, max)();\n    };\n    this.integer = function (min, max) {\n      return _this.uniformInt(min, max)();\n    };\n    this.bool = function () {\n      return _this.uniformBoolean()();\n    };\n    this[\"boolean\"] = function () {\n      return _this.uniformBoolean()();\n    };\n    this.uniform = function (min, max) {\n      return _this._memoize('uniform', uniform, min, max);\n    };\n    this.uniformInt = function (min, max) {\n      return _this._memoize('uniformInt', uniformInt, min, max);\n    };\n    this.uniformBoolean = function () {\n      return _this._memoize('uniformBoolean', uniformBoolean);\n    };\n    this.normal = function (mu, sigma) {\n      return normal(_this, mu, sigma);\n    };\n    this.logNormal = function (mu, sigma) {\n      return logNormal(_this, mu, sigma);\n    };\n    this.bernoulli = function (p) {\n      return bernoulli(_this, p);\n    };\n    this.binomial = function (n, p) {\n      return binomial(_this, n, p);\n    };\n    this.geometric = function (p) {\n      return geometric(_this, p);\n    };\n    this.poisson = function (lambda) {\n      return poisson(_this, lambda);\n    };\n    this.exponential = function (lambda) {\n      return exponential(_this, lambda);\n    };\n    this.irwinHall = function (n) {\n      return irwinHall(_this, n);\n    };\n    this.bates = function (n) {\n      return bates(_this, n);\n    };\n    this.pareto = function (alpha) {\n      return pareto(_this, alpha);\n    };\n    if (rng && rng instanceof RNG) {\n      this.use(rng);\n    } else {\n      this.use(new RNGMathRandom());\n    }\n    this._cache = {};\n  }\n  /**\r\n   * @member {RNG} Underlying pseudo-random number generator\r\n   */\n  var _proto = Random.prototype;\n  /**\r\n   * Creates a new `Random` instance, optionally specifying parameters to\r\n   * set a new seed.\r\n   *\r\n   * @see RNG.clone\r\n   *\r\n   * @param {string} [seed] - Optional seed for new RNG.\r\n   * @param {object} [opts] - Optional config for new RNG options.\r\n   * @return {Random}\r\n   */\n  _proto.clone = function clone() {\n    var args = [].slice.call(arguments);\n    if (args.length) {\n      return new Random(RNGFactory.apply(void 0, args));\n    } else {\n      return new Random(this.rng.clone());\n    }\n  }\n  /**\r\n   * Sets the underlying pseudorandom number generator used via\r\n   * either an instance of `seedrandom`, a custom instance of RNG\r\n   * (for PRNG plugins), or a string specifying the PRNG to use\r\n   * along with an optional `seed` and `opts` to initialize the\r\n   * RNG.\r\n   *\r\n   * @example\r\n   * import random from 'random'\r\n   *\r\n   * random.use('example_seedrandom_string')\r\n   * // or\r\n   * random.use(seedrandom('kittens'))\r\n   * // or\r\n   * random.use(Math.random)\r\n   *\r\n   * @param {...*} args\r\n   */;\n  _proto.use = function use() {\n    this._rng = RNGFactory.apply(void 0, [].slice.call(arguments));\n  }\n  /**\r\n   * Patches `Math.random` with this Random instance's PRNG.\r\n   */;\n  _proto.patch = function patch() {\n    if (this._patch) {\n      throw new Error('Math.random already patched');\n    }\n    this._patch = Math.random;\n    Math.random = this.uniform();\n  }\n  /**\r\n   * Restores a previously patched `Math.random` to its original value.\r\n   */;\n  _proto.unpatch = function unpatch() {\n    if (this._patch) {\n      Math.random = this._patch;\n      delete this._patch;\n    }\n  }\n  // --------------------------------------------------------------------------\n  // Uniform utility functions\n  // --------------------------------------------------------------------------\n  /**\r\n   * Convenience wrapper around `this.rng.next()`\r\n   *\r\n   * Returns a floating point number in [0, 1).\r\n   *\r\n   * @return {number}\r\n   */;\n  /**\r\n   * Returns an item chosen uniformly at trandom from the given array.\r\n   *\r\n   * Convence wrapper around `random.uniformInt()`\r\n   *\r\n   * @param {Array<T>} [array] - Lower bound (integer, inclusive)\r\n   * @return {T | undefined}\r\n   */\n  _proto.choice = function choice(array) {\n    if (!Array.isArray(array)) {\n      throw new Error(\"Random.choice expected input to be an array, got \" + typeof array);\n    }\n    var length = array == null ? void 0 : array.length;\n    if (length > 0) {\n      var index = this.uniformInt(0, length - 1)();\n      return array[index];\n    } else {\n      return undefined;\n    }\n  }\n  // --------------------------------------------------------------------------\n  // Uniform distributions\n  // --------------------------------------------------------------------------\n  /**\r\n   * Generates a [Continuous uniform distribution](https://en.wikipedia.org/wiki/Uniform_distribution_(continuous)).\r\n   *\r\n   * @param {number} [min=0] - Lower bound (float, inclusive)\r\n   * @param {number} [max=1] - Upper bound (float, exclusive)\r\n   * @return {function}\r\n   */;\n  // --------------------------------------------------------------------------\n  // Internal\n  // --------------------------------------------------------------------------\n  /**\r\n   * Memoizes distributions to ensure they're only created when necessary.\r\n   *\r\n   * Returns a thunk which that returns independent, identically distributed\r\n   * samples from the specified distribution.\r\n   *\r\n   * @private\r\n   *\r\n   * @param {string} label - Name of distribution\r\n   * @param {function} getter - Function which generates a new distribution\r\n   * @param {...*} args - Distribution-specific arguments\r\n   *\r\n   * @return {function}\r\n   */\n  _proto._memoize = function _memoize(label, getter) {\n    var args = [].slice.call(arguments, 2);\n    var key = \"\" + args.join(';');\n    var value = this._cache[label];\n    if (value === undefined || value.key !== key) {\n      value = {\n        key: key,\n        distribution: getter.apply(void 0, [this].concat(args))\n      };\n      this._cache[label] = value;\n    }\n    return value.distribution;\n  };\n  _createClass(Random, [{\n    key: \"rng\",\n    get: function get() {\n      return this._rng;\n    }\n  }]);\n  return Random;\n}();\n// defaults to Math.random as its RNG\nvar random = new Random();\n\nexport { RNG, RNGFactory, Random, random as default };\n//# sourceMappingURL=random.module.js.map\n","export type SeedFn = () => number\nexport type SeedType = number | string | SeedFn | RNG\n\nexport default abstract class RNG {\n  abstract get name(): string\n\n  abstract next(): number\n\n  abstract seed(_seed?: SeedType, _opts?: Record<string, unknown>): void\n\n  abstract clone(_seed?: SeedType, _opts?: Record<string, unknown>): RNG\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _seed(seed: number, _opts?: Record<string, unknown>) {\n    // TODO: add entropy and stuff\n\n    if (seed === (seed || 0)) {\n      return seed\n    } else {\n      const strSeed = '' + seed\n      let s = 0\n\n      for (let k = 0; k < strSeed.length; ++k) {\n        s ^= strSeed.charCodeAt(k) | 0\n      }\n\n      return s\n    }\n  }\n}\n","import RNG, { SeedFn } from '../rng'\n\nexport default class RNGFunction extends RNG {\n  _rng: SeedFn\n\n  constructor(thunk: SeedFn, opts?: Record<string, unknown>) {\n    super()\n\n    this.seed(thunk, opts)\n  }\n\n  get name() {\n    return 'function'\n  }\n\n  next() {\n    return this._rng()\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  seed(thunk: SeedFn, _opts?: Record<string, unknown>) {\n    this._rng = thunk\n  }\n\n  clone(_: undefined, opts: Record<string, unknown>) {\n    return new RNGFunction(this._rng, opts)\n  }\n}\n","import seedrandom from 'seedrandom'\n\nimport RNG from './rng'\nimport RNGFunction from './generators/function'\n\n/**\n * Construct an RNG with variable inputs. Used in calls to Random constructor\n * @param {...*} args - Distribution-specific arguments\n * @return RNG\n *\n * @example\n * new Random(RNGFactory(...args))\n */\nexport default <T extends any[]>(...args: T) => {\n  const [arg0 = 'default'] = args\n\n  switch (typeof arg0) {\n    case 'object':\n      if (arg0 instanceof RNG) {\n        return arg0\n      }\n      break\n\n    case 'function':\n      return new RNGFunction(arg0)\n\n    case 'number':\n    case 'string':\n    default:\n      return new RNGFunction(seedrandom(...args))\n  }\n\n  throw new Error(`invalid RNG \"${arg0}\"`)\n}\n","import { Random } from '../random'\n\nexport default (random: Random, min = 0, max = 1) => {\n  return () => {\n    return random.next() * (max - min) + min\n  }\n}\n","export function numberValidator(num: number) {\n  return new NumberValidator(num)\n}\n\nexport class NumberValidator {\n  private n: number\n  constructor(num: number) {\n    this.n = num\n  }\n\n  public isInt = (): this => {\n    if (Number.isInteger(this.n)) {\n      return this\n    }\n    throw new Error(`Expected number to be an integer, got ${this.n}`)\n  }\n\n  public isPositive = (): this => {\n    if (this.n > 0) {\n      return this\n    }\n    throw new Error(`Expected number to be positive, got ${this.n}`)\n  }\n\n  public lessThan = (v: number): this => {\n    if (this.n < v) {\n      return this\n    }\n    throw new Error(`Expected number to be less than ${v}, got ${this.n}`)\n  }\n\n  public greaterThanOrEqual = (v: number): this => {\n    if (this.n >= v) {\n      return this\n    }\n    throw new Error(\n      `Expected number to be greater than or equal to ${v}, got ${this.n}`\n    )\n  }\n\n  public greaterThan = (v: number): this => {\n    if (this.n > v) {\n      return this\n    }\n    throw new Error(`Expected number to be greater than ${v}, got ${this.n}`)\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, min = 0, max = 1) => {\n  if (max === undefined) {\n    max = min === undefined ? 1 : min\n    min = 0\n  }\n\n  numberValidator(min).isInt()\n  numberValidator(max).isInt()\n\n  return () => {\n    return Math.floor(random.next() * (max - min + 1) + min)\n  }\n}\n","import { Random } from '../random'\n\nexport default (random: Random) => {\n  return () => {\n    return random.next() >= 0.5\n  }\n}\n","import { Random } from '../random'\n\nexport default (random: Random, mu = 0, sigma = 1) => {\n  return () => {\n    let x: number, y: number, r: number\n\n    do {\n      x = random.next() * 2 - 1\n      y = random.next() * 2 - 1\n      r = x * x + y * y\n    } while (!r || r > 1)\n\n    return mu + sigma * y * Math.sqrt((-2 * Math.log(r)) / r)\n  }\n}\n","import { Random } from '../random'\n\nexport default (random: Random, mu = 0, sigma = 1) => {\n  const normal = random.normal(mu, sigma)\n  return () => {\n    return Math.exp(normal())\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, p = 0.5) => {\n  numberValidator(p).greaterThanOrEqual(0).lessThan(1)\n\n  return () => {\n    return Math.floor(random.next() + p)\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, n = 1, p = 0.5) => {\n  numberValidator(n).isInt().isPositive()\n  numberValidator(p).greaterThanOrEqual(0).lessThan(1)\n\n  return () => {\n    let i = 0\n    let x = 0\n\n    while (i++ < n) {\n      if (random.next() < p) {\n        x++\n      }\n    }\n    return x\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, p = 0.5) => {\n  numberValidator(p).greaterThan(0).lessThan(1)\n  const invLogP = 1.0 / Math.log(1.0 - p)\n\n  return () => {\n    return Math.floor(1 + Math.log(random.next()) * invLogP)\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nconst logFactorialTable = [\n  0.0, 0.0, 0.69314718055994529, 1.791759469228055, 3.1780538303479458,\n  4.7874917427820458, 6.5792512120101012, 8.5251613610654147,\n  10.604602902745251, 12.801827480081469\n]\n\nconst logFactorial = (k: number) => {\n  return logFactorialTable[k]\n}\n\nconst logSqrt2PI = 0.91893853320467267\n\nexport default (random: Random, lambda = 1) => {\n  numberValidator(lambda).isPositive()\n\n  if (lambda < 10) {\n    // inversion method\n    const expMean = Math.exp(-lambda)\n\n    return () => {\n      let p = expMean\n      let x = 0\n      let u = random.next()\n\n      while (u > p) {\n        u = u - p\n        p = (lambda * p) / ++x\n      }\n\n      return x\n    }\n  } else {\n    // generative method\n    const smu = Math.sqrt(lambda)\n    const b = 0.931 + 2.53 * smu\n    const a = -0.059 + 0.02483 * b\n    const invAlpha = 1.1239 + 1.1328 / (b - 3.4)\n    const vR = 0.9277 - 3.6224 / (b - 2)\n\n    return () => {\n      while (true) {\n        let u\n        let v = random.next()\n\n        if (v <= 0.86 * vR) {\n          u = v / vR - 0.43\n          return Math.floor(\n            ((2 * a) / (0.5 - Math.abs(u)) + b) * u + lambda + 0.445\n          )\n        }\n\n        if (v >= vR) {\n          u = random.next() - 0.5\n        } else {\n          u = v / vR - 0.93\n          u = (u < 0 ? -0.5 : 0.5) - u\n          v = random.next() * vR\n        }\n\n        const us = 0.5 - Math.abs(u)\n        if (us < 0.013 && v > us) {\n          continue\n        }\n\n        const k = Math.floor(((2 * a) / us + b) * u + lambda + 0.445)\n        v = (v * invAlpha) / (a / (us * us) + b)\n\n        if (k >= 10) {\n          const t =\n            (k + 0.5) * Math.log(lambda / k) -\n            lambda -\n            logSqrt2PI +\n            k -\n            (1 / 12.0 - (1 / 360.0 - 1 / (1260.0 * k * k)) / (k * k)) / k\n\n          if (Math.log(v * smu) <= t) {\n            return k\n          }\n        } else if (k >= 0) {\n          const f = logFactorial(k) ?? 0\n\n          if (Math.log(v) <= k * Math.log(lambda) - lambda - f) {\n            return k\n          }\n        }\n      }\n    }\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, lambda = 1) => {\n  numberValidator(lambda).isPositive()\n\n  return () => {\n    return -Math.log(1 - random.next()) / lambda\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, n = 1) => {\n  numberValidator(n).isInt().greaterThanOrEqual(0)\n\n  return () => {\n    let sum = 0\n    for (let i = 0; i < n; ++i) {\n      sum += random.next()\n    }\n\n    return sum\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, n = 1) => {\n  numberValidator(n).isInt().isPositive()\n  const irwinHall = random.irwinHall(n)\n\n  return () => {\n    return irwinHall() / n\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, alpha = 1) => {\n  numberValidator(alpha).greaterThanOrEqual(0)\n  const invAlpha = 1.0 / alpha\n\n  return () => {\n    return 1.0 / Math.pow(1.0 - random.next(), invAlpha)\n  }\n}\n","import RNG from '../rng'\n\nexport default class RNGMathRandom extends RNG {\n  get name() {\n    return 'default'\n  }\n\n  next() {\n    return Math.random()\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  seed(_seed: unknown, _opts: Record<string, unknown>) {\n    // intentionally empty\n  }\n\n  clone() {\n    return new RNGMathRandom()\n  }\n}\n","import RNG from './rng'\nimport RNGFactory from './rng-factory'\n\nimport uniform from './distributions/uniform'\nimport uniformInt from './distributions/uniform-int'\nimport uniformBoolean from './distributions/uniform-boolean'\nimport normal from './distributions/normal'\nimport logNormal from './distributions/log-normal'\nimport bernoulli from './distributions/bernoulli'\nimport binomial from './distributions/binomial'\nimport geometric from './distributions/geometric'\nimport poisson from './distributions/poisson'\nimport exponential from './distributions/exponential'\nimport irwinHall from './distributions/irwin-hall'\nimport bates from './distributions/bates'\nimport pareto from './distributions/pareto'\nimport RNGMathRandom from './generators/math-random'\n\n/**\n * Distribution function\n */\ninterface IDistFn<R> {\n  (random: Random, ...argv: any): R\n}\n\n/**\n * Distribution\n */\ninterface IDist<R> {\n  (): R\n}\n\n/**\n * Keyed cache entry\n */\ninterface ICacheEntry<T> {\n  key: string\n  distribution: () => T\n}\n\nexport { RNG, RNGFactory }\n\n/**\n * Seedable random number generator supporting many common distributions.\n *\n * Defaults to Math.random as its underlying pseudorandom number generator.\n *\n * @name Random\n * @class\n *\n * @param {RNG|function} [rng=Math.random] - Underlying pseudorandom number generator.\n */\nexport class Random {\n  protected _rng: RNG\n  protected _patch: typeof Math.random | undefined\n  protected _cache: {\n    [k: string]: ICacheEntry<any>\n  } = {}\n\n  constructor(rng?: RNG) {\n    if (rng && rng instanceof RNG) {\n      this.use(rng)\n    } else {\n      this.use(new RNGMathRandom())\n    }\n    this._cache = {}\n  }\n\n  /**\n   * @member {RNG} Underlying pseudo-random number generator\n   */\n  get rng() {\n    return this._rng\n  }\n\n  /**\n   * Creates a new `Random` instance, optionally specifying parameters to\n   * set a new seed.\n   *\n   * @see RNG.clone\n   *\n   * @param {string} [seed] - Optional seed for new RNG.\n   * @param {object} [opts] - Optional config for new RNG options.\n   * @return {Random}\n   */\n  clone<T>(...args: [T]): Random {\n    if (args.length) {\n      return new Random(RNGFactory(...args))\n    } else {\n      return new Random(this.rng.clone())\n    }\n  }\n\n  /**\n   * Sets the underlying pseudorandom number generator used via\n   * either an instance of `seedrandom`, a custom instance of RNG\n   * (for PRNG plugins), or a string specifying the PRNG to use\n   * along with an optional `seed` and `opts` to initialize the\n   * RNG.\n   *\n   * @example\n   * import random from 'random'\n   *\n   * random.use('example_seedrandom_string')\n   * // or\n   * random.use(seedrandom('kittens'))\n   * // or\n   * random.use(Math.random)\n   *\n   * @param {...*} args\n   */\n  use(...args: [RNG]) {\n    this._rng = RNGFactory(...args)\n  }\n\n  /**\n   * Patches `Math.random` with this Random instance's PRNG.\n   */\n  patch() {\n    if (this._patch) {\n      throw new Error('Math.random already patched')\n    }\n\n    this._patch = Math.random\n    Math.random = this.uniform()\n  }\n\n  /**\n   * Restores a previously patched `Math.random` to its original value.\n   */\n  unpatch() {\n    if (this._patch) {\n      Math.random = this._patch\n      delete this._patch\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  // Uniform utility functions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Convenience wrapper around `this.rng.next()`\n   *\n   * Returns a floating point number in [0, 1).\n   *\n   * @return {number}\n   */\n  next = (): number => {\n    return this._rng.next()\n  }\n\n  /**\n   * Samples a uniform random floating point number, optionally specifying\n   * lower and upper bounds.\n   *\n   * Convence wrapper around `random.uniform()`\n   *\n   * @param {number} [min=0] - Lower bound (float, inclusive)\n   * @param {number} [max=1] - Upper bound (float, exclusive)\n   * @return {number}\n   */\n  float = (min?: number, max?: number): number => {\n    return this.uniform(min, max)()\n  }\n\n  /**\n   * Samples a uniform random integer, optionally specifying lower and upper\n   * bounds.\n   *\n   * Convence wrapper around `random.uniformInt()`\n   *\n   * @param {number} [min=0] - Lower bound (integer, inclusive)\n   * @param {number} [max=1] - Upper bound (integer, inclusive)\n   * @return {number}\n   */\n  int = (min?: number, max?: number) => {\n    return this.uniformInt(min, max)()\n  }\n\n  /**\n   * Samples a uniform random integer, optionally specifying lower and upper\n   * bounds.\n   *\n   * Convence wrapper around `random.uniformInt()`\n   *\n   * @alias `random.int`\n   *\n   * @param {number} [min=0] - Lower bound (integer, inclusive)\n   * @param {number} [max=1] - Upper bound (integer, inclusive)\n   * @return {number}\n   */\n  integer = (min?: number, max?: number) => {\n    return this.uniformInt(min, max)()\n  }\n\n  /**\n   * Samples a uniform random boolean value.\n   *\n   * Convence wrapper around `random.uniformBoolean()`\n   *\n   * @alias `random.boolean`\n   *\n   * @return {boolean}\n   */\n  bool = () => {\n    return this.uniformBoolean()()\n  }\n\n  /**\n   * Samples a uniform random boolean value.\n   *\n   * Convence wrapper around `random.uniformBoolean()`\n   *\n   * @return {boolean}\n   */\n  boolean = () => {\n    return this.uniformBoolean()()\n  }\n\n  /**\n   * Returns an item chosen uniformly at trandom from the given array.\n   *\n   * Convence wrapper around `random.uniformInt()`\n   *\n   * @param {Array<T>} [array] - Lower bound (integer, inclusive)\n   * @return {T | undefined}\n   */\n  choice<T>(array: Array<T>): T | undefined {\n    if (!Array.isArray(array)) {\n      throw new Error(\n        `Random.choice expected input to be an array, got ${typeof array}`\n      )\n    }\n\n    const length = array?.length\n\n    if (length > 0) {\n      const index = this.uniformInt(0, length - 1)()\n      return array[index]\n    } else {\n      return undefined\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  // Uniform distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates a [Continuous uniform distribution](https://en.wikipedia.org/wiki/Uniform_distribution_(continuous)).\n   *\n   * @param {number} [min=0] - Lower bound (float, inclusive)\n   * @param {number} [max=1] - Upper bound (float, exclusive)\n   * @return {function}\n   */\n  uniform = (min?: number, max?: number) => {\n    return this._memoize<number>('uniform', uniform, min, max)\n  }\n\n  /**\n   * Generates a [Discrete uniform distribution](https://en.wikipedia.org/wiki/Discrete_uniform_distribution).\n   *\n   * @param {number} [min=0] - Lower bound (integer, inclusive)\n   * @param {number} [max=1] - Upper bound (integer, inclusive)\n   * @return {function}\n   */\n  uniformInt = (min?: number, max?: number) => {\n    return this._memoize<number>('uniformInt', uniformInt, min, max)\n  }\n\n  /**\n   * Generates a [Discrete uniform distribution](https://en.wikipedia.org/wiki/Discrete_uniform_distribution),\n   * with two possible outcomes, `true` or `false.\n   *\n   * This method is analogous to flipping a coin.\n   *\n   * @return {function}\n   */\n  uniformBoolean = () => {\n    return this._memoize<boolean>('uniformBoolean', uniformBoolean)\n  }\n\n  // --------------------------------------------------------------------------\n  // Normal distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates a [Normal distribution](https://en.wikipedia.org/wiki/Normal_distribution).\n   *\n   * @param {number} [mu=0] - Mean\n   * @param {number} [sigma=1] - Standard deviation\n   * @return {function}\n   */\n  normal = (mu?: number, sigma?: number) => {\n    return normal(this, mu, sigma)\n  }\n\n  /**\n   * Generates a [Log-normal distribution](https://en.wikipedia.org/wiki/Log-normal_distribution).\n   *\n   * @param {number} [mu=0] - Mean of underlying normal distribution\n   * @param {number} [sigma=1] - Standard deviation of underlying normal distribution\n   * @return {function}\n   */\n  logNormal = (mu?: number, sigma?: number) => {\n    return logNormal(this, mu, sigma)\n  }\n\n  // --------------------------------------------------------------------------\n  // Bernoulli distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates a [Bernoulli distribution](https://en.wikipedia.org/wiki/Bernoulli_distribution).\n   *\n   * @param {number} [p=0.5] - Success probability of each trial.\n   * @return {function}\n   */\n  bernoulli = (p?: number) => {\n    return bernoulli(this, p)\n  }\n\n  /**\n   * Generates a [Binomial distribution](https://en.wikipedia.org/wiki/Binomial_distribution).\n   *\n   * @param {number} [n=1] - Number of trials.\n   * @param {number} [p=0.5] - Success probability of each trial.\n   * @return {function}\n   */\n  binomial = (n?: number, p?: number) => {\n    return binomial(this, n, p)\n  }\n\n  /**\n   * Generates a [Geometric distribution](https://en.wikipedia.org/wiki/Geometric_distribution).\n   *\n   * @param {number} [p=0.5] - Success probability of each trial.\n   * @return {function}\n   */\n  geometric = (p?: number) => {\n    return geometric(this, p)\n  }\n\n  // --------------------------------------------------------------------------\n  // Poisson distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates a [Poisson distribution](https://en.wikipedia.org/wiki/Poisson_distribution).\n   *\n   * @param {number} [lambda=1] - Mean (lambda > 0)\n   * @return {function}\n   */\n  poisson = (lambda?: number) => {\n    return poisson(this, lambda)\n  }\n\n  /**\n   * Generates an [Exponential distribution](https://en.wikipedia.org/wiki/Exponential_distribution).\n   *\n   * @param {number} [lambda=1] - Inverse mean (lambda > 0)\n   * @return {function}\n   */\n  exponential = (lambda?: number) => {\n    return exponential(this, lambda)\n  }\n\n  // --------------------------------------------------------------------------\n  // Misc distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates an [Irwin Hall distribution](https://en.wikipedia.org/wiki/Irwin%E2%80%93Hall_distribution).\n   *\n   * @param {number} [n=1] - Number of uniform samples to sum (n >= 0)\n   * @return {function}\n   */\n  irwinHall = (n?: number) => {\n    return irwinHall(this, n)\n  }\n\n  /**\n   * Generates a [Bates distribution](https://en.wikipedia.org/wiki/Bates_distribution).\n   *\n   * @param {number} [n=1] - Number of uniform samples to average (n >= 1)\n   * @return {function}\n   */\n  bates = (n?: number) => {\n    return bates(this, n)\n  }\n\n  /**\n   * Generates a [Pareto distribution](https://en.wikipedia.org/wiki/Pareto_distribution).\n   *\n   * @param {number} [alpha=1] - Alpha\n   * @return {function}\n   */\n  pareto = (alpha?: number) => {\n    return pareto(this, alpha)\n  }\n\n  // --------------------------------------------------------------------------\n  // Internal\n  // --------------------------------------------------------------------------\n\n  /**\n   * Memoizes distributions to ensure they're only created when necessary.\n   *\n   * Returns a thunk which that returns independent, identically distributed\n   * samples from the specified distribution.\n   *\n   * @private\n   *\n   * @param {string} label - Name of distribution\n   * @param {function} getter - Function which generates a new distribution\n   * @param {...*} args - Distribution-specific arguments\n   *\n   * @return {function}\n   */\n  _memoize<T>(label: string, getter: IDistFn<any>, ...args: any[]): IDist<T> {\n    const key = `${args.join(';')}`\n    let value = this._cache[label]\n\n    if (value === undefined || value.key !== key) {\n      value = {\n        key,\n        distribution: getter(this, ...args)\n      }\n      this._cache[label] = value\n    }\n\n    return value.distribution\n  }\n}\n\n// defaults to Math.random as its RNG\nexport default new Random()\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","export {default as zoom} from \"./zoom.js\";\nexport {default as zoomTransform, identity as zoomIdentity, Transform as ZoomTransform} from \"./transform.js\";\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {select, pointer} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport ZoomEvent from \"./event.js\";\nimport {Transform, identity} from \"./transform.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\n// Ignore right-click, since that should open the context menu.\n// except for pinch-to-zoom, which is sent as a wheel+ctrlKey event\nfunction defaultFilter(event) {\n  return (!event.ctrlKey || event.type === 'wheel') && !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    if (e.hasAttribute(\"viewBox\")) {\n      e = e.viewBox.baseVal;\n      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\n    }\n    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\n  }\n  return [[0, 0], [e.clientWidth, e.clientHeight]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta(event) {\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchfirst,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0,\n      tapDistance = 10;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled, {passive: false})\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform, point, event) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform, point, event);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n          .event(event)\n          .start()\n          .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n          .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k, p, event) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    }, p, event);\n  };\n\n  zoom.scaleTo = function(selection, k, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p,\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    }, p, event);\n  };\n\n  zoom.translateBy = function(selection, x, y, event) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    }, null, event);\n  };\n\n  zoom.translateTo = function(selection, x, y, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\n      return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    }, p, event);\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, point, event) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).event(event).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).event(event).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args).event(event),\n              e = extent.apply(that, args),\n              p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point,\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args, clean) {\n    return (!clean && that.__zooming) || new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.active = 0;\n    this.sourceEvent = null;\n    this.extent = extent.apply(that, args);\n    this.taps = 0;\n  }\n\n  Gesture.prototype = {\n    event: function(event) {\n      if (event) this.sourceEvent = event;\n      return this;\n    },\n    start: function() {\n      if (++this.active === 1) {\n        this.that.__zooming = this;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        delete this.that.__zooming;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new ZoomEvent(type, {\n          sourceEvent: this.sourceEvent,\n          target: zoom,\n          type,\n          transform: this.that.__zoom,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function wheeled(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, args).event(event),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = pointer(event);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent(event);\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned(event, ...args) {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var currentTarget = event.currentTarget,\n        g = gesture(this, args, true).event(event),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = pointer(event, currentTarget),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation(event);\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved(event) {\n      noevent(event);\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.event(event)\n       .zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = pointer(event, currentTarget), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped(event) {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent(event);\n      g.event(event).end();\n    }\n  }\n\n  function dblclicked(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = pointer(event.changedTouches ? event.changedTouches[0] : event, this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);\n\n    noevent(event);\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0, event);\n    else select(this).call(zoom.transform, t1, p0, event);\n  }\n\n  function touchstarted(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.touches,\n        n = touches.length,\n        g = gesture(this, args, event.changedTouches.length === n).event(event),\n        started, i, t, p;\n\n    nopropagation(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;\n      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n    }\n\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\n    if (started) {\n      if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation(event);\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else {\n      g.end();\n      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n      if (g.taps === 2) {\n        t = pointer(t, this);\n        if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {\n          var p = select(this).on(\"dblclick.zoom\");\n          if (p) p.apply(this, arguments);\n        }\n      }\n    }\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  zoom.tapDistance = function(_) {\n    return arguments.length ? (tapDistance = +_, zoom) : tapDistance;\n  };\n\n  return zoom;\n}\n","import {select} from \"d3-selection\";\nimport noevent, {nonpassivecapture} from \"./noevent.js\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, nonpassivecapture);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, nonpassivecapture);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, nonpassivecapture);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","// These are typically used in conjunction with noevent to ensure that we can\n// preventDefault on the event.\nexport const nonpassive = {passive: false};\nexport const nonpassivecapture = {capture: true, passive: false};\n\nexport function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","var epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\nexport default (function zoomRho(rho, rho2, rho4) {\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function zoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 ≅ u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      }\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      }\n    }\n\n    i.duration = S * 1000 * rho / Math.SQRT2;\n\n    return i;\n  }\n\n  zoom.rho = function(_) {\n    var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;\n    return zoomRho(_1, _2, _4);\n  };\n\n  return zoom;\n})(Math.SQRT2, 2, 4);\n","import sourceEvent from \"./sourceEvent.js\";\n\nexport default function(event, node) {\n  event = sourceEvent(event);\n  if (node === undefined) node = event.currentTarget;\n  if (node) {\n    var svg = node.ownerSVGElement || node;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n    if (node.getBoundingClientRect) {\n      var rect = node.getBoundingClientRect();\n      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n    }\n  }\n  return [event.pageX, event.pageY];\n}\n","export default function(event) {\n  let sourceEvent;\n  while (sourceEvent = event.sourceEvent) event = sourceEvent;\n  return event;\n}\n","export default x => () => x;\n","export default function ZoomEvent(type, {\n  sourceEvent,\n  target,\n  transform,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    transform: {value: transform, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","export function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","export default function extent(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n","import type { Module, GraphData } from \"../types\";\n\n// really poor man's digraph parser written mostly by chat gpt\nexport function parseDotGraph(input: string): GraphData {\n  const lines = input.split(\"\\n\");\n  const nodes: Module[] = [];\n\n  for (const line of lines) {\n    if (!line.includes(\"->\")) continue;\n\n    const matches = line.trim().match(/^\\s*\"?(\\S+?)\"?\\s*->\\s*\"?(\\S+?)\"?\\s*;?\\s*$/);\n    if (matches == null) continue;\n\n    const from = matches[1];\n    const to = matches[2];\n\n    if (!from || !to) continue;\n\n    const fromNode = nodes.find((n) => n.id === from);\n    if (fromNode != null) {\n      fromNode.edges?.push(to);\n    } else {\n      nodes.push({ id: from, label: from, edges: [to] });\n    }\n\n    const toNode = nodes.find((n) => n.id === to);\n    if (!toNode) {\n      nodes.push({ id: to, label: to, edges: [] });\n    }\n  }\n\n  return { nodes };\n}\n","export function debounce(func: any, timeout = 300) {\n  let timer: number | undefined;\n  return (...args: any[]) => {\n    clearTimeout(timer);\n    // @ts-expect-error\n    timer = setTimeout(() => {\n      // @ts-expect-error\n      func.apply(this, args);\n    }, timeout);\n  };\n}\n","import type { Id, GraphData, Module } from \"../types\";\n\nexport function tarjan(input: GraphData) {\n  const UNVISITED = -1;\n  const n = input.nodes.length;\n  const [g, indexToId] = adjacencyList(input);\n\n  let id = 0;\n\n  const ids = Array(n).fill(UNVISITED);\n  const low = Array(n).fill(0);\n  const onStack = Array(n).fill(false);\n  const stack: number[] = [];\n\n  const dfs = (at: number) => {\n    stack.push(at);\n    onStack[at] = true;\n    ids[at] = id;\n    low[at] = id;\n    id += 1;\n\n    // Visit all neighbors and min low-link on callback\n    for (let to of g[at]) {\n      // v = at\n      // w = to\n      if (ids[to] === UNVISITED) {\n        dfs(to);\n        low[at] = Math.min(low[at], low[to]);\n      } else if (onStack[to] === true) {\n        low[at] = Math.min(low[at], ids[to]);\n      }\n    }\n\n    // After visiting all `at` neighbors if we're at the start of an SCC, empty\n    // the seen stack until we back to the start of the SCC.\n    if (ids[at] === low[at]) {\n      let node;\n\n      do {\n        node = stack.pop()!;\n        onStack[node] = false;\n        low[node] = ids[at];\n      } while (node !== at);\n    }\n  };\n\n  for (let i = 0; i < n; i++) {\n    if (ids[i] === UNVISITED) {\n      dfs(i);\n    }\n  }\n\n  // This transformed the `low` array into groupings of cycles. If multiple\n  // entries share the same \"lowlink\" value then they are part of an SCC.\n  const cyclesIndex: { [n: number]: number[] } = {};\n  for (let i = 0; i < n; i++) {\n    if (cyclesIndex[low[i]] == null) {\n      cyclesIndex[low[i]] = [];\n    }\n\n    cyclesIndex[low[i]].push(i);\n  }\n\n  const cycles: Id[][] = [];\n  for (const [, indexes] of Object.entries(cyclesIndex)) {\n    // With tarjan's, cycles are only SCCs with more than 1 node\n    if (indexes.length > 1) {\n      // Map the indexes back to the user-provided IDs\n      cycles.push(indexes.map((i) => indexToId[i]));\n    }\n  }\n\n  return cycles;\n}\n\nexport function adjacencyList(\n  input: GraphData\n): [{ [i: number]: number[] }, { [n: number]: Id }] {\n  const list: { [i: number]: number[] } = {};\n\n  const idToIndex: { [id: Id]: number } = {};\n  const indexToId: { [n: number]: Id } = {};\n\n  input.nodes.forEach((node, i) => {\n    idToIndex[node.id] = i;\n    indexToId[i] = node.id;\n  });\n\n  for (let i = 0; i < input.nodes.length; i++) {\n    const node = input.nodes[i];\n    list[i] = [];\n\n    for (let edge of node.edges ?? []) {\n      list[i].push(idToIndex[edge]);\n    }\n  }\n\n  return [list, indexToId];\n}\n"],"names":["$82b01333e79ab06f$var$SuspenseContext","exports","$2336aa7b25388556$var$svgNode","$7dda263e87144b68$var$LinkDirection","$parcel$global","globalThis","self","window","global","$parcel$interopDefault","a","__esModule","default","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$modules","$parcel$inits","parcelRequire","id","init","module","call","err","Error","code","register","module1","define1","Alea","seed","me","mash","data","String","i","length","h","charCodeAt","next","t","s0","c","s1","s2","copy","f","impl","opts","xg","state","prng","int32","double","quick","amd","alea","define","XorGen","strseed","x","y","z","w","k","top","bot","result","xor128","d","xorwow","X","j","push","slice","Date","xorshift7","limit","Math","max","xor4096","b","floor","tychei","$82b01333e79ab06f$export$2cb4986bed338027","Symbol","$82b01333e79ab06f$export$17a675b7c02a7b1d","$82b01333e79ab06f$var$signalOptions","equals","$82b01333e79ab06f$var$runEffects","$82b01333e79ab06f$var$runQueue","$82b01333e79ab06f$var$UNOWNED","owned","cleanups","context","owner","$82b01333e79ab06f$var$Owner","$82b01333e79ab06f$var$Transition","$82b01333e79ab06f$var$Listener","$82b01333e79ab06f$var$Updates","$82b01333e79ab06f$var$Effects","$82b01333e79ab06f$var$ExecCount","$82b01333e79ab06f$var$transPending","$82b01333e79ab06f$var$setTransPending","$82b01333e79ab06f$export$c1e1e1ecbbe76a5","$82b01333e79ab06f$export$882461b6382ed46c","fn","detachedOwner","listener","unowned","root","updateFn","$82b01333e79ab06f$export$363ebc4b78b8f807","$82b01333e79ab06f$var$cleanNode","$82b01333e79ab06f$var$runUpdates","value","options","assign","observers","observerSlots","comparator","undefined","$82b01333e79ab06f$var$readSignal","bind","running","sources","has","tValue","$82b01333e79ab06f$var$writeSignal","$82b01333e79ab06f$export$314dade334ae905d","$82b01333e79ab06f$var$createComputation","$82b01333e79ab06f$var$updateComputation","$82b01333e79ab06f$export$7ea7134f704deda4","$82b01333e79ab06f$var$runUserEffects","$82b01333e79ab06f$var$lookup","key","suspense","user","$82b01333e79ab06f$export$c0c6c8b9c16bf6aa","runningTransition","tState","updates","$82b01333e79ab06f$var$lookUpstream","sSlot","sourceSlots","node","isComp","current","TransitionRunning","add","o","disposed","pure","$82b01333e79ab06f$var$markDownstream","time","$82b01333e79ab06f$var$runComputation","queueMicrotask","nextValue","$82b01333e79ab06f$var$handleError","updatedAt","tOwned","$82b01333e79ab06f$var$runTop","inFallback","effects","ancestors","prev","wait","res","$82b01333e79ab06f$var$completeUpdates","promises","size","queue","apply","resolve","len","userLength","ignore","source","pop","index","obs","$82b01333e79ab06f$var$reset","$82b01333e79ab06f$var$FALLBACK","$82b01333e79ab06f$var$dispose","$82b01333e79ab06f$export$60e54eaca7e7fb38","Comp","props","$82b01333e79ab06f$export$bdf530073099ce9f","$82b01333e79ab06f$export$4c9116dcf1374231","list","mapFn","items","mapped","disposers","indexes","newItems","newLen","newIndices","newIndicesNext","temp","tempdisposers","tempIndexes","start","end","newEnd","item","fallback","disposer","Array","mapper","min","Map","each","children","$82b01333e79ab06f$export$f6a3d19be20f5819","strictEqual","keyed","condition","when","child","$82b01333e79ab06f$export$fd42f52fd3ae1109","create","$478712cee1e6b565$var$$$EVENTS","$478712cee1e6b565$export$ce69bd05624d0c48","html","check","isSVG","document","createElement","innerHTML","content","firstChild","$478712cee1e6b565$export$21a5ca8aa77d35ff","parent","accessor","marker","initial","$478712cee1e6b565$var$insertExpression","$478712cee1e6b565$var$eventHandler","type","composedPath","target","registry","done","querySelectorAll","forEach","elem","remove","handler","disabled","cancelBubble","_$host","parentNode","host","unwrapArray","childNodes","multi","toString","nodeType","createTextNode","$478712cee1e6b565$var$cleanChildren","textContent","isArray","array","currentArray","$478712cee1e6b565$var$normalizeIncomingArray","normalized","unwrap","dynamic","Node","$478712cee1e6b565$var$appendNodes","$478712cee1e6b565$var$reconcileArrays","bLength","aEnd","bEnd","aStart","bStart","after","nextSibling","map","insertBefore","sequence","replaceChild","appendChild","replacement","inserted","el","isParent","$e6141bbfd30ac9e4$export$2e2bcd8739ae039","constructor","factory","prototype","$e6141bbfd30ac9e4$export$8b58be045bf06082","definition","$6b954386a0255d00$export$892596cec99bc70e","$6b954386a0255d00$var$reI","$6b954386a0255d00$var$reN","$6b954386a0255d00$var$reP","$6b954386a0255d00$var$reHex","$6b954386a0255d00$var$reRgbInteger","RegExp","$6b954386a0255d00$var$reRgbPercent","$6b954386a0255d00$var$reRgbaInteger","$6b954386a0255d00$var$reRgbaPercent","$6b954386a0255d00$var$reHslPercent","$6b954386a0255d00$var$reHslaPercent","$6b954386a0255d00$var$named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","$6b954386a0255d00$var$color_formatHex","rgb","formatHex","$6b954386a0255d00$var$color_formatRgb","formatRgb","$6b954386a0255d00$export$2e2bcd8739ae039","format","m","l","trim","toLowerCase","exec","parseInt","$6b954386a0255d00$var$rgbn","$6b954386a0255d00$export$5e05a94393ac29e3","$6b954386a0255d00$var$rgba","$6b954386a0255d00$var$hsla","hasOwnProperty","NaN","r","g","$6b954386a0255d00$export$42da0a331c2802f5","opacity","$6b954386a0255d00$export$8972dc0e6ad9238f","arguments","$6b954386a0255d00$var$rgb_formatHex","$6b954386a0255d00$var$hex","$6b954386a0255d00$var$rgb_formatRgb","$6b954386a0255d00$var$clampa","$6b954386a0255d00$var$clampi","isNaN","round","$6b954386a0255d00$var$Hsl","$6b954386a0255d00$export$8133dc3fa904d6d1","$6b954386a0255d00$var$clamph","$6b954386a0255d00$var$clampt","$6b954386a0255d00$var$hsl2rgb","m1","m2","$881d0702247da37d$export$4e41033bfeec1a4c","t1","v0","v1","v2","v3","t2","t3","channels","displayable","hex","formatHex8","formatHsl","brighter","pow","darker","clamp","$32a1f36c13df06e0$export$2e2bcd8739ae039","$8dfce0561889250e$var$linear","$8dfce0561889250e$export$2e2bcd8739ae039","$c99ed0dd240dae7d$export$2e2bcd8739ae039","rgbGamma","color","gamma","$c99ed0dd240dae7d$var$rgbSpline","spline","colors","$910b5323d0705334$export$2e2bcd8739ae039","$66ad23a6bb88ccc7$export$15d09067c6a5ee49","nb","na","$0a6b21d627aa3b76$export$2e2bcd8739ae039","$3133c9670a94856a$export$2e2bcd8739ae039","setTime","$4a087d8646486986$export$2e2bcd8739ae039","$83516c74d826a95f$export$2e2bcd8739ae039","values","$256699786eb44963$var$reA","$256699786eb44963$var$reB","$256699786eb44963$export$2e2bcd8739ae039","am","bm","bs","bi","lastIndex","q","join","ArrayBuffer","isView","DataView","valueOf","$a7eb384d18622265$export$2e2bcd8739ae039","$d281dc4bedcaa4bb$export$2e2bcd8739ae039","$66d3a017ba11c809$export$2e2bcd8739ae039","$2e786e1650447282$export$2e2bcd8739ae039","compare1","compare2","delta","left","lo","hi","mid","$2e786e1650447282$var$zero","center","right","$cc44a5a8212c170d$var$ascendingBisect","$cc44a5a8212c170d$export$4d945ad3ad5751b0","$7c3585a41f9f1074$export$2e2bcd8739ae039","$ca897062bcd43aee$var$unit","$ca897062bcd43aee$export$f0954fd7d5368655","$ca897062bcd43aee$var$normalize","$ca897062bcd43aee$var$bimap","domain","range","interpolate","d0","d1","r0","r1","$ca897062bcd43aee$var$polymap","reverse","$9d977ca9c6671195$export$23c7bb9e6558da2a","$9d977ca9c6671195$export$7d6b419e59e83f3d","interpolator","$9db2f87bc4be21a0$var$e10","sqrt","$9db2f87bc4be21a0$var$e5","$9db2f87bc4be21a0$var$e2","$9db2f87bc4be21a0$var$tickSpec","stop","count","i1","i2","inc","step","power","log10","error","factor","$9db2f87bc4be21a0$export$bc64d00cc98e7e95","$1d9a870fdc1109a5$export$8f8e23dd27dc19f5","p","toExponential","indexOf","coefficient","$6b24ab7f3f29a4f5$export$2e2bcd8739ae039","abs","$d74b19cadd883994$var$re","$d74b19cadd883994$export$2e2bcd8739ae039","specifier","match","$d74b19cadd883994$export$963aac351db36ed4","fill","align","sign","symbol","zero","width","comma","precision","$cdbbd899de71a4c0$export$2e2bcd8739ae039","exponent","$f2f670716c3bc305$export$2e2bcd8739ae039","toFixed","toLocaleString","replace","toPrecision","$4322a59c8c68d6bd$export$6863724d9a42263","toUpperCase","$91261e455a6a466a$export$2e2bcd8739ae039","$7c46bc54500186c4$var$map","$7c46bc54500186c4$var$prefixes","$9d892af289cba166$export$16a5d4b4a61a274d","scale","ticks","tickFormat","$ddfc15ed0708ecec$export$8d85692a469dde6f","$ddfc15ed0708ecec$export$d9468344d3651243","nice","prestep","i0","maxIter","ceil","$9d892af289cba166$export$2e2bcd8739ae039","$ca897062bcd43aee$export$6b468dcfb64c653c","transform","untransform","unknown","piecewise","output","input","rescale","invert","_","from","rangeRound","u","$ddfc15ed0708ecec$var$locale","locale","grouping","thousands","numerals","group","Number","substring","currencyPrefix","currency","currencySuffix","decimal","percent","minus","nan","newFormat","prefix","test","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","out","Infinity","padding","formatPrefix","$934e15f7e80b4c50$export$8449e153fbd325fc","PI","$934e15f7e80b4c50$export$41fc368e1a942b97","$71c371d0463c3865$var$BC_DA","$71c371d0463c3865$var$B","$71c371d0463c3865$var$D","$71c371d0463c3865$export$2e2bcd8739ae039","$71c371d0463c3865$var$cubehelixConvert","$71c371d0463c3865$export$57ed4bde61a1e2f2","$71c371d0463c3865$var$ED","$71c371d0463c3865$var$E","$71c371d0463c3865$var$EB","bl","$71c371d0463c3865$var$C","atan2","$c9c323aa53ae4fa4$var$cubehelix","hue","cubehelixGamma","cubehelix","cosh","cos","sinh","sin","$71c371d0463c3865$var$A","$c9c323aa53ae4fa4$export$934fa09ad474a1b4","$55faa4b4fb802c91$export$c5cedbc1ab3be2c3","$a696f7efe74d657f$var$none","$a696f7efe74d657f$export$2e2bcd8739ae039","selector","querySelector","$a251e86126c3c196$var$empty","$a251e86126c3c196$export$2e2bcd8739ae039","$9217c1f6bb2d2b85$export$2e2bcd8739ae039","matches","$9217c1f6bb2d2b85$export$90c2759c036528","$b34141b01ced0a61$var$find","find","$b34141b01ced0a61$var$childFirst","firstElementChild","$437727374f9902ec$var$filter","filter","$437727374f9902ec$var$children","$16e10e18a783a307$export$2e2bcd8739ae039","update","$b2f4aac14f806d3c$export$67b01759a14cf6a4","datum","ownerDocument","namespaceURI","_next","_parent","__data__","$052a9a1821040aa9$var$bindIndex","enter","exit","groupLength","dataLength","$052a9a1821040aa9$var$bindKey","keyValue","nodeByKeyValue","keyValues","delete","$052a9a1821040aa9$var$datum","$6d597722efeda79a$var$ascending","$a95bc3014beac1d3$export$201a3f7520ccc326","$a95bc3014beac1d3$export$2e2bcd8739ae039","svg","xhtml","xlink","xml","xmlns","$58b58edfe5dae49c$export$2e2bcd8739ae039","name","space","local","$d206eec3d2c8e9d1$var$attrRemove","removeAttribute","$d206eec3d2c8e9d1$var$attrRemoveNS","fullname","removeAttributeNS","$d206eec3d2c8e9d1$var$attrConstant","setAttribute","$d206eec3d2c8e9d1$var$attrConstantNS","setAttributeNS","$d206eec3d2c8e9d1$var$attrFunction","$d206eec3d2c8e9d1$var$attrFunctionNS","$a802501d7f7ae391$export$2e2bcd8739ae039","defaultView","$df9d8f43b4be6d4b$var$styleRemove","style","removeProperty","$df9d8f43b4be6d4b$var$styleConstant","priority","setProperty","$df9d8f43b4be6d4b$var$styleFunction","$df9d8f43b4be6d4b$export$5e3cec964f0b5efd","getPropertyValue","getComputedStyle","$f99b3adab0522f33$var$propertyRemove","$f99b3adab0522f33$var$propertyConstant","$f99b3adab0522f33$var$propertyFunction","$d06e661034a45406$var$classArray","string","split","$d06e661034a45406$var$classList","classList","$d06e661034a45406$var$ClassList","_node","_names","getAttribute","$d06e661034a45406$var$classedAdd","names","$d06e661034a45406$var$classedRemove","$d06e661034a45406$var$classedTrue","$d06e661034a45406$var$classedFalse","$d06e661034a45406$var$classedFunction","$039cad3e6b62ef93$var$textRemove","$039cad3e6b62ef93$var$textConstant","$039cad3e6b62ef93$var$textFunction","$c8e884507bcbc0d6$var$htmlRemove","$c8e884507bcbc0d6$var$htmlConstant","$c8e884507bcbc0d6$var$htmlFunction","$d32582798f21257c$var$raise","$81fa89a3cf707281$var$lower","previousSibling","$9eff7b5d7c009c96$var$creatorInherit","uri","documentElement","createElementNS","$9eff7b5d7c009c96$var$creatorFixed","$9eff7b5d7c009c96$export$2e2bcd8739ae039","$92828970e51f2858$var$constantNull","$3fba60665c09da9b$var$remove","removeChild","$f8ba4680beaf3292$var$selection_cloneShallow","clone","cloneNode","$f8ba4680beaf3292$var$selection_cloneDeep","$f620cfb2b91d85e5$var$onRemove","typename","on","__on","removeEventListener","$f620cfb2b91d85e5$var$onAdd","event","addEventListener","$049280ac271fdabe$var$dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchEvent","$049280ac271fdabe$var$dispatchConstant","$049280ac271fdabe$var$dispatchFunction","splice","contains","$3fa3bddc94b4f8a8$export$e8e78c978b129247","$3fa3bddc94b4f8a8$export$52baac22726c72bf","groups","parents","_groups","_parents","$3fa3bddc94b4f8a8$var$selection","$4506c173c1ba6b79$export$2e2bcd8739ae039","select","subgroups","subnode","subgroup","selectAll","selectChild","selectChildren","enterGroup","updateGroup","previous","_enter","_exit","onenter","onupdate","onexit","selection","append","merge","order","groups0","groups1","m0","merges","group0","group1","compareDocumentPosition","sort","compare","compareNode","sortgroups","sortgroup","callback","nodes","empty","attr","getAttributeNS","property","classed","text","raise","lower","insert","before","deep","typenames","dispatch","iterator","$f22df01f36f3bbc5$var$noop","$f22df01f36f3bbc5$var$dispatch","$f22df01f36f3bbc5$var$Dispatch","$f22df01f36f3bbc5$var$set","concat","T","types","$f22df01f36f3bbc5$var$get","that","args","$0830f34b180fabe6$var$taskHead","$0830f34b180fabe6$var$taskTail","$0830f34b180fabe6$var$frame","$0830f34b180fabe6$var$timeout","$0830f34b180fabe6$var$interval","$0830f34b180fabe6$var$clockLast","$0830f34b180fabe6$var$clockNow","$0830f34b180fabe6$var$clockSkew","$0830f34b180fabe6$var$clock","performance","now","$0830f34b180fabe6$var$setFrame","requestAnimationFrame","setTimeout","$0830f34b180fabe6$export$461939dd4422153","$0830f34b180fabe6$var$clearNow","$0830f34b180fabe6$export$c57e9b2d8b9e4de","_call","_time","$0830f34b180fabe6$export$9dc4ecf953986f04","delay","restart","$0830f34b180fabe6$var$wake","$0830f34b180fabe6$export$d60154c1d7f3990e","$0830f34b180fabe6$var$nap","t0","$0830f34b180fabe6$var$sleep","$0830f34b180fabe6$var$poke","clearTimeout","clearInterval","setInterval","$761d5cee6e823ef5$export$2e2bcd8739ae039","elapsed","TypeError","$b5673d202c1a718d$var$emptyOn","$b5673d202c1a718d$var$emptyTween","$b5673d202c1a718d$export$2e2bcd8739ae039","timing","schedules","__transition","$b5673d202c1a718d$var$create","tween","timer","tick","duration","ease","$b5673d202c1a718d$export$2cd8252107eb640b","schedule","$b5673d202c1a718d$export$3988ae62b71be9a3","$b5673d202c1a718d$export$adaa4cf7ef1b65be","$a9f60c0c7972321a$export$2e2bcd8739ae039","active","$5e622cc4ee5dcd58$var$degrees","$5e622cc4ee5dcd58$export$f0954fd7d5368655","translateX","translateY","rotate","skewX","scaleX","scaleY","$5e622cc4ee5dcd58$export$2e2bcd8739ae039","atan","$58d4bff51a6cd97b$var$interpolateTransform","parse","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","$58d4bff51a6cd97b$export$56bec7123bb3589a","DOMMatrix","WebKitCSSMatrix","isIdentity","$58d4bff51a6cd97b$export$da8cba906d64c082","baseVal","consolidate","matrix","$2b846766134b1951$var$tweenRemove","tween0","tween1","$2b846766134b1951$var$tweenFunction","$2b846766134b1951$export$f78ce6ab10405d82","transition","_id","$1d03f40d2ee03a56$export$2e2bcd8739ae039","$fa11014bc225ccbd$var$attrRemove","$fa11014bc225ccbd$var$attrRemoveNS","$fa11014bc225ccbd$var$attrConstant","value1","string00","interpolate0","string1","string0","$fa11014bc225ccbd$var$attrConstantNS","$fa11014bc225ccbd$var$attrFunction","string10","$fa11014bc225ccbd$var$attrFunctionNS","$89c852aaf0ffbd98$var$attrTweenNS","_value","$89c852aaf0ffbd98$var$attrTween","$998317f5aa574ea5$var$delayFunction","$998317f5aa574ea5$var$delayConstant","$fb064aa40c04a3a9$var$durationFunction","$fb064aa40c04a3a9$var$durationConstant","$7a60ab3f6361005a$var$Selection","$406987af83016736$var$styleRemove","$f4875d2c4bb511a9$var$id","$f4875d2c4bb511a9$export$be58926105124dd4","_name","$f4875d2c4bb511a9$var$selection_prototype","$f4875d2c4bb511a9$export$2e2bcd8739ae039","inherit","id0","id1","on0","on1","sit","$43adaf0311e82f05$var$start","every","attrTween","listener0","styleTween","$084d18b0ed660f1f$var$styleTween","textTween","$2281728614db71a0$var$textTween","$3b84501e3f09c967$var$easeConstant","easeVarying","Promise","reject","cancel","interrupt","$091a2eb19c9bc49f$var$defaultTiming","$3435b4ae8be5b7c0$export$5118fc7a1e64441b","$3435b4ae8be5b7c0$export$5be5f5e804d0b60c","$3435b4ae8be5b7c0$export$d6ded66933892ed3","$091a2eb19c9bc49f$var$inherit","$f9d4992238192526$exports","isTypedArray","Uint8Array","Uint16Array","Uint32Array","Int8Array","Int16Array","Int32Array","Float32Array","Float64Array","Uint8ClampedArray","extend","base","keys","message","console","pred","encolon","standardTypeEh","checkOneOf","constructorKeys","leftPad","str","ShaderFile","lines","hasErrors","ShaderLine","number","line","errors","ShaderError","fileNumber","lineNumber","file","guessCommand","stack","pat","pat2","guessCallSite","parseSource","command","files","parts","lineNumberInfo","nameInfo","atob","saveCommandRef","object","_commandRef","commandRaise","callSite","checkCommandType","TYPE_SIZE","pixelSize","isPow2","check$1","optional","block","parameter","param","possibilities","commandParameter","obj","commandType","nni","oneOf","shaderError","gl","shader","getShaderParameter","COMPILE_STATUS","errLog","getShaderInfoLog","typeName","FRAGMENT_SHADER","annotateFiles","errMsg","strings","styles","offset","token","tokenPat","chrome","log","linkError","program","fragShader","vertShader","getProgramParameter","LINK_STATUS","getProgramInfoLog","fragParse","header","vertParse","saveDrawInfo","uniforms","attributes","stringStore","addProps","dict","_fragId","static","frag","_vertId","vert","uniformSet","_uniformSet","attributeSet","_attributeSet","_hasCount","framebufferFormat","attachment","texFormats","rbFormats","texture","_texture","internalformat","renderbuffer","_renderbuffer","texture2D","info","mipData","limits","height","maxTextureSize","wrapS","wrapT","mipmask","minFilter","extensions","magFilter","genMipmaps","mipimages","images","mw","mh","img","compressed","rowSize","unpackAlignment","byteLength","element","textureCube","faces","face","mipmaps","VARIABLE_COUNTER","DynamicVariable","escapeStr","toAccessorString","splitParts","firstChar","charAt","lastChar","substr","subparts","isDynamic","_reglType","unbox","path","raf","cb","cancelAnimationFrame","clock","parseExtensions","getElement","desc","loop","log2","shift","createPool","bufferPool","alloc","sz","nextPow16","bin","free","buf","allocType","subarray","freeType","buffer","pool","wrapLimits","maxAnisotropic","ext_texture_filter_anisotropic","getParameter","maxDrawbuffers","maxColorAttachments","webgl_draw_buffers","readFloat","oes_texture_float","readFloatTexture","createTexture","bindTexture","texImage2D","fbo","createFramebuffer","bindFramebuffer","framebufferTexture2D","checkFramebufferStatus","viewport","clearColor","clear","pixels","readPixels","getError","deleteFramebuffer","deleteTexture","isIE","navigator","userAgent","appVersion","npotTextureCube","cubeTexture","activeTexture","colorBits","depthBits","stencilBits","subpixelBits","ext","pointSizeDims","lineWidthDims","maxViewportDims","maxCombinedTextureUnits","maxCubeMapSize","maxRenderbufferSize","maxTextureUnits","maxAttributes","maxVertexUniforms","maxVertexTextureUnits","maxVaryingVectors","maxFragmentUniforms","glsl","renderer","vendor","version","isNDArrayLike","shape","stride","flattenUtils","array_","flatten","out_","flatten1D","nx","flatten2D","ny","ptr","row","flatten3D","flattenRec","level","nz","ptr_","col","arrayTypes","glTypes","int8","int16","uint8","uint16","uint32","float","float32","usageTypes","stream","arrayFlatten","arrayShape","DTYPES_SIZES","typedArrayCode","copyArray","inp","transpose","shapeX","shapeY","strideX","strideY","primTypes","points","point","triangles","triangle","FLOAT","INT","convertToHalfFloat","ushorts","sgn","exp","frac","isArrayLike","isPow2$1","MIPMAP_FILTERS","CHANNELS_FORMAT","FORMAT_CHANNELS","objectName","CANVAS_CLASS","OFFSCREENCANVAS_CLASS","CONTEXT2D_CLASS","BITMAP_CLASS","IMAGE_CLASS","VIDEO_CLASS","PIXEL_CLASSES","TYPE_SIZES","FORMAT_SIZES_SPECIAL","isNumericArray","arr","isRectArray","classString","isPixelData","className","typedArrayCode$1","preConvert","image","postConvert","getTextureSize","isMipmap","isCube","total","FORMAT_SIZES","wrapRenderbuffers","stats","config","formatTypes","ext_srgb","ext_color_buffer_half_float","webgl_color_buffer_float","formatTypesInvert","renderbufferCount","renderbufferSet","REGLRenderbuffer","refCount","profile","destroy","rb","handle","bindRenderbuffer","deleteRenderbuffer","decRef","getTotalRenderbufferSize","createRenderbuffer","reglRenderbuffer","radius","renderbufferStorage","resize","w_","h_","restore","colorTextureFormatEnums","textureFormatChannels","textureTypeSizes","colorRenderbufferFormatEnums","statusCode","VAO_OPTIONS","AttributeRecord","divisor","CUTE_COMPONENTS","S_DITHER","S_BLEND_ENABLE","S_BLEND_COLOR","S_BLEND_EQUATION","S_BLEND_FUNC","S_DEPTH_ENABLE","S_DEPTH_FUNC","S_DEPTH_RANGE","S_DEPTH_MASK","S_COLOR_MASK","S_CULL_ENABLE","S_CULL_FACE","S_FRONT_FACE","S_LINE_WIDTH","S_POLYGON_OFFSET_ENABLE","S_POLYGON_OFFSET_OFFSET","S_SAMPLE_ALPHA","S_SAMPLE_ENABLE","S_SAMPLE_COVERAGE","S_STENCIL_ENABLE","S_STENCIL_MASK","S_STENCIL_FUNC","S_STENCIL_OPFRONT","S_STENCIL_OPBACK","S_SCISSOR_ENABLE","S_SCISSOR_BOX","S_VIEWPORT","S_PROFILE","S_FRAMEBUFFER","S_VERT","S_FRAG","S_ELEMENTS","S_PRIMITIVE","S_COUNT","S_OFFSET","S_INSTANCES","SUFFIX_WIDTH","SUFFIX_HEIGHT","S_FRAMEBUFFER_WIDTH","S_FRAMEBUFFER_HEIGHT","S_VIEWPORT_WIDTH","S_VIEWPORT_HEIGHT","S_DRAWINGBUFFER","S_DRAWINGBUFFER_WIDTH","S_DRAWINGBUFFER_HEIGHT","NESTED_OPTIONS","blendFuncs","invalidBlendCombinations","compareFuncs","stencilOps","shaderType","orientationType","isBufferArgs","sortState","Declaration","thisDep","contextDep","propDep","isStatic","decl","createStaticDecl","createDynamicDecl","dyn","numArgs","subDyn","subArgs","SCOPE_DECL","createTimer","ext_disjoint_timer_query","queryPool","pendingQueries","PendingStats","startQueryIndex","endQueryIndex","sum","pendingStatsPool","pendingStats","pushScopeStats","ps","timeSum","queryPtr","beginQuery","query","createQueryEXT","beginQueryEXT","endQuery","endQueryEXT","queryTime","getQueryObjectEXT","startPtr","endPtr","gpuTime","getNumPendingQueries","deleteQueryEXT","CONTEXT_LOST_EVENT","CONTEXT_RESTORED_EVENT","haystack","needle","stringIds","stringValues","parseArgs","args_","container","canvas","contextAttributes","optionalExtensions","pixelRatio","devicePixelRatio","onDone","onDestroy","nodeName","getBoundingClientRect","drawArrays","drawElements","createCanvas","resizeObserver","innerWidth","innerHeight","body","bounds","bottom","border","margin","position","ResizeObserver","observe","disconnect","premultipliedAlpha","createContext","getContext","glAttributes","getContextAttributes","contextLost","isContextLost","extensionState","createExtensionCache","tryLoadExtension","name_","getExtension","stats$$1","vaoCount","bufferCount","elementsCount","framebufferCount","shaderCount","textureCount","cubeCount","START_TIME","WIDTH","drawingBufferWidth","HEIGHT","drawingBufferHeight","contextState","viewportWidth","viewportHeight","framebufferWidth","framebufferHeight","drawState","elements","primitive","instances","bufferState","wrapBufferState","destroyBuffer","bufferSet","REGLBuffer","createBuffer","usage","dimension","dtype","persistentData","bindBuffer","streamPool","initBufferFromTypedArray","bufferData","initBufferFromData","persist","flatData","dim","typedData","transposeData","deleteBuffer","getTotalBufferSize","deferInit","persistent","reglBuffer","setSubData","bufferSubData","_buffer","subdata","offset_","converted","createStream","destroyStream","stream$$1","getBuffer","wrapper","_initBuffer","attributeState","elementState","wrapElementsState","elementSet","elementCount","elementTypes","REGLElementBuffer","primType","vertCount","oes_element_index_uint","initElements","prim","predictedType","destroyElements","reglElements","_elements","getElements","wrapAttributeState","NUM_ATTRIBUTES","attributeBindings","vaoSet","Record","scope","currentVAO","targetVAO","extVAO","vao","refresh","createVAO","_attr","REGLVAO","updateVAO","ownsElements","bufUpdated","nattributes","spec","rec","buffers","angle_instanced_arrays","_vao","getVAO","record","disableVertexAttribArray","setVAO","bindVertexArrayOES","bindAttrs","exti","extInstanced","binding","enableVertexAttribArray","vertexAttribPointer","offfset","vertexAttribDivisorANGLE","vertexAttrib4f","oes_vertex_array_object","extension","createVertexArrayOES","deleteVertexArrayOES","shaderState","wrapShaderState","fragShaders","vertShaders","ActiveInfo","location","insertActiveInfo","getShader","cache","createShader","shaderSource","compileShader","programCache","programList","PROGRAM_COUNTER","REGLProgram","fragId","vertId","uniformsCount","attributesCount","linkProgram","attributeLocations","createProgram","attachShader","bindAttribLocation","numUniforms","getActiveUniform","getUniformLocation","uniName","numAttributes","getActiveAttrib","getAttribLocation","getMaxUniformsCount","getMaxAttributesCount","deleteShader","deleteProgram","attribLocations","prevProgram","idx","textureState","createTextureSet","reglPoll","mipmapHint","wrapModes","magFilters","minFilters","colorSpace","textureTypes","textureFormats","compressedTextureFormats","srgb","srgba","oes_texture_half_float","webgl_depth_texture","webgl_compressed_texture_s3tc","webgl_compressed_texture_atc","webgl_compressed_texture_pvrtc","webgl_compressed_texture_etc1","supportedCompressedFormats","supportedFormats","textureFormatsInvert","textureTypesInvert","magFiltersInvert","minFiltersInvert","wrapModesInvert","colorFormats","reduce","glenum","TexFlags","premultiplyAlpha","flipY","copyFlags","other","parseFlags","flags","alignment","hasChannels","hasFormat","formatStr","setFlags","pixelStorei","TexImage","xOffset","yOffset","needsFree","needsCopy","parseImage","viewW","viewH","convertData","shapeC","strideC","isCanvasElement","naturalWidth","naturalHeight","videoWidth","videoHeight","dd","allocData","setSubImage","miplevel","texSubImage2D","compressedTexSubImage2D","copyTexSubImage2D","imagePool","allocImage","freeImage","MipMap","parseMipMapFromShape","mipmap","parseMipMapFromObject","imgData","setMipMap","setImage","compressedTexImage2D","copyTexImage2D","mipPool","allocMipMap","freeMipMap","TexInfo","anisotropic","parseTexInfo","mag","wrap","optWrapS","optWrapT","hasMipMap","setTexInfo","texParameteri","hint","generateMipmap","textureSet","numTexUnits","textureUnits","REGLTexture","unit","bindCount","texInfo","tempBind","tempRestore","GL_TEXTURE0$1","unbind","getTotalTextureSize","create2D","reglTexture2D","subimage","x_","y_","level_","imageData","_w","_h","createCube","a0","a1","a2","a3","a4","a5","reglTextureCube","faceInput","GL_TEXTURE_CUBE_MAP_POSITIVE_X$1","radius_","getTexture","tex","core","procs","poll","renderbufferState","framebufferState","wrapFBOState","cur","dirty","setFBO","colorTextureFormats","colorRenderbufferFormats","colorTypes","FramebufferAttachment","incRefAndCheckShape","tw","th","attach","framebufferRenderbuffer","parseAttachment","GL_TEXTURE_CUBE_MAP_POSITIVE_X$2","allocAttachment","isTexture","unwrapAttachment","resizeAttachment","framebufferSet","REGLFramebuffer","framebuffer","colorAttachments","depthAttachment","stencilAttachment","depthStencilAttachment","decFBORefs","updateFramebuffer","GL_COLOR_ATTACHMENT0$1","status","createFBO","reglFramebuffer","needsDepth","needsStencil","colorBuffer","colorTexture","colorFormat","colorType","colorCount","depthBuffer","stencilBuffer","depthStencilBuffer","depthStencilTexture","depthTexture","depth","stencil","depthStencil","commonColorAttachmentSize","colorAttachmentSize","_framebuffer","use","getFramebuffer","reglFramebufferCube","colorCubes","cubeMapParams","cube","fb","reglCore","uniformState","blendEquations","ext_blend_minmax","extInstancing","extDrawBuffers","extVertexArrays","currentState","nextState","GL_STATE_NAMES","GL_FLAGS","GL_VARIABLES","propName","stateFlag","sname","cap","stateVariable","func","sharedState","draw","sharedConstants","backBuffer","drawBuffer","GL_COLOR_ATTACHMENT0$2","drawCallCounter","createREGLEnvironment","env","createEnvironment","varCounter","linkedNames","linkedValues","vars","def","entry","entryToString","exitToString","save","prop","globalBlock","procedures","link","proc","arg","bodyToString","cond","thenBlock","elseBlock","thenToString","elseToString","then","else","elseClause","compile","src","Function","batchId","SHARED","shared","CHECK","commandStr","assert","nextVars","currentVars","variable","constants","JSON","stringify","invoke","argList","ref","attribCache","scopeAttribs","scopeAttrib","emitContext","CONTEXT","contextEnter","defn","emitPollFramebuffer","skipCheck","EXT_DRAW_BUFFERS","NEXT","GL","FRAMEBUFFER_STATE","DRAW_BUFFERS","BACK_BUFFER","emitPollState","CURRENT_VARS","NEXT_VARS","CURRENT_STATE","NEXT_STATE","CURRENT","ifte","emitSetOptions","flag","injectExtensions","instancing","emitProfile","useScope","incrementCounter","CPU_START","QUERY_COUNTER","USE_PROFILE","STATS","TIMER","profileArg","perfCounter","emitProfileStart","emitProfileEnd","scopeProfile","enable","emitAttributes","attribute","emitBindAttribute","ATTRIBUTE","LOCATION","BINDING","STATE","BUFFER","CONST_COMPONENTS","COMMON_KEYS","emitBuffer","SIZE","TYPE","DIVISOR","emitConstant","typeLength","emitUniforms","isBatchInnerLoop","definedArrUniforms","infix","VALUE","uniform","arrUniformName","UNIFORM","TEX_VALUE","MAT_VALUE","emitCheck","checkType","checkVector","checkTexture","unroll","TEX","matSize","STORAGE","prevS","emitDraw","outer","inner","ELEMENTS","COUNT","INSTANCES","EXT_INSTANCING","DRAW_STATE","drawOptions","contextDynamic","elementsActive","emitValue","PRIMITIVE","OFFSET","MISSING","DYNAMIC","ELEMENT_TYPE","elementsStatic","vaoActive","emitInstancing","emitRegular","createBody","emitBody","parentEnv","emitDrawBody","useVAO","drawVAO","emitBatchDynamicShaderBody","all","emitBatchBody","BATCH_ID","PROPS","isInnerDefn","isOuterDefn","needsContext","needsFramebuffer","progCache","PROGRAM","progVar","PROG_ID","CACHED_PROC","splatObject","isDynamicObject","globals","objectRef","deps","INSTANCING","common","parseArguments","staticOptions","dynamicOptions","staticUniforms","dynamicUniforms","UNIFORMS","staticAttributes","dynamicAttributes","attributeDefs","staticContext","dynamicContext","KEY_NAMES","checkKeys","parseAttribLocations","sAttributes","bindings","parseFramebuffer","FRAMEBUFFER","FRAMEBUFFER_FUNC","viewportAndScissor","parseViewportScissor","parseBox","box","BOX_W","BOX_H","dynBox","BOX","BOX_X","BOX_Y","prevViewport","VIEWPORT","scissor_box","parseDraw","staticDraw","parseVAO","S_VAO","vaoRef","parseElements","IS_BUFFER_ARGS","ELEMENT_STATE","elementDefn","elementStream","parseParam","isOffset","dynValue","parsePrimitive","dynPrimitive","PRIM_TYPES","parseVertCount","dynCount","parseStatic","parseDynamic","COMPARE_FUNCS","srcRGB","srcAlpha","dstRGB","dst","dstAlpha","BLEND_FUNCS","read","INVALID_BLEND_COMBINATIONS","SRC_RGB","SRC_ALPHA","alpha","BLEND_EQUATIONS","RGB","ALPHA","checkProp","cmp","mask","fail","zfail","zpass","STENCIL_OPS","units","sampleValue","sampleInvert","parseProgram","parseShader","SHADER_STATE","progDef","copyBox","scopeVAO","parseProfile","profileEnable","reglType","staticBindings","constant","VALID_KEYS","isStream","BUFFER_STATE","defaultRecord","emitReadRecord","emitDrawProc","drawCache","emitScopeProc","saveShader","opt","emitBatchProc","batch","progDefn","batchCache","wrapReadPixels","readPixelsImpl","preserveDrawingBuffer","rafCallbacks","lossCallbacks","restoreCallbacks","destroyCallbacks","activeRAF","handleRAF","flush","startRAF","stopRAF","handleContextLoss","preventDefault","handleContextRestored","compileProcedure","separateDynamic","useArrays","staticItems","dynamicItems","option","flattenNestedOptions","op","opBack","opFront","cpuTime","compiled","EMPTY_ARRAY","reserve","clearImpl","clearFlags","clearDepth","clearStencil","frame","pendingCancel","pollViewport","scissorBox","regl","framebuffer_reglType","this","framebufferCube","callbacks","hasExtension","_gl","_refresh","$74e6377530482d2d$exports","$74e6377530482d2d$export$185802fd694ee1f5","$74e6377530482d2d$export$b4ad467060d346fe","$74e6377530482d2d$export$9cd59f9826255e47","$74e6377530482d2d$export$784d13d8ee351f07","$74e6377530482d2d$export$a82be99ed2a44a7d","$74e6377530482d2d$export$adaa4cf7ef1b65be","$74e6377530482d2d$export$f0954fd7d5368655","$74e6377530482d2d$export$9cb09a71b7d66923","$74e6377530482d2d$export$6897c284b6f9f4dc","$74e6377530482d2d$export$33f3c024b4ae00a1","$74e6377530482d2d$export$a04698f914c55ed9","$74e6377530482d2d$export$2060d2db72cce88f","$74e6377530482d2d$export$d73ee8ef04f5226a","$74e6377530482d2d$export$bb628a54ab399bc9","$74e6377530482d2d$export$dcdf75081b88279d","$74e6377530482d2d$export$bc9e79e74e9fddf6","$74e6377530482d2d$export$926fc125ff3c666c","$74e6377530482d2d$export$832ca188ffb1955d","$74e6377530482d2d$export$68f5977575fae9bf","$74e6377530482d2d$export$2ff2bbe382249af7","$74e6377530482d2d$export$966b25ab6dc1b1f9","$74e6377530482d2d$export$b74061472fe7c07","$74e6377530482d2d$export$42d51816ce590c93","$74e6377530482d2d$export$326827e8268e9cdb","$74e6377530482d2d$export$e16d8520af44a096","$74e6377530482d2d$export$4e2d2ead65e5f7e3","$74e6377530482d2d$export$c697bed75648cdb7","$74e6377530482d2d$export$553579f63bdd7137","$74e6377530482d2d$export$f2599a5cf1109d8","$74e6377530482d2d$export$e9bab7fafb253603","$74e6377530482d2d$export$6e3a27864ab166fe","$74e6377530482d2d$export$f93b5905241a7cca","$025278b023032180$export$b67359430d3b1b2","m00","m01","m02","m10","m11","m12","m20","m21","m22","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","det","b00","b02","b10","b12","b20","b22","rad","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","hypot","a6","a7","a8","b0","b1","b2","b3","b4","b5","b6","b7","b8","$025278b023032180$export$fd293b15f47e270","$b451ab935132b01f$exports","$1NWL6","$8FlDu","$1rFi6","$iDdZD","$bDA0X","$oBon1","$f6958004dd10691b$exports","$dcc60992372e5fa5$var$_defineProperties","descriptor","writable","$dcc60992372e5fa5$var$_toPropertyKey","$dcc60992372e5fa5$var$_toPrimitive","toPrimitive","$dcc60992372e5fa5$var$_createClass","Constructor","protoProps","staticProps","$dcc60992372e5fa5$var$_inheritsLoose","subClass","superClass","$dcc60992372e5fa5$var$_setPrototypeOf","setPrototypeOf","__proto__","math","nodecrypto","rngname","startdenom","significance","overflow","seedrandom","shortseed","mixkey","typ","entropy","tostring","autoseed","randomBytes","crypto","msCrypto","getRandomValues","browser","plugins","screen","arc4","ARC4","S","pass","is_math_call","keylen","smear","stringseed","fromCharCode","random","ex","$dcc60992372e5fa5$export$7492a095b4ff4e68","RNG","_proto","_seed","_opts","strSeed","$dcc60992372e5fa5$var$RNGFunction","_RNG","RNGFunction","thunk","_this","_rng","$dcc60992372e5fa5$export$e6cb7150fd4ac6e7","_args$","_args","arg0","$dcc60992372e5fa5$var$uniform","$dcc60992372e5fa5$var$numberValidator","num","$dcc60992372e5fa5$var$NumberValidator","isInt","isInteger","isPositive","lessThan","greaterThanOrEqual","greaterThan","$dcc60992372e5fa5$var$uniformInt","$dcc60992372e5fa5$var$uniformBoolean","$dcc60992372e5fa5$var$logNormal","mu","sigma","normal","$dcc60992372e5fa5$var$geometric","invLogP","$dcc60992372e5fa5$var$logFactorialTable","$dcc60992372e5fa5$var$poisson","lambda","expMean","smu","invAlpha","vR","us","_logFactorial","$dcc60992372e5fa5$var$bates","irwinHall","$dcc60992372e5fa5$var$pareto","$dcc60992372e5fa5$var$RNGMathRandom","RNGMathRandom","$dcc60992372e5fa5$export$a92776769f460054","Random","rng","_patch","_cache","uniformInt","integer","bool","uniformBoolean","_memoize","logNormal","bernoulli","binomial","geometric","poisson","exponential","bates","pareto","patch","unpatch","choice","label","getter","distribution","$19c289642832a009$export$35431a0e47022de1","capture","passive","$19c289642832a009$export$2e2bcd8739ae039","stopImmediatePropagation","$ab1b56f08da5f0f8$var$cosh","$ab1b56f08da5f0f8$export$2e2bcd8739ae039","zoomRho","rho","rho2","rho4","zoom","p0","p1","ux0","uy0","w0","ux1","uy1","w1","dx","dy","d2","coshr0","SQRT2","_1","_2","_4","$7edc954089de14ac$export$2e2bcd8739ae039","sourceEvent","currentTarget","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","clientLeft","clientTop","pageX","pageY","$855f7c13dc5c8800$export$2e2bcd8739ae039","$f8b8ac12d46296b4$export$2e2bcd8739ae039","defineProperties","$2aeeefb9d4aa62cb$export$563a914cafbdc389","applyX","applyY","invertX","invertY","rescaleX","rescaleY","$2aeeefb9d4aa62cb$export$f0954fd7d5368655","$4c382e9682a58de3$export$2e2561858db9bf47","$4c382e9682a58de3$export$2e2bcd8739ae039","$2e3210259ae866af$var$defaultFilter","ctrlKey","button","$2e3210259ae866af$var$defaultExtent","SVGElement","hasAttribute","viewBox","clientWidth","clientHeight","$2e3210259ae866af$var$defaultTransform","__zoom","$2e3210259ae866af$var$defaultWheelDelta","deltaY","deltaMode","$2e3210259ae866af$var$defaultTouchable","maxTouchPoints","$2e3210259ae866af$var$defaultConstrain","extent","translateExtent","dx0","dx1","dy0","dy1","$960ae2d550011e08$export$2e2bcd8739ae039","valueof","$7dda263e87144b68$var$defaultNodeColor","$7dda263e87144b68$var$defaultLinkColor","$7dda263e87144b68$var$defaultConfigValues","spaceSize","nodeSizeScale","linkWidthScale","arrowSizeScale","renderLinks","arrowLinks","linkVisibilityDistanceRange","linkVisibilityMinTransparency","useQuadtree","simulation","decay","gravity","repulsion","repulsionTheta","repulsionQuadtreeLevels","linkSpring","linkDistance","linkDistRandomVariationRange","repulsionFromMouse","friction","showFPSMonitor","scaleNodesOnZoom","$7dda263e87144b68$var$isFunction","$7dda263e87144b68$var$isArray","$7dda263e87144b68$var$isObject","$7dda263e87144b68$var$isAClassInstance","$7dda263e87144b68$var$isPlainObject","$7dda263e87144b68$var$getValue","$7dda263e87144b68$var$getRgbaColor","_a","rgba","color$1","$7dda263e87144b68$var$readPixels","reglInstance","resultPixels","$7dda263e87144b68$var$GraphConfig","backgroundColor","nodeColor","nodeGreyoutOpacity","nodeSize","renderHighlightedNodeRing","highlightedNodeRingColor","linkColor","linkGreyoutOpacity","linkWidth","linkArrows","linkArrowsSizeScale","onStart","onTick","onEnd","onPause","onRestart","events","onClick","onMouseMove","onNodeMouseOver","onNodeMouseOut","onZoomStart","onZoom","onZoomEnd","randomSeed","configParameter","deepMergeConfig","getConfig","$7dda263e87144b68$var$CoreModule","store","$7dda263e87144b68$var$createQuadBuffer","quadBuffer","$7dda263e87144b68$var$createIndexesBuffer","textureSize","indexBuffer","$7dda263e87144b68$var$clearFrag","$7dda263e87144b68$var$updateVert","$7dda263e87144b68$var$ForceCenter","centermassFbo","initPrograms","clearCentermassCommand","quad","calculateCentermassCommand","pointsTextureSize","previousPositionFbo","blend","equation","runCommand","velocityFbo","centermass","run","_b","_c","$7dda263e87144b68$var$ForceGravity","LinkDirection","$7dda263e87144b68$var$ForceLink","linkFirstIndicesAndAmount","indices","maxPointDegree","direction","linksTextureSize","linkBiasAndStrengthState","linkDistanceState","grouped","INCOMING","groupedSourceToTargetLinks","groupedTargetToSourceLinks","linkIndex","connectedNodeIndices","nodeIndex","connectedNodeIndex","degree","getInputIndexBySortedIndex","connectedDegree","strength","getRandomFloat","linkFirstIndicesAndAmountFbo","indicesFbo","biasAndStrengthFbo","randomDistanceFbo","linkIndices","linkBiasAndStrength","linkRandomDistanceFbo","_d","$7dda263e87144b68$var$calculateLevelFrag","$7dda263e87144b68$var$calculateLevelVert","$7dda263e87144b68$var$ForceManyBody","levelsFbos","quadtreeLevels","levelTextureSize","randomValuesState","randomValuesFbo","clearLevelsCommand","levelFbo","calculateLevelsCommand","cellSize","forceCommand","levels","theta","forceFromItsOwnCentermassCommand","randomValues","clearVelocityCommand","_e","_f","$7dda263e87144b68$var$ForceManyBodyQuadtree","quadtreeCommand","$7dda263e87144b68$var$forceFrag$1","startLevel","maxLevels","calcAdd","groupSize","iEnding","jEnding","fromEntries","$7dda263e87144b68$var$ForceMouse","mousePos","mousePosition","$7dda263e87144b68$var$glBench","settings","css","paramLogger","chartLogger","chartLen","chartHz","cpuAccums","gpuAccums","activeAccums","chart","updateUI","display","trackGPU","detected","finished","isFramebuffer","frameId","rafId","self1","glFinish","dt","addProfiler","withoutUI","dom","elm","insertAdjacentHTML","logger","classes","getElementsByClassName","cpu","gpu","mem","fps","totalTime","strokeDasharray","circularId","addUI","nextFrame","paramFrame","paramTime","frameCount","memory","usedJSHeapSize","chartFrame","timespan","chartTime","hz","begin","updateAccums","nameId","$7dda263e87144b68$var$GLBench","$7dda263e87144b68$var$benchCSS","$7dda263e87144b68$var$FPSMonitor","bench","$7dda263e87144b68$var$GraphData","completeLinks","Set","_nodes","_links","idToNodeMap","sortedIndexToInputIndexMap","inputIndexToSortedIndexMap","idToSortedIndexMap","inputIndexToIdMap","idToIndegreeMap","idToOutdegreeMap","links","linksNumber","setData","inputNodes","inputLinks","sourceNode","targetNode","outdegree","indegree","sortedDegrees","entries","inputStringedIndex","sortedIndex","inputIndex","sourceIndex","targetIndex","targets","getNodeById","getNodeByIndex","getSortedIndexByInputIndex","getSortedIndexById","getAdjacentNodes","outgoingSet","incomingSet","$7dda263e87144b68$var$Lines","updateColor","updateWidth","geometryLinkBuffer","instancePoints","toIndex","fromIndex","fromY","toY","pointsBuffer","drawStraightCommand","pointA","BYTES_PER_ELEMENT","pointB","widthBuffer","positions","currentPositionFbo","particleSize","sizeFbo","particleGreyoutStatus","greyoutStatusFbo","widthScale","useArrow","screenSize","ratio","greyoutOpacity","cull","$7dda263e87144b68$var$getNodeSize","sizeAccessor","$7dda263e87144b68$var$Points","trackedPositionsById","numParticles","initialState","selectedFbo","hoveredFbo","updateSize","updateGreyoutStatus","updatePositionCommand","velocity","drawCommand","particleColor","colorFbo","sizeScale","findPointsOnAreaSelectionCommand","selectedArea","maxPointSize","clearHoveredFboCommand","findHoveredPointCommand","screenMousePosition","drawHighlightedCommand","pointIndex","trackPointsCommand","trackedPositionsFbo","trackedIndices","trackedIndicesFbo","$7dda263e87144b68$var$createColorBuffer","colorAccessor","initialTexture","$7dda263e87144b68$var$createGreyoutStatusBuffer","selectedIndices","selectedIndex","$7dda263e87144b68$var$createSizeBuffer","pointTextureSize","trackPoints","hoveredNode","hoveredNodeRingColor","focusedNode","focusedNodeRingColor","updatePosition","swapFbo","findPointsOnAreaSelection","findHoveredPoint","getNodeRadius","trackNodesByIds","ids","trackedIds","$7dda263e87144b68$var$createTrackedIndicesBuffer","$7dda263e87144b68$var$createTrackedPositionsBuffer","getTrackedPositions","_g","_j","_k","$7dda263e87144b68$var$Store","isSimulationRunning","simulationProgress","alphaTarget","scaleNodeX","scaleNodeY","alphaDecay","addRandomSeed","updateScreenSize","setHighlightedNodeRingColor","convertedRgba","setFocusedNode","addAlpha","$7dda263e87144b68$var$Zoom","eventTransform","behavior","touchstarting","touchfirst","touchending","constrain","wheelDelta","touchable","scaleExtent","listeners","clickDistance2","tapDistance","wheeled","mousedowned","dblclicked","touchstarted","touchmoved","touchended","centroid","gesture","clean","__zooming","Gesture","taps","wheel","mouse","view","moved","x0","y0","noclick","MozUserSelect","__noselect","changedTouches","k1","shiftKey","started","touches","identifier","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","k0","translateBy","translateTo","emit","clickDistance","isRunning","userDriven","projection","getTransform","xExtent","yExtent","xScale","yScale","clampedScale","$7dda263e87144b68$var$clamp","xCenter","yCenter","getDistanceToPoint","getMiddlePointTransform","pointX","pointY","centerX","currX","centerY","currY","convertSpaceToScreenPosition","spacePosition","screenPointX","screenPointY","convertSpaceToScreenRadius","spaceRadius","$7dda263e87144b68$export$614db49f3febe941","requestAnimationFrameId","isRightClickMouse","graph","zoomInstance","hasBeenRecentlyDestroyed","canvasD3Selection","currentEvent","updateMousePosition","onRightClickMouse","antialias","forceGravity","forceCenter","forceManyBody","forceLinkIncoming","forceLinkOutgoing","forceMouse","fpsMonitor","progress","setConfig","prevConfig","runSimulation","zoomToNodeById","canZoomOut","zoomToNode","zoomToNodeByIndex","setZoomLevel","getZoomLevel","getNodePositions","particlePositionPixels","acc","curr","posX","posY","getNodePositionsMap","positionMap","getNodePositionsArray","fitView","setZoomTransformByNodePositions","fitViewByNodeIds","positionsMap","selectNodesInRange","pixel","selectNodeById","selectAdjacentNodes","adjacentNodes","selectNodesByIds","selectNodeByIndex","selectNodesByIndices","unselectNodes","getSelectedNodes","spaceToScreenPosition","spaceToScreenRadius","getNodeRadiusByIndex","getNodeRadiusById","trackNodePositionsByIds","trackNodePositionsByIndices","getTrackedNodePositionsMap","stopFrames","pause","OUTGOING","resizeCanvas","$7dda263e87144b68$var$ALPHA_MIN","offsetX","offsetY","mouseX","mouseY","which","prevWidth","prevHeight","positionPixels","distance","zoomLevel","middle","isMouseover","isMouseout","hovered","$2ea20df539ddfd90$var$_tmpl$2","$2ea20df539ddfd90$var$_tmpl$3","$2ea20df539ddfd90$var$_tmpl$4","$2ea20df539ddfd90$var$_tmpl$5","$2ea20df539ddfd90$var$slate","$2ea20df539ddfd90$var$nodeScale","$970875132489e6ff$export$2e2bcd8739ae039","$970875132489e6ff$var$transformer","k10","x1","$2ea20df539ddfd90$var$sampleData","edges","$2ea20df539ddfd90$export$614db49f3febe941","canvasRef","setFilter","cosmoGraph","setCosmoGraph","graphData","setGraphData","filteredGraphData","setFilteredGraphData","numEdges","setNumEdges","windowSize","setWindowSize","setMessage","setDomain","selectedNodeId","setSelectedNodeId","processInput","includes","to","fromNode","toNode","timeout","edgesIn","gd","edgeId","largestEdgesIn","endId","edgesOut","_el$2","_el$3","_el$4","_el$5","_el$6","_el$7","_el$8","_el$9","_el$10","_el$11","_el$13","_el$14","_el$15","_el$16","_el$19","_el$20","_el$21","_el$22","_el$24","$$click","clipboard","readText","ev","dataTransfer","kind","getAsFile","cycles","indexToId","$3cf17f87d4f90222$export$69f7c684ad757298","idToIndex","edge","low","onStack","dfs","at","cyclesIndex","_el$12","$$input","_el$26","_el$27","_el$17","_el$18","_ref$","eventNames","document1","$a88ea9323d3a23c8$var$app","getElementById","dispose","render","Graph","app","_$createComponent","createSignal","onMount","createEffect","For","Show","scaleSequential","ScaleSequential","interpolateCool","CosmoGraph","GraphConfigInterface","parseDotGraph","debounce","tarjan","Id","Module","GraphData","hot","accept","reload","Edge","slate","tableauColors","MAX_LIST_LENGTH","Link","_el$","_tmpl$","_$insert","buttonClass","nodeScale","sampleData","HTMLCanvasElement","_tmpl$4","_el$23","_el$25","_tmpl$2","_tmpl$5","_tmpl$3","_$use","_$delegateEvents","numberValidator","NumberValidator","logFactorialTable","logFactorial","logSqrt2PI","RNGFactory","UNVISITED","adjacencyList"],"version":3,"file":"index.4ab047fa.js.map"}